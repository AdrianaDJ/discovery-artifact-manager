{
  "rootUrl": "https://dlp.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "dlp",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud DLP API",
  "ownerName": "Google",
  "resources": {
    "infoTypes": {
      "methods": {
        "list": {
          "response": {
            "$ref": "GooglePrivacyDlpV2ListInfoTypesResponse"
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "parameters": {
            "languageCode": {
              "description": "Optional BCP-47 language code for localized infoType friendly\nnames. If omitted, or if localized strings are not available,\nen-US strings will be returned.",
              "type": "string",
              "location": "query"
            },
            "filter": {
              "description": "Optional filter to only return infoTypes supported by certain parts of the\nAPI. Defaults to supported_by=INSPECT.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v2/infoTypes",
          "path": "v2/infoTypes",
          "id": "dlp.infoTypes.list",
          "description": "Returns sensitive information types DLP supports."
        }
      }
    },
    "organizations": {
      "resources": {
        "deidentifyTemplates": {
          "methods": {
            "patch": {
              "description": "Updates the de-identify template.",
              "request": {
                "$ref": "GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest"
              },
              "response": {
                "$ref": "GooglePrivacyDlpV2DeidentifyTemplate"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Resource name of organization and deidentify template to be updated, for\nexample `organizations/433245324/deidentifyTemplates/432452342` or\nprojects/project-id/deidentifyTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/deidentifyTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/organizations/{organizationsId}/deidentifyTemplates/{deidentifyTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.organizations.deidentifyTemplates.patch"
            },
            "get": {
              "description": "Gets a de-identify template.",
              "response": {
                "$ref": "GooglePrivacyDlpV2DeidentifyTemplate"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name of the organization and deidentify template to be read, for\nexample `organizations/433245324/deidentifyTemplates/432452342` or\nprojects/project-id/deidentifyTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/deidentifyTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/organizations/{organizationsId}/deidentifyTemplates/{deidentifyTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.organizations.deidentifyTemplates.get"
            },
            "list": {
              "response": {
                "$ref": "GooglePrivacyDlpV2ListDeidentifyTemplatesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "description": "Optional page token to continue retrieval. Comes from previous call\nto `ListDeidentifyTemplates`.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Optional size of the page, can be limited by server. If zero server returns\na page of max size 100.",
                  "format": "int32",
                  "type": "integer"
                },
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id or\norganizations/my-org-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/organizations/{organizationsId}/deidentifyTemplates",
              "path": "v2/{+parent}/deidentifyTemplates",
              "id": "dlp.organizations.deidentifyTemplates.list",
              "description": "Lists de-identify templates."
            },
            "create": {
              "description": "Creates a de-identify template for re-using frequently used configuration\nfor Deidentifying content, images, and storage.",
              "request": {
                "$ref": "GooglePrivacyDlpV2CreateDeidentifyTemplateRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GooglePrivacyDlpV2DeidentifyTemplate"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id or\norganizations/my-org-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/organizations/{organizationsId}/deidentifyTemplates",
              "id": "dlp.organizations.deidentifyTemplates.create",
              "path": "v2/{+parent}/deidentifyTemplates"
            },
            "delete": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name of the organization and deidentify template to be deleted,\nfor example `organizations/433245324/deidentifyTemplates/432452342` or\nprojects/project-id/deidentifyTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/deidentifyTemplates/[^/]+$"
                }
              },
              "flatPath": "v2/organizations/{organizationsId}/deidentifyTemplates/{deidentifyTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.organizations.deidentifyTemplates.delete",
              "description": "Deletes a de-identify template."
            }
          }
        },
        "inspectTemplates": {
          "methods": {
            "delete": {
              "description": "Deletes an inspect template.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name of the organization and inspectTemplate to be deleted, for\nexample `organizations/433245324/inspectTemplates/432452342` or\nprojects/project-id/inspectTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/inspectTemplates/[^/]+$"
                }
              },
              "flatPath": "v2/organizations/{organizationsId}/inspectTemplates/{inspectTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.organizations.inspectTemplates.delete"
            },
            "patch": {
              "request": {
                "$ref": "GooglePrivacyDlpV2UpdateInspectTemplateRequest"
              },
              "description": "Updates the inspect template.",
              "response": {
                "$ref": "GooglePrivacyDlpV2InspectTemplate"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name of organization and inspectTemplate to be updated, for\nexample `organizations/433245324/inspectTemplates/432452342` or\nprojects/project-id/inspectTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/inspectTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2/organizations/{organizationsId}/inspectTemplates/{inspectTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.organizations.inspectTemplates.patch"
            },
            "get": {
              "flatPath": "v2/organizations/{organizationsId}/inspectTemplates/{inspectTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.organizations.inspectTemplates.get",
              "description": "Gets an inspect template.",
              "response": {
                "$ref": "GooglePrivacyDlpV2InspectTemplate"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name of the organization and inspectTemplate to be read, for\nexample `organizations/433245324/inspectTemplates/432452342` or\nprojects/project-id/inspectTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/inspectTemplates/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "description": "Lists inspect templates.",
              "response": {
                "$ref": "GooglePrivacyDlpV2ListInspectTemplatesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "description": "Optional size of the page, can be limited by server. If zero server returns\na page of max size 100.",
                  "format": "int32",
                  "type": "integer"
                },
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id or\norganizations/my-org-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$"
                },
                "pageToken": {
                  "description": "Optional page token to continue retrieval. Comes from previous call\nto `ListInspectTemplates`.",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v2/organizations/{organizationsId}/inspectTemplates",
              "path": "v2/{+parent}/inspectTemplates",
              "id": "dlp.organizations.inspectTemplates.list"
            },
            "create": {
              "flatPath": "v2/organizations/{organizationsId}/inspectTemplates",
              "path": "v2/{+parent}/inspectTemplates",
              "id": "dlp.organizations.inspectTemplates.create",
              "request": {
                "$ref": "GooglePrivacyDlpV2CreateInspectTemplateRequest"
              },
              "description": "Creates an inspect template for re-using frequently used configuration\nfor inspecting content, images, and storage.",
              "response": {
                "$ref": "GooglePrivacyDlpV2InspectTemplate"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "The parent resource name, for example projects/my-project-id or\norganizations/my-org-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "image": {
          "methods": {
            "redact": {
              "description": "Redacts potentially sensitive info from an image.\nThis method has limits on input size, processing time, and output size.\n[How-to guide](/dlp/docs/redacting-sensitive-data-images)",
              "request": {
                "$ref": "GooglePrivacyDlpV2RedactImageRequest"
              },
              "response": {
                "$ref": "GooglePrivacyDlpV2RedactImageResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/image:redact",
              "path": "v2/{+parent}/image:redact",
              "id": "dlp.projects.image.redact"
            }
          }
        },
        "dlpJobs": {
          "methods": {
            "cancel": {
              "flatPath": "v2/projects/{projectsId}/dlpJobs/{dlpJobsId}:cancel",
              "path": "v2/{+name}:cancel",
              "id": "dlp.projects.dlpJobs.cancel",
              "request": {
                "$ref": "GooglePrivacyDlpV2CancelDlpJobRequest"
              },
              "description": "Starts asynchronous cancellation on a long-running DlpJob. The server\nmakes a best effort to cancel the DlpJob, but success is not\nguaranteed.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the DlpJob resource to be cancelled.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/dlpJobs/[^/]+$",
                  "location": "path"
                }
              }
            },
            "delete": {
              "flatPath": "v2/projects/{projectsId}/dlpJobs/{dlpJobsId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.dlpJobs.delete",
              "description": "Deletes a long-running DlpJob. This method indicates that the client is\nno longer interested in the DlpJob result. The job will be cancelled if\npossible.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the DlpJob resource to be deleted.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/dlpJobs/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "response": {
                "$ref": "GooglePrivacyDlpV2ListDlpJobsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "Optional. Allows filtering.\n\nSupported syntax:\n\n* Filter expressions are made up of one or more restrictions.\n* Restrictions can be combined by `AND` or `OR` logical operators. A\nsequence of restrictions implicitly uses `AND`.\n* A restriction has the form of `\u003cfield\u003e \u003coperator\u003e \u003cvalue\u003e`.\n* Supported fields/values for inspect jobs:\n    - `state` - PENDING|RUNNING|CANCELED|FINISHED|FAILED\n    - `inspected_storage` - DATASTORE|CLOUD_STORAGE|BIGQUERY\n    - `trigger_name` - The resource name of the trigger that created job.\n* Supported fields for risk analysis jobs:\n    - `state` - RUNNING|CANCELED|FINISHED|FAILED\n* The operator must be `=` or `!=`.\n\nExamples:\n\n* inspected_storage = cloud_storage AND state = done\n* inspected_storage = cloud_storage OR inspected_storage = bigquery\n* inspected_storage = cloud_storage AND (state = done OR state = canceled)\n\nThe length of this field should be no more than 500 characters.",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "type": {
                  "description": "The type of job. Defaults to `DlpJobType.INSPECT`",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "DLP_JOB_TYPE_UNSPECIFIED",
                    "INSPECT_JOB",
                    "RISK_ANALYSIS_JOB"
                  ]
                },
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/dlpJobs",
              "path": "v2/{+parent}/dlpJobs",
              "id": "dlp.projects.dlpJobs.list",
              "description": "Lists DlpJobs that match the specified filter in the request."
            },
            "get": {
              "description": "Gets the latest state of a long-running DlpJob.",
              "response": {
                "$ref": "GooglePrivacyDlpV2DlpJob"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the DlpJob resource.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/dlpJobs/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/dlpJobs/{dlpJobsId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.dlpJobs.get"
            },
            "create": {
              "request": {
                "$ref": "GooglePrivacyDlpV2CreateDlpJobRequest"
              },
              "description": "Creates a new job to inspect storage or calculate risk metrics [How-to\nguide](/dlp/docs/compute-risk-analysis).",
              "response": {
                "$ref": "GooglePrivacyDlpV2DlpJob"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "The parent resource name, for example projects/my-project-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2/projects/{projectsId}/dlpJobs",
              "path": "v2/{+parent}/dlpJobs",
              "id": "dlp.projects.dlpJobs.create"
            }
          }
        },
        "inspectTemplates": {
          "methods": {
            "delete": {
              "description": "Deletes an inspect template.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name of the organization and inspectTemplate to be deleted, for\nexample `organizations/433245324/inspectTemplates/432452342` or\nprojects/project-id/inspectTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/inspectTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2/projects/{projectsId}/inspectTemplates/{inspectTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.inspectTemplates.delete"
            },
            "patch": {
              "flatPath": "v2/projects/{projectsId}/inspectTemplates/{inspectTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.inspectTemplates.patch",
              "description": "Updates the inspect template.",
              "request": {
                "$ref": "GooglePrivacyDlpV2UpdateInspectTemplateRequest"
              },
              "response": {
                "$ref": "GooglePrivacyDlpV2InspectTemplate"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name of organization and inspectTemplate to be updated, for\nexample `organizations/433245324/inspectTemplates/432452342` or\nprojects/project-id/inspectTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/inspectTemplates/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "description": "Gets an inspect template.",
              "response": {
                "$ref": "GooglePrivacyDlpV2InspectTemplate"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name of the organization and inspectTemplate to be read, for\nexample `organizations/433245324/inspectTemplates/432452342` or\nprojects/project-id/inspectTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/inspectTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2/projects/{projectsId}/inspectTemplates/{inspectTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.inspectTemplates.get"
            },
            "list": {
              "description": "Lists inspect templates.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GooglePrivacyDlpV2ListInspectTemplatesResponse"
              },
              "parameters": {
                "pageSize": {
                  "description": "Optional size of the page, can be limited by server. If zero server returns\na page of max size 100.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "parent": {
                  "description": "The parent resource name, for example projects/my-project-id or\norganizations/my-org-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                },
                "pageToken": {
                  "description": "Optional page token to continue retrieval. Comes from previous call\nto `ListInspectTemplates`.",
                  "type": "string",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/inspectTemplates",
              "id": "dlp.projects.inspectTemplates.list",
              "path": "v2/{+parent}/inspectTemplates"
            },
            "create": {
              "response": {
                "$ref": "GooglePrivacyDlpV2InspectTemplate"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id or\norganizations/my-org-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/inspectTemplates",
              "path": "v2/{+parent}/inspectTemplates",
              "id": "dlp.projects.inspectTemplates.create",
              "description": "Creates an inspect template for re-using frequently used configuration\nfor inspecting content, images, and storage.",
              "request": {
                "$ref": "GooglePrivacyDlpV2CreateInspectTemplateRequest"
              }
            }
          }
        },
        "content": {
          "methods": {
            "inspect": {
              "flatPath": "v2/projects/{projectsId}/content:inspect",
              "path": "v2/{+parent}/content:inspect",
              "id": "dlp.projects.content.inspect",
              "description": "Finds potentially sensitive info in content.\nThis method has limits on input size, processing time, and output size.\n[How-to guide for text](/dlp/docs/inspecting-text), [How-to guide for\nimages](/dlp/docs/inspecting-images)",
              "request": {
                "$ref": "GooglePrivacyDlpV2InspectContentRequest"
              },
              "response": {
                "$ref": "GooglePrivacyDlpV2InspectContentResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "reidentify": {
              "response": {
                "$ref": "GooglePrivacyDlpV2ReidentifyContentResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The parent resource name.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/content:reidentify",
              "path": "v2/{+parent}/content:reidentify",
              "id": "dlp.projects.content.reidentify",
              "description": "Re-identifies content that has been de-identified.",
              "request": {
                "$ref": "GooglePrivacyDlpV2ReidentifyContentRequest"
              }
            },
            "deidentify": {
              "flatPath": "v2/projects/{projectsId}/content:deidentify",
              "id": "dlp.projects.content.deidentify",
              "path": "v2/{+parent}/content:deidentify",
              "description": "De-identifies potentially sensitive info from a ContentItem.\nThis method has limits on input size and output size.\n[How-to guide](/dlp/docs/deidentify-sensitive-data)",
              "request": {
                "$ref": "GooglePrivacyDlpV2DeidentifyContentRequest"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GooglePrivacyDlpV2DeidentifyContentResponse"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "jobTriggers": {
          "methods": {
            "patch": {
              "description": "Updates a job trigger.",
              "request": {
                "$ref": "GooglePrivacyDlpV2UpdateJobTriggerRequest"
              },
              "response": {
                "$ref": "GooglePrivacyDlpV2JobTrigger"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Resource name of the project and the triggeredJob, for example\n`projects/dlp-test-project/jobTriggers/53234423`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/jobTriggers/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/jobTriggers/{jobTriggersId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.jobTriggers.patch"
            },
            "get": {
              "description": "Gets a job trigger.",
              "response": {
                "$ref": "GooglePrivacyDlpV2JobTrigger"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Resource name of the project and the triggeredJob, for example\n`projects/dlp-test-project/jobTriggers/53234423`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/jobTriggers/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v2/projects/{projectsId}/jobTriggers/{jobTriggersId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.jobTriggers.get"
            },
            "list": {
              "flatPath": "v2/projects/{projectsId}/jobTriggers",
              "path": "v2/{+parent}/jobTriggers",
              "id": "dlp.projects.jobTriggers.list",
              "description": "Lists job triggers.",
              "response": {
                "$ref": "GooglePrivacyDlpV2ListJobTriggersResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "description": "Optional page token to continue retrieval. Comes from previous call\nto ListJobTriggers. `order_by` and `filter` should not change for\nsubsequent calls, but can be omitted if token is specified.",
                  "type": "string",
                  "location": "query"
                },
                "orderBy": {
                  "description": "Optional comma separated list of triggeredJob fields to order by,\nfollowed by 'asc/desc' postfix, i.e.\n`\"create_time asc,name desc,schedule_mode asc\"`. This list is\ncase-insensitive.\n\nExample: `\"name asc,schedule_mode desc, status desc\"`\n\nSupported filters keys and values are:\n\n- `create_time`: corresponds to time the triggeredJob was created.\n- `update_time`: corresponds to time the triggeredJob was last updated.\n- `name`: corresponds to JobTrigger's display name.\n- `status`: corresponds to the triggeredJob status.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Optional size of the page, can be limited by a server.",
                  "format": "int32",
                  "type": "integer"
                },
                "parent": {
                  "description": "The parent resource name, for example projects/my-project-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              }
            },
            "create": {
              "flatPath": "v2/projects/{projectsId}/jobTriggers",
              "id": "dlp.projects.jobTriggers.create",
              "path": "v2/{+parent}/jobTriggers",
              "request": {
                "$ref": "GooglePrivacyDlpV2CreateJobTriggerRequest"
              },
              "description": "Creates a job trigger to run DLP actions such as scanning storage for\nsensitive information on a set schedule.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GooglePrivacyDlpV2JobTrigger"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              }
            },
            "delete": {
              "description": "Deletes a job trigger.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name of the project and the triggeredJob, for example\n`projects/dlp-test-project/jobTriggers/53234423`.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/jobTriggers/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/jobTriggers/{jobTriggersId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.jobTriggers.delete"
            }
          }
        },
        "deidentifyTemplates": {
          "methods": {
            "patch": {
              "response": {
                "$ref": "GooglePrivacyDlpV2DeidentifyTemplate"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Resource name of organization and deidentify template to be updated, for\nexample `organizations/433245324/deidentifyTemplates/432452342` or\nprojects/project-id/deidentifyTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/deidentifyTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/deidentifyTemplates/{deidentifyTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.deidentifyTemplates.patch",
              "description": "Updates the de-identify template.",
              "request": {
                "$ref": "GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest"
              }
            },
            "get": {
              "description": "Gets a de-identify template.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GooglePrivacyDlpV2DeidentifyTemplate"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Resource name of the organization and deidentify template to be read, for\nexample `organizations/433245324/deidentifyTemplates/432452342` or\nprojects/project-id/deidentifyTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/deidentifyTemplates/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/deidentifyTemplates/{deidentifyTemplatesId}",
              "id": "dlp.projects.deidentifyTemplates.get",
              "path": "v2/{+name}"
            },
            "list": {
              "response": {
                "$ref": "GooglePrivacyDlpV2ListDeidentifyTemplatesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Optional page token to continue retrieval. Comes from previous call\nto `ListDeidentifyTemplates`.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Optional size of the page, can be limited by server. If zero server returns\na page of max size 100.",
                  "format": "int32",
                  "type": "integer"
                },
                "parent": {
                  "location": "path",
                  "description": "The parent resource name, for example projects/my-project-id or\norganizations/my-org-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "flatPath": "v2/projects/{projectsId}/deidentifyTemplates",
              "path": "v2/{+parent}/deidentifyTemplates",
              "id": "dlp.projects.deidentifyTemplates.list",
              "description": "Lists de-identify templates."
            },
            "create": {
              "description": "Creates a de-identify template for re-using frequently used configuration\nfor Deidentifying content, images, and storage.",
              "request": {
                "$ref": "GooglePrivacyDlpV2CreateDeidentifyTemplateRequest"
              },
              "response": {
                "$ref": "GooglePrivacyDlpV2DeidentifyTemplate"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The parent resource name, for example projects/my-project-id or\norganizations/my-org-id.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v2/projects/{projectsId}/deidentifyTemplates",
              "path": "v2/{+parent}/deidentifyTemplates",
              "id": "dlp.projects.deidentifyTemplates.create"
            },
            "delete": {
              "flatPath": "v2/projects/{projectsId}/deidentifyTemplates/{deidentifyTemplatesId}",
              "path": "v2/{+name}",
              "id": "dlp.projects.deidentifyTemplates.delete",
              "description": "Deletes a de-identify template.",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Resource name of the organization and deidentify template to be deleted,\nfor example `organizations/433245324/deidentifyTemplates/432452342` or\nprojects/project-id/deidentifyTemplates/432452342.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/deidentifyTemplates/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        }
      }
    }
  },
  "parameters": {
    "pp": {
      "location": "query",
      "description": "Pretty-print response.",
      "type": "boolean",
      "default": "true"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "bearer_token": {
      "description": "OAuth bearer token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    }
  },
  "version": "v2",
  "baseUrl": "https://dlp.googleapis.com/",
  "servicePath": "",
  "description": "The Google Data Loss Prevention API provides methods for detection of privacy-sensitive fragments in text, images, and Google Cloud Platform storage repositories.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "id": "dlp:v2",
  "documentationLink": "https://cloud.google.com/dlp/docs/",
  "revision": "20180317",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "GooglePrivacyDlpV2LDiversityEquivalenceClass": {
      "description": "The set of columns' values that share the same ldiversity value.",
      "type": "object",
      "properties": {
        "equivalenceClassSize": {
          "description": "Size of the k-anonymity equivalence class.",
          "format": "int64",
          "type": "string"
        },
        "quasiIdsValues": {
          "description": "Quasi-identifier values defining the k-anonymity equivalence\nclass. The order is always the same as the original request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Value"
          }
        },
        "numDistinctSensitiveValues": {
          "description": "Number of distinct sensitive values in this equivalence class.",
          "format": "int64",
          "type": "string"
        },
        "topSensitiveValues": {
          "description": "Estimated frequencies of top sensitive values.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2ValueFrequency"
          }
        }
      },
      "id": "GooglePrivacyDlpV2LDiversityEquivalenceClass"
    },
    "GooglePrivacyDlpV2beta1StorageConfig": {
      "description": "Shared message indicating Cloud storage type.",
      "type": "object",
      "properties": {
        "cloudStorageOptions": {
          "description": "Google Cloud Storage options specification.",
          "$ref": "GooglePrivacyDlpV2beta1CloudStorageOptions"
        },
        "datastoreOptions": {
          "$ref": "GooglePrivacyDlpV2beta1DatastoreOptions",
          "description": "Google Cloud Datastore options specification."
        },
        "bigQueryOptions": {
          "$ref": "GooglePrivacyDlpV2beta1BigQueryOptions",
          "description": "BigQuery options specification."
        }
      },
      "id": "GooglePrivacyDlpV2beta1StorageConfig"
    },
    "GooglePrivacyDlpV2Location": {
      "description": "Specifies the location of the finding.",
      "type": "object",
      "properties": {
        "contentLocations": {
          "description": "List of nested objects pointing to the precise location of the finding\nwithin the file or record.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2ContentLocation"
          }
        },
        "codepointRange": {
          "$ref": "GooglePrivacyDlpV2Range",
          "description": "Unicode character offsets delimiting the finding.\nThese are relative to the finding's containing element.\nProvided when the content is text."
        },
        "byteRange": {
          "$ref": "GooglePrivacyDlpV2Range",
          "description": "Zero-based byte offsets delimiting the finding.\nThese are relative to the finding's containing element.\nNote that when the content is not textual, this references\nthe UTF-8 encoded textual representation of the content.\nOmitted if content is an image."
        }
      },
      "id": "GooglePrivacyDlpV2Location"
    },
    "GooglePrivacyDlpV2DeidentifyConfig": {
      "description": "The configuration that controls how the data will change.",
      "type": "object",
      "properties": {
        "recordTransformations": {
          "description": "Treat the dataset as structured. Transformations can be applied to\nspecific locations within structured datasets, such as transforming\na column within a table.",
          "$ref": "GooglePrivacyDlpV2RecordTransformations"
        },
        "infoTypeTransformations": {
          "$ref": "GooglePrivacyDlpV2InfoTypeTransformations",
          "description": "Treat the dataset as free-form text and apply the same free text\ntransformation everywhere."
        }
      },
      "id": "GooglePrivacyDlpV2DeidentifyConfig"
    },
    "GooglePrivacyDlpV2Range": {
      "description": "Generic half-open interval [start, end)",
      "type": "object",
      "properties": {
        "start": {
          "description": "Index of the first character of the range (inclusive).",
          "format": "int64",
          "type": "string"
        },
        "end": {
          "description": "Index of the last character of the range (exclusive).",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2Range"
    },
    "GooglePrivacyDlpV2beta1BigQueryOptions": {
      "description": "Options defining BigQuery table and row identifiers.",
      "type": "object",
      "properties": {
        "identifyingFields": {
          "description": "References to fields uniquely identifying rows within the table.\nNested fields in the format, like `person.birthdate.year`, are allowed.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldId"
          }
        },
        "tableReference": {
          "$ref": "GooglePrivacyDlpV2beta1BigQueryTable",
          "description": "Complete BigQuery table reference."
        }
      },
      "id": "GooglePrivacyDlpV2beta1BigQueryOptions"
    },
    "GooglePrivacyDlpV2CategoricalStatsConfig": {
      "description": "Compute numerical stats over an individual column, including\nnumber of distinct values and value count distribution.",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "GooglePrivacyDlpV2FieldId",
          "description": "Field to compute categorical stats on. All column types are\nsupported except for arrays and structs. However, it may be more\ninformative to use NumericalStats when the field type is supported,\ndepending on the data."
        }
      },
      "id": "GooglePrivacyDlpV2CategoricalStatsConfig"
    },
    "GooglePrivacyDlpV2beta1PrivacyMetric": {
      "description": "Privacy metric to compute for reidentification risk analysis.",
      "type": "object",
      "properties": {
        "lDiversityConfig": {
          "$ref": "GooglePrivacyDlpV2beta1LDiversityConfig"
        },
        "numericalStatsConfig": {
          "$ref": "GooglePrivacyDlpV2beta1NumericalStatsConfig"
        },
        "kAnonymityConfig": {
          "$ref": "GooglePrivacyDlpV2beta1KAnonymityConfig"
        },
        "categoricalStatsConfig": {
          "$ref": "GooglePrivacyDlpV2beta1CategoricalStatsConfig"
        },
        "kMapEstimationConfig": {
          "$ref": "GooglePrivacyDlpV2beta1KMapEstimationConfig"
        }
      },
      "id": "GooglePrivacyDlpV2beta1PrivacyMetric"
    },
    "GooglePrivacyDlpV2BigQueryKey": {
      "description": "Row key for identifying a record in BigQuery table.",
      "type": "object",
      "properties": {
        "tableReference": {
          "$ref": "GooglePrivacyDlpV2BigQueryTable",
          "description": "Complete BigQuery table reference."
        },
        "rowNumber": {
          "description": "Absolute number of the row from the beginning of the table at the time\nof scanning.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2BigQueryKey"
    },
    "GooglePrivacyDlpV2CharsToIgnore": {
      "description": "Characters to skip when doing deidentification of a value. These will be left\nalone and skipped.",
      "type": "object",
      "properties": {
        "charactersToSkip": {
          "type": "string"
        },
        "commonCharactersToIgnore": {
          "type": "string",
          "enumDescriptions": [
            "",
            "0-9",
            "A-Z",
            "a-z",
            "US Punctuation, one of !\"#$%&'()*+,-./:;\u003c=\u003e?@[\\]^_`{|}~",
            "Whitespace character, one of [ \\t\\n\\x0B\\f\\r]"
          ],
          "enum": [
            "COMMON_CHARS_TO_IGNORE_UNSPECIFIED",
            "NUMERIC",
            "ALPHA_UPPER_CASE",
            "ALPHA_LOWER_CASE",
            "PUNCTUATION",
            "WHITESPACE"
          ]
        }
      },
      "id": "GooglePrivacyDlpV2CharsToIgnore"
    },
    "GooglePrivacyDlpV2beta1LDiversityEquivalenceClass": {
      "description": "The set of columns' values that share the same l-diversity value.",
      "type": "object",
      "properties": {
        "equivalenceClassSize": {
          "description": "Size of the k-anonymity equivalence class.",
          "format": "int64",
          "type": "string"
        },
        "quasiIdsValues": {
          "description": "Quasi-identifier values defining the k-anonymity equivalence\nclass. The order is always the same as the original request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Value"
          }
        },
        "numDistinctSensitiveValues": {
          "description": "Number of distinct sensitive values in this equivalence class.",
          "format": "int64",
          "type": "string"
        },
        "topSensitiveValues": {
          "description": "Estimated frequencies of top sensitive values.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ValueFrequency"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1LDiversityEquivalenceClass"
    },
    "GooglePrivacyDlpV2CancelDlpJobRequest": {
      "description": "The request message for canceling a DLP job.",
      "type": "object",
      "properties": {},
      "id": "GooglePrivacyDlpV2CancelDlpJobRequest"
    },
    "GooglePrivacyDlpV2KindExpression": {
      "description": "A representation of a Datastore kind.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the kind.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2KindExpression"
    },
    "GooglePrivacyDlpV2ListDlpJobsResponse": {
      "description": "The response message for listing DLP jobs.",
      "type": "object",
      "properties": {
        "jobs": {
          "description": "A list of DlpJobs that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2DlpJob"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2ListDlpJobsResponse"
    },
    "GooglePrivacyDlpV2beta1NumericalStatsResult": {
      "description": "Result of the numerical stats computation.",
      "type": "object",
      "properties": {
        "minValue": {
          "$ref": "GooglePrivacyDlpV2beta1Value",
          "description": "Minimum value appearing in the column."
        },
        "maxValue": {
          "$ref": "GooglePrivacyDlpV2beta1Value",
          "description": "Maximum value appearing in the column."
        },
        "quantileValues": {
          "description": "List of 99 values that partition the set of field values into 100 equal\nsized buckets.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1NumericalStatsResult"
    },
    "GooglePrivacyDlpV2beta1Dictionary": {
      "description": "Custom information type based on a dictionary of words or phrases. This can\nbe used to match sensitive information specific to the data, such as a list\nof employee IDs or job titles.\n\nDictionary words are case-insensitive and all characters other than letters\nand digits in the unicode [Basic Multilingual\nPlane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)\nwill be replaced with whitespace when scanning for matches, so the\ndictionary phrase \"Sam Johnson\" will match all three phrases \"sam johnson\",\n\"Sam, Johnson\", and \"Sam (Johnson)\". Additionally, the characters\nsurrounding any match must be of a different type than the adjacent\ncharacters within the word, so letters must be next to non-letters and\ndigits next to non-digits. For example, the dictionary word \"jen\" will\nmatch the first three letters of the text \"jen123\" but will return no\nmatches for \"jennifer\".\n\nDictionary words containing a large number of characters that are not\nletters or digits may result in unexpected findings because such characters\nare treated as whitespace.",
      "type": "object",
      "properties": {
        "wordList": {
          "description": "List of words or phrases to search for.",
          "$ref": "GooglePrivacyDlpV2beta1WordList"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Dictionary"
    },
    "GooglePrivacyDlpV2DeidentifyContentRequest": {
      "description": "Request to de-identify a list of items.",
      "type": "object",
      "properties": {
        "item": {
          "description": "The item to de-identify. Will be treated as text.",
          "$ref": "GooglePrivacyDlpV2ContentItem"
        },
        "deidentifyTemplateName": {
          "description": "Optional template to use. Any configuration directly specified in\ndeidentify_config will override those set in the template. Singular fields\nthat are set in this request will replace their corresponding fields in the\ntemplate. Repeated fields are appended. Singular sub-messages and groups\nare recursively merged.",
          "type": "string"
        },
        "deidentifyConfig": {
          "$ref": "GooglePrivacyDlpV2DeidentifyConfig",
          "description": "Configuration for the de-identification of the content item.\nItems specified here will override the template referenced by the\ndeidentify_template_name argument."
        },
        "inspectConfig": {
          "$ref": "GooglePrivacyDlpV2InspectConfig",
          "description": "Configuration for the inspector.\nItems specified here will override the template referenced by the\ninspect_template_name argument."
        },
        "inspectTemplateName": {
          "description": "Optional template to use. Any configuration directly specified in\ninspect_config will override those set in the template. Singular fields\nthat are set in this request will replace their corresponding fields in the\ntemplate. Repeated fields are appended. Singular sub-messages and groups\nare recursively merged.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2DeidentifyContentRequest"
    },
    "GooglePrivacyDlpV2beta1InspectConfig": {
      "description": "Configuration description of the scanning process.\nWhen used with redactContent only info_types and min_likelihood are currently\nused.",
      "type": "object",
      "properties": {
        "customInfoTypes": {
          "description": "Custom info types provided by the user.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1CustomInfoType"
          }
        },
        "excludeTypes": {
          "description": "When true, excludes type information of the findings.",
          "type": "boolean"
        },
        "minLikelihood": {
          "enumDescriptions": [
            "Default value; information with all likelihoods is included.",
            "Few matching elements.",
            "",
            "Some matching elements.",
            "",
            "Many matching elements."
          ],
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Only returns findings equal or above this threshold.",
          "type": "string"
        },
        "infoTypeLimits": {
          "description": "Configuration of findings limit given for specified info types.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoTypeLimit"
          }
        },
        "maxFindings": {
          "description": "Limits the number of findings per content item or long running operation.",
          "format": "int32",
          "type": "integer"
        },
        "infoTypes": {
          "description": "Restricts what info_types to look for. The values must correspond to\nInfoType values returned by ListInfoTypes or found in documentation.\nEmpty info_types runs all enabled detectors.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoType"
          }
        },
        "includeQuote": {
          "description": "When true, a contextual quote from the data that triggered a finding is\nincluded in the response; see Finding.quote.",
          "type": "boolean"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectConfig"
    },
    "GooglePrivacyDlpV2beta1Projection": {
      "description": "A representation of a Datastore property in a projection.",
      "type": "object",
      "properties": {
        "property": {
          "$ref": "GooglePrivacyDlpV2beta1PropertyReference",
          "description": "The property to project."
        }
      },
      "id": "GooglePrivacyDlpV2beta1Projection"
    },
    "GooglePrivacyDlpV2DatastoreKey": {
      "description": "Record key for a finding in Cloud Datastore.",
      "type": "object",
      "properties": {
        "entityKey": {
          "description": "Datastore entity key.",
          "$ref": "GooglePrivacyDlpV2Key"
        }
      },
      "id": "GooglePrivacyDlpV2DatastoreKey"
    },
    "GooglePrivacyDlpV2CreateDlpJobRequest": {
      "description": "Request message for CreateDlpJobRequest. Used to initiate long running\njobs such as calculating risk metrics or inspecting Google Cloud\nStorage.",
      "type": "object",
      "properties": {
        "jobId": {
          "description": "The job id can contain uppercase and lowercase letters,\nnumbers, and hyphens; that is, it must match the regular\nexpression: `[a-zA-Z\\\\d-]+`. The maximum length is 100\ncharacters. Can be empty to allow the system to generate one.",
          "type": "string"
        },
        "riskJob": {
          "$ref": "GooglePrivacyDlpV2RiskAnalysisJobConfig"
        },
        "inspectJob": {
          "$ref": "GooglePrivacyDlpV2InspectJobConfig"
        }
      },
      "id": "GooglePrivacyDlpV2CreateDlpJobRequest"
    },
    "GooglePrivacyDlpV2InspectDataSourceDetails": {
      "description": "The results of an inspect DataSource job.",
      "type": "object",
      "properties": {
        "result": {
          "description": "A summary of the outcome of this inspect job.",
          "$ref": "GooglePrivacyDlpV2Result"
        },
        "requestedOptions": {
          "description": "The configuration used for this job.",
          "$ref": "GooglePrivacyDlpV2RequestedOptions"
        }
      },
      "id": "GooglePrivacyDlpV2InspectDataSourceDetails"
    },
    "GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest": {
      "description": "Request message for UpdateDeidentifyTemplate.",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "Mask to control which fields get updated.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "deidentifyTemplate": {
          "$ref": "GooglePrivacyDlpV2DeidentifyTemplate",
          "description": "New DeidentifyTemplate value."
        }
      },
      "id": "GooglePrivacyDlpV2UpdateDeidentifyTemplateRequest"
    },
    "GooglePrivacyDlpV2DocumentLocation": {
      "description": "Location of a finding within a document.",
      "type": "object",
      "properties": {
        "fileOffset": {
          "description": "Offset of the line, from the beginning of the file, where the finding\nis located.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2DocumentLocation"
    },
    "GooglePrivacyDlpV2CreateDeidentifyTemplateRequest": {
      "description": "Request message for CreateDeidentifyTemplate.",
      "type": "object",
      "properties": {
        "templateId": {
          "description": "The template id can contain uppercase and lowercase letters,\nnumbers, and hyphens; that is, it must match the regular\nexpression: `[a-zA-Z\\\\d-]+`. The maximum length is 100\ncharacters. Can be empty to allow the system to generate one.",
          "type": "string"
        },
        "deidentifyTemplate": {
          "$ref": "GooglePrivacyDlpV2DeidentifyTemplate",
          "description": "The DeidentifyTemplate to create."
        }
      },
      "id": "GooglePrivacyDlpV2CreateDeidentifyTemplateRequest"
    },
    "GooglePrivacyDlpV2FixedSizeBucketingConfig": {
      "description": "Buckets values based on fixed size ranges. The\nBucketing transformation can provide all of this functionality,\nbut requires more configuration. This message is provided as a convenience to\nthe user for simple bucketing strategies.\n\nThe transformed value will be a hyphenated string of\n\u003clower_bound\u003e-\u003cupper_bound\u003e, i.e if lower_bound = 10 and upper_bound = 20\nall values that are within this bucket will be replaced with \"10-20\".\n\nThis can be used on data of type: double, long.\n\nIf the bound Value type differs from the type of data\nbeing transformed, we will first attempt converting the type of the data to\nbe transformed to match the type of the bound before comparing.",
      "type": "object",
      "properties": {
        "upperBound": {
          "description": "Upper bound value of buckets. All values greater than upper_bound are\ngrouped together into a single bucket; for example if `upper_bound` = 89,\nthen all values greater than 89 are replaced with the value “89+”.\n[Required].",
          "$ref": "GooglePrivacyDlpV2Value"
        },
        "lowerBound": {
          "description": "Lower bound value of buckets. All values less than `lower_bound` are\ngrouped together into a single bucket; for example if `lower_bound` = 10,\nthen all values less than 10 are replaced with the value “-10”. [Required].",
          "$ref": "GooglePrivacyDlpV2Value"
        },
        "bucketSize": {
          "description": "Size of each bucket (except for minimum and maximum buckets). So if\n`lower_bound` = 10, `upper_bound` = 89, and `bucket_size` = 10, then the\nfollowing buckets would be used: -10, 10-20, 20-30, 30-40, 40-50, 50-60,\n60-70, 70-80, 80-89, 89+. Precision up to 2 decimals works. [Required].",
          "format": "double",
          "type": "number"
        }
      },
      "id": "GooglePrivacyDlpV2FixedSizeBucketingConfig"
    },
    "GooglePrivacyDlpV2beta1CustomInfoType": {
      "description": "Custom information type provided by the user. Used to find domain-specific\nsensitive information configurable to the data in question.",
      "type": "object",
      "properties": {
        "infoType": {
          "description": "Info type configuration. All custom info types must have configurations\nthat do not conflict with built-in info types or other custom info types.",
          "$ref": "GooglePrivacyDlpV2beta1InfoType"
        },
        "dictionary": {
          "$ref": "GooglePrivacyDlpV2beta1Dictionary",
          "description": "Dictionary-based custom info type."
        },
        "surrogateType": {
          "description": "Surrogate info type.",
          "$ref": "GooglePrivacyDlpV2beta1SurrogateType"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CustomInfoType"
    },
    "GooglePrivacyDlpV2beta1AuxiliaryTable": {
      "description": "An auxiliary table contains statistical information on the relative\nfrequency of different quasi-identifiers values. It has one or several\nquasi-identifiers columns, and one column that indicates the relative\nfrequency of each quasi-identifier tuple.\nIf a tuple is present in the data but not in the auxiliary table, the\ncorresponding relative frequency is assumed to be zero (and thus, the\ntuple is highly reidentifiable).",
      "type": "object",
      "properties": {
        "table": {
          "$ref": "GooglePrivacyDlpV2beta1BigQueryTable",
          "description": "Auxiliary table location. [required]"
        },
        "quasiIds": {
          "description": "Quasi-identifier columns. [required]",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1QuasiIdField"
          }
        },
        "relativeFrequency": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "The relative frequency column must contain a floating-point number\nbetween 0 and 1 (inclusive). Null values are assumed to be zero.\n[required]"
        }
      },
      "id": "GooglePrivacyDlpV2beta1AuxiliaryTable"
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "GoogleRpcStatus"
    },
    "GooglePrivacyDlpV2beta1KMapEstimationResult": {
      "description": "Result of the reidentifiability analysis. Note that these results are an\nestimation, not exact values.",
      "type": "object",
      "properties": {
        "kMapEstimationHistogram": {
          "description": "The intervals [min_anonymity, max_anonymity] do not overlap. If a value\ndoesn't correspond to any such interval, the associated frequency is\nzero. For example, the following records:\n  {min_anonymity: 1, max_anonymity: 1, frequency: 17}\n  {min_anonymity: 2, max_anonymity: 3, frequency: 42}\n  {min_anonymity: 5, max_anonymity: 10, frequency: 99}\nmean that there are no record with an estimated anonymity of 4, 5, or\nlarger than 10.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1KMapEstimationHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1KMapEstimationResult"
    },
    "GooglePrivacyDlpV2Color": {
      "description": "Represents a color in the RGB color space.",
      "type": "object",
      "properties": {
        "red": {
          "description": "The amount of red in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "green": {
          "description": "The amount of green in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        },
        "blue": {
          "description": "The amount of blue in the color as a value in the interval [0, 1].",
          "format": "float",
          "type": "number"
        }
      },
      "id": "GooglePrivacyDlpV2Color"
    },
    "GooglePrivacyDlpV2RecordCondition": {
      "description": "A condition for determining whether a transformation should be applied to\na field.",
      "type": "object",
      "properties": {
        "expressions": {
          "description": "An expression.",
          "$ref": "GooglePrivacyDlpV2Expressions"
        }
      },
      "id": "GooglePrivacyDlpV2RecordCondition"
    },
    "GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig": {
      "description": "Replaces an identifier with a surrogate using FPE with the FFX\nmode of operation; however when used in the `ReidentifyContent` API method,\nit serves the opposite function by reversing the surrogate back into\nthe original identifier.\nThe identifier must be encoded as ASCII.\nFor a given crypto key and context, the same identifier will be\nreplaced with the same surrogate.\nIdentifiers must be at least two characters long.\nIn the case that the identifier is the empty string, it will be skipped.\nSee [Pseudonymization](/dlp/docs/pseudonymization) for example usage.",
      "type": "object",
      "properties": {
        "customAlphabet": {
          "description": "This is supported by mapping these to the alphanumeric characters\nthat the FFX mode natively supports. This happens before/after\nencryption/decryption.\nEach character listed must appear only once.\nNumber of characters must be in the range [2, 62].\nThis must be encoded as ASCII.\nThe order of characters does not matter.",
          "type": "string"
        },
        "cryptoKey": {
          "$ref": "GooglePrivacyDlpV2CryptoKey",
          "description": "The key used by the encryption algorithm. [required]"
        },
        "context": {
          "description": "The 'tweak', a context may be used for higher security since the same\nidentifier in two different contexts won't be given the same surrogate. If\nthe context is not set, a default tweak will be used.\n\nIf the context is set but:\n\n1. there is no record present when transforming a given value or\n1. the field is not present when transforming a given value,\n\na default tweak will be used.\n\nNote that case (1) is expected when an `InfoTypeTransformation` is\napplied to both structured and non-structured `ContentItem`s.\nCurrently, the referenced field may be of value type integer or string.\n\nThe tweak is constructed as a sequence of bytes in big endian byte order\nsuch that:\n\n- a 64 bit integer is encoded followed by a single byte of value 1\n- a string is encoded in UTF-8 format followed by a single byte of value\n å 2",
          "$ref": "GooglePrivacyDlpV2FieldId"
        },
        "surrogateInfoType": {
          "description": "The custom infoType to annotate the surrogate with.\nThis annotation will be applied to the surrogate by prefixing it with\nthe name of the custom infoType followed by the number of\ncharacters comprising the surrogate. The following scheme defines the\nformat: info_type_name(surrogate_character_count):surrogate\n\nFor example, if the name of custom infoType is 'MY_TOKEN_INFO_TYPE' and\nthe surrogate is 'abc', the full replacement value\nwill be: 'MY_TOKEN_INFO_TYPE(3):abc'\n\nThis annotation identifies the surrogate when inspecting content using the\ncustom infoType\n[`SurrogateType`](/dlp/docs/reference/rest/v2/InspectConfig#surrogatetype).\nThis facilitates reversal of the surrogate when it occurs in free text.\n\nIn order for inspection to work properly, the name of this infoType must\nnot occur naturally anywhere in your data; otherwise, inspection may\nfind a surrogate that does not correspond to an actual identifier.\nTherefore, choose your custom infoType name carefully after considering\nwhat your data looks like. One way to select a name that has a high chance\nof yielding reliable detection is to include one or more unicode characters\nthat are highly improbable to exist in your data.\nFor example, assuming your data is entered from a regular ASCII keyboard,\nthe symbol with the hex code point 29DD might be used like so:\n⧝MY_TOKEN_TYPE",
          "$ref": "GooglePrivacyDlpV2InfoType"
        },
        "commonAlphabet": {
          "type": "string",
          "enumDescriptions": [
            "",
            "[0-9] (radix of 10)",
            "[0-9A-F] (radix of 16)",
            "[0-9A-Z] (radix of 36)",
            "[0-9A-Za-z] (radix of 62)"
          ],
          "enum": [
            "FFX_COMMON_NATIVE_ALPHABET_UNSPECIFIED",
            "NUMERIC",
            "HEXADECIMAL",
            "UPPER_CASE_ALPHA_NUMERIC",
            "ALPHA_NUMERIC"
          ]
        },
        "radix": {
          "description": "The native way to select the alphabet. Must be in the range [2, 62].",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig"
    },
    "GooglePrivacyDlpV2KAnonymityResult": {
      "description": "Result of the k-anonymity computation.",
      "type": "object",
      "properties": {
        "equivalenceClassHistogramBuckets": {
          "description": "Histogram of k-anonymity equivalence classes.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2KAnonymityHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2KAnonymityResult"
    },
    "GooglePrivacyDlpV2beta1FileSet": {
      "description": "Set of files to scan.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The url, in the format `gs://\u003cbucket\u003e/\u003cpath\u003e`. Trailing wildcard in the\npath is allowed.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1FileSet"
    },
    "GooglePrivacyDlpV2RequestedOptions": {
      "type": "object",
      "properties": {
        "snapshotInspectTemplate": {
          "description": "If run with an inspect template, a snapshot of it's state at the time of\nthis run.",
          "$ref": "GooglePrivacyDlpV2InspectTemplate"
        },
        "jobConfig": {
          "$ref": "GooglePrivacyDlpV2InspectJobConfig"
        }
      },
      "id": "GooglePrivacyDlpV2RequestedOptions"
    },
    "GooglePrivacyDlpV2beta1KAnonymityResult": {
      "description": "Result of the k-anonymity computation.",
      "type": "object",
      "properties": {
        "equivalenceClassHistogramBuckets": {
          "description": "Histogram of k-anonymity equivalence classes.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1KAnonymityHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1KAnonymityResult"
    },
    "GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket": {
      "description": "Histogram bucket of value frequencies in the column.",
      "type": "object",
      "properties": {
        "bucketSize": {
          "description": "Total number of records in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "valueFrequencyUpperBound": {
          "description": "Upper bound on the value frequency of the values in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "valueFrequencyLowerBound": {
          "description": "Lower bound on the value frequency of the values in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValues": {
          "description": "Sample of value frequencies in this bucket. The total number of\nvalues returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1ValueFrequency"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket"
    },
    "GooglePrivacyDlpV2Expressions": {
      "description": "An expression, consisting or an operator and conditions.",
      "type": "object",
      "properties": {
        "logicalOperator": {
          "description": "The operator to apply to the result of conditions. Default and currently\nonly supported value is `AND`.",
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "LOGICAL_OPERATOR_UNSPECIFIED",
            "AND"
          ]
        },
        "conditions": {
          "$ref": "GooglePrivacyDlpV2Conditions"
        }
      },
      "id": "GooglePrivacyDlpV2Expressions"
    },
    "GooglePrivacyDlpV2CategoricalStatsResult": {
      "description": "Result of the categorical stats computation.",
      "type": "object",
      "properties": {
        "valueFrequencyHistogramBuckets": {
          "description": "Histogram of value frequencies in the column.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2CategoricalStatsHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2CategoricalStatsResult"
    },
    "GooglePrivacyDlpV2InfoTypeDescription": {
      "description": "InfoType description.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Internal name of the infoType.",
          "type": "string"
        },
        "displayName": {
          "description": "Human readable form of the infoType name.",
          "type": "string"
        },
        "supportedBy": {
          "enumDescriptions": [
            "",
            "Supported by the inspect operations.",
            "Supported by the risk analysis operations."
          ],
          "description": "Which parts of the API supports this InfoType.",
          "type": "array",
          "items": {
            "enum": [
              "ENUM_TYPE_UNSPECIFIED",
              "INSPECT",
              "RISK_ANALYSIS"
            ],
            "type": "string"
          }
        }
      },
      "id": "GooglePrivacyDlpV2InfoTypeDescription"
    },
    "GooglePrivacyDlpV2InspectJobConfig": {
      "type": "object",
      "properties": {
        "inspectConfig": {
          "description": "How and what to scan for.",
          "$ref": "GooglePrivacyDlpV2InspectConfig"
        },
        "inspectTemplateName": {
          "description": "If provided, will be used as the default for all values in InspectConfig.\n`inspect_config` will be merged into the values persisted as part of the\ntemplate.",
          "type": "string"
        },
        "storageConfig": {
          "$ref": "GooglePrivacyDlpV2StorageConfig",
          "description": "The data to scan."
        },
        "actions": {
          "description": "Actions to execute at the completion of the job. Are executed in the order\nprovided.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Action"
          }
        }
      },
      "id": "GooglePrivacyDlpV2InspectJobConfig"
    },
    "GooglePrivacyDlpV2LDiversityHistogramBucket": {
      "type": "object",
      "properties": {
        "sensitiveValueFrequencyLowerBound": {
          "description": "Lower bound on the sensitive value frequencies of the equivalence\nclasses in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValues": {
          "description": "Sample of equivalence classes in this bucket. The total number of\nclasses returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2LDiversityEquivalenceClass"
          }
        },
        "bucketSize": {
          "description": "Total number of equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValueCount": {
          "description": "Total number of distinct equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "sensitiveValueFrequencyUpperBound": {
          "description": "Upper bound on the sensitive value frequencies of the equivalence\nclasses in this bucket.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2LDiversityHistogramBucket"
    },
    "GooglePrivacyDlpV2InspectConfig": {
      "description": "Configuration description of the scanning process.\nWhen used with redactContent only info_types and min_likelihood are currently\nused.",
      "type": "object",
      "properties": {
        "infoTypes": {
          "description": "Restricts what info_types to look for. The values must correspond to\nInfoType values returned by ListInfoTypes or found in documentation.\nEmpty info_types runs all enabled detectors.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2InfoType"
          }
        },
        "includeQuote": {
          "description": "When true, a contextual quote from the data that triggered a finding is\nincluded in the response; see Finding.quote.",
          "type": "boolean"
        },
        "customInfoTypes": {
          "description": "Custom infoTypes provided by the user.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2CustomInfoType"
          }
        },
        "contentOptions": {
          "enumDescriptions": [
            "Includes entire content of a file or a data stream.",
            "Text content within the data, excluding any metadata.",
            "Images found in the data."
          ],
          "description": "List of options defining data content to scan.\nIf empty, text, images, and other content will be included.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CONTENT_UNSPECIFIED",
              "CONTENT_TEXT",
              "CONTENT_IMAGE"
            ]
          }
        },
        "limits": {
          "$ref": "GooglePrivacyDlpV2FindingLimits"
        },
        "excludeInfoTypes": {
          "description": "When true, excludes type information of the findings.",
          "type": "boolean"
        },
        "minLikelihood": {
          "enumDescriptions": [
            "Default value; information with all likelihoods is included.",
            "Few matching elements.",
            "",
            "Some matching elements.",
            "",
            "Many matching elements."
          ],
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Only returns findings equal or above this threshold. The default is\nPOSSIBLE.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2InspectConfig"
    },
    "GooglePrivacyDlpV2beta1QuasiIdField": {
      "description": "A quasi-identifier column has a custom_tag, used to know which column\nin the data corresponds to which column in the statistical model.",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId"
        },
        "customTag": {
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1QuasiIdField"
    },
    "GooglePrivacyDlpV2LDiversityConfig": {
      "description": "l-diversity metric, used for analysis of reidentification risk.",
      "type": "object",
      "properties": {
        "sensitiveAttribute": {
          "$ref": "GooglePrivacyDlpV2FieldId",
          "description": "Sensitive field for computing the l-value."
        },
        "quasiIds": {
          "description": "Set of quasi-identifiers indicating how equivalence classes are\ndefined for the l-diversity computation. When multiple fields are\nspecified, they are considered a single composite key.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2FieldId"
          }
        }
      },
      "id": "GooglePrivacyDlpV2LDiversityConfig"
    },
    "GooglePrivacyDlpV2CloudStorageOptions": {
      "description": "Options defining a file or a set of files (path ending with *) within\na Google Cloud Storage bucket.",
      "type": "object",
      "properties": {
        "fileSet": {
          "$ref": "GooglePrivacyDlpV2FileSet"
        },
        "bytesLimitPerFile": {
          "description": "Max number of bytes to scan from a file. If a scanned file's size is bigger\nthan this value then the rest of the bytes are omitted.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2CloudStorageOptions"
    },
    "GooglePrivacyDlpV2beta1ValueFrequency": {
      "description": "A value of a field, including its frequency.",
      "type": "object",
      "properties": {
        "count": {
          "description": "How many times the value is contained in the field.",
          "format": "int64",
          "type": "string"
        },
        "value": {
          "description": "A value contained in the field in question.",
          "$ref": "GooglePrivacyDlpV2beta1Value"
        }
      },
      "id": "GooglePrivacyDlpV2beta1ValueFrequency"
    },
    "GooglePrivacyDlpV2beta1Value": {
      "description": "Set of primitive values supported by the system.\nNote that for the purposes of inspection or transformation, the number\nof bytes considered to comprise a 'Value' is based on its representation\nas a UTF-8 encoded string. For example, if 'integer_value' is set to\n123456789, the number of bytes would be counted as 9, even though an\nint64 only holds up to 8 bytes of data.",
      "type": "object",
      "properties": {
        "stringValue": {
          "type": "string"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate"
        },
        "timestampValue": {
          "format": "google-datetime",
          "type": "string"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "floatValue": {
          "format": "double",
          "type": "number"
        },
        "timeValue": {
          "$ref": "GoogleTypeTimeOfDay"
        },
        "integerValue": {
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1Value"
    },
    "GooglePrivacyDlpV2BoundingBox": {
      "description": "Bounding box encompassing detected text within an image.",
      "type": "object",
      "properties": {
        "top": {
          "description": "Top coordinate of the bounding box. (0,0) is upper left.",
          "format": "int32",
          "type": "integer"
        },
        "left": {
          "description": "Left coordinate of the bounding box. (0,0) is upper left.",
          "format": "int32",
          "type": "integer"
        },
        "width": {
          "description": "Width of the bounding box in pixels.",
          "format": "int32",
          "type": "integer"
        },
        "height": {
          "description": "Height of the bounding box in pixels.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GooglePrivacyDlpV2BoundingBox"
    },
    "GooglePrivacyDlpV2CharacterMaskConfig": {
      "description": "Partially mask a string by replacing a given number of characters with a\nfixed character. Masking can start from the beginning or end of the string.\nThis can be used on data of any type (numbers, longs, and so on) and when\nde-identifying structured data we'll attempt to preserve the original data's\ntype. (This allows you to take a long like 123 and modify it to a string like\n**3.",
      "type": "object",
      "properties": {
        "maskingCharacter": {
          "description": "Character to mask the sensitive values&mdash;for example, \"*\" for an\nalphabetic string such as name, or \"0\" for a numeric string such as ZIP\ncode or credit card number. String must have length 1. If not supplied, we\nwill default to \"*\" for strings, 0 for digits.",
          "type": "string"
        },
        "reverseOrder": {
          "description": "Mask characters in reverse order. For example, if `masking_character` is\n'0', number_to_mask is 14, and `reverse_order` is false, then\n1234-5678-9012-3456 -\u003e 00000000000000-3456\nIf `masking_character` is '*', `number_to_mask` is 3, and `reverse_order`\nis true, then 12345 -\u003e 12***",
          "type": "boolean"
        },
        "numberToMask": {
          "description": "Number of characters to mask. If not set, all matching chars will be\nmasked. Skipped characters do not count towards this tally.",
          "format": "int32",
          "type": "integer"
        },
        "charactersToIgnore": {
          "description": "When masking a string, items in this list will be skipped when replacing.\nFor example, if your string is 555-555-5555 and you ask us to skip `-` and\nmask 5 chars with * we would produce ***-*55-5555.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2CharsToIgnore"
          }
        }
      },
      "id": "GooglePrivacyDlpV2CharacterMaskConfig"
    },
    "GooglePrivacyDlpV2RecordKey": {
      "description": "Message for a unique key indicating a record that contains a finding.",
      "type": "object",
      "properties": {
        "datastoreKey": {
          "$ref": "GooglePrivacyDlpV2DatastoreKey"
        },
        "bigQueryKey": {
          "$ref": "GooglePrivacyDlpV2BigQueryKey"
        }
      },
      "id": "GooglePrivacyDlpV2RecordKey"
    },
    "GooglePrivacyDlpV2beta1PartitionId": {
      "description": "Datastore partition ID.\nA partition ID identifies a grouping of entities. The grouping is always\nby project and namespace, however the namespace ID may be empty.\n\nA partition ID contains several dimensions:\nproject ID and namespace ID.",
      "type": "object",
      "properties": {
        "projectId": {
          "description": "The ID of the project to which the entities belong.",
          "type": "string"
        },
        "namespaceId": {
          "description": "If not empty, the ID of the namespace to which the entities belong.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1PartitionId"
    },
    "GooglePrivacyDlpV2SummaryResult": {
      "description": "A collection that informs the user the number of times a particular\n`TransformationResultCode` and error details occurred.",
      "type": "object",
      "properties": {
        "code": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "TRANSFORMATION_RESULT_CODE_UNSPECIFIED",
            "SUCCESS",
            "ERROR"
          ],
          "type": "string"
        },
        "details": {
          "description": "A place for warnings or errors to show up if a transformation didn't\nwork as expected.",
          "type": "string"
        },
        "count": {
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2SummaryResult"
    },
    "GooglePrivacyDlpV2ReidentifyContentRequest": {
      "description": "Request to re-identify an item.",
      "type": "object",
      "properties": {
        "inspectConfig": {
          "$ref": "GooglePrivacyDlpV2InspectConfig",
          "description": "Configuration for the inspector."
        },
        "inspectTemplateName": {
          "description": "Optional template to use. Any configuration directly specified in\n`inspect_config` will override those set in the template. Singular fields\nthat are set in this request will replace their corresponding fields in the\ntemplate. Repeated fields are appended. Singular sub-messages and groups\nare recursively merged.",
          "type": "string"
        },
        "reidentifyConfig": {
          "description": "Configuration for the re-identification of the content item.\nThis field shares the same proto message type that is used for\nde-identification, however its usage here is for the reversal of the\nprevious de-identification. Re-identification is performed by examining\nthe transformations used to de-identify the items and executing the\nreverse. This requires that only reversible transformations\nbe provided here. The reversible transformations are:\n\n - `CryptoReplaceFfxFpeConfig`",
          "$ref": "GooglePrivacyDlpV2DeidentifyConfig"
        },
        "item": {
          "$ref": "GooglePrivacyDlpV2ContentItem",
          "description": "The item to re-identify. Will be treated as text."
        },
        "reidentifyTemplateName": {
          "description": "Optional template to use. References an instance of `DeidentifyTemplate`.\nAny configuration directly specified in `reidentify_config` or\n`inspect_config` will override those set in the template. Singular fields\nthat are set in this request will replace their corresponding fields in the\ntemplate. Repeated fields are appended. Singular sub-messages and groups\nare recursively merged.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2ReidentifyContentRequest"
    },
    "GooglePrivacyDlpV2beta1WordList": {
      "description": "Message defining a list of words or phrases to search for in the data.",
      "type": "object",
      "properties": {
        "words": {
          "description": "Words or phrases defining the dictionary. The dictionary must contain\nat least one phrase and every phrase must contain at least 2 characters\nthat are letters or digits. [required]",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1WordList"
    },
    "GooglePrivacyDlpV2Key": {
      "description": "A unique identifier for a Datastore entity.\nIf a key's partition ID or any of its path kinds or names are\nreserved/read-only, the key is reserved/read-only.\nA reserved/read-only key is forbidden in certain documented contexts.",
      "type": "object",
      "properties": {
        "partitionId": {
          "description": "Entities are partitioned into subsets, currently identified by a project\nID and namespace ID.\nQueries are scoped to a single partition.",
          "$ref": "GooglePrivacyDlpV2PartitionId"
        },
        "path": {
          "description": "The entity path.\nAn entity path consists of one or more elements composed of a kind and a\nstring or numerical identifier, which identify entities. The first\nelement identifies a _root entity_, the second element identifies\na _child_ of the root entity, the third element identifies a child of the\nsecond entity, and so forth. The entities identified by all prefixes of\nthe path are called the element's _ancestors_.\n\nA path can never be empty, and a path can have at most 100 elements.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2PathElement"
          }
        }
      },
      "id": "GooglePrivacyDlpV2Key"
    },
    "GooglePrivacyDlpV2beta1FieldId": {
      "description": "General identifier of a data field in a storage service.",
      "type": "object",
      "properties": {
        "columnName": {
          "description": "Name describing the field.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1FieldId"
    },
    "GooglePrivacyDlpV2TableLocation": {
      "description": "Location of a finding within a table.",
      "type": "object",
      "properties": {
        "rowIndex": {
          "description": "The zero-based index of the row where the finding is located.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2TableLocation"
    },
    "GooglePrivacyDlpV2Conditions": {
      "description": "A collection of conditions.",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Condition"
          }
        }
      },
      "id": "GooglePrivacyDlpV2Conditions"
    },
    "GooglePrivacyDlpV2ListInspectTemplatesResponse": {
      "description": "Response message for ListInspectTemplates.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "If the next page is available then the next page token to be used\nin following ListInspectTemplates request.",
          "type": "string"
        },
        "inspectTemplates": {
          "description": "List of inspectTemplates, up to page_size in ListInspectTemplatesRequest.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2InspectTemplate"
          }
        }
      },
      "id": "GooglePrivacyDlpV2ListInspectTemplatesResponse"
    },
    "GooglePrivacyDlpV2DetectionRule": {
      "description": "Rule for modifying a custom info type to alter behavior under certain\ncircumstances, depending on the specific details of the rule. Not supported\nfor the `surrogate_type` custom info type.",
      "type": "object",
      "properties": {
        "hotwordRule": {
          "$ref": "GooglePrivacyDlpV2HotwordRule",
          "description": "Hotword-based detection rule."
        }
      },
      "id": "GooglePrivacyDlpV2DetectionRule"
    },
    "GooglePrivacyDlpV2SaveFindings": {
      "description": "If set, the detailed findings will be persisted to the specified\nOutputStorageConfig. Compatible with: Inspect",
      "type": "object",
      "properties": {
        "outputConfig": {
          "$ref": "GooglePrivacyDlpV2OutputStorageConfig"
        }
      },
      "id": "GooglePrivacyDlpV2SaveFindings"
    },
    "GooglePrivacyDlpV2beta1InfoTypeStatistics": {
      "description": "Statistics regarding a specific InfoType.",
      "type": "object",
      "properties": {
        "infoType": {
          "$ref": "GooglePrivacyDlpV2beta1InfoType",
          "description": "The type of finding this stat is for."
        },
        "count": {
          "description": "Number of findings for this info type.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoTypeStatistics"
    },
    "GooglePrivacyDlpV2beta1PropertyReference": {
      "description": "A reference to a property relative to the Datastore kind expressions.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the property.\nIf name includes \".\"s, it may be interpreted as a property name path.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1PropertyReference"
    },
    "GooglePrivacyDlpV2UnwrappedCryptoKey": {
      "description": "Using raw keys is prone to security risks due to accidentally\nleaking the key. Choose another type of key if possible.",
      "type": "object",
      "properties": {
        "key": {
          "description": "The AES 128/192/256 bit key. [required]",
          "format": "byte",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2UnwrappedCryptoKey"
    },
    "GooglePrivacyDlpV2beta1OutputStorageConfig": {
      "description": "Cloud repository for storing output.",
      "type": "object",
      "properties": {
        "storagePath": {
          "$ref": "GooglePrivacyDlpV2beta1CloudStoragePath",
          "description": "The path to a Google Cloud Storage location to store output.\nThe bucket must already exist and\nthe Google APIs service account for DLP must have write permission to\nwrite to the given bucket.\nResults are split over multiple csv files with each file name matching\nthe pattern \"[operation_id]_[count].csv\", for example\n`3094877188788974909_1.csv`. The `operation_id` matches the\nidentifier for the Operation, and the `count` is a counter used for\ntracking the number of files written.\n\nThe CSV file(s) contain the following columns regardless of storage type\nscanned:\n- id\n- info_type\n- likelihood\n- byte size of finding\n- quote\n- timestamp\n\nFor Cloud Storage the next columns are:\n\n- file_path\n- start_offset\n\nFor Cloud Datastore the next columns are:\n\n- project_id\n- namespace_id\n- path\n- column_name\n- offset\n\nFor BigQuery the next columns are:\n\n- row_number\n- project_id\n- dataset_id\n- table_id"
        },
        "table": {
          "$ref": "GooglePrivacyDlpV2beta1BigQueryTable",
          "description": "Store findings in a new table in the dataset."
        }
      },
      "id": "GooglePrivacyDlpV2beta1OutputStorageConfig"
    },
    "GooglePrivacyDlpV2Table": {
      "description": "Structured content to inspect. Up to 50,000 `Value`s per request allowed.",
      "type": "object",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Row"
          }
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2FieldId"
          }
        }
      },
      "id": "GooglePrivacyDlpV2Table"
    },
    "GooglePrivacyDlpV2CryptoHashConfig": {
      "description": "Pseudonymization method that generates surrogates via cryptographic hashing.\nUses SHA-256.\nThe key size must be either 32 or 64 bytes.\nOutputs a 32 byte digest as an uppercase hex string\n(for example, 41D1567F7F99F1DC2A5FAB886DEE5BEE).\nCurrently, only string and integer values can be hashed.",
      "type": "object",
      "properties": {
        "cryptoKey": {
          "description": "The key used by the hash function.",
          "$ref": "GooglePrivacyDlpV2CryptoKey"
        }
      },
      "id": "GooglePrivacyDlpV2CryptoHashConfig"
    },
    "GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass": {
      "description": "The set of columns' values that share the same k-anonymity value.",
      "type": "object",
      "properties": {
        "equivalenceClassSize": {
          "description": "Size of the equivalence class, for example number of rows with the\nabove set of values.",
          "format": "int64",
          "type": "string"
        },
        "quasiIdsValues": {
          "description": "Set of values defining the equivalence class. One value per\nquasi-identifier column in the original KAnonymity metric message.\nThe order is always the same as the original request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass"
    },
    "GooglePrivacyDlpV2QuoteInfo": {
      "description": "Message for infoType-dependent details parsed from quote.",
      "type": "object",
      "properties": {
        "dateTime": {
          "$ref": "GooglePrivacyDlpV2DateTime"
        }
      },
      "id": "GooglePrivacyDlpV2QuoteInfo"
    },
    "GooglePrivacyDlpV2beta1InfoType": {
      "description": "Type of information detected by the API.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the information type.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoType"
    },
    "GooglePrivacyDlpV2beta1RiskAnalysisOperationResult": {
      "description": "Result of a risk analysis\n[`Operation`](/dlp/docs/reference/rest/v2beta1/inspect.operations)\nrequest.",
      "type": "object",
      "properties": {
        "numericalStatsResult": {
          "$ref": "GooglePrivacyDlpV2beta1NumericalStatsResult"
        },
        "kMapEstimationResult": {
          "$ref": "GooglePrivacyDlpV2beta1KMapEstimationResult"
        },
        "kAnonymityResult": {
          "$ref": "GooglePrivacyDlpV2beta1KAnonymityResult"
        },
        "lDiversityResult": {
          "$ref": "GooglePrivacyDlpV2beta1LDiversityResult"
        },
        "categoricalStatsResult": {
          "$ref": "GooglePrivacyDlpV2beta1CategoricalStatsResult"
        }
      },
      "id": "GooglePrivacyDlpV2beta1RiskAnalysisOperationResult"
    },
    "GooglePrivacyDlpV2KmsWrappedCryptoKey": {
      "description": "Include to use an existing data crypto key wrapped by KMS.\nAuthorization requires the following IAM permissions when sending a request\nto perform a crypto transformation using a kms-wrapped crypto key:\ndlp.kms.encrypt",
      "type": "object",
      "properties": {
        "wrappedKey": {
          "description": "The wrapped data crypto key. [required]",
          "format": "byte",
          "type": "string"
        },
        "cryptoKeyName": {
          "description": "The resource name of the KMS CryptoKey to use for unwrapping. [required]",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2KmsWrappedCryptoKey"
    },
    "GooglePrivacyDlpV2ListInfoTypesResponse": {
      "description": "Response to the ListInfoTypes request.",
      "type": "object",
      "properties": {
        "infoTypes": {
          "description": "Set of sensitive infoTypes.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2InfoTypeDescription"
          }
        }
      },
      "id": "GooglePrivacyDlpV2ListInfoTypesResponse"
    },
    "GooglePrivacyDlpV2beta1CategoricalStatsConfig": {
      "description": "Compute numerical stats over an individual column, including\nnumber of distinct values and value count distribution.",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "Field to compute categorical stats on. All column types are\nsupported except for arrays and structs. However, it may be more\ninformative to use NumericalStats when the field type is supported,\ndepending on the data."
        }
      },
      "id": "GooglePrivacyDlpV2beta1CategoricalStatsConfig"
    },
    "GooglePrivacyDlpV2CategoricalStatsHistogramBucket": {
      "type": "object",
      "properties": {
        "bucketSize": {
          "description": "Total number of values in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValueCount": {
          "description": "Total number of distinct values in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "valueFrequencyUpperBound": {
          "description": "Upper bound on the value frequency of the values in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "valueFrequencyLowerBound": {
          "description": "Lower bound on the value frequency of the values in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValues": {
          "description": "Sample of value frequencies in this bucket. The total number of\nvalues returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2ValueFrequency"
          }
        }
      },
      "id": "GooglePrivacyDlpV2CategoricalStatsHistogramBucket"
    },
    "GooglePrivacyDlpV2beta1RiskAnalysisOperationMetadata": {
      "description": "Metadata returned within the\n[`riskAnalysis.operations.get`](/dlp/docs/reference/rest/v2beta1/riskAnalysis.operations/get)\nfor risk analysis.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The time which this request was started.",
          "format": "google-datetime",
          "type": "string"
        },
        "requestedSourceTable": {
          "$ref": "GooglePrivacyDlpV2beta1BigQueryTable",
          "description": "Input dataset to compute metrics over."
        },
        "requestedPrivacyMetric": {
          "description": "Privacy metric to compute.",
          "$ref": "GooglePrivacyDlpV2beta1PrivacyMetric"
        }
      },
      "id": "GooglePrivacyDlpV2beta1RiskAnalysisOperationMetadata"
    },
    "GooglePrivacyDlpV2DeidentifyTemplate": {
      "description": "The DeidentifyTemplates contains instructions on how to deidentify content.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The creation timestamp of a inspectTemplate, output only field.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update timestamp of a inspectTemplate, output only field.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "The template name. Output only.\n\nThe template will have one of the following formats:\n`projects/PROJECT_ID/deidentifyTemplates/TEMPLATE_ID` OR\n`organizations/ORGANIZATION_ID/deidentifyTemplates/TEMPLATE_ID`",
          "type": "string"
        },
        "description": {
          "description": "Short description (max 256 chars).",
          "type": "string"
        },
        "displayName": {
          "description": "Display name (max 256 chars).",
          "type": "string"
        },
        "deidentifyConfig": {
          "description": "///////////// // The core content of the template  // ///////////////",
          "$ref": "GooglePrivacyDlpV2DeidentifyConfig"
        }
      },
      "id": "GooglePrivacyDlpV2DeidentifyTemplate"
    },
    "GooglePrivacyDlpV2RedactImageRequest": {
      "description": "Request to search for potentially sensitive info in a list of items\nand replace it with a default or provided content.",
      "type": "object",
      "properties": {
        "inspectConfig": {
          "description": "Configuration for the inspector.",
          "$ref": "GooglePrivacyDlpV2InspectConfig"
        },
        "imageRedactionConfigs": {
          "description": "The configuration for specifying what content to redact from images.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2ImageRedactionConfig"
          }
        },
        "byteItem": {
          "description": "The content must be PNG, JPEG, SVG or BMP.",
          "$ref": "GooglePrivacyDlpV2ByteContentItem"
        }
      },
      "id": "GooglePrivacyDlpV2RedactImageRequest"
    },
    "GooglePrivacyDlpV2FieldTransformation": {
      "description": "The transformation to apply to the field.",
      "type": "object",
      "properties": {
        "infoTypeTransformations": {
          "$ref": "GooglePrivacyDlpV2InfoTypeTransformations",
          "description": "Treat the contents of the field as free text, and selectively\ntransform content that matches an `InfoType`."
        },
        "fields": {
          "description": "Input field(s) to apply the transformation to. [required]",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2FieldId"
          }
        },
        "primitiveTransformation": {
          "$ref": "GooglePrivacyDlpV2PrimitiveTransformation",
          "description": "Apply the transformation to the entire field."
        },
        "condition": {
          "$ref": "GooglePrivacyDlpV2RecordCondition",
          "description": "Only apply the transformation if the condition evaluates to true for the\ngiven `RecordCondition`. The conditions are allowed to reference fields\nthat are not used in the actual transformation. [optional]\n\nExample Use Cases:\n\n- Apply a different bucket transformation to an age column if the zip code\ncolumn for the same record is within a specific range.\n- Redact a field if the date of birth field is greater than 85."
        }
      },
      "id": "GooglePrivacyDlpV2FieldTransformation"
    },
    "GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails": {
      "description": "Result of a risk analysis operation request.",
      "type": "object",
      "properties": {
        "numericalStatsResult": {
          "$ref": "GooglePrivacyDlpV2NumericalStatsResult"
        },
        "kAnonymityResult": {
          "$ref": "GooglePrivacyDlpV2KAnonymityResult"
        },
        "kMapEstimationResult": {
          "$ref": "GooglePrivacyDlpV2KMapEstimationResult"
        },
        "lDiversityResult": {
          "$ref": "GooglePrivacyDlpV2LDiversityResult"
        },
        "requestedSourceTable": {
          "description": "Input dataset to compute metrics over.",
          "$ref": "GooglePrivacyDlpV2BigQueryTable"
        },
        "requestedPrivacyMetric": {
          "$ref": "GooglePrivacyDlpV2PrivacyMetric",
          "description": "Privacy metric to compute."
        },
        "categoricalStatsResult": {
          "$ref": "GooglePrivacyDlpV2CategoricalStatsResult"
        }
      },
      "id": "GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails"
    },
    "GooglePrivacyDlpV2Proximity": {
      "description": "Message for specifying a window around a finding to apply a detection\nrule.",
      "type": "object",
      "properties": {
        "windowAfter": {
          "description": "Number of characters after the finding to consider.",
          "format": "int32",
          "type": "integer"
        },
        "windowBefore": {
          "description": "Number of characters before the finding to consider.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GooglePrivacyDlpV2Proximity"
    },
    "GooglePrivacyDlpV2Condition": {
      "description": "The field type of `value` and `field` do not need to match to be\nconsidered equal, but not all comparisons are possible.\n\nA `value` of type:\n\n- `string` can be compared against all other types\n- `boolean` can only be compared against other booleans\n- `integer` can be compared against doubles or a string if the string value\ncan be parsed as an integer.\n- `double` can be compared against integers or a string if the string can\nbe parsed as a double.\n- `Timestamp` can be compared against strings in RFC 3339 date string\nformat.\n- `TimeOfDay` can be compared against timestamps and strings in the format\nof 'HH:mm:ss'.\n\nIf we fail to compare do to type mismatch, a warning will be given and\nthe condition will evaluate to false.",
      "type": "object",
      "properties": {
        "field": {
          "description": "Field within the record this condition is evaluated against. [required]",
          "$ref": "GooglePrivacyDlpV2FieldId"
        },
        "operator": {
          "enumDescriptions": [
            "",
            "Equal.",
            "Not equal to.",
            "Greater than.",
            "Less than.",
            "Greater than or equals.",
            "Less than or equals.",
            "Exists"
          ],
          "enum": [
            "RELATIONAL_OPERATOR_UNSPECIFIED",
            "EQUAL_TO",
            "NOT_EQUAL_TO",
            "GREATER_THAN",
            "LESS_THAN",
            "GREATER_THAN_OR_EQUALS",
            "LESS_THAN_OR_EQUALS",
            "EXISTS"
          ],
          "description": "Operator used to compare the field or infoType to the value. [required]",
          "type": "string"
        },
        "value": {
          "description": "Value to compare against. [Required, except for `EXISTS` tests.]",
          "$ref": "GooglePrivacyDlpV2Value"
        }
      },
      "id": "GooglePrivacyDlpV2Condition"
    },
    "GooglePrivacyDlpV2LikelihoodAdjustment": {
      "description": "Message for specifying an adjustment to the likelihood of a finding as\npart of a detection rule.",
      "type": "object",
      "properties": {
        "relativeLikelihood": {
          "description": "Increase or decrease the likelihood by the specified number of\nlevels. For example, if a finding would be `POSSIBLE` without the\ndetection rule and `relative_likelihood` is 1, then it is upgraded to\n`LIKELY`, while a value of -1 would downgrade it to `UNLIKELY`.\nLikelihood may never drop below `VERY_UNLIKELY` or exceed\n`VERY_LIKELY`, so applying an adjustment of 1 followed by an\nadjustment of -1 when base likelihood is `VERY_LIKELY` will result in\na final likelihood of `LIKELY`.",
          "format": "int32",
          "type": "integer"
        },
        "fixedLikelihood": {
          "description": "Set the likelihood of a finding to a fixed value.",
          "type": "string",
          "enumDescriptions": [
            "Default value; information with all likelihoods is included.",
            "Few matching elements.",
            "",
            "Some matching elements.",
            "",
            "Many matching elements."
          ],
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        }
      },
      "id": "GooglePrivacyDlpV2LikelihoodAdjustment"
    },
    "GooglePrivacyDlpV2beta1KMapEstimationHistogramBucket": {
      "description": "A KMapEstimationHistogramBucket message with the following values:\n  min_anonymity: 3\n  max_anonymity: 5\n  frequency: 42\nmeans that there are 42 records whose quasi-identifier values correspond\nto 3, 4 or 5 people in the overlying population. An important particular\ncase is when min_anonymity = max_anonymity = 1: the frequency field then\ncorresponds to the number of uniquely identifiable records.",
      "type": "object",
      "properties": {
        "bucketValues": {
          "description": "Sample of quasi-identifier tuple values in this bucket. The total\nnumber of classes returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1KMapEstimationQuasiIdValues"
          }
        },
        "minAnonymity": {
          "description": "Always positive.",
          "format": "int64",
          "type": "string"
        },
        "maxAnonymity": {
          "description": "Always greater than or equal to min_anonymity.",
          "format": "int64",
          "type": "string"
        },
        "bucketSize": {
          "description": "Number of records within these anonymity bounds.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1KMapEstimationHistogramBucket"
    },
    "GooglePrivacyDlpV2beta1CloudStorageOptions": {
      "description": "Options defining a file or a set of files (path ending with *) within\na Google Cloud Storage bucket.",
      "type": "object",
      "properties": {
        "fileSet": {
          "$ref": "GooglePrivacyDlpV2beta1FileSet"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CloudStorageOptions"
    },
    "GooglePrivacyDlpV2Action": {
      "description": "A task to execute on the completion of a job.",
      "type": "object",
      "properties": {
        "saveFindings": {
          "$ref": "GooglePrivacyDlpV2SaveFindings",
          "description": "Save resulting findings in a provided location."
        },
        "pubSub": {
          "$ref": "GooglePrivacyDlpV2PublishToPubSub",
          "description": "Publish a notification to a pubsub topic."
        }
      },
      "id": "GooglePrivacyDlpV2Action"
    },
    "GooglePrivacyDlpV2beta1CloudStoragePath": {
      "description": "A location in Cloud Storage.",
      "type": "object",
      "properties": {
        "path": {
          "description": "The url, in the format of `gs://bucket/\u003cpath\u003e`.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1CloudStoragePath"
    },
    "GooglePrivacyDlpV2beta1InspectOperationResult": {
      "description": "The operational data.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `inspect/results/{id}`.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectOperationResult"
    },
    "GooglePrivacyDlpV2beta1KAnonymityHistogramBucket": {
      "description": "Histogram bucket of equivalence class sizes in the table.",
      "type": "object",
      "properties": {
        "bucketValues": {
          "description": "Sample of equivalence classes in this bucket. The total number of\nclasses returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1KAnonymityEquivalenceClass"
          }
        },
        "equivalenceClassSizeLowerBound": {
          "description": "Lower bound on the size of the equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "equivalenceClassSizeUpperBound": {
          "description": "Upper bound on the size of the equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketSize": {
          "description": "Total number of records in this bucket.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1KAnonymityHistogramBucket"
    },
    "GooglePrivacyDlpV2InfoTypeTransformations": {
      "description": "A type of transformation that will scan unstructured text and\napply various `PrimitiveTransformation`s to each finding, where the\ntransformation is applied to only values that were identified as a specific\ninfo_type.",
      "type": "object",
      "properties": {
        "transformations": {
          "description": "Transformation for each infoType. Cannot specify more than one\nfor a given infoType. [required]",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2InfoTypeTransformation"
          }
        }
      },
      "id": "GooglePrivacyDlpV2InfoTypeTransformations"
    },
    "GooglePrivacyDlpV2BigQueryOptions": {
      "description": "Options defining BigQuery table and row identifiers.",
      "type": "object",
      "properties": {
        "identifyingFields": {
          "description": "References to fields uniquely identifying rows within the table.\nNested fields in the format, like `person.birthdate.year`, are allowed.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2FieldId"
          }
        },
        "tableReference": {
          "$ref": "GooglePrivacyDlpV2BigQueryTable",
          "description": "Complete BigQuery table reference."
        }
      },
      "id": "GooglePrivacyDlpV2BigQueryOptions"
    },
    "GooglePrivacyDlpV2beta1LDiversityConfig": {
      "description": "l-diversity metric, used for analysis of reidentification risk.",
      "type": "object",
      "properties": {
        "sensitiveAttribute": {
          "$ref": "GooglePrivacyDlpV2beta1FieldId",
          "description": "Sensitive field for computing the l-value."
        },
        "quasiIds": {
          "description": "Set of quasi-identifiers indicating how equivalence classes are\ndefined for the l-diversity computation. When multiple fields are\nspecified, they are considered a single composite key.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldId"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1LDiversityConfig"
    },
    "GooglePrivacyDlpV2InfoTypeLimit": {
      "description": "Max findings configuration per infoType, per content item or long\nrunning DlpJob.",
      "type": "object",
      "properties": {
        "infoType": {
          "description": "Type of information the findings limit applies to. Only one limit per\ninfo_type should be provided. If InfoTypeLimit does not have an\ninfo_type, the DLP API applies the limit against all info_types that\nare found but not specified in another InfoTypeLimit.",
          "$ref": "GooglePrivacyDlpV2InfoType"
        },
        "maxFindings": {
          "description": "Max findings limit for the given infoType.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GooglePrivacyDlpV2InfoTypeLimit"
    },
    "GooglePrivacyDlpV2InspectTemplate": {
      "description": "The inspectTemplate contains a configuration (set of types of sensitive data\nto be detected) to be used anywhere you otherwise would normally specify\nInspectConfig.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "The creation timestamp of a inspectTemplate, output only field.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "description": "The last update timestamp of a inspectTemplate, output only field.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "The template name. Output only.\n\nThe template will have one of the following formats:\n`projects/PROJECT_ID/inspectTemplates/TEMPLATE_ID` OR\n`organizations/ORGANIZATION_ID/inspectTemplates/TEMPLATE_ID`",
          "type": "string"
        },
        "inspectConfig": {
          "$ref": "GooglePrivacyDlpV2InspectConfig",
          "description": "The core content of the template. Configuration of the scanning process."
        },
        "displayName": {
          "description": "Display name (max 256 chars).",
          "type": "string"
        },
        "description": {
          "description": "Short description (max 256 chars).",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2InspectTemplate"
    },
    "GooglePrivacyDlpV2CustomInfoType": {
      "description": "Custom information type provided by the user. Used to find domain-specific\nsensitive information configurable to the data in question.",
      "type": "object",
      "properties": {
        "detectionRules": {
          "description": "Set of detection rules to apply to all findings of this custom info type.\nRules are applied in order that they are specified. Not supported for the\n`surrogate_type` custom info type.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2DetectionRule"
          }
        },
        "infoType": {
          "description": "Info type configuration. All custom info types must have configurations\nthat do not conflict with built-in info types or other custom info types.",
          "$ref": "GooglePrivacyDlpV2InfoType"
        },
        "dictionary": {
          "description": "Dictionary-based custom info type.",
          "$ref": "GooglePrivacyDlpV2Dictionary"
        },
        "regex": {
          "$ref": "GooglePrivacyDlpV2Regex",
          "description": "Regex-based custom info type."
        },
        "surrogateType": {
          "$ref": "GooglePrivacyDlpV2SurrogateType",
          "description": "Surrogate info type."
        },
        "likelihood": {
          "enumDescriptions": [
            "Default value; information with all likelihoods is included.",
            "Few matching elements.",
            "",
            "Some matching elements.",
            "",
            "Many matching elements."
          ],
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ],
          "description": "Likelihood to return for this custom info type. This base value can be\naltered by a detection rule if the finding meets the criteria specified by\nthe rule. Defaults to `VERY_LIKELY` if not specified.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2CustomInfoType"
    },
    "GooglePrivacyDlpV2NumericalStatsResult": {
      "description": "Result of the numerical stats computation.",
      "type": "object",
      "properties": {
        "minValue": {
          "description": "Minimum value appearing in the column.",
          "$ref": "GooglePrivacyDlpV2Value"
        },
        "maxValue": {
          "$ref": "GooglePrivacyDlpV2Value",
          "description": "Maximum value appearing in the column."
        },
        "quantileValues": {
          "description": "List of 99 values that partition the set of field values into 100 equal\nsized buckets.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2NumericalStatsResult"
    },
    "GooglePrivacyDlpV2Trigger": {
      "description": "What event needs to occur for a new job to be started.",
      "type": "object",
      "properties": {
        "schedule": {
          "$ref": "GooglePrivacyDlpV2Schedule",
          "description": "Create a job on a repeating basis based on the elapse of time."
        }
      },
      "id": "GooglePrivacyDlpV2Trigger"
    },
    "GooglePrivacyDlpV2PartitionId": {
      "description": "Datastore partition ID.\nA partition ID identifies a grouping of entities. The grouping is always\nby project and namespace, however the namespace ID may be empty.\n\nA partition ID contains several dimensions:\nproject ID and namespace ID.",
      "type": "object",
      "properties": {
        "namespaceId": {
          "description": "If not empty, the ID of the namespace to which the entities belong.",
          "type": "string"
        },
        "projectId": {
          "description": "The ID of the project to which the entities belong.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2PartitionId"
    },
    "GooglePrivacyDlpV2BucketingConfig": {
      "description": "Generalization function that buckets values based on ranges. The ranges and\nreplacement values are dynamically provided by the user for custom behavior,\nsuch as 1-30 -\u003e LOW 31-65 -\u003e MEDIUM 66-100 -\u003e HIGH\nThis can be used on\ndata of type: number, long, string, timestamp.\nIf the bound `Value` type differs from the type of data being transformed, we\nwill first attempt converting the type of the data to be transformed to match\nthe type of the bound before comparing.",
      "type": "object",
      "properties": {
        "buckets": {
          "description": "Set of buckets. Ranges must be non-overlapping.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Bucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2BucketingConfig"
    },
    "GooglePrivacyDlpV2beta1NumericalStatsConfig": {
      "description": "Compute numerical stats over an individual column, including\nmin, max, and quantiles.",
      "type": "object",
      "properties": {
        "field": {
          "description": "Field to compute numerical stats on. Supported types are\ninteger, float, date, datetime, timestamp, time.",
          "$ref": "GooglePrivacyDlpV2beta1FieldId"
        }
      },
      "id": "GooglePrivacyDlpV2beta1NumericalStatsConfig"
    },
    "GooglePrivacyDlpV2TransientCryptoKey": {
      "description": "Use this to have a random data crypto key generated.\nIt will be discarded after the request finishes.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the key. [required]\nThis is an arbitrary string used to differentiate different keys.\nA unique key is generated per name: two separate `TransientCryptoKey`\nprotos share the same generated key if their names are the same.\nWhen the data crypto key is generated, this name is not used in any way\n(repeating the api call will result in a different key being generated).",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2TransientCryptoKey"
    },
    "GooglePrivacyDlpV2ByteContentItem": {
      "description": "Container for bytes to inspect or redact.",
      "type": "object",
      "properties": {
        "data": {
          "description": "Content data to inspect or redact.",
          "format": "byte",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "BYTES_TYPE_UNSPECIFIED",
            "IMAGE_JPEG",
            "IMAGE_BMP",
            "IMAGE_PNG",
            "IMAGE_SVG",
            "TEXT_UTF8"
          ],
          "description": "The type of data stored in the bytes string. Default will be TEXT_UTF8.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2ByteContentItem"
    },
    "GooglePrivacyDlpV2PrivacyMetric": {
      "description": "Privacy metric to compute for reidentification risk analysis.",
      "type": "object",
      "properties": {
        "numericalStatsConfig": {
          "$ref": "GooglePrivacyDlpV2NumericalStatsConfig"
        },
        "kAnonymityConfig": {
          "$ref": "GooglePrivacyDlpV2KAnonymityConfig"
        },
        "categoricalStatsConfig": {
          "$ref": "GooglePrivacyDlpV2CategoricalStatsConfig"
        },
        "kMapEstimationConfig": {
          "$ref": "GooglePrivacyDlpV2KMapEstimationConfig"
        },
        "lDiversityConfig": {
          "$ref": "GooglePrivacyDlpV2LDiversityConfig"
        }
      },
      "id": "GooglePrivacyDlpV2PrivacyMetric"
    },
    "GooglePrivacyDlpV2WordList": {
      "description": "Message defining a list of words or phrases to search for in the data.",
      "type": "object",
      "properties": {
        "words": {
          "description": "Words or phrases defining the dictionary. The dictionary must contain\nat least one phrase and every phrase must contain at least 2 characters\nthat are letters or digits. [required]",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GooglePrivacyDlpV2WordList"
    },
    "GooglePrivacyDlpV2beta1DatastoreOptions": {
      "description": "Options defining a data set within Google Cloud Datastore.",
      "type": "object",
      "properties": {
        "partitionId": {
          "$ref": "GooglePrivacyDlpV2beta1PartitionId",
          "description": "A partition ID identifies a grouping of entities. The grouping is always\nby project and namespace, however the namespace ID may be empty."
        },
        "kind": {
          "$ref": "GooglePrivacyDlpV2beta1KindExpression",
          "description": "The kind to process."
        },
        "projection": {
          "description": "Properties to scan. If none are specified, all properties will be scanned\nby default.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Projection"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1DatastoreOptions"
    },
    "GooglePrivacyDlpV2KMapEstimationResult": {
      "description": "Result of the reidentifiability analysis. Note that these results are an\nestimation, not exact values.",
      "type": "object",
      "properties": {
        "kMapEstimationHistogram": {
          "description": "The intervals [min_anonymity, max_anonymity] do not overlap. If a value\ndoesn't correspond to any such interval, the associated frequency is\nzero. For example, the following records:\n  {min_anonymity: 1, max_anonymity: 1, frequency: 17}\n  {min_anonymity: 2, max_anonymity: 3, frequency: 42}\n  {min_anonymity: 5, max_anonymity: 10, frequency: 99}\nmean that there are no record with an estimated anonymity of 4, 5, or\nlarger than 10.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2KMapEstimationHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2KMapEstimationResult"
    },
    "GooglePrivacyDlpV2JobTrigger": {
      "description": "Contains a configuration to make dlp api calls on a repeating basis.",
      "type": "object",
      "properties": {
        "description": {
          "description": "User provided description (max 256 chars)",
          "type": "string"
        },
        "displayName": {
          "description": "Display name (max 100 chars)",
          "type": "string"
        },
        "createTime": {
          "description": "The creation timestamp of a triggeredJob, output only field.",
          "format": "google-datetime",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "",
            "Trigger is healthy.",
            "Trigger is temporarily paused.",
            "Trigger is cancelled and can not be resumed."
          ],
          "enum": [
            "STATUS_UNSPECIFIED",
            "HEALTHY",
            "PAUSED",
            "CANCELLED"
          ],
          "description": "A status for this trigger. [required]",
          "type": "string"
        },
        "inspectJob": {
          "$ref": "GooglePrivacyDlpV2InspectJobConfig"
        },
        "updateTime": {
          "description": "The last update timestamp of a triggeredJob, output only field.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Unique resource name for the triggeredJob, assigned by the service when the\ntriggeredJob is created, for example\n`projects/dlp-test-project/triggeredJobs/53234423`.",
          "type": "string"
        },
        "triggers": {
          "description": "A list of triggers which will be OR'ed together. Only one in the list\nneeds to trigger for a job to be started. The list may contain only\na single Schedule trigger and must have at least one object.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Trigger"
          }
        },
        "errors": {
          "description": "A stream of errors encountered when the trigger was activated. Repeated\nerrors may result in the JobTrigger automaticaly being paused.\nWill return the last 100 errors. Whenever the JobTrigger is modified\nthis list will be cleared. Output only field.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Error"
          }
        },
        "lastRunTime": {
          "description": "The timestamp of the last time this trigger executed, output only field.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2JobTrigger"
    },
    "GooglePrivacyDlpV2KMapEstimationConfig": {
      "description": "Reidentifiability metric. This corresponds to a risk model similar to what\nis called \"journalist risk\" in the literature, except the attack dataset is\nstatistically modeled instead of being perfectly known. This can be done\nusing publicly available data (like the US Census), or using a custom\nstatistical model (indicated as one or several BigQuery tables), or by\nextrapolating from the distribution of values in the input dataset.",
      "type": "object",
      "properties": {
        "auxiliaryTables": {
          "description": "Several auxiliary tables can be used in the analysis. Each custom_tag\nused to tag a quasi-identifiers column must appear in exactly one column\nof one auxiliary table.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2AuxiliaryTable"
          }
        },
        "quasiIds": {
          "description": "Fields considered to be quasi-identifiers. No two columns can have the\nsame tag. [required]",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2TaggedField"
          }
        },
        "regionCode": {
          "description": "ISO 3166-1 alpha-2 region code to use in the statistical modeling.\nRequired if no column is tagged with a region-specific InfoType (like\nUS_ZIP_5) or a region code.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2KMapEstimationConfig"
    },
    "GooglePrivacyDlpV2KAnonymityHistogramBucket": {
      "type": "object",
      "properties": {
        "bucketValues": {
          "description": "Sample of equivalence classes in this bucket. The total number of\nclasses returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2KAnonymityEquivalenceClass"
          }
        },
        "equivalenceClassSizeLowerBound": {
          "description": "Lower bound on the size of the equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "equivalenceClassSizeUpperBound": {
          "description": "Upper bound on the size of the equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketSize": {
          "description": "Total number of equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValueCount": {
          "description": "Total number of distinct equivalence classes in this bucket.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2KAnonymityHistogramBucket"
    },
    "GooglePrivacyDlpV2PathElement": {
      "description": "A (kind, ID/name) pair used to construct a key path.\n\nIf either name or ID is set, the element is complete.\nIf neither is set, the element is incomplete.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the entity.\nA name matching regex `__.*__` is reserved/read-only.\nA name must not be more than 1500 bytes when UTF-8 encoded.\nCannot be `\"\"`.",
          "type": "string"
        },
        "kind": {
          "description": "The kind of the entity.\nA kind matching regex `__.*__` is reserved/read-only.\nA kind must not contain more than 1500 bytes when UTF-8 encoded.\nCannot be `\"\"`.",
          "type": "string"
        },
        "id": {
          "description": "The auto-allocated ID of the entity.\nNever equal to zero. Values less than zero are discouraged and may not\nbe supported in the future.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2PathElement"
    },
    "GooglePrivacyDlpV2ListJobTriggersResponse": {
      "description": "Response message for ListJobTriggers.",
      "type": "object",
      "properties": {
        "jobTriggers": {
          "description": "List of triggeredJobs, up to page_size in ListJobTriggersRequest.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2JobTrigger"
          }
        },
        "nextPageToken": {
          "description": "If the next page is available then the next page token to be used\nin following ListJobTriggers request.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2ListJobTriggersResponse"
    },
    "GooglePrivacyDlpV2Finding": {
      "description": "Represents a piece of potentially sensitive content.",
      "type": "object",
      "properties": {
        "infoType": {
          "description": "The type of content that might have been found.\nProvided if requested by the `InspectConfig`.",
          "$ref": "GooglePrivacyDlpV2InfoType"
        },
        "createTime": {
          "description": "Timestamp when finding was detected.",
          "format": "google-datetime",
          "type": "string"
        },
        "likelihood": {
          "description": "Estimate of how likely it is that the `info_type` is correct.",
          "type": "string",
          "enumDescriptions": [
            "Default value; information with all likelihoods is included.",
            "Few matching elements.",
            "",
            "Some matching elements.",
            "",
            "Many matching elements."
          ],
          "enum": [
            "LIKELIHOOD_UNSPECIFIED",
            "VERY_UNLIKELY",
            "UNLIKELY",
            "POSSIBLE",
            "LIKELY",
            "VERY_LIKELY"
          ]
        },
        "location": {
          "$ref": "GooglePrivacyDlpV2Location",
          "description": "Where the content was found."
        },
        "quoteInfo": {
          "description": "Contains data parsed from quotes. Only populated if include_quote was set\nto true and a supported infoType was requested. Currently supported\ninfoTypes: DATE, DATE_OF_BIRTH and TIME.",
          "$ref": "GooglePrivacyDlpV2QuoteInfo"
        },
        "quote": {
          "description": "The content that was found. Even if the content is not textual, it\nmay be converted to a textual representation here.\nProvided if requested by the `InspectConfig` and the finding is\nless than or equal to 4096 bytes long. If the finding exceeds 4096 bytes\nin length, the quote may be omitted.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2Finding"
    },
    "GooglePrivacyDlpV2RecordLocation": {
      "description": "Location of a finding within a row or record.",
      "type": "object",
      "properties": {
        "tableLocation": {
          "description": "Location within a `ContentItem.Table`.",
          "$ref": "GooglePrivacyDlpV2TableLocation"
        },
        "recordKey": {
          "description": "Key of the finding.",
          "$ref": "GooglePrivacyDlpV2RecordKey"
        },
        "fieldId": {
          "description": "Field id of the field containing the finding.",
          "$ref": "GooglePrivacyDlpV2FieldId"
        }
      },
      "id": "GooglePrivacyDlpV2RecordLocation"
    },
    "GoogleTypeDate": {
      "description": "Represents a whole calendar date, e.g. date of birth. The time of day and\ntime zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. The day may be 0 to\nrepresent a year and month where the day is not significant, e.g. credit card\nexpiration date. The year may be 0 to represent a month and day independent\nof year, e.g. anniversary date. Related types are google.type.TimeOfDay\nand `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "description": "Month of year. Must be from 1 to 12.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleTypeDate"
    },
    "GooglePrivacyDlpV2DatastoreOptions": {
      "description": "Options defining a data set within Google Cloud Datastore.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind to process.",
          "$ref": "GooglePrivacyDlpV2KindExpression"
        },
        "partitionId": {
          "$ref": "GooglePrivacyDlpV2PartitionId",
          "description": "A partition ID identifies a grouping of entities. The grouping is always\nby project and namespace, however the namespace ID may be empty."
        }
      },
      "id": "GooglePrivacyDlpV2DatastoreOptions"
    },
    "GooglePrivacyDlpV2AuxiliaryTable": {
      "description": "An auxiliary table contains statistical information on the relative\nfrequency of different quasi-identifiers values. It has one or several\nquasi-identifiers columns, and one column that indicates the relative\nfrequency of each quasi-identifier tuple.\nIf a tuple is present in the data but not in the auxiliary table, the\ncorresponding relative frequency is assumed to be zero (and thus, the\ntuple is highly reidentifiable).",
      "type": "object",
      "properties": {
        "table": {
          "description": "Auxiliary table location. [required]",
          "$ref": "GooglePrivacyDlpV2BigQueryTable"
        },
        "quasiIds": {
          "description": "Quasi-identifier columns. [required]",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2QuasiIdField"
          }
        },
        "relativeFrequency": {
          "$ref": "GooglePrivacyDlpV2FieldId",
          "description": "The relative frequency column must contain a floating-point number\nbetween 0 and 1 (inclusive). Null values are assumed to be zero.\n[required]"
        }
      },
      "id": "GooglePrivacyDlpV2AuxiliaryTable"
    },
    "GooglePrivacyDlpV2beta1EntityId": {
      "description": "An entity in a dataset is a field or set of fields that correspond to a\nsingle person. For example, in medical records the `EntityId` might be\na patient identifier, or for financial records it might be an account\nidentifier. This message is used when generalizations or analysis must be\nconsistent across multiple rows pertaining to the same entity.",
      "type": "object",
      "properties": {
        "field": {
          "description": "Composite key indicating which field contains the entity identifier.",
          "$ref": "GooglePrivacyDlpV2beta1FieldId"
        }
      },
      "id": "GooglePrivacyDlpV2beta1EntityId"
    },
    "GooglePrivacyDlpV2KMapEstimationHistogramBucket": {
      "description": "A KMapEstimationHistogramBucket message with the following values:\n  min_anonymity: 3\n  max_anonymity: 5\n  frequency: 42\nmeans that there are 42 records whose quasi-identifier values correspond\nto 3, 4 or 5 people in the overlying population. An important particular\ncase is when min_anonymity = max_anonymity = 1: the frequency field then\ncorresponds to the number of uniquely identifiable records.",
      "type": "object",
      "properties": {
        "bucketValues": {
          "description": "Sample of quasi-identifier tuple values in this bucket. The total\nnumber of classes returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2KMapEstimationQuasiIdValues"
          }
        },
        "minAnonymity": {
          "description": "Always positive.",
          "format": "int64",
          "type": "string"
        },
        "maxAnonymity": {
          "description": "Always greater than or equal to min_anonymity.",
          "format": "int64",
          "type": "string"
        },
        "bucketSize": {
          "description": "Number of records within these anonymity bounds.",
          "format": "int64",
          "type": "string"
        },
        "bucketValueCount": {
          "description": "Total number of distinct quasi-identifier tuple values in this bucket.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2KMapEstimationHistogramBucket"
    },
    "GooglePrivacyDlpV2beta1KMapEstimationQuasiIdValues": {
      "description": "A tuple of values for the quasi-identifier columns.",
      "type": "object",
      "properties": {
        "estimatedAnonymity": {
          "description": "The estimated anonymity for these quasi-identifier values.",
          "format": "int64",
          "type": "string"
        },
        "quasiIdsValues": {
          "description": "The quasi-identifier values.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1KMapEstimationQuasiIdValues"
    },
    "GooglePrivacyDlpV2TransformationOverview": {
      "description": "Overview of the modifications that occurred.",
      "type": "object",
      "properties": {
        "transformationSummaries": {
          "description": "Transformations applied to the dataset.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2TransformationSummary"
          }
        },
        "transformedBytes": {
          "description": "Total size in bytes that were transformed in some way.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2TransformationOverview"
    },
    "GooglePrivacyDlpV2InfoType": {
      "description": "Type of information detected by the API.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the information type.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2InfoType"
    },
    "GooglePrivacyDlpV2TaggedField": {
      "description": "A column with a semantic tag attached.",
      "type": "object",
      "properties": {
        "infoType": {
          "$ref": "GooglePrivacyDlpV2InfoType",
          "description": "A column can be tagged with a InfoType to use the relevant public\ndataset as a statistical model of population, if available. We\ncurrently support US ZIP codes, region codes, ages and genders.\nTo programmatically obtain the list of supported InfoTypes, use\nListInfoTypes with the supported_by=RISK_ANALYSIS filter."
        },
        "inferred": {
          "$ref": "GoogleProtobufEmpty",
          "description": "If no semantic tag is indicated, we infer the statistical model from\nthe distribution of values in the input data"
        },
        "field": {
          "description": "Identifies the column. [required]",
          "$ref": "GooglePrivacyDlpV2FieldId"
        },
        "customTag": {
          "description": "A column can be tagged with a custom tag. In this case, the user must\nindicate an auxiliary table that contains statistical information on\nthe possible values of this column (below).",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2TaggedField"
    },
    "GooglePrivacyDlpV2RiskAnalysisJobConfig": {
      "description": "Configuration for a risk analysis job.",
      "type": "object",
      "properties": {
        "privacyMetric": {
          "$ref": "GooglePrivacyDlpV2PrivacyMetric",
          "description": "Privacy metric to compute."
        },
        "actions": {
          "description": "Actions to execute at the completion of the job. Are executed in the order\nprovided.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Action"
          }
        },
        "sourceTable": {
          "$ref": "GooglePrivacyDlpV2BigQueryTable",
          "description": "Input dataset to compute metrics over."
        }
      },
      "id": "GooglePrivacyDlpV2RiskAnalysisJobConfig"
    },
    "GooglePrivacyDlpV2FieldId": {
      "description": "General identifier of a data field in a storage service.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name describing the field.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2FieldId"
    },
    "GooglePrivacyDlpV2beta1BigQueryTable": {
      "description": "Message defining the location of a BigQuery table. A table is uniquely\nidentified  by its project_id, dataset_id, and table_name. Within a query\na table is often referenced with a string in the format of:\n`\u003cproject_id\u003e:\u003cdataset_id\u003e.\u003ctable_id\u003e` or\n`\u003cproject_id\u003e.\u003cdataset_id\u003e.\u003ctable_id\u003e`.",
      "type": "object",
      "properties": {
        "tableId": {
          "description": "Name of the table.",
          "type": "string"
        },
        "projectId": {
          "description": "The Google Cloud Platform project ID of the project containing the table.\nIf omitted, project ID is inferred from the API call.",
          "type": "string"
        },
        "datasetId": {
          "description": "Dataset ID of the table.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1BigQueryTable"
    },
    "GooglePrivacyDlpV2ReplaceWithInfoTypeConfig": {
      "description": "Replace each matching finding with the name of the info_type.",
      "type": "object",
      "properties": {},
      "id": "GooglePrivacyDlpV2ReplaceWithInfoTypeConfig"
    },
    "GooglePrivacyDlpV2ReplaceValueConfig": {
      "description": "Replace each input value with a given `Value`.",
      "type": "object",
      "properties": {
        "newValue": {
          "$ref": "GooglePrivacyDlpV2Value",
          "description": "Value to replace it with."
        }
      },
      "id": "GooglePrivacyDlpV2ReplaceValueConfig"
    },
    "GooglePrivacyDlpV2beta1KindExpression": {
      "description": "A representation of a Datastore kind.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the kind.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1KindExpression"
    },
    "GooglePrivacyDlpV2TimeZone": {
      "type": "object",
      "properties": {
        "offsetMinutes": {
          "description": "Set only if the offset can be determined. Positive for time ahead of UTC.\nE.g. For \"UTC-9\", this value is -540.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GooglePrivacyDlpV2TimeZone"
    },
    "GooglePrivacyDlpV2CryptoKey": {
      "description": "This is a data encryption key (DEK) (as opposed to\na key encryption key (KEK) stored by KMS).\nWhen using KMS to wrap/unwrap DEKs, be sure to set an appropriate\nIAM policy on the KMS CryptoKey (KEK) to ensure an attacker cannot\nunwrap the data crypto key.",
      "type": "object",
      "properties": {
        "transient": {
          "$ref": "GooglePrivacyDlpV2TransientCryptoKey"
        },
        "kmsWrapped": {
          "$ref": "GooglePrivacyDlpV2KmsWrappedCryptoKey"
        },
        "unwrapped": {
          "$ref": "GooglePrivacyDlpV2UnwrappedCryptoKey"
        }
      },
      "id": "GooglePrivacyDlpV2CryptoKey"
    },
    "GooglePrivacyDlpV2TimespanConfig": {
      "description": "Configuration of the timespan of the items to include in scanning.\nCurrently only supported when inspecting Google Cloud Storage and BigQuery.",
      "type": "object",
      "properties": {
        "timestampField": {
          "description": "Specification of the field containing the timestamp of scanned items.\nRequired for data sources like Datastore or BigQuery.\nThe valid data types of the timestamp field are:\nfor BigQuery - timestamp, date, datetime;\nfor Datastore - timestamp.\nDatastore entity will be scanned if the timestamp property does not exist\nor its value is empty or invalid.",
          "$ref": "GooglePrivacyDlpV2FieldId"
        },
        "endTime": {
          "description": "Exclude files newer than this value.\nIf set to zero, no upper time limit is applied.",
          "format": "google-datetime",
          "type": "string"
        },
        "enableAutoPopulationOfTimespanConfig": {
          "description": "When the job is started by a JobTrigger we will automatically figure out\na valid start_time to avoid scanning files that have not been modified\nsince the last time the JobTrigger executed. This will be based on the\ntime of the execution of the last run of the JobTrigger.",
          "type": "boolean"
        },
        "startTime": {
          "description": "Exclude files older than this value.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2TimespanConfig"
    },
    "GooglePrivacyDlpV2InspectContentRequest": {
      "description": "Request to search for potentially sensitive info in a ContentItem.",
      "type": "object",
      "properties": {
        "item": {
          "description": "The item to inspect.",
          "$ref": "GooglePrivacyDlpV2ContentItem"
        },
        "inspectConfig": {
          "$ref": "GooglePrivacyDlpV2InspectConfig",
          "description": "Configuration for the inspector. What specified here will override\nthe template referenced by the inspect_template_name argument."
        },
        "inspectTemplateName": {
          "description": "Optional template to use. Any configuration directly specified in\ninspect_config will override those set in the template. Singular fields\nthat are set in this request will replace their corresponding fields in the\ntemplate. Repeated fields are appended. Singular sub-messages and groups\nare recursively merged.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2InspectContentRequest"
    },
    "GooglePrivacyDlpV2HotwordRule": {
      "description": "Detection rule that adjusts the likelihood of findings within a certain\nproximity of hotwords.",
      "type": "object",
      "properties": {
        "likelihoodAdjustment": {
          "description": "Likelihood adjustment to apply to all matching findings.",
          "$ref": "GooglePrivacyDlpV2LikelihoodAdjustment"
        },
        "hotwordRegex": {
          "$ref": "GooglePrivacyDlpV2Regex",
          "description": "Regex pattern defining what qualifies as a hotword."
        },
        "proximity": {
          "description": "Proximity of the finding within which the entire hotword must reside.\nThe total length of the window cannot exceed 1000 characters. Note that\nthe finding itself will be included in the window, so that hotwords may\nbe used to match substrings of the finding itself. For example, the\ncertainty of a phone number regex \"\\(\\d{3}\\) \\d{3}-\\d{4}\" could be\nadjusted upwards if the area code is known to be the local area code of\na company office using the hotword regex \"\\(xxx\\)\", where \"xxx\"\nis the area code in question.",
          "$ref": "GooglePrivacyDlpV2Proximity"
        }
      },
      "id": "GooglePrivacyDlpV2HotwordRule"
    },
    "GooglePrivacyDlpV2Regex": {
      "description": "Message defining a custom regular expression.",
      "type": "object",
      "properties": {
        "pattern": {
          "description": "Pattern defining the regular expression.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2Regex"
    },
    "GooglePrivacyDlpV2DeidentifyContentResponse": {
      "description": "Results of de-identifying a ContentItem.",
      "type": "object",
      "properties": {
        "item": {
          "$ref": "GooglePrivacyDlpV2ContentItem",
          "description": "The de-identified item."
        },
        "overview": {
          "$ref": "GooglePrivacyDlpV2TransformationOverview",
          "description": "An overview of the changes that were made on the `item`."
        }
      },
      "id": "GooglePrivacyDlpV2DeidentifyContentResponse"
    },
    "GooglePrivacyDlpV2beta1KAnonymityConfig": {
      "description": "k-anonymity metric, used for analysis of reidentification risk.",
      "type": "object",
      "properties": {
        "quasiIds": {
          "description": "Set of fields to compute k-anonymity over. When multiple fields are\nspecified, they are considered a single composite key. Structs and\nrepeated data types are not supported; however, nested fields are\nsupported so long as they are not structs themselves or nested within\na repeated field.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1FieldId"
          }
        },
        "entityId": {
          "$ref": "GooglePrivacyDlpV2beta1EntityId",
          "description": "Optional message indicating that each distinct entity_id should not\ncontribute to the k-anonymity count more than once per equivalence class.\nIf an entity_id appears on several rows with different quasi-identifier\ntuples, it will contribute to each count exactly once.\n\nThis can lead to unexpected results. Consider a table where ID 1 is\nassociated to quasi-identifier \"foo\", ID 2 to \"bar\", and ID 3 to *both*\nquasi-identifiers \"foo\" and \"bar\" (on separate rows), and where this ID\nis used as entity_id. Then, the anonymity value associated to ID 3 will\nbe 2, even if it is the only ID to be associated to both values \"foo\" and\n\"bar\"."
        }
      },
      "id": "GooglePrivacyDlpV2beta1KAnonymityConfig"
    },
    "GooglePrivacyDlpV2UpdateInspectTemplateRequest": {
      "description": "Request message for UpdateInspectTemplate.",
      "type": "object",
      "properties": {
        "updateMask": {
          "description": "Mask to control which fields get updated.",
          "format": "google-fieldmask",
          "type": "string"
        },
        "inspectTemplate": {
          "$ref": "GooglePrivacyDlpV2InspectTemplate",
          "description": "New InspectTemplate value."
        }
      },
      "id": "GooglePrivacyDlpV2UpdateInspectTemplateRequest"
    },
    "GooglePrivacyDlpV2CreateJobTriggerRequest": {
      "description": "Request message for CreateJobTrigger.",
      "type": "object",
      "properties": {
        "triggerId": {
          "description": "The trigger id can contain uppercase and lowercase letters,\nnumbers, and hyphens; that is, it must match the regular\nexpression: `[a-zA-Z\\\\d-]+`. The maximum length is 100\ncharacters. Can be empty to allow the system to generate one.",
          "type": "string"
        },
        "jobTrigger": {
          "$ref": "GooglePrivacyDlpV2JobTrigger",
          "description": "The JobTrigger to create."
        }
      },
      "id": "GooglePrivacyDlpV2CreateJobTriggerRequest"
    },
    "GooglePrivacyDlpV2KAnonymityEquivalenceClass": {
      "description": "The set of columns' values that share the same ldiversity value",
      "type": "object",
      "properties": {
        "equivalenceClassSize": {
          "description": "Size of the equivalence class, for example number of rows with the\nabove set of values.",
          "format": "int64",
          "type": "string"
        },
        "quasiIdsValues": {
          "description": "Set of values defining the equivalence class. One value per\nquasi-identifier column in the original KAnonymity metric message.\nThe order is always the same as the original request.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2KAnonymityEquivalenceClass"
    },
    "GooglePrivacyDlpV2NumericalStatsConfig": {
      "description": "Compute numerical stats over an individual column, including\nmin, max, and quantiles.",
      "type": "object",
      "properties": {
        "field": {
          "description": "Field to compute numerical stats on. Supported types are\ninteger, float, date, datetime, timestamp, time.",
          "$ref": "GooglePrivacyDlpV2FieldId"
        }
      },
      "id": "GooglePrivacyDlpV2NumericalStatsConfig"
    },
    "GooglePrivacyDlpV2DateShiftConfig": {
      "description": "Shifts dates by random number of days, with option to be consistent for the\nsame context.",
      "type": "object",
      "properties": {
        "cryptoKey": {
          "description": "Causes the shift to be computed based on this key and the context. This\nresults in the same shift for the same context and crypto_key.",
          "$ref": "GooglePrivacyDlpV2CryptoKey"
        },
        "upperBoundDays": {
          "description": "Range of shift in days. Actual shift will be selected at random within this\nrange (inclusive ends). Negative means shift to earlier in time. Must not\nbe more than 365250 days (1000 years) each direction.\n\nFor example, 3 means shift date to at most 3 days into the future.\n[Required]",
          "format": "int32",
          "type": "integer"
        },
        "context": {
          "description": "Points to the field that contains the context, for example, an entity id.\nIf set, must also set method. If set, shift will be consistent for the\ngiven context.",
          "$ref": "GooglePrivacyDlpV2FieldId"
        },
        "lowerBoundDays": {
          "description": "For example, -5 means shift date to at most 5 days back in the past.\n[Required]",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GooglePrivacyDlpV2DateShiftConfig"
    },
    "GooglePrivacyDlpV2ReidentifyContentResponse": {
      "description": "Results of re-identifying a item.",
      "type": "object",
      "properties": {
        "overview": {
          "description": "An overview of the changes that were made to the `item`.",
          "$ref": "GooglePrivacyDlpV2TransformationOverview"
        },
        "item": {
          "$ref": "GooglePrivacyDlpV2ContentItem",
          "description": "The re-identified item."
        }
      },
      "id": "GooglePrivacyDlpV2ReidentifyContentResponse"
    },
    "GooglePrivacyDlpV2beta1SurrogateType": {
      "description": "Message for detecting output from deidentification transformations\nsuch as\n[`CryptoReplaceFfxFpeConfig`](/dlp/docs/reference/rest/v2beta1/content/deidentify#CryptoReplaceFfxFpeConfig).\nThese types of transformations are\nthose that perform pseudonymization, thereby producing a \"surrogate\" as\noutput. This should be used in conjunction with a field on the\ntransformation such as `surrogate_info_type`. This custom info type does\nnot support the use of `detection_rules`.",
      "type": "object",
      "properties": {},
      "id": "GooglePrivacyDlpV2beta1SurrogateType"
    },
    "GooglePrivacyDlpV2ValueFrequency": {
      "description": "A value of a field, including its frequency.",
      "type": "object",
      "properties": {
        "count": {
          "description": "How many times the value is contained in the field.",
          "format": "int64",
          "type": "string"
        },
        "value": {
          "description": "A value contained in the field in question.",
          "$ref": "GooglePrivacyDlpV2Value"
        }
      },
      "id": "GooglePrivacyDlpV2ValueFrequency"
    },
    "GooglePrivacyDlpV2beta1InfoTypeLimit": {
      "description": "Max findings configuration per info type, per content item or long running\noperation.",
      "type": "object",
      "properties": {
        "infoType": {
          "description": "Type of information the findings limit applies to. Only one limit per\ninfo_type should be provided. If InfoTypeLimit does not have an\ninfo_type, the DLP API applies the limit against all info_types that are\nfound but not specified in another InfoTypeLimit.",
          "$ref": "GooglePrivacyDlpV2beta1InfoType"
        },
        "maxFindings": {
          "description": "Max findings limit for the given infoType.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InfoTypeLimit"
    },
    "GooglePrivacyDlpV2InfoTypeTransformation": {
      "description": "A transformation to apply to text that is identified as a specific\ninfo_type.",
      "type": "object",
      "properties": {
        "primitiveTransformation": {
          "$ref": "GooglePrivacyDlpV2PrimitiveTransformation",
          "description": "Primitive transformation to apply to the infoType. [required]"
        },
        "infoTypes": {
          "description": "InfoTypes to apply the transformation to. Empty list will match all\navailable infoTypes for this transformation.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2InfoType"
          }
        }
      },
      "id": "GooglePrivacyDlpV2InfoTypeTransformation"
    },
    "GooglePrivacyDlpV2KMapEstimationQuasiIdValues": {
      "description": "A tuple of values for the quasi-identifier columns.",
      "type": "object",
      "properties": {
        "estimatedAnonymity": {
          "description": "The estimated anonymity for these quasi-identifier values.",
          "format": "int64",
          "type": "string"
        },
        "quasiIdsValues": {
          "description": "The quasi-identifier values.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2KMapEstimationQuasiIdValues"
    },
    "GooglePrivacyDlpV2beta1LDiversityHistogramBucket": {
      "description": "Histogram bucket of sensitive value frequencies in the table.",
      "type": "object",
      "properties": {
        "sensitiveValueFrequencyLowerBound": {
          "description": "Lower bound on the sensitive value frequencies of the equivalence\nclasses in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "bucketValues": {
          "description": "Sample of equivalence classes in this bucket. The total number of\nclasses returned per bucket is capped at 20.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1LDiversityEquivalenceClass"
          }
        },
        "bucketSize": {
          "description": "Total number of records in this bucket.",
          "format": "int64",
          "type": "string"
        },
        "sensitiveValueFrequencyUpperBound": {
          "description": "Upper bound on the sensitive value frequencies of the equivalence\nclasses in this bucket.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1LDiversityHistogramBucket"
    },
    "GooglePrivacyDlpV2ContentItem": {
      "description": "Container structure for the content to inspect.",
      "type": "object",
      "properties": {
        "table": {
          "description": "Structured content for inspection.",
          "$ref": "GooglePrivacyDlpV2Table"
        },
        "value": {
          "description": "String data to inspect or redact.",
          "type": "string"
        },
        "byteItem": {
          "$ref": "GooglePrivacyDlpV2ByteContentItem",
          "description": "Content data to inspect or redact. Replaces `type` and `data`."
        }
      },
      "id": "GooglePrivacyDlpV2ContentItem"
    },
    "GooglePrivacyDlpV2ImageLocation": {
      "description": "Location of the finding within an image.",
      "type": "object",
      "properties": {
        "boundingBoxes": {
          "description": "Bounding boxes locating the pixels within the image containing the finding.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2BoundingBox"
          }
        }
      },
      "id": "GooglePrivacyDlpV2ImageLocation"
    },
    "GooglePrivacyDlpV2Bucket": {
      "description": "Bucket is represented as a range, along with replacement values.",
      "type": "object",
      "properties": {
        "min": {
          "$ref": "GooglePrivacyDlpV2Value",
          "description": "Lower bound of the range, inclusive. Type should be the same as max if\nused."
        },
        "max": {
          "$ref": "GooglePrivacyDlpV2Value",
          "description": "Upper bound of the range, exclusive; type must match min."
        },
        "replacementValue": {
          "$ref": "GooglePrivacyDlpV2Value",
          "description": "Replacement value for this bucket. If not provided\nthe default behavior will be to hyphenate the min-max range."
        }
      },
      "id": "GooglePrivacyDlpV2Bucket"
    },
    "GooglePrivacyDlpV2TransformationSummary": {
      "description": "Summary of a single tranformation.\nOnly one of 'transformation', 'field_transformation', or 'record_suppress'\nwill be set.",
      "type": "object",
      "properties": {
        "transformedBytes": {
          "description": "Total size in bytes that were transformed in some way.",
          "format": "int64",
          "type": "string"
        },
        "recordSuppress": {
          "$ref": "GooglePrivacyDlpV2RecordSuppression",
          "description": "The specific suppression option these stats apply to."
        },
        "infoType": {
          "$ref": "GooglePrivacyDlpV2InfoType",
          "description": "Set if the transformation was limited to a specific info_type."
        },
        "transformation": {
          "description": "The specific transformation these stats apply to.",
          "$ref": "GooglePrivacyDlpV2PrimitiveTransformation"
        },
        "field": {
          "$ref": "GooglePrivacyDlpV2FieldId",
          "description": "Set if the transformation was limited to a specific FieldId."
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2SummaryResult"
          }
        },
        "fieldTransformations": {
          "description": "The field transformation that was applied.\nIf multiple field transformations are requested for a single field,\nthis list will contain all of them; otherwise, only one is supplied.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2FieldTransformation"
          }
        }
      },
      "id": "GooglePrivacyDlpV2TransformationSummary"
    },
    "GooglePrivacyDlpV2CreateInspectTemplateRequest": {
      "description": "Request message for CreateInspectTemplate.",
      "type": "object",
      "properties": {
        "templateId": {
          "description": "The template id can contain uppercase and lowercase letters,\nnumbers, and hyphens; that is, it must match the regular\nexpression: `[a-zA-Z\\\\d-]+`. The maximum length is 100\ncharacters. Can be empty to allow the system to generate one.",
          "type": "string"
        },
        "inspectTemplate": {
          "$ref": "GooglePrivacyDlpV2InspectTemplate",
          "description": "The InspectTemplate to create."
        }
      },
      "id": "GooglePrivacyDlpV2CreateInspectTemplateRequest"
    },
    "GooglePrivacyDlpV2beta1TaggedField": {
      "description": "A column with a semantic tag attached.",
      "type": "object",
      "properties": {
        "infoType": {
          "description": "A column can be tagged with a InfoType to use the relevant public\ndataset as a statistical model of population, if available. We\ncurrently support US ZIP codes, region codes, ages and genders.",
          "$ref": "GooglePrivacyDlpV2beta1InfoType"
        },
        "inferred": {
          "$ref": "GoogleProtobufEmpty",
          "description": "If no semantic tag is indicated, we infer the statistical model from\nthe distribution of values in the input data"
        },
        "field": {
          "description": "Identifies the column. [required]",
          "$ref": "GooglePrivacyDlpV2beta1FieldId"
        },
        "customTag": {
          "description": "A column can be tagged with a custom tag. In this case, the user must\nindicate an auxiliary table that contains statistical information on\nthe possible values of this column (below).",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1TaggedField"
    },
    "GooglePrivacyDlpV2InspectContentResponse": {
      "description": "Results of inspecting an item.",
      "type": "object",
      "properties": {
        "result": {
          "$ref": "GooglePrivacyDlpV2InspectResult",
          "description": "The findings."
        }
      },
      "id": "GooglePrivacyDlpV2InspectContentResponse"
    },
    "GooglePrivacyDlpV2FileSet": {
      "description": "Set of files to scan.",
      "type": "object",
      "properties": {
        "url": {
          "description": "The url, in the format `gs://\u003cbucket\u003e/\u003cpath\u003e`. Trailing wildcard in the\npath is allowed.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2FileSet"
    },
    "GooglePrivacyDlpV2LDiversityResult": {
      "description": "Result of the l-diversity computation.",
      "type": "object",
      "properties": {
        "sensitiveValueFrequencyHistogramBuckets": {
          "description": "Histogram of l-diversity equivalence class sensitive value frequencies.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2LDiversityHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2LDiversityResult"
    },
    "GooglePrivacyDlpV2OutputStorageConfig": {
      "description": "Cloud repository for storing output.",
      "type": "object",
      "properties": {
        "outputSchema": {
          "description": "Schema used for writing the findings. Columns are derived from the\n`Finding` object. If appending to an existing table, any columns from the\npredefined schema that are missing will be added. No columns in the\nexisting table will be deleted.\n\nIf unspecified, then all available columns will be used for a new table,\nand no changes will be made to an existing table.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Basic schema including only `info_type`, `quote`, `certainty`, and\n`timestamp`.",
            "Schema tailored to findings from scanning Google Cloud Storage.",
            "Schema tailored to findings from scanning Google Datastore.",
            "Schema tailored to findings from scanning Google BigQuery.",
            "Schema containing all columns."
          ],
          "enum": [
            "OUTPUT_SCHEMA_UNSPECIFIED",
            "BASIC_COLUMNS",
            "GCS_COLUMNS",
            "DATASTORE_COLUMNS",
            "BIG_QUERY_COLUMNS",
            "ALL_COLUMNS"
          ]
        },
        "table": {
          "description": "Store findings in an existing table or a new table in an existing\ndataset. Each column in an existing table must have the same name, type,\nand mode of a field in the `Finding` object. If table_id is not set a new\none will be generated for you with the following format:\ndlp_googleapis_yyyy_mm_dd_[dlp_job_id]. Pacific timezone will be used for\ngenerating the date details.",
          "$ref": "GooglePrivacyDlpV2BigQueryTable"
        }
      },
      "id": "GooglePrivacyDlpV2OutputStorageConfig"
    },
    "GooglePrivacyDlpV2SurrogateType": {
      "description": "Message for detecting output from deidentification transformations\nsuch as\n[`CryptoReplaceFfxFpeConfig`](/dlp/docs/reference/rest/v2/content/deidentify#CryptoReplaceFfxFpeConfig).\nThese types of transformations are\nthose that perform pseudonymization, thereby producing a \"surrogate\" as\noutput. This should be used in conjunction with a field on the\ntransformation such as `surrogate_info_type`. This custom info type does\nnot support the use of `detection_rules`.",
      "type": "object",
      "properties": {},
      "id": "GooglePrivacyDlpV2SurrogateType"
    },
    "GooglePrivacyDlpV2StorageConfig": {
      "description": "Shared message indicating Cloud storage type.",
      "type": "object",
      "properties": {
        "cloudStorageOptions": {
          "$ref": "GooglePrivacyDlpV2CloudStorageOptions",
          "description": "Google Cloud Storage options specification."
        },
        "datastoreOptions": {
          "$ref": "GooglePrivacyDlpV2DatastoreOptions",
          "description": "Google Cloud Datastore options specification."
        },
        "timespanConfig": {
          "$ref": "GooglePrivacyDlpV2TimespanConfig"
        },
        "bigQueryOptions": {
          "$ref": "GooglePrivacyDlpV2BigQueryOptions",
          "description": "BigQuery options specification."
        }
      },
      "id": "GooglePrivacyDlpV2StorageConfig"
    },
    "GooglePrivacyDlpV2Error": {
      "description": "Details information about an error encountered during job execution or\nthe results of an unsuccessful activation of the JobTrigger.\nOutput only field.",
      "type": "object",
      "properties": {
        "timestamps": {
          "description": "The times the error occurred.",
          "type": "array",
          "items": {
            "format": "google-datetime",
            "type": "string"
          }
        },
        "details": {
          "$ref": "GoogleRpcStatus"
        }
      },
      "id": "GooglePrivacyDlpV2Error"
    },
    "GooglePrivacyDlpV2UpdateJobTriggerRequest": {
      "description": "Request message for UpdateJobTrigger.",
      "type": "object",
      "properties": {
        "jobTrigger": {
          "description": "New JobTrigger value.",
          "$ref": "GooglePrivacyDlpV2JobTrigger"
        },
        "updateMask": {
          "description": "Mask to control which fields get updated.",
          "format": "google-fieldmask",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2UpdateJobTriggerRequest"
    },
    "GooglePrivacyDlpV2PublishToPubSub": {
      "description": "Publish the results of a DlpJob to a pub sub channel.\nCompatible with: Inpect, Risk",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Cloud Pub/Sub topic to send notifications to. The topic must have given\npublishing access rights to the DLP API service account executing\nthe long running DlpJob sending the notifications.\nFormat is projects/{project}/topics/{topic}.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2PublishToPubSub"
    },
    "GooglePrivacyDlpV2DlpJob": {
      "description": "Combines all of the information about a DLP job.",
      "type": "object",
      "properties": {
        "endTime": {
          "description": "Time when the job finished.",
          "format": "google-datetime",
          "type": "string"
        },
        "errors": {
          "description": "A stream of errors encountered running the job.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Error"
          }
        },
        "startTime": {
          "description": "Time when the job started.",
          "format": "google-datetime",
          "type": "string"
        },
        "inspectDetails": {
          "description": "Results from inspecting a data source.",
          "$ref": "GooglePrivacyDlpV2InspectDataSourceDetails"
        },
        "createTime": {
          "description": "Time when the job was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "jobTriggerName": {
          "description": "If created by a job trigger, the resource name of the trigger that\ninstantiated the job.",
          "type": "string"
        },
        "state": {
          "description": "State of a job.",
          "type": "string",
          "enumDescriptions": [
            "",
            "The job has not yet started.",
            "The job is currently running.",
            "The job is no longer running.",
            "The job was canceled before it could complete.",
            "The job had an error and did not complete."
          ],
          "enum": [
            "JOB_STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE",
            "CANCELED",
            "FAILED"
          ]
        },
        "riskDetails": {
          "description": "Results from analyzing risk of a data source.",
          "$ref": "GooglePrivacyDlpV2AnalyzeDataSourceRiskDetails"
        },
        "name": {
          "description": "The server-assigned name.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "",
            "The job inspected Google Cloud for sensitive data.",
            "The job executed a Risk Analysis computation."
          ],
          "enum": [
            "DLP_JOB_TYPE_UNSPECIFIED",
            "INSPECT_JOB",
            "RISK_ANALYSIS_JOB"
          ],
          "description": "The type of job.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2DlpJob"
    },
    "GooglePrivacyDlpV2ImageRedactionConfig": {
      "description": "Configuration for determining how redaction of images should occur.",
      "type": "object",
      "properties": {
        "redactionColor": {
          "$ref": "GooglePrivacyDlpV2Color",
          "description": "The color to use when redacting content from an image. If not specified,\nthe default is black."
        },
        "redactAllText": {
          "description": "If true, all text found in the image, regardless whether it matches an\ninfo_type, is redacted.",
          "type": "boolean"
        },
        "infoType": {
          "$ref": "GooglePrivacyDlpV2InfoType",
          "description": "Only one per info_type should be provided per request. If not\nspecified, and redact_all_text is false, the DLP API will redact all\ntext that it matches against all info_types that are found, but not\nspecified in another ImageRedactionConfig."
        }
      },
      "id": "GooglePrivacyDlpV2ImageRedactionConfig"
    },
    "GooglePrivacyDlpV2beta1InspectOperationMetadata": {
      "description": "Metadata returned within GetOperation for an inspect request.",
      "type": "object",
      "properties": {
        "infoTypeStats": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1InfoTypeStatistics"
          }
        },
        "totalEstimatedBytes": {
          "description": "Estimate of the number of bytes to process.",
          "format": "int64",
          "type": "string"
        },
        "requestInspectConfig": {
          "$ref": "GooglePrivacyDlpV2beta1InspectConfig",
          "description": "The inspect config used to create the Operation."
        },
        "requestOutputConfig": {
          "description": "Optional location to store findings.",
          "$ref": "GooglePrivacyDlpV2beta1OutputStorageConfig"
        },
        "createTime": {
          "description": "The time which this request was started.",
          "format": "google-datetime",
          "type": "string"
        },
        "requestStorageConfig": {
          "$ref": "GooglePrivacyDlpV2beta1StorageConfig",
          "description": "The storage config used to create the Operation."
        },
        "processedBytes": {
          "description": "Total size in bytes that were processed.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1InspectOperationMetadata"
    },
    "GooglePrivacyDlpV2RecordTransformations": {
      "description": "A type of transformation that is applied over structured data such as a\ntable.",
      "type": "object",
      "properties": {
        "recordSuppressions": {
          "description": "Configuration defining which records get suppressed entirely. Records that\nmatch any suppression rule are omitted from the output [optional].",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2RecordSuppression"
          }
        },
        "fieldTransformations": {
          "description": "Transform the record by applying various field transformations.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2FieldTransformation"
          }
        }
      },
      "id": "GooglePrivacyDlpV2RecordTransformations"
    },
    "GooglePrivacyDlpV2InfoTypeStats": {
      "description": "Statistics regarding a specific InfoType.",
      "type": "object",
      "properties": {
        "infoType": {
          "description": "The type of finding this stat is for.",
          "$ref": "GooglePrivacyDlpV2InfoType"
        },
        "count": {
          "description": "Number of findings for this infoType.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2InfoTypeStats"
    },
    "GooglePrivacyDlpV2Result": {
      "type": "object",
      "properties": {
        "totalEstimatedBytes": {
          "description": "Estimate of the number of bytes to process.",
          "format": "int64",
          "type": "string"
        },
        "infoTypeStats": {
          "description": "Statistics of how many instances of each info type were found during\ninspect job.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2InfoTypeStats"
          }
        },
        "processedBytes": {
          "description": "Total size in bytes that were processed.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2Result"
    },
    "GooglePrivacyDlpV2DateTime": {
      "description": "Message for a date time object.",
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "enumDescriptions": [
            "The unspecified day-of-week.",
            "The day-of-week of Monday.",
            "The day-of-week of Tuesday.",
            "The day-of-week of Wednesday.",
            "The day-of-week of Thursday.",
            "The day-of-week of Friday.",
            "The day-of-week of Saturday.",
            "The day-of-week of Sunday."
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ],
          "type": "string"
        },
        "time": {
          "$ref": "GoogleTypeTimeOfDay"
        },
        "date": {
          "$ref": "GoogleTypeDate",
          "description": "One or more of the following must be set. All fields are optional, but\nwhen set must be valid date or time values."
        },
        "timeZone": {
          "$ref": "GooglePrivacyDlpV2TimeZone"
        }
      },
      "id": "GooglePrivacyDlpV2DateTime"
    },
    "GooglePrivacyDlpV2RedactImageResponse": {
      "description": "Results of redacting an image.",
      "type": "object",
      "properties": {
        "redactedImage": {
          "description": "The redacted image. The type will be the same as the original image.",
          "format": "byte",
          "type": "string"
        },
        "extractedText": {
          "description": "If an image was being inspected and the InspectConfig's include_quote was\nset to true, then this field will include all text, if any, that was found\nin the image.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2RedactImageResponse"
    },
    "GooglePrivacyDlpV2ContentLocation": {
      "description": "Findings container location data.",
      "type": "object",
      "properties": {
        "containerTimestamp": {
          "description": "Findings container modification timestamp, if applicable.\nFor Google Cloud Storage contains last file modification timestamp.\nFor BigQuery table contains last_modified_time property.\nFor Datastore - not populated.",
          "format": "google-datetime",
          "type": "string"
        },
        "containerName": {
          "description": "Name of the container where the finding is located.\nThe top level name is the source file name or table name. Nested names\ncould be absent if the embedded object has no string identifier\n(for an example an image contained within a document).",
          "type": "string"
        },
        "recordLocation": {
          "description": "Location within a row or record of a database table.",
          "$ref": "GooglePrivacyDlpV2RecordLocation"
        },
        "imageLocation": {
          "description": "Location within an image's pixels.",
          "$ref": "GooglePrivacyDlpV2ImageLocation"
        },
        "documentLocation": {
          "$ref": "GooglePrivacyDlpV2DocumentLocation",
          "description": "Location data for document files."
        },
        "containerVersion": {
          "description": "Findings container version, if available\n(\"generation\" for Google Cloud Storage).",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2ContentLocation"
    },
    "GooglePrivacyDlpV2RedactConfig": {
      "description": "Redact a given value. For example, if used with an `InfoTypeTransformation`\ntransforming PHONE_NUMBER, and input 'My phone number is 206-555-0123', the\noutput would be 'My phone number is '.",
      "type": "object",
      "properties": {},
      "id": "GooglePrivacyDlpV2RedactConfig"
    },
    "GooglePrivacyDlpV2beta1KMapEstimationConfig": {
      "description": "Reidentifiability metric. This corresponds to a risk model similar to what\nis called \"journalist risk\" in the literature, except the attack dataset is\nstatistically modeled instead of being perfectly known. This can be done\nusing publicly available data (like the US Census), or using a custom\nstatistical model (indicated as one or several BigQuery tables), or by\nextrapolating from the distribution of values in the input dataset.",
      "type": "object",
      "properties": {
        "auxiliaryTables": {
          "description": "Several auxiliary tables can be used in the analysis. Each custom_tag\nused to tag a quasi-identifiers column must appear in exactly one column\nof one auxiliary table.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1AuxiliaryTable"
          }
        },
        "quasiIds": {
          "description": "Fields considered to be quasi-identifiers. No two columns can have the\nsame tag. [required]",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1TaggedField"
          }
        },
        "regionCode": {
          "description": "ISO 3166-1 alpha-2 region code to use in the statistical modeling.\nRequired if no column is tagged with a region-specific InfoType (like\nUS_ZIP_5) or a region code.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2beta1KMapEstimationConfig"
    },
    "GooglePrivacyDlpV2Schedule": {
      "description": "Schedule for triggeredJobs.",
      "type": "object",
      "properties": {
        "recurrencePeriodDuration": {
          "description": "With this option a job is started a regular periodic basis. For\nexample: every 10 minutes.\n\nA scheduled start time will be skipped if the previous\nexecution has not ended when its scheduled time occurs.\n\nThis value must be set to a time duration greater than or equal\nto 60 minutes and can be no longer than 60 days.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2Schedule"
    },
    "GooglePrivacyDlpV2ListDeidentifyTemplatesResponse": {
      "description": "Response message for ListDeidentifyTemplates.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "If the next page is available then the next page token to be used\nin following ListDeidentifyTemplates request.",
          "type": "string"
        },
        "deidentifyTemplates": {
          "description": "List of deidentify templates, up to page_size in\nListDeidentifyTemplatesRequest.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2DeidentifyTemplate"
          }
        }
      },
      "id": "GooglePrivacyDlpV2ListDeidentifyTemplatesResponse"
    },
    "GooglePrivacyDlpV2Row": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Value"
          }
        }
      },
      "id": "GooglePrivacyDlpV2Row"
    },
    "GooglePrivacyDlpV2QuasiIdField": {
      "description": "A quasi-identifier column has a custom_tag, used to know which column\nin the data corresponds to which column in the statistical model.",
      "type": "object",
      "properties": {
        "field": {
          "$ref": "GooglePrivacyDlpV2FieldId"
        },
        "customTag": {
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2QuasiIdField"
    },
    "GooglePrivacyDlpV2BigQueryTable": {
      "description": "Message defining the location of a BigQuery table. A table is uniquely\nidentified  by its project_id, dataset_id, and table_name. Within a query\na table is often referenced with a string in the format of:\n`\u003cproject_id\u003e:\u003cdataset_id\u003e.\u003ctable_id\u003e` or\n`\u003cproject_id\u003e.\u003cdataset_id\u003e.\u003ctable_id\u003e`.",
      "type": "object",
      "properties": {
        "tableId": {
          "description": "Name of the table.",
          "type": "string"
        },
        "projectId": {
          "description": "The Google Cloud Platform project ID of the project containing the table.\nIf omitted, project ID is inferred from the API call.",
          "type": "string"
        },
        "datasetId": {
          "description": "Dataset ID of the table.",
          "type": "string"
        }
      },
      "id": "GooglePrivacyDlpV2BigQueryTable"
    },
    "GooglePrivacyDlpV2PrimitiveTransformation": {
      "description": "A rule for transforming a value.",
      "type": "object",
      "properties": {
        "dateShiftConfig": {
          "$ref": "GooglePrivacyDlpV2DateShiftConfig"
        },
        "characterMaskConfig": {
          "$ref": "GooglePrivacyDlpV2CharacterMaskConfig"
        },
        "redactConfig": {
          "$ref": "GooglePrivacyDlpV2RedactConfig"
        },
        "bucketingConfig": {
          "$ref": "GooglePrivacyDlpV2BucketingConfig"
        },
        "replaceWithInfoTypeConfig": {
          "$ref": "GooglePrivacyDlpV2ReplaceWithInfoTypeConfig"
        },
        "cryptoHashConfig": {
          "$ref": "GooglePrivacyDlpV2CryptoHashConfig"
        },
        "cryptoReplaceFfxFpeConfig": {
          "$ref": "GooglePrivacyDlpV2CryptoReplaceFfxFpeConfig"
        },
        "replaceConfig": {
          "$ref": "GooglePrivacyDlpV2ReplaceValueConfig"
        },
        "timePartConfig": {
          "$ref": "GooglePrivacyDlpV2TimePartConfig"
        },
        "fixedSizeBucketingConfig": {
          "$ref": "GooglePrivacyDlpV2FixedSizeBucketingConfig"
        }
      },
      "id": "GooglePrivacyDlpV2PrimitiveTransformation"
    },
    "GooglePrivacyDlpV2InspectResult": {
      "description": "All the findings for a single scanned item.",
      "type": "object",
      "properties": {
        "findingsTruncated": {
          "description": "If true, then this item might have more findings than were returned,\nand the findings returned are an arbitrary subset of all findings.\nThe findings list might be truncated because the input items were too\nlarge, or because the server reached the maximum amount of resources\nallowed for a single API call. For best results, divide the input into\nsmaller batches.",
          "type": "boolean"
        },
        "findings": {
          "description": "List of findings for an item.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2Finding"
          }
        }
      },
      "id": "GooglePrivacyDlpV2InspectResult"
    },
    "GooglePrivacyDlpV2Dictionary": {
      "description": "Custom information type based on a dictionary of words or phrases. This can\nbe used to match sensitive information specific to the data, such as a list\nof employee IDs or job titles.\n\nDictionary words are case-insensitive and all characters other than letters\nand digits in the unicode [Basic Multilingual\nPlane](https://en.wikipedia.org/wiki/Plane_%28Unicode%29#Basic_Multilingual_Plane)\nwill be replaced with whitespace when scanning for matches, so the\ndictionary phrase \"Sam Johnson\" will match all three phrases \"sam johnson\",\n\"Sam, Johnson\", and \"Sam (Johnson)\". Additionally, the characters\nsurrounding any match must be of a different type than the adjacent\ncharacters within the word, so letters must be next to non-letters and\ndigits next to non-digits. For example, the dictionary word \"jen\" will\nmatch the first three letters of the text \"jen123\" but will return no\nmatches for \"jennifer\".\n\nDictionary words containing a large number of characters that are not\nletters or digits may result in unexpected findings because such characters\nare treated as whitespace.",
      "type": "object",
      "properties": {
        "wordList": {
          "$ref": "GooglePrivacyDlpV2WordList",
          "description": "List of words or phrases to search for."
        }
      },
      "id": "GooglePrivacyDlpV2Dictionary"
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "GoogleProtobufEmpty"
    },
    "GooglePrivacyDlpV2TimePartConfig": {
      "description": "For use with `Date`, `Timestamp`, and `TimeOfDay`, extract or preserve a\nportion of the value.",
      "type": "object",
      "properties": {
        "partToExtract": {
          "type": "string",
          "enumDescriptions": [
            "",
            "[0-9999]",
            "[1-12]",
            "[1-31]",
            "[1-7]",
            "[1-52]",
            "[0-23]"
          ],
          "enum": [
            "TIME_PART_UNSPECIFIED",
            "YEAR",
            "MONTH",
            "DAY_OF_MONTH",
            "DAY_OF_WEEK",
            "WEEK_OF_YEAR",
            "HOUR_OF_DAY"
          ]
        }
      },
      "id": "GooglePrivacyDlpV2TimePartConfig"
    },
    "GooglePrivacyDlpV2beta1LDiversityResult": {
      "description": "Result of the l-diversity computation.",
      "type": "object",
      "properties": {
        "sensitiveValueFrequencyHistogramBuckets": {
          "description": "Histogram of l-diversity equivalence class sensitive value frequencies.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1LDiversityHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1LDiversityResult"
    },
    "GooglePrivacyDlpV2beta1CategoricalStatsResult": {
      "description": "Result of the categorical stats computation.",
      "type": "object",
      "properties": {
        "valueFrequencyHistogramBuckets": {
          "description": "Histogram of value frequencies in the column.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2beta1CategoricalStatsHistogramBucket"
          }
        }
      },
      "id": "GooglePrivacyDlpV2beta1CategoricalStatsResult"
    },
    "GooglePrivacyDlpV2RecordSuppression": {
      "description": "Configuration to suppress records whose suppression conditions evaluate to\ntrue.",
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "GooglePrivacyDlpV2RecordCondition",
          "description": "A condition that when it evaluates to true will result in the record being\nevaluated to be suppressed from the transformed content."
        }
      },
      "id": "GooglePrivacyDlpV2RecordSuppression"
    },
    "GooglePrivacyDlpV2KAnonymityConfig": {
      "description": "k-anonymity metric, used for analysis of reidentification risk.",
      "type": "object",
      "properties": {
        "quasiIds": {
          "description": "Set of fields to compute k-anonymity over. When multiple fields are\nspecified, they are considered a single composite key. Structs and\nrepeated data types are not supported; however, nested fields are\nsupported so long as they are not structs themselves or nested within\na repeated field.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2FieldId"
          }
        }
      },
      "id": "GooglePrivacyDlpV2KAnonymityConfig"
    },
    "GooglePrivacyDlpV2FindingLimits": {
      "type": "object",
      "properties": {
        "maxFindingsPerItem": {
          "description": "Max number of findings that will be returned for each item scanned.\nWhen set within `InspectDataSourceRequest`,\nthe maximum returned is 1000 regardless if this is set higher.\nWhen set within `InspectContentRequest`, this field is ignored.",
          "format": "int32",
          "type": "integer"
        },
        "maxFindingsPerRequest": {
          "description": "Max number of findings that will be returned per request/job.\nWhen set within `InspectContentRequest`, the maximum returned is 1000\nregardless if this is set higher.",
          "format": "int32",
          "type": "integer"
        },
        "maxFindingsPerInfoType": {
          "description": "Configuration of findings limit given for specified infoTypes.",
          "type": "array",
          "items": {
            "$ref": "GooglePrivacyDlpV2InfoTypeLimit"
          }
        }
      },
      "id": "GooglePrivacyDlpV2FindingLimits"
    },
    "GoogleTypeTimeOfDay": {
      "description": "Represents a time of day. The date and time zone are either not significant\nor are specified elsewhere. An API may choose to allow leap seconds. Related\ntypes are google.type.Date and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose\nto allow the value \"24:00:00\" for scenarios like business closing time.",
          "format": "int32",
          "type": "integer"
        },
        "nanos": {
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "format": "int32",
          "type": "integer"
        },
        "seconds": {
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may\nallow the value 60 if it allows leap-seconds.",
          "format": "int32",
          "type": "integer"
        },
        "minutes": {
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "GoogleTypeTimeOfDay"
    },
    "GooglePrivacyDlpV2Value": {
      "description": "Set of primitive values supported by the system.\nNote that for the purposes of inspection or transformation, the number\nof bytes considered to comprise a 'Value' is based on its representation\nas a UTF-8 encoded string. For example, if 'integer_value' is set to\n123456789, the number of bytes would be counted as 9, even though an\nint64 only holds up to 8 bytes of data.",
      "type": "object",
      "properties": {
        "timeValue": {
          "$ref": "GoogleTypeTimeOfDay"
        },
        "integerValue": {
          "format": "int64",
          "type": "string"
        },
        "stringValue": {
          "type": "string"
        },
        "dateValue": {
          "$ref": "GoogleTypeDate"
        },
        "dayOfWeekValue": {
          "type": "string",
          "enumDescriptions": [
            "The unspecified day-of-week.",
            "The day-of-week of Monday.",
            "The day-of-week of Tuesday.",
            "The day-of-week of Wednesday.",
            "The day-of-week of Thursday.",
            "The day-of-week of Friday.",
            "The day-of-week of Saturday.",
            "The day-of-week of Sunday."
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        },
        "timestampValue": {
          "format": "google-datetime",
          "type": "string"
        },
        "booleanValue": {
          "type": "boolean"
        },
        "floatValue": {
          "format": "double",
          "type": "number"
        }
      },
      "id": "GooglePrivacyDlpV2Value"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "DLP",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  }
}
