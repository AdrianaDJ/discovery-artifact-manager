{
  "protocol": "rest",
  "rootUrl": "https://sasportal.googleapis.com/",
  "title": "SAS Portal API",
  "mtlsRootUrl": "https://sasportal.mtls.googleapis.com/",
  "basePath": "",
  "discoveryVersion": "v1",
  "ownerDomain": "google.com",
  "version_module": true,
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "baseUrl": "https://sasportal.googleapis.com/",
  "name": "sasportal",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "description": "",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "servicePath": "",
  "resources": {
    "policies": {
      "methods": {
        "test": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/policies:test",
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "description": "Returns permissions that a caller has on the specified resource.",
          "parameterOrder": [],
          "path": "v1alpha1/policies:test",
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "httpMethod": "POST",
          "id": "sasportal.policies.test",
          "parameters": {}
        },
        "set": {
          "parameters": {},
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "parameterOrder": [],
          "flatPath": "v1alpha1/policies:set",
          "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          },
          "httpMethod": "POST",
          "id": "sasportal.policies.set",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/policies:set"
        },
        "get": {
          "flatPath": "v1alpha1/policies:get",
          "path": "v1alpha1/policies:get",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "httpMethod": "POST",
          "id": "sasportal.policies.get",
          "parameters": {}
        }
      }
    },
    "nodes": {
      "resources": {
        "devices": {
          "methods": {
            "bulk": {
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices:bulk",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:bulk",
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the parent resource."
                }
              },
              "id": "sasportal.nodes.devices.bulk",
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              }
            },
            "signDevice": {
              "description": "Signs a device.",
              "path": "v1alpha1/{+name}:signDevice",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "sasportal.nodes.devices.signDevice",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice"
            },
            "get": {
              "description": "Gets details about a device.",
              "id": "sasportal.nodes.devices.get",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "patch": {
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a device.",
              "id": "sasportal.nodes.devices.patch",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated."
                },
                "name": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "httpMethod": "PATCH"
            },
            "delete": {
              "description": "Deletes a device.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "id": "sasportal.nodes.devices.delete"
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000].",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from."
                },
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "id": "sasportal.nodes.devices.list",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "path": "v1alpha1/{+parent}/devices",
              "httpMethod": "GET",
              "description": "Lists devices under a node or customer."
            },
            "updateSigned": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PATCH",
              "id": "sasportal.nodes.devices.updateSigned",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a signed device.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "path": "v1alpha1/{+name}:updateSigned",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              }
            },
            "createSigned": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "description": "Creates a signed device under a\nnode or customer.",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "id": "sasportal.nodes.devices.createSigned",
              "parameterOrder": [
                "parent"
              ]
            },
            "create": {
              "description": "Creates a device under a node or customer.",
              "id": "sasportal.nodes.devices.create",
              "path": "v1alpha1/{+parent}/devices",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices"
            },
            "move": {
              "path": "v1alpha1/{+name}:move",
              "id": "sasportal.nodes.devices.move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to move."
                }
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "description": "Moves a device under another node or customer."
            }
          }
        },
        "nodes": {
          "methods": {
            "list": {
              "id": "sasportal.nodes.nodes.list",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "description": "The maximum number of nodes to return in the response.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "description": "Lists nodes."
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Deletes a node.",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the node.",
                  "required": true,
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                }
              },
              "id": "sasportal.nodes.nodes.delete",
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "move": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:move",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "description": "Moves a node under another node or customer.",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the node to\nmove."
                }
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "id": "sasportal.nodes.nodes.move"
            },
            "patch": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "path": "v1alpha1/{+name}",
              "id": "sasportal.nodes.nodes.patch",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PATCH",
              "description": "Updates an existing node.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "description": "Output only. Resource name.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "Fields to be updated."
                }
              },
              "request": {
                "$ref": "SasPortalNode"
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+name}",
              "id": "sasportal.nodes.nodes.get",
              "description": "Returns a requested node.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the node.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "description": "Creates a new node.",
              "request": {
                "$ref": "SasPortalNode"
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "id": "sasportal.nodes.nodes.create",
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name where the node is to be created.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "path": "v1alpha1/{+parent}/nodes",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ]
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "createSigned": {
                  "id": "sasportal.nodes.nodes.devices.createSigned",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "description": "Creates a signed device under a\nnode or customer.",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST"
                },
                "create": {
                  "path": "v1alpha1/{+parent}/devices",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "description": "Creates a device under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "sasportal.nodes.nodes.devices.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "list": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "sasportal.nodes.nodes.devices.list",
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "description": "Lists devices under a node or customer.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000]."
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive."
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "bulk": {
                  "response": {
                    "$ref": "SasPortalBulkCreateDeviceResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "id": "sasportal.nodes.nodes.devices.bulk",
                  "request": {
                    "$ref": "SasPortalBulkCreateDeviceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices:bulk",
                  "description": "Creates a device under a node or customer. Returned devices are unordered.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:bulk",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "nodes": {
              "methods": {
                "create": {
                  "path": "v1alpha1/{+parent}/nodes",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "httpMethod": "POST",
                  "id": "sasportal.nodes.nodes.nodes.create",
                  "description": "Creates a new node.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource name where the node is to be created."
                    }
                  },
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes"
                },
                "list": {
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "description": "Lists nodes.",
                  "id": "sasportal.nodes.nodes.nodes.list",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of nodes to return in the response.",
                      "location": "query"
                    }
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                }
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "response": {
            "$ref": "SasPortalNode"
          },
          "httpMethod": "GET",
          "description": "Returns a requested node.",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "path": "v1alpha1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameters": {
            "name": {
              "description": "Required. The name of the node.",
              "pattern": "^nodes/[^/]+$",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "id": "sasportal.nodes.get",
          "parameterOrder": [
            "name"
          ]
        }
      }
    },
    "customers": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "id": "sasportal.customers.get",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Returns a requested customer.",
          "flatPath": "v1alpha1/customers/{customersId}",
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^customers/[^/]+$",
              "type": "string",
              "description": "Required. The name of the customer.",
              "required": true
            }
          },
          "path": "v1alpha1/{+name}",
          "response": {
            "$ref": "SasPortalCustomer"
          }
        },
        "list": {
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "sasportal.customers.list",
          "parameters": {
            "pageSize": {
              "type": "integer",
              "description": "The maximum number of customers\nto return in the response.",
              "location": "query",
              "format": "int32"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A pagination token returned from a previous call to ListCustomers method that indicates where\nthis listing should continue from."
            }
          },
          "description": "Returns a list of requested customers.",
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "httpMethod": "GET",
          "path": "v1alpha1/customers",
          "flatPath": "v1alpha1/customers"
        },
        "patch": {
          "flatPath": "v1alpha1/customers/{customersId}",
          "parameters": {
            "updateMask": {
              "description": "Fields to be updated.",
              "type": "string",
              "format": "google-fieldmask",
              "location": "query"
            },
            "name": {
              "pattern": "^customers/[^/]+$",
              "description": "Output only. Resource name of the customer.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "id": "sasportal.customers.patch",
          "httpMethod": "PATCH",
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/{+name}",
          "description": "Updates an existing customer.",
          "response": {
            "$ref": "SasPortalCustomer"
          }
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "list": {
              "path": "v1alpha1/{+parent}/devices",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "id": "sasportal.customers.devices.list",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "description": "Lists devices under a node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000].",
                  "type": "integer",
                  "format": "int32"
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive.",
                  "location": "query",
                  "type": "string"
                }
              }
            },
            "bulk": {
              "path": "v1alpha1/{+parent}/devices:bulk",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The name of the parent resource."
                }
              },
              "httpMethod": "POST",
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "id": "sasportal.customers.devices.bulk",
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices:bulk",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "createSigned": {
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "id": "sasportal.customers.devices.createSigned",
              "description": "Creates a signed device under a\nnode or customer.",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              }
            },
            "create": {
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+parent}/devices",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "id": "sasportal.customers.devices.create",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates a device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "signDevice": {
              "description": "Signs a device.",
              "id": "sasportal.customers.devices.signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "path": "v1alpha1/{+name}:signDevice",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "sasportal.customers.devices.patch",
              "description": "Updates a device.",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "description": "Fields to be updated.",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH"
            },
            "updateSigned": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:updateSigned",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "description": "Updates a signed device.",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "sasportal.customers.devices.updateSigned"
            },
            "move": {
              "id": "sasportal.customers.devices.move",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the device to move.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "description": "Moves a device under another node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "httpMethod": "POST",
              "path": "v1alpha1/{+name}:move"
            },
            "get": {
              "description": "Gets details about a device.",
              "id": "sasportal.customers.devices.get",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true
                }
              }
            },
            "delete": {
              "httpMethod": "DELETE",
              "description": "Deletes a device.",
              "path": "v1alpha1/{+name}",
              "id": "sasportal.customers.devices.delete",
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            }
          }
        },
        "nodes": {
          "resources": {
            "nodes": {
              "methods": {
                "list": {
                  "description": "Lists nodes.",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from."
                    },
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of nodes to return in the response.",
                      "type": "integer",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "sasportal.customers.nodes.nodes.list",
                  "httpMethod": "GET"
                },
                "create": {
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "sasportal.customers.nodes.nodes.create",
                  "description": "Creates a new node."
                }
              }
            }
          },
          "methods": {
            "delete": {
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node.",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Deletes a node.",
              "id": "sasportal.customers.nodes.delete",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "move": {
              "path": "v1alpha1/{+name}:move",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "id": "sasportal.customers.nodes.move",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the node to\nmove.",
                  "location": "path"
                }
              },
              "description": "Moves a node under another node or customer."
            },
            "list": {
              "id": "sasportal.customers.nodes.list",
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of nodes to return in the response.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Lists nodes.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "path": "v1alpha1/{+parent}/nodes",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node.",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Returns a requested node.",
              "id": "sasportal.customers.nodes.get",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "response": {
                "$ref": "SasPortalNode"
              }
            },
            "create": {
              "request": {
                "$ref": "SasPortalNode"
              },
              "id": "sasportal.customers.nodes.create",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The parent resource name where the node is to be created.",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "path": "v1alpha1/{+parent}/nodes",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Creates a new node."
            },
            "patch": {
              "httpMethod": "PATCH",
              "description": "Updates an existing node.",
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+name}",
              "parameters": {
                "updateMask": {
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "required": true,
                  "description": "Output only. Resource name.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "type": "string"
                }
              },
              "id": "sasportal.customers.nodes.patch",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}"
            }
          }
        }
      }
    },
    "installer": {
      "methods": {
        "validate": {
          "httpMethod": "POST",
          "id": "sasportal.installer.validate",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "parameters": {},
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "flatPath": "v1alpha1/installer:validate",
          "path": "v1alpha1/installer:validate"
        },
        "generateSecret": {
          "id": "sasportal.installer.generateSecret",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "path": "v1alpha1/installer:generateSecret",
          "flatPath": "v1alpha1/installer:generateSecret",
          "description": "Generates a secret to be used with the ValidateInstaller method",
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "parameters": {},
          "parameterOrder": [],
          "httpMethod": "POST"
        }
      }
    }
  },
  "batchPath": "batch",
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "version": "v1alpha1",
  "revision": "20200601",
  "schemas": {
    "SasPortalListCustomersResponse": {
      "description": "Response for `ListCustomers`.",
      "id": "SasPortalListCustomersResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListCustomers method that indicates from\nwhere listing should continue. If the field is missing or empty, it means\nthere are no more customers.",
          "type": "string"
        },
        "customers": {
          "items": {
            "$ref": "SasPortalCustomer"
          },
          "description": "The list of customers that\nmatch the request.",
          "type": "array"
        }
      }
    },
    "SasPortalDeviceAirInterface": {
      "properties": {
        "radioTechnology": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "This field specifies the radio access technology that is used for the CBSD.\n\nConditional",
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ]
        },
        "supportedSpec": {
          "description": "This field is related to the radioTechnology field and provides the air\ninterface specification that the CBSD is compliant with at the time of\nregistration.\n\nOptional",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about the device's air interface.",
      "id": "SasPortalDeviceAirInterface"
    },
    "SasPortalTestPermissionsResponse": {
      "type": "object",
      "description": "Response message for `TestPermissions` method.",
      "id": "SasPortalTestPermissionsResponse",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of permissions that the caller is allowed."
        }
      }
    },
    "SasPortalDeviceGrant": {
      "id": "SasPortalDeviceGrant",
      "description": "Device grant. It is an authorization provided by the Spectrum\nAccess System to a device to transmit using specified operating\nparameters after a successful heartbeat by the device.",
      "properties": {
        "expireTime": {
          "type": "string",
          "description": "The expiration time of the grant.",
          "format": "google-datetime"
        },
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The transmission frequency range."
        },
        "moveList": {
          "type": "array",
          "items": {
            "$ref": "SasPortalDpaMoveList"
          },
          "description": "The DPA move lists on which this grant appears."
        },
        "suspensionReason": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "If the grant is suspended, the reason(s) for suspension."
        },
        "state": {
          "type": "string",
          "description": "State of the grant.",
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ],
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ]
        },
        "maxEirp": {
          "format": "double",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted\nby the grant. The maximum EIRP is in units of dBm/MHz. The\nvalue of maxEirp represents the average (RMS) EIRP that would be\nmeasured by the procedure defined in FCC part 96.41(e)(3).",
          "type": "number"
        },
        "channelType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ],
          "description": "Type of channel used."
        }
      },
      "type": "object"
    },
    "SasPortalEmpty": {
      "type": "object",
      "properties": {},
      "id": "SasPortalEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
    },
    "SasPortalDevice": {
      "id": "SasPortalDevice",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Device display name."
        },
        "preloadedConfig": {
          "description": "Configuration of the device, as specified via SAS Portal API.",
          "$ref": "SasPortalDeviceConfig"
        },
        "fccId": {
          "description": "The FCC identifier of the device.",
          "type": "string"
        },
        "serialNumber": {
          "type": "string",
          "description": "A serial number assigned to the device by the device\nmanufacturer."
        },
        "activeConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Output only. Current configuration of the device as registered to the SAS."
        },
        "state": {
          "type": "string",
          "description": "Output only. Device state.",
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ],
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered\nwith SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ]
        },
        "grants": {
          "type": "array",
          "description": "Output only. Grants held by the device.",
          "items": {
            "$ref": "SasPortalDeviceGrant"
          }
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource path name."
        }
      }
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "id": "SasPortalUpdateSignedDeviceRequest",
      "description": "Request for UpdateSignedDevice method.",
      "properties": {
        "installerId": {
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional\nInstallers database.",
          "type": "string"
        },
        "encodedDevice": {
          "type": "string",
          "format": "byte",
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload\nmust be the JSON encoding\nof the device. The user_id field must be set."
        }
      },
      "type": "object"
    },
    "SasPortalSignDeviceRequest": {
      "description": "Request for SignDevice method.",
      "type": "object",
      "properties": {
        "device": {
          "$ref": "SasPortalDevice",
          "description": "Required. The device to sign.\nThe device fields name, fcc_id and serial_number must be set.\nThe user_id field must be set."
        }
      },
      "id": "SasPortalSignDeviceRequest"
    },
    "SasPortalCustomer": {
      "description": "Entity representing a SAS customer.",
      "id": "SasPortalCustomer",
      "properties": {
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "User IDs used by the devices belonging to this customer."
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the customer."
        },
        "displayName": {
          "type": "string",
          "description": "Required. Name of the organization that the customer entity represents."
        }
      },
      "type": "object"
    },
    "SasPortalBulkCreateDeviceResponse": {
      "properties": {
        "devices": {
          "type": "array",
          "description": "Required. The devices that were imported.",
          "items": {
            "$ref": "SasPortalDevice"
          }
        }
      },
      "description": "Response for BulkCreateDevice method.",
      "type": "object",
      "id": "SasPortalBulkCreateDeviceResponse"
    },
    "SasPortalGenerateSecretRequest": {
      "description": "Request for GenerateSecret method]\n[spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret].",
      "id": "SasPortalGenerateSecretRequest",
      "type": "object",
      "properties": {}
    },
    "SasPortalDpaMoveList": {
      "id": "SasPortalDpaMoveList",
      "description": "An entry in a DPA's move list.",
      "properties": {
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The frequency range that the move list affects."
        },
        "dpaId": {
          "description": "The ID of the DPA.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SasPortalMoveDeviceRequest": {
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource (Node or Customer) to\nreparent the device under.",
          "type": "string"
        }
      },
      "id": "SasPortalMoveDeviceRequest",
      "type": "object",
      "description": "Request for MoveDevice method."
    },
    "SasPortalOperation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."
        }
      },
      "type": "object",
      "id": "SasPortalOperation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call."
    },
    "SasPortalInstallationParams": {
      "description": "Information about the device installation parameters.",
      "id": "SasPortalInstallationParams",
      "type": "object",
      "properties": {
        "eirpCapability": {
          "type": "integer",
          "format": "int32",
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz\nand is an integer with a value between -127 and +47 (dBm/10 MHz)\ninclusive. If not included, SAS interprets it as maximum\nallowable EIRP in units of dBm/10MHz for device category."
        },
        "horizontalAccuracy": {
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device\nantenna horizontal location. This optional parameter should only\nbe present if its value is less than the FCC requirement of 50\nmeters.",
          "type": "number"
        },
        "antennaGain": {
          "format": "int32",
          "type": "integer",
          "description": "Peak antenna gain in dBi. This parameter is an integer with a\nvalue between -127 and +128 (dBi) inclusive."
        },
        "cpeCbsdIndication": {
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
          "type": "boolean"
        },
        "verticalAccuracy": {
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device\nantenna vertical location. This optional parameter should only be\npresent if its value is less than the FCC requirement of 3\nmeters.",
          "format": "double"
        },
        "height": {
          "format": "double",
          "type": "number",
          "description": "Device antenna height in meters. When the heightType parameter\nvalue is \"AGL\", the antenna height should be given relative to\nground level. When the heightType parameter value is \"AMSL\", it\nis given with respect to WGS84 datum."
        },
        "latitude": {
          "description": "Latitude of the device antenna location in degrees relative to\nthe WGS 84 datum. The allowed range is from -90.000000 to\n+90.000000. Positive values represent latitudes north of the\nequator; negative values south of the equator.",
          "format": "double",
          "type": "number"
        },
        "antennaBeamwidth": {
          "type": "integer",
          "format": "int32",
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in\ndegrees.  This parameter is an unsigned integer having a value\nbetween 0 and 360 (degrees) inclusive; it is optional for\nCategory A devices and conditional for Category B devices."
        },
        "antennaModel": {
          "description": "If an external antenna is used, the antenna model is optionally\nprovided in this field. The string has a maximum length of 128\noctets.",
          "type": "string"
        },
        "antennaDowntilt": {
          "format": "int32",
          "description": "Antenna downtilt in degrees and is an integer with a value\nbetween -90 and +90 inclusive; a negative value means the antenna\nis tilted up (above horizontal). This parameter is optional for\nCategory A devices and conditional for Category B devices.",
          "type": "integer"
        },
        "antennaAzimuth": {
          "description": "Boresight direction of the horizontal plane of the antenna in\ndegrees with respect to true north. The value of this parameter\nis an integer with a value between 0 and 359 inclusive. A value\nof 0 degrees means true north; a value of 90 degrees means\neast. This parameter is optional for Category A devices and\nconditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "indoorDeployment": {
          "description": "Whether the device antenna is indoor or not. True: indoor. False:\noutdoor.",
          "type": "boolean"
        },
        "longitude": {
          "description": "Longitude of the device antenna location. in degrees relative to\nthe WGS 84 datum. The allowed range is from -180.000000 to\n+180.000000. Positive values represent longitudes east of the\nprime meridian; negative values west of the prime\nmeridian.",
          "type": "number",
          "format": "double"
        },
        "heightType": {
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "description": "Specifies how the height is measured."
        }
      }
    },
    "SasPortalNode": {
      "properties": {
        "sasUserIds": {
          "description": "User ids used by the devices belonging to this node.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "The node's display name.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name."
        }
      },
      "type": "object",
      "description": "The Node.",
      "id": "SasPortalNode"
    },
    "SasPortalAssignment": {
      "description": "Associates `members` with a `role`.",
      "properties": {
        "role": {
          "type": "string",
          "description": "Required. Role that is assigned to `members`."
        },
        "members": {
          "description": "The identities the role is assigned to. It can have the following\nvalues:\n\n* `{user_email}`: An email address that represents a specific\n   Google account. For example: `alice@gmail.com`.\n\n* `{group_email}`: An email address that represents a Google\n   group.  For example, `viewers@gmail.com`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SasPortalAssignment",
      "type": "object"
    },
    "SasPortalGenerateSecretResponse": {
      "properties": {
        "secret": {
          "description": "The secret generated by the string and used by\n[ValidateInstaller] method.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalGenerateSecretResponse",
      "description": "Response for GenerateSecret method."
    },
    "SasPortalListDevicesResponse": {
      "description": "Response for ListDevices method.",
      "id": "SasPortalListDevicesResponse",
      "properties": {
        "devices": {
          "description": "The devices that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDevice"
          }
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDevices method\nthat indicates from where listing should continue. If the field\nis missing or empty, it means there is no more devices.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SasPortalCreateSignedDeviceRequest": {
      "id": "SasPortalCreateSignedDeviceRequest",
      "type": "object",
      "description": "Request for CreateSignedDevice method.",
      "properties": {
        "installerId": {
          "description": "Required. Unique installer id (cpiId) from the Certified Professional\nInstallers database.",
          "type": "string"
        },
        "encodedDevice": {
          "type": "string",
          "format": "byte",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload\nmust be the JSON encoding of the [Device]. The user_id field must be set."
        }
      }
    },
    "SasPortalListNodesResponse": {
      "id": "SasPortalListNodesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to\nListNodes method\nthat indicates from where listing should continue. If the field is missing\nor empty, it means there is no more nodes."
        },
        "nodes": {
          "description": "The nodes that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalNode"
          }
        }
      },
      "description": "Response for ListNodes method."
    },
    "SasPortalValidateInstallerResponse": {
      "description": "Response for ValidateInstaller method]\n[spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller].",
      "type": "object",
      "properties": {},
      "id": "SasPortalValidateInstallerResponse"
    },
    "SasPortalGetPolicyRequest": {
      "type": "object",
      "id": "SasPortalGetPolicyRequest",
      "description": "Request message for `GetPolicy` method.",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being requested."
        }
      }
    },
    "SasPortalSetPolicyRequest": {
      "description": "Request message for `SetPolicy` method.",
      "properties": {
        "policy": {
          "description": "Required. The policy to be applied to the `resource`.",
          "$ref": "SasPortalPolicy"
        },
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being specified. This policy\nreplaces any existing policy."
        }
      },
      "id": "SasPortalSetPolicyRequest",
      "type": "object"
    },
    "SasPortalFrequencyRange": {
      "properties": {
        "lowFrequencyMhz": {
          "description": "The lowest frequency of the frequency range in MHz.",
          "format": "double",
          "type": "number"
        },
        "highFrequencyMhz": {
          "description": "The highest frequency of the frequency range in MHz.",
          "format": "double",
          "type": "number"
        }
      },
      "id": "SasPortalFrequencyRange",
      "type": "object",
      "description": "Frequency range from `low_frequency` to `high_frequency`."
    },
    "SasPortalValidateInstallerRequest": {
      "id": "SasPortalValidateInstallerRequest",
      "type": "object",
      "properties": {
        "installerId": {
          "description": "Required. Unique installer id (cpiId) from the Certified\nProfessional Installers database.",
          "type": "string"
        },
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload\nmust include a \"secret\" claim whose value is the secret."
        },
        "secret": {
          "description": "Required. Secret returned by the GenerateSecret method.",
          "type": "string"
        }
      },
      "description": "Request for ValidateInstaller method."
    },
    "SasPortalStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "id": "SasPortalStatus"
    },
    "SasPortalDeviceModel": {
      "description": "Information about the model of the device.",
      "properties": {
        "vendor": {
          "description": "The name of the device vendor.",
          "type": "string"
        },
        "hardwareVersion": {
          "description": "The hardware version of the device.",
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version of the device."
        },
        "name": {
          "description": "The name of the device model.",
          "type": "string"
        },
        "softwareVersion": {
          "description": "The software version of the device.",
          "type": "string"
        }
      },
      "id": "SasPortalDeviceModel",
      "type": "object"
    },
    "SasPortalPolicy": {
      "properties": {
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "SasPortalAssignment"
          }
        },
        "etag": {
          "description": "The [etag] is used for optimistic concurrency control as a way to\nhelp prevent simultaneous updates of a policy from overwriting\neach other.  It is strongly suggested that systems make use of\nthe [etag] in the read-modify-write cycle to perform policy\nupdates in order to avoid race conditions: An [etag] is returned\nin the response to [GetPolicy], and systems are expected to put\nthat etag in the request to [SetPolicy] to ensure that their\nchange will be applied to the same version of the policy.\n\nIf no [etag] is provided in the call to [SetPolicy], then the\nexisting policy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        }
      },
      "description": "Defines an access control policy to the resources.",
      "id": "SasPortalPolicy",
      "type": "object"
    },
    "SasPortalDeviceConfig": {
      "type": "object",
      "id": "SasPortalDeviceConfig",
      "properties": {
        "userId": {
          "description": "The identifier of a device user.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output-only. The last time the device configuration was edited."
        },
        "isSigned": {
          "type": "boolean",
          "description": "Output-only. Whether the configuration has been signed by a CPI."
        },
        "category": {
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "type": "string",
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "description": "FCC category of the device."
        },
        "callSign": {
          "type": "string",
          "description": "The call sign of the device operator."
        },
        "airInterface": {
          "$ref": "SasPortalDeviceAirInterface",
          "description": "Information about this device's air interface."
        },
        "measurementCapabilities": {
          "items": {
            "type": "string",
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ]
          },
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "array",
          "description": "Measurement reporting capabilities of the device."
        },
        "installationParams": {
          "$ref": "SasPortalInstallationParams",
          "description": "Installation parameters for the device."
        },
        "model": {
          "$ref": "SasPortalDeviceModel",
          "description": "Information about this device model."
        },
        "state": {
          "description": "State of the configuration.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ]
        }
      },
      "description": "Information about the device configuration."
    },
    "SasPortalMoveNodeRequest": {
      "type": "object",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or Customer) to reparent the node under.",
          "type": "string"
        }
      },
      "description": "Request for MoveNode method.",
      "id": "SasPortalMoveNodeRequest"
    },
    "SasPortalBulkCreateDeviceRequest": {
      "id": "SasPortalBulkCreateDeviceRequest",
      "type": "object",
      "description": "Request for BulkCreateDevice method.",
      "properties": {
        "csv": {
          "description": "Required. A csv with each row representing a [device]. Each row must\nconform to the regulations described on CreateDeviceRequest's device field.",
          "type": "string"
        }
      }
    },
    "SasPortalTestPermissionsRequest": {
      "description": "Request message for `TestPermissions` method.",
      "type": "object",
      "properties": {
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SasPortalTestPermissionsRequest"
    }
  },
  "id": "sasportal:v1alpha1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        }
      }
    }
  }
}
