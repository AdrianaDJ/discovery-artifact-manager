{
  "servicePath": "",
  "title": "SAS Portal API (Testing)",
  "version_module": true,
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "id": "prod_tt_sasportal:v1alpha1",
  "basePath": "",
  "version": "v1alpha1",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "fullyEncodeReservedExpansion": true,
  "name": "prod_tt_sasportal",
  "protocol": "rest",
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/",
  "description": "",
  "canonicalName": "SAS Portal Testing",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        }
      }
    }
  },
  "revision": "20200626",
  "resources": {
    "policies": {
      "methods": {
        "get": {
          "parameters": {},
          "id": "prod_tt_sasportal.policies.get",
          "path": "v1alpha1/policies:get",
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "description": "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/policies:get"
        },
        "set": {
          "parameters": {},
          "flatPath": "v1alpha1/policies:set",
          "httpMethod": "POST",
          "id": "prod_tt_sasportal.policies.set",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Sets the access control policy on the specified resource. Replaces any\nexisting policy.",
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "path": "v1alpha1/policies:set",
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          }
        },
        "test": {
          "description": "Returns permissions that a caller has on the specified resource.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [],
          "flatPath": "v1alpha1/policies:test",
          "path": "v1alpha1/policies:test",
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "id": "prod_tt_sasportal.policies.test",
          "parameters": {},
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "httpMethod": "POST"
        }
      }
    },
    "nodes": {
      "methods": {
        "get": {
          "path": "v1alpha1/{+name}",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "description": "Returns a requested node.",
          "response": {
            "$ref": "SasPortalNode"
          },
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^nodes/[^/]+$",
              "type": "string",
              "location": "path",
              "description": "Required. The name of the node."
            }
          },
          "id": "prod_tt_sasportal.nodes.get",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "patch": {
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Output only. The resource path name.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated."
                }
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates a device."
            },
            "updateSigned": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device to update.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.updateSigned",
              "description": "Updates a signed device.",
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Deletes a device.",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "type": "string"
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.delete",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}"
            },
            "bulk": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:bulk",
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the parent resource."
                }
              },
              "path": "v1alpha1/{+parent}/devices:bulk",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.nodes.devices.bulk",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "description": "Creates a device under a node or customer. Returned devices are unordered."
            },
            "get": {
              "id": "prod_tt_sasportal.nodes.devices.get",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Gets details about a device.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET"
            },
            "move": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device to move.",
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "path": "v1alpha1/{+name}:move",
              "description": "Moves a device under another node or customer.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "httpMethod": "POST"
            },
            "create": {
              "id": "prod_tt_sasportal.nodes.devices.create",
              "description": "Creates a device under a node or customer.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/devices",
              "parameterOrder": [
                "parent"
              ]
            },
            "createSigned": {
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "id": "prod_tt_sasportal.nodes.devices.createSigned",
              "description": "Creates a signed device under a\nnode or customer.",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "location": "path"
                }
              }
            },
            "signDevice": {
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Output only. The resource path name."
                }
              },
              "description": "Signs a device.",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}:signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "path": "v1alpha1/{+parent}/devices",
              "id": "prod_tt_sasportal.nodes.devices.list",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists devices under a node or customer.",
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "required": true
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000].",
                  "type": "integer"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive."
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                }
              }
            }
          }
        },
        "deployments": {
          "methods": {
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "description": "Output only. Resource name.",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "description": "Updates an existing deployment.",
              "id": "prod_tt_sasportal.nodes.deployments.patch",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Deletes a deployment.",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "description": "Required. The name of the deployment."
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.deployments.delete"
            },
            "list": {
              "description": "Lists deployments.",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments",
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The parent resource name, for example, \"nodes/1\",\ncustomer/1/nodes/2."
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDeployments\nmethod that\nindicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "description": "The maximum number of deployments to return in the response.",
                  "location": "query",
                  "type": "integer"
                }
              },
              "path": "v1alpha1/{+parent}/deployments",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.nodes.deployments.list",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "description": "Returns a requested deployment.",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "description": "Required. The name of the deployment.",
                  "required": true
                }
              },
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.nodes.deployments.get"
            }
          }
        },
        "nodes": {
          "methods": {
            "get": {
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the node.",
                  "required": true
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.get",
              "description": "Returns a requested node."
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Creates a new node.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+parent}/nodes",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalNode"
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.create"
            },
            "patch": {
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "Fields to be updated."
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "parameterOrder": [
                "name"
              ],
              "description": "Updates an existing node.",
              "request": {
                "$ref": "SasPortalNode"
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.delete",
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "description": "Deletes a node.",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the node."
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}"
            },
            "move": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the node to\nmove.",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Moves a node under another node or customer.",
              "httpMethod": "POST"
            },
            "list": {
              "id": "prod_tt_sasportal.nodes.nodes.list",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "path": "v1alpha1/{+parent}/nodes",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists nodes.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "location": "path",
                  "required": true
                },
                "pageSize": {
                  "description": "The maximum number of nodes to return in the response.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from."
                }
              }
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "bulk": {
                  "request": {
                    "$ref": "SasPortalBulkCreateDeviceRequest"
                  },
                  "path": "v1alpha1/{+parent}/devices:bulk",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalBulkCreateDeviceResponse"
                  },
                  "description": "Creates a device under a node or customer. Returned devices are unordered.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.bulk",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:bulk",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "create": {
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "description": "Creates a device under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create",
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices"
                },
                "createSigned": {
                  "description": "Creates a signed device under a\nnode or customer.",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/devices:createSigned"
                },
                "list": {
                  "path": "v1alpha1/{+parent}/devices",
                  "description": "Lists devices under a node or customer.",
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from."
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000].",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path"
                    }
                  }
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "description": "Lists nodes.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "location": "path",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of nodes to return in the response."
                    }
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "httpMethod": "GET",
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list"
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The parent resource name where the node is to be created."
                    }
                  },
                  "description": "Creates a new node.",
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalNode"
                  }
                }
              }
            },
            "deployments": {
              "methods": {
                "create": {
                  "description": "Creates a new deployment.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name where the deployment is to be created.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+parent}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "response": {
                    "$ref": "SasPortalDeployment"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.create"
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/deployments",
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of deployments to return in the response.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDeployments\nmethod that\nindicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The parent resource name, for example, \"nodes/1\",\ncustomer/1/nodes/2.",
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/deployments",
                  "description": "Lists deployments.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.deployments.list"
                }
              }
            }
          }
        }
      }
    },
    "installer": {
      "methods": {
        "generateSecret": {
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "path": "v1alpha1/installer:generateSecret",
          "id": "prod_tt_sasportal.installer.generateSecret",
          "description": "Generates a secret to be used with the ValidateInstaller method",
          "httpMethod": "POST",
          "parameters": {},
          "flatPath": "v1alpha1/installer:generateSecret"
        },
        "validate": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "prod_tt_sasportal.installer.validate",
          "parameterOrder": [],
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "flatPath": "v1alpha1/installer:validate",
          "httpMethod": "POST",
          "parameters": {},
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "path": "v1alpha1/installer:validate"
        }
      }
    },
    "customers": {
      "methods": {
        "list": {
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [],
          "path": "v1alpha1/customers",
          "parameters": {
            "pageSize": {
              "type": "integer",
              "location": "query",
              "format": "int32",
              "description": "The maximum number of customers\nto return in the response."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A pagination token returned from a previous call to ListCustomers method that indicates where\nthis listing should continue from."
            }
          },
          "id": "prod_tt_sasportal.customers.list",
          "description": "Returns a list of requested customers.",
          "flatPath": "v1alpha1/customers"
        },
        "get": {
          "path": "v1alpha1/{+name}",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "id": "prod_tt_sasportal.customers.get",
          "description": "Returns a requested customer.",
          "flatPath": "v1alpha1/customers/{customersId}",
          "parameters": {
            "name": {
              "type": "string",
              "pattern": "^customers/[^/]+$",
              "description": "Required. The name of the customer.",
              "required": true,
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "response": {
            "$ref": "SasPortalCustomer"
          }
        },
        "patch": {
          "id": "prod_tt_sasportal.customers.patch",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "description": "Updates an existing customer.",
          "httpMethod": "PATCH",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "flatPath": "v1alpha1/customers/{customersId}",
          "parameters": {
            "updateMask": {
              "location": "query",
              "description": "Fields to be updated.",
              "type": "string",
              "format": "google-fieldmask"
            },
            "name": {
              "description": "Output only. Resource name of the customer.",
              "location": "path",
              "required": true,
              "type": "string",
              "pattern": "^customers/[^/]+$"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "path": "v1alpha1/{+name}"
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "required": true
                }
              },
              "description": "Deletes a device.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "DELETE",
              "id": "prod_tt_sasportal.customers.devices.delete"
            },
            "updateSigned": {
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "PATCH",
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "description": "Updates a signed device.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              }
            },
            "bulk": {
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.customers.devices.bulk",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices:bulk",
              "flatPath": "v1alpha1/customers/{customersId}/devices:bulk"
            },
            "patch": {
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.patch",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "description": "Updates a device.",
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Output only. The resource path name.",
                  "location": "path"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "Fields to be updated."
                }
              }
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.customers.devices.list",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000].",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "type": "string"
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Lists devices under a node or customer.",
              "path": "v1alpha1/{+parent}/devices"
            },
            "signDevice": {
              "description": "Signs a device.",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "id": "prod_tt_sasportal.customers.devices.signDevice",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}:signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "httpMethod": "POST"
            },
            "create": {
              "path": "v1alpha1/{+parent}/devices",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a device under a node or customer.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.create",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "createSigned": {
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a signed device under a\nnode or customer.",
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "id": "prod_tt_sasportal.customers.devices.createSigned"
            },
            "get": {
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.get",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "description": "Gets details about a device.",
              "httpMethod": "GET"
            },
            "move": {
              "id": "prod_tt_sasportal.customers.devices.move",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the device to move.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "path": "v1alpha1/{+name}:move",
              "description": "Moves a device under another node or customer.",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "response": {
                "$ref": "SasPortalOperation"
              }
            }
          }
        },
        "nodes": {
          "methods": {
            "move": {
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the node to\nmove."
                }
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "id": "prod_tt_sasportal.customers.nodes.move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Moves a node under another node or customer."
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET",
              "description": "Returns a requested node.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "id": "prod_tt_sasportal.customers.nodes.get",
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the node."
                }
              },
              "path": "v1alpha1/{+name}"
            },
            "delete": {
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.nodes.delete",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the node.",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "httpMethod": "DELETE",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "description": "Deletes a node.",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "patch": {
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "description": "Updates an existing node.",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "description": "Output only. Resource name.",
                  "location": "path",
                  "type": "string"
                },
                "updateMask": {
                  "type": "string",
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from."
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\"."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of nodes to return in the response.",
                  "format": "int32"
                }
              },
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.nodes.list",
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists nodes."
            },
            "create": {
              "path": "v1alpha1/{+parent}/nodes",
              "description": "Creates a new node.",
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.nodes.create",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "parameterOrder": [
                "parent"
              ]
            }
          },
          "resources": {
            "deployments": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "SasPortalListDeploymentsResponse"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.deployments.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDeployments\nmethod that\nindicates where this listing should continue from.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource name, for example, \"nodes/1\",\ncustomer/1/nodes/2.",
                      "location": "path",
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of deployments to return in the response."
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists deployments.",
                  "path": "v1alpha1/{+parent}/deployments"
                },
                "create": {
                  "path": "v1alpha1/{+parent}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalDeployment"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/deployments",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SasPortalDeployment"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.deployments.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource name where the deployment is to be created."
                    }
                  },
                  "description": "Creates a new deployment."
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "description": "Lists nodes.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource name, for example, \"nodes/1\"."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of nodes to return in the response.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new node.",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "location": "path"
                    }
                  }
                }
              }
            }
          }
        },
        "deployments": {
          "methods": {
            "get": {
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the deployment.",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Returns a requested deployment.",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "id": "prod_tt_sasportal.customers.deployments.get",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "id": "prod_tt_sasportal.customers.deployments.create",
              "path": "v1alpha1/{+parent}/deployments",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "description": "Creates a new deployment.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent resource name where the deployment is to be created.",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              }
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.deployments.delete",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a deployment.",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The name of the deployment.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/deployments/[^/]+$"
                }
              }
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/deployments",
              "description": "Lists deployments.",
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name, for example, \"nodes/1\",\ncustomer/1/nodes/2.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of deployments to return in the response.",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDeployments\nmethod that\nindicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.deployments.list",
              "response": {
                "$ref": "SasPortalListDeploymentsResponse"
              },
              "path": "v1alpha1/{+parent}/deployments"
            },
            "patch": {
              "response": {
                "$ref": "SasPortalDeployment"
              },
              "httpMethod": "PATCH",
              "id": "prod_tt_sasportal.customers.deployments.patch",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates an existing deployment.",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalDeployment"
              },
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Fields to be updated.",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "required": true,
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "location": "path"
                }
              }
            }
          }
        }
      }
    },
    "deployments": {
      "methods": {
        "get": {
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/{+name}",
          "httpMethod": "GET",
          "id": "prod_tt_sasportal.deployments.get",
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^deployments/[^/]+$",
              "description": "Required. The name of the deployment.",
              "location": "path",
              "type": "string"
            }
          },
          "response": {
            "$ref": "SasPortalDeployment"
          },
          "flatPath": "v1alpha1/deployments/{deploymentsId}",
          "description": "Returns a requested deployment."
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "schemas": {
    "SasPortalGetPolicyRequest": {
      "description": "Request message for `GetPolicy` method.",
      "id": "SasPortalGetPolicyRequest",
      "type": "object",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being requested."
        }
      }
    },
    "SasPortalSignDeviceRequest": {
      "id": "SasPortalSignDeviceRequest",
      "type": "object",
      "description": "Request for SignDevice method.",
      "properties": {
        "device": {
          "$ref": "SasPortalDevice",
          "description": "Required. The device to sign.\nThe device fields name, fcc_id and serial_number must be set.\nThe user_id field must be set."
        }
      }
    },
    "SasPortalAssignment": {
      "type": "object",
      "properties": {
        "members": {
          "description": "The identities the role is assigned to. It can have the following\nvalues:\n\n* `{user_email}`: An email address that represents a specific\n   Google account. For example: `alice@gmail.com`.\n\n* `{group_email}`: An email address that represents a Google\n   group.  For example, `viewers@gmail.com`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "Required. Role that is assigned to `members`."
        }
      },
      "description": "Associates `members` with a `role`.",
      "id": "SasPortalAssignment"
    },
    "SasPortalStatus": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "SasPortalStatus",
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object"
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "properties": {
        "installerId": {
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional\nInstallers database.",
          "type": "string"
        },
        "encodedDevice": {
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload\nmust be the JSON encoding\nof the device. The user_id field must be set.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "SasPortalUpdateSignedDeviceRequest",
      "description": "Request for UpdateSignedDevice method.",
      "type": "object"
    },
    "SasPortalCustomer": {
      "type": "object",
      "properties": {
        "sasUserIds": {
          "description": "User IDs used by the devices belonging to this customer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "displayName": {
          "description": "Required. Name of the organization that the customer entity represents.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of the customer."
        }
      },
      "id": "SasPortalCustomer",
      "description": "Entity representing a SAS customer."
    },
    "SasPortalListDeploymentsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to\nListDeployments method that indicates\nfrom where listing should continue. If the field is missing or empty, it\nmeans there is no more deployments.",
          "type": "string"
        },
        "deployments": {
          "type": "array",
          "description": "The deployments that match the\nrequest.",
          "items": {
            "$ref": "SasPortalDeployment"
          }
        }
      },
      "id": "SasPortalListDeploymentsResponse",
      "description": "Response for ListDeployments method.",
      "type": "object"
    },
    "SasPortalDpaMoveList": {
      "description": "An entry in a DPA's move list.",
      "type": "object",
      "id": "SasPortalDpaMoveList",
      "properties": {
        "frequencyRange": {
          "description": "The frequency range that the move list affects.",
          "$ref": "SasPortalFrequencyRange"
        },
        "dpaId": {
          "description": "The ID of the DPA.",
          "type": "string"
        }
      }
    },
    "SasPortalOperation": {
      "type": "object",
      "id": "SasPortalOperation",
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      }
    },
    "SasPortalCreateSignedDeviceRequest": {
      "description": "Request for CreateSignedDevice method.",
      "id": "SasPortalCreateSignedDeviceRequest",
      "type": "object",
      "properties": {
        "encodedDevice": {
          "description": "Required. JSON Web Token signed using a CPI private key. Payload\nmust be the JSON encoding of the [Device]. The user_id field must be set.",
          "type": "string",
          "format": "byte"
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified Professional\nInstallers database."
        }
      }
    },
    "SasPortalFrequencyRange": {
      "properties": {
        "highFrequencyMhz": {
          "format": "double",
          "description": "The highest frequency of the frequency range in MHz.",
          "type": "number"
        },
        "lowFrequencyMhz": {
          "format": "double",
          "description": "The lowest frequency of the frequency range in MHz.",
          "type": "number"
        }
      },
      "type": "object",
      "description": "Frequency range from `low_frequency` to `high_frequency`.",
      "id": "SasPortalFrequencyRange"
    },
    "SasPortalGenerateSecretRequest": {
      "description": "Request for GenerateSecret method]\n[spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret].",
      "properties": {},
      "id": "SasPortalGenerateSecretRequest",
      "type": "object"
    },
    "SasPortalDeviceAirInterface": {
      "type": "object",
      "properties": {
        "radioTechnology": {
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "This field specifies the radio access technology that is used for the CBSD.\n\nConditional"
        },
        "supportedSpec": {
          "type": "string",
          "description": "This field is related to the radioTechnology field and provides the air\ninterface specification that the CBSD is compliant with at the time of\nregistration.\n\nOptional"
        }
      },
      "id": "SasPortalDeviceAirInterface",
      "description": "Information about the device's air interface."
    },
    "SasPortalListDevicesResponse": {
      "properties": {
        "devices": {
          "items": {
            "$ref": "SasPortalDevice"
          },
          "type": "array",
          "description": "The devices that match the request."
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDevices method\nthat indicates from where listing should continue. If the field\nis missing or empty, it means there is no more devices.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalListDevicesResponse",
      "description": "Response for ListDevices method."
    },
    "SasPortalDeviceModel": {
      "properties": {
        "hardwareVersion": {
          "description": "The hardware version of the device.",
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version of the device."
        },
        "name": {
          "description": "The name of the device model.",
          "type": "string"
        },
        "softwareVersion": {
          "type": "string",
          "description": "The software version of the device."
        },
        "vendor": {
          "type": "string",
          "description": "The name of the device vendor."
        }
      },
      "description": "Information about the model of the device.",
      "id": "SasPortalDeviceModel",
      "type": "object"
    },
    "SasPortalSetPolicyRequest": {
      "id": "SasPortalSetPolicyRequest",
      "type": "object",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being specified. This policy\nreplaces any existing policy."
        },
        "policy": {
          "description": "Required. The policy to be applied to the `resource`.",
          "$ref": "SasPortalPolicy"
        }
      },
      "description": "Request message for `SetPolicy` method."
    },
    "SasPortalValidateInstallerResponse": {
      "id": "SasPortalValidateInstallerResponse",
      "type": "object",
      "properties": {},
      "description": "Response for ValidateInstaller method]\n[spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller]."
    },
    "SasPortalTestPermissionsRequest": {
      "description": "Request message for `TestPermissions` method.",
      "type": "object",
      "id": "SasPortalTestPermissionsRequest",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`."
        },
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        }
      }
    },
    "SasPortalTestPermissionsResponse": {
      "id": "SasPortalTestPermissionsResponse",
      "type": "object",
      "description": "Response message for `TestPermissions` method.",
      "properties": {
        "permissions": {
          "description": "A set of permissions that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "SasPortalValidateInstallerRequest": {
      "properties": {
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified\nProfessional Installers database."
        },
        "secret": {
          "description": "Required. Secret returned by the GenerateSecret method.",
          "type": "string"
        },
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload\nmust include a \"secret\" claim whose value is the secret."
        }
      },
      "type": "object",
      "id": "SasPortalValidateInstallerRequest",
      "description": "Request for ValidateInstaller method."
    },
    "SasPortalDevice": {
      "type": "object",
      "id": "SasPortalDevice",
      "properties": {
        "state": {
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered\nwith SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "description": "Output only. Device state.",
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ],
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource path name."
        },
        "grants": {
          "items": {
            "$ref": "SasPortalDeviceGrant"
          },
          "type": "array",
          "description": "Output only. Grants held by the device."
        },
        "activeConfig": {
          "description": "Output only. Current configuration of the device as registered to the SAS.",
          "$ref": "SasPortalDeviceConfig"
        },
        "fccId": {
          "description": "The FCC identifier of the device.",
          "type": "string"
        },
        "serialNumber": {
          "type": "string",
          "description": "A serial number assigned to the device by the device\nmanufacturer."
        },
        "preloadedConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Configuration of the device, as specified via SAS Portal API."
        },
        "displayName": {
          "type": "string",
          "description": "Device display name."
        },
        "deviceMetadata": {
          "description": "Device parameters that can be overridden by both SAS Portal and SAS\nregistration requests.",
          "$ref": "SasPortalDeviceMetadata"
        }
      }
    },
    "SasPortalMoveNodeRequest": {
      "id": "SasPortalMoveNodeRequest",
      "type": "object",
      "description": "Request for MoveNode method.",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource node or Customer) to reparent the node under."
        }
      }
    },
    "SasPortalListCustomersResponse": {
      "type": "object",
      "id": "SasPortalListCustomersResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListCustomers method that indicates from\nwhere listing should continue. If the field is missing or empty, it means\nthere are no more customers."
        },
        "customers": {
          "items": {
            "$ref": "SasPortalCustomer"
          },
          "description": "The list of customers that\nmatch the request.",
          "type": "array"
        }
      },
      "description": "Response for `ListCustomers`."
    },
    "SasPortalDeviceMetadata": {
      "properties": {},
      "type": "object",
      "id": "SasPortalDeviceMetadata",
      "description": "Device data overridable by both SAS Portal and registration requests."
    },
    "SasPortalDeviceConfig": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "The identifier of a device user."
        },
        "airInterface": {
          "description": "Information about this device's air interface.",
          "$ref": "SasPortalDeviceAirInterface"
        },
        "updateTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output-only. The last time the device configuration was edited."
        },
        "model": {
          "description": "Information about this device model.",
          "$ref": "SasPortalDeviceModel"
        },
        "callSign": {
          "type": "string",
          "description": "The call sign of the device operator."
        },
        "isSigned": {
          "type": "boolean",
          "description": "Output-only. Whether the configuration has been signed by a CPI."
        },
        "state": {
          "description": "State of the configuration.",
          "type": "string",
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "installationParams": {
          "$ref": "SasPortalInstallationParams",
          "description": "Installation parameters for the device."
        },
        "category": {
          "type": "string",
          "description": "FCC category of the device.",
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ]
        },
        "measurementCapabilities": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Measurement reporting capabilities of the device.",
          "items": {
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ],
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "Information about the device configuration.",
      "id": "SasPortalDeviceConfig",
      "type": "object"
    },
    "SasPortalNode": {
      "type": "object",
      "description": "The Node.",
      "properties": {
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "description": "User ids used by the devices belonging to this node.",
          "type": "array"
        },
        "displayName": {
          "description": "The node's display name.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name.",
          "type": "string"
        }
      },
      "id": "SasPortalNode"
    },
    "SasPortalBulkCreateDeviceRequest": {
      "id": "SasPortalBulkCreateDeviceRequest",
      "type": "object",
      "description": "Request for BulkCreateDevice method.",
      "properties": {
        "csv": {
          "type": "string",
          "description": "Required. A csv with each row representing a [device]. Each row must\nconform to the regulations described on CreateDeviceRequest's device field."
        }
      }
    },
    "SasPortalGenerateSecretResponse": {
      "description": "Response for GenerateSecret method.",
      "id": "SasPortalGenerateSecretResponse",
      "type": "object",
      "properties": {
        "secret": {
          "description": "The secret generated by the string and used by\n[ValidateInstaller] method.",
          "type": "string"
        }
      }
    },
    "SasPortalListNodesResponse": {
      "id": "SasPortalListNodesResponse",
      "type": "object",
      "description": "Response for ListNodes method.",
      "properties": {
        "nodes": {
          "description": "The nodes that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalNode"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to\nListNodes method\nthat indicates from where listing should continue. If the field is missing\nor empty, it means there is no more nodes."
        }
      }
    },
    "SasPortalPolicy": {
      "type": "object",
      "id": "SasPortalPolicy",
      "properties": {
        "etag": {
          "format": "byte",
          "description": "The [etag] is used for optimistic concurrency control as a way to\nhelp prevent simultaneous updates of a policy from overwriting\neach other.  It is strongly suggested that systems make use of\nthe [etag] in the read-modify-write cycle to perform policy\nupdates in order to avoid race conditions: An [etag] is returned\nin the response to [GetPolicy], and systems are expected to put\nthat etag in the request to [SetPolicy] to ensure that their\nchange will be applied to the same version of the policy.\n\nIf no [etag] is provided in the call to [SetPolicy], then the\nexisting policy is overwritten blindly.",
          "type": "string"
        },
        "assignments": {
          "items": {
            "$ref": "SasPortalAssignment"
          },
          "type": "array"
        }
      },
      "description": "Defines an access control policy to the resources."
    },
    "SasPortalInstallationParams": {
      "properties": {
        "indoorDeployment": {
          "description": "Whether the device antenna is indoor or not. True: indoor. False:\noutdoor.",
          "type": "boolean"
        },
        "latitude": {
          "description": "Latitude of the device antenna location in degrees relative to\nthe WGS 84 datum. The allowed range is from -90.000000 to\n+90.000000. Positive values represent latitudes north of the\nequator; negative values south of the equator.",
          "format": "double",
          "type": "number"
        },
        "antennaAzimuth": {
          "description": "Boresight direction of the horizontal plane of the antenna in\ndegrees with respect to true north. The value of this parameter\nis an integer with a value between 0 and 359 inclusive. A value\nof 0 degrees means true north; a value of 90 degrees means\neast. This parameter is optional for Category A devices and\nconditional for Category B devices.",
          "format": "int32",
          "type": "integer"
        },
        "antennaModel": {
          "type": "string",
          "description": "If an external antenna is used, the antenna model is optionally\nprovided in this field. The string has a maximum length of 128\noctets."
        },
        "longitude": {
          "format": "double",
          "description": "Longitude of the device antenna location. in degrees relative to\nthe WGS 84 datum. The allowed range is from -180.000000 to\n+180.000000. Positive values represent longitudes east of the\nprime meridian; negative values west of the prime\nmeridian.",
          "type": "number"
        },
        "antennaGain": {
          "description": "Peak antenna gain in dBi. This parameter is an integer with a\nvalue between -127 and +128 (dBi) inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "verticalAccuracy": {
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device\nantenna vertical location. This optional parameter should only be\npresent if its value is less than the FCC requirement of 3\nmeters.",
          "type": "number"
        },
        "cpeCbsdIndication": {
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
          "type": "boolean"
        },
        "horizontalAccuracy": {
          "format": "double",
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device\nantenna horizontal location. This optional parameter should only\nbe present if its value is less than the FCC requirement of 50\nmeters."
        },
        "antennaBeamwidth": {
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in\ndegrees.  This parameter is an unsigned integer having a value\nbetween 0 and 360 (degrees) inclusive; it is optional for\nCategory A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "antennaDowntilt": {
          "format": "int32",
          "description": "Antenna downtilt in degrees and is an integer with a value\nbetween -90 and +90 inclusive; a negative value means the antenna\nis tilted up (above horizontal). This parameter is optional for\nCategory A devices and conditional for Category B devices.",
          "type": "integer"
        },
        "height": {
          "type": "number",
          "description": "Device antenna height in meters. When the heightType parameter\nvalue is \"AGL\", the antenna height should be given relative to\nground level. When the heightType parameter value is \"AMSL\", it\nis given with respect to WGS84 datum.",
          "format": "double"
        },
        "heightType": {
          "description": "Specifies how the height is measured.",
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "type": "string",
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ]
        },
        "eirpCapability": {
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz\nand is an integer with a value between -127 and +47 (dBm/10 MHz)\ninclusive. If not included, SAS interprets it as maximum\nallowable EIRP in units of dBm/10MHz for device category.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "SasPortalInstallationParams",
      "type": "object",
      "description": "Information about the device installation parameters."
    },
    "SasPortalBulkCreateDeviceResponse": {
      "id": "SasPortalBulkCreateDeviceResponse",
      "type": "object",
      "description": "Response for BulkCreateDevice method.",
      "properties": {
        "devices": {
          "items": {
            "$ref": "SasPortalDevice"
          },
          "description": "Required. The devices that were imported.",
          "type": "array"
        }
      }
    },
    "SasPortalDeployment": {
      "properties": {
        "allowedBillingModes": {
          "description": "The allowed billing modes under this deployment.",
          "type": "array",
          "enumDescriptions": [
            "Billing mode has not been specified.",
            "Price is based on category of CBSD: Category A, Category B registered with\nSAS.",
            "Price is based on type of CBSD: Base station or CPE."
          ],
          "items": {
            "type": "string",
            "enum": [
              "BILLING_MODE_UNSPECIFIED",
              "MOBILE",
              "FIXED_WIRELESS"
            ]
          }
        },
        "defaultBillingMode": {
          "enum": [
            "BILLING_MODE_UNSPECIFIED",
            "MOBILE",
            "FIXED_WIRELESS"
          ],
          "enumDescriptions": [
            "Billing mode has not been specified.",
            "Price is based on category of CBSD: Category A, Category B registered with\nSAS.",
            "Price is based on type of CBSD: Base station or CPE."
          ],
          "type": "string",
          "description": "Default billing mode for the deployment and devices under it."
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name."
        },
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "description": "User id used by the devices belonging to this deployment. Each deployment\nshould be associated with one unique user_id.",
          "type": "array"
        },
        "displayName": {
          "description": "The deployment's display name.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalDeployment",
      "description": "The Deployment."
    },
    "SasPortalMoveDeviceRequest": {
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource (Node or Customer) to\nreparent the device under.",
          "type": "string"
        }
      },
      "description": "Request for MoveDevice method.",
      "id": "SasPortalMoveDeviceRequest",
      "type": "object"
    },
    "SasPortalDeviceGrant": {
      "id": "SasPortalDeviceGrant",
      "properties": {
        "maxEirp": {
          "type": "number",
          "format": "double",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted\nby the grant. The maximum EIRP is in units of dBm/MHz. The\nvalue of maxEirp represents the average (RMS) EIRP that would be\nmeasured by the procedure defined in FCC part 96.41(e)(3)."
        },
        "state": {
          "description": "State of the grant.",
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ],
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "type": "string"
        },
        "suspensionReason": {
          "items": {
            "type": "string"
          },
          "description": "If the grant is suspended, the reason(s) for suspension.",
          "type": "array"
        },
        "channelType": {
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Type of channel used."
        },
        "moveList": {
          "items": {
            "$ref": "SasPortalDpaMoveList"
          },
          "description": "The DPA move lists on which this grant appears.",
          "type": "array"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "The expiration time of the grant.",
          "type": "string"
        },
        "frequencyRange": {
          "description": "The transmission frequency range.",
          "$ref": "SasPortalFrequencyRange"
        }
      },
      "type": "object",
      "description": "Device grant. It is an authorization provided by the Spectrum\nAccess System to a device to transmit using specified operating\nparameters after a successful heartbeat by the device."
    },
    "SasPortalEmpty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "SasPortalEmpty",
      "properties": {}
    }
  },
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    }
  },
  "ownerName": "Google",
  "batchPath": "batch"
}
