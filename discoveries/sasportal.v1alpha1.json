{
  "basePath": "",
  "version": "v1alpha1",
  "name": "sasportal",
  "id": "sasportal:v1alpha1",
  "version_module": true,
  "parameters": {
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response."
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "description": "",
  "kind": "discovery#restDescription",
  "schemas": {
    "SasPortalSetPolicyRequest": {
      "type": "object",
      "properties": {
        "policy": {
          "description": "Required. The policy to be applied to the `resource`.",
          "$ref": "SasPortalPolicy"
        },
        "resource": {
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy.",
          "type": "string"
        }
      },
      "description": "Request message for `SetPolicy` method.",
      "id": "SasPortalSetPolicyRequest"
    },
    "SasPortalInstallationParams": {
      "description": "Information about the device installation parameters.",
      "id": "SasPortalInstallationParams",
      "properties": {
        "longitude": {
          "description": "Longitude of the device antenna location. in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian.",
          "format": "double",
          "type": "number"
        },
        "antennaModel": {
          "type": "string",
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets."
        },
        "cpeCbsdIndication": {
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
          "type": "boolean"
        },
        "verticalAccuracy": {
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters.",
          "type": "number"
        },
        "antennaAzimuth": {
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices.",
          "format": "int32",
          "type": "integer"
        },
        "latitude": {
          "format": "double",
          "type": "number",
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator."
        },
        "indoorDeployment": {
          "description": "Whether the device antenna is indoor or not. True: indoor. False: outdoor.",
          "type": "boolean"
        },
        "eirpCapability": {
          "type": "integer",
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category.",
          "format": "int32"
        },
        "heightType": {
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ],
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "description": "Specifies how the height is measured.",
          "type": "string"
        },
        "antennaDowntilt": {
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "antennaBeamwidth": {
          "type": "integer",
          "format": "int32",
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices."
        },
        "height": {
          "description": "Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum.",
          "type": "number",
          "format": "double"
        },
        "horizontalAccuracy": {
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters.",
          "format": "double"
        },
        "antennaGain": {
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "SasPortalTestPermissionsResponse": {
      "description": "Response message for `TestPermissions` method.",
      "id": "SasPortalTestPermissionsResponse",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A set of permissions that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "SasPortalDevice": {
      "id": "SasPortalDevice",
      "type": "object",
      "properties": {
        "preloadedConfig": {
          "description": "Configuration of the device, as specified via SAS Portal API.",
          "$ref": "SasPortalDeviceConfig"
        },
        "grants": {
          "description": "Output only. Grants held by the device.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDeviceGrant"
          }
        },
        "fccId": {
          "type": "string",
          "description": "The FCC identifier of the device."
        },
        "serialNumber": {
          "description": "A serial number assigned to the device by the device manufacturer.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Device display name."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "description": "Output only. Device state.",
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ]
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource path name."
        },
        "activeConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Output only. Current configuration of the device as registered to the SAS."
        },
        "deviceMetadata": {
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests.",
          "$ref": "SasPortalDeviceMetadata"
        }
      }
    },
    "SasPortalListNodesResponse": {
      "description": "Response for ListNodes method.",
      "id": "SasPortalListNodesResponse",
      "properties": {
        "nodes": {
          "items": {
            "$ref": "SasPortalNode"
          },
          "description": "The nodes that match the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes method that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "properties": {
        "encodedDevice": {
          "format": "byte",
          "type": "string",
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set."
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database."
        }
      },
      "type": "object",
      "description": "Request for UpdateSignedDevice method.",
      "id": "SasPortalUpdateSignedDeviceRequest"
    },
    "SasPortalCreateSignedDeviceRequest": {
      "properties": {
        "installerId": {
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database.",
          "type": "string"
        },
        "encodedDevice": {
          "format": "byte",
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the [Device]. The user_id field must be set."
        }
      },
      "id": "SasPortalCreateSignedDeviceRequest",
      "type": "object",
      "description": "Request for CreateSignedDevice method."
    },
    "SasPortalTestPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestPermissions` method.",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the permissions are being requested."
        }
      },
      "id": "SasPortalTestPermissionsRequest"
    },
    "SasPortalDeviceAirInterface": {
      "type": "object",
      "properties": {
        "supportedSpec": {
          "description": "This field is related to the radioTechnology field and provides the air interface specification that the CBSD is compliant with at the time of registration. Optional",
          "type": "string"
        },
        "radioTechnology": {
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "description": "This field specifies the radio access technology that is used for the CBSD. Conditional",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        }
      },
      "description": "Information about the device's air interface.",
      "id": "SasPortalDeviceAirInterface"
    },
    "SasPortalBulkCreateDeviceResponse": {
      "id": "SasPortalBulkCreateDeviceResponse",
      "description": "Response for BulkCreateDevice method.",
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "description": "Required. The devices that were imported.",
          "items": {
            "$ref": "SasPortalDevice"
          }
        }
      }
    },
    "SasPortalAssignment": {
      "description": "Associates `members` with a `role`.",
      "properties": {
        "role": {
          "description": "Required. Role that is assigned to `members`.",
          "type": "string"
        },
        "members": {
          "type": "array",
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SasPortalAssignment",
      "type": "object"
    },
    "SasPortalEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "SasPortalEmpty"
    },
    "SasPortalSignDeviceRequest": {
      "properties": {
        "device": {
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set.",
          "$ref": "SasPortalDevice"
        }
      },
      "id": "SasPortalSignDeviceRequest",
      "type": "object",
      "description": "Request for SignDevice method."
    },
    "SasPortalCustomer": {
      "description": "Entity representing a SAS customer.",
      "properties": {
        "displayName": {
          "description": "Required. Name of the organization that the customer entity represents.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the customer.",
          "type": "string"
        },
        "sasUserIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "User IDs used by the devices belonging to this customer."
        }
      },
      "id": "SasPortalCustomer",
      "type": "object"
    },
    "SasPortalMoveNodeRequest": {
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource node or Customer) to reparent the node under."
        }
      },
      "description": "Request for MoveNode method.",
      "id": "SasPortalMoveNodeRequest",
      "type": "object"
    },
    "SasPortalGenerateSecretResponse": {
      "id": "SasPortalGenerateSecretResponse",
      "description": "Response for GenerateSecret method.",
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "The secret generated by the string and used by [ValidateInstaller] method."
        }
      }
    },
    "SasPortalOperation": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        }
      },
      "id": "SasPortalOperation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "SasPortalListDevicesResponse": {
      "id": "SasPortalListDevicesResponse",
      "type": "object",
      "description": "Response for ListDevices method.",
      "properties": {
        "devices": {
          "items": {
            "$ref": "SasPortalDevice"
          },
          "description": "The devices that match the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListDevices method that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices."
        }
      }
    },
    "SasPortalDeviceGrant": {
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.",
      "id": "SasPortalDeviceGrant",
      "type": "object",
      "properties": {
        "expireTime": {
          "description": "The expiration time of the grant.",
          "type": "string",
          "format": "google-datetime"
        },
        "frequencyRange": {
          "description": "The transmission frequency range.",
          "$ref": "SasPortalFrequencyRange"
        },
        "state": {
          "description": "State of the grant.",
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ],
          "type": "string"
        },
        "grantId": {
          "type": "string",
          "description": "Grant Id."
        },
        "moveList": {
          "items": {
            "$ref": "SasPortalDpaMoveList"
          },
          "description": "The DPA move lists on which this grant appears.",
          "type": "array"
        },
        "suspensionReason": {
          "description": "If the grant is suspended, the reason(s) for suspension.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "channelType": {
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Type of channel used."
        },
        "maxEirp": {
          "format": "double",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of maxEirp represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
          "type": "number"
        }
      }
    },
    "SasPortalValidateInstallerRequest": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "Required. Secret returned by the GenerateSecret method."
        },
        "installerId": {
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database.",
          "type": "string"
        },
        "encodedSecret": {
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret.",
          "type": "string"
        }
      },
      "description": "Request for ValidateInstaller method.",
      "id": "SasPortalValidateInstallerRequest"
    },
    "SasPortalDpaMoveList": {
      "properties": {
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The frequency range that the move list affects."
        },
        "dpaId": {
          "description": "The ID of the DPA.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalDpaMoveList",
      "description": "An entry in a DPA's move list."
    },
    "SasPortalStatus": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        }
      },
      "id": "SasPortalStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "SasPortalMoveDeviceRequest": {
      "id": "SasPortalMoveDeviceRequest",
      "description": "Request for MoveDevice method.",
      "type": "object",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource (Node or Customer) to reparent the device under."
        }
      }
    },
    "SasPortalBulkCreateDeviceRequest": {
      "id": "SasPortalBulkCreateDeviceRequest",
      "type": "object",
      "description": "Request for BulkCreateDevice method.",
      "properties": {
        "csv": {
          "description": "Required. A csv with each row representing a [device]. Each row must conform to the regulations described on CreateDeviceRequest's device field.",
          "type": "string"
        }
      }
    },
    "SasPortalGetPolicyRequest": {
      "description": "Request message for `GetPolicy` method.",
      "id": "SasPortalGetPolicyRequest",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being requested."
        }
      },
      "type": "object"
    },
    "SasPortalNode": {
      "id": "SasPortalNode",
      "type": "object",
      "description": "The Node.",
      "properties": {
        "sasUserIds": {
          "description": "User ids used by the devices belonging to this node.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. Resource name.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "The node's display name."
        }
      }
    },
    "SasPortalPolicy": {
      "id": "SasPortalPolicy",
      "properties": {
        "etag": {
          "description": "The [etag] is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the [etag] in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An [etag] is returned in the response to [GetPolicy], and systems are expected to put that etag in the request to [SetPolicy] to ensure that their change will be applied to the same version of the policy. If no [etag] is provided in the call to [SetPolicy], then the existing policy is overwritten blindly.",
          "format": "byte",
          "type": "string"
        },
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "SasPortalAssignment"
          }
        }
      },
      "description": "Defines an access control policy to the resources.",
      "type": "object"
    },
    "SasPortalValidateInstallerResponse": {
      "description": "Response for ValidateInstaller method] [spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller].",
      "properties": {},
      "id": "SasPortalValidateInstallerResponse",
      "type": "object"
    },
    "SasPortalDeviceMetadata": {
      "description": "Device data overridable by both SAS Portal and registration requests.",
      "id": "SasPortalDeviceMetadata",
      "properties": {},
      "type": "object"
    },
    "SasPortalListCustomersResponse": {
      "description": "Response for `ListCustomers`.",
      "id": "SasPortalListCustomersResponse",
      "properties": {
        "customers": {
          "items": {
            "$ref": "SasPortalCustomer"
          },
          "type": "array",
          "description": "The list of customers that match the request."
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListCustomers method that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SasPortalDeviceModel": {
      "description": "Information about the model of the device.",
      "type": "object",
      "id": "SasPortalDeviceModel",
      "properties": {
        "firmwareVersion": {
          "description": "The firmware version of the device.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the device model."
        },
        "hardwareVersion": {
          "description": "The hardware version of the device.",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "The name of the device vendor."
        },
        "softwareVersion": {
          "description": "The software version of the device.",
          "type": "string"
        }
      }
    },
    "SasPortalDeviceConfig": {
      "properties": {
        "userId": {
          "type": "string",
          "description": "The identifier of a device user."
        },
        "measurementCapabilities": {
          "type": "array",
          "description": "Measurement reporting capabilities of the device.",
          "items": {
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ],
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              ""
            ]
          }
        },
        "callSign": {
          "description": "The call sign of the device operator.",
          "type": "string"
        },
        "model": {
          "$ref": "SasPortalDeviceModel",
          "description": "Information about this device model."
        },
        "airInterface": {
          "description": "Information about this device's air interface.",
          "$ref": "SasPortalDeviceAirInterface"
        },
        "installationParams": {
          "$ref": "SasPortalInstallationParams",
          "description": "Installation parameters for the device."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output-only. The last time the device configuration was edited."
        },
        "isSigned": {
          "type": "boolean",
          "description": "Output-only. Whether the configuration has been signed by a CPI."
        },
        "category": {
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "description": "FCC category of the device."
        },
        "state": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "description": "State of the configuration.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about the device configuration.",
      "id": "SasPortalDeviceConfig"
    },
    "SasPortalFrequencyRange": {
      "id": "SasPortalFrequencyRange",
      "properties": {
        "highFrequencyMhz": {
          "type": "number",
          "description": "The highest frequency of the frequency range in MHz.",
          "format": "double"
        },
        "lowFrequencyMhz": {
          "description": "The lowest frequency of the frequency range in MHz.",
          "type": "number",
          "format": "double"
        }
      },
      "type": "object",
      "description": "Frequency range from `low_frequency` to `high_frequency`."
    },
    "SasPortalGenerateSecretRequest": {
      "properties": {},
      "id": "SasPortalGenerateSecretRequest",
      "description": "Request for GenerateSecret method] [spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret].",
      "type": "object"
    }
  },
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "ownerName": "Google",
  "baseUrl": "https://sasportal.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "revision": "20200824",
  "title": "SAS Portal API",
  "servicePath": "",
  "rootUrl": "https://sasportal.googleapis.com/",
  "ownerDomain": "google.com",
  "resources": {
    "installer": {
      "methods": {
        "validate": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "flatPath": "v1alpha1/installer:validate",
          "id": "sasportal.installer.validate",
          "parameters": {},
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "parameterOrder": [],
          "path": "v1alpha1/installer:validate"
        },
        "generateSecret": {
          "path": "v1alpha1/installer:generateSecret",
          "parameterOrder": [],
          "description": "Generates a secret to be used with the ValidateInstaller method",
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "id": "sasportal.installer.generateSecret",
          "httpMethod": "POST",
          "parameters": {},
          "flatPath": "v1alpha1/installer:generateSecret",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          }
        }
      }
    },
    "nodes": {
      "methods": {
        "get": {
          "id": "sasportal.nodes.get",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "SasPortalNode"
          },
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "description": "Required. The name of the node.",
              "location": "path",
              "pattern": "^nodes/[^/]+$"
            }
          },
          "description": "Returns a requested node.",
          "httpMethod": "GET"
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "bulk": {
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:bulk",
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "path": "v1alpha1/{+parent}/devices:bulk",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "id": "sasportal.nodes.devices.bulk",
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "required": true
                }
              }
            },
            "createSigned": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates a signed device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^nodes/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "id": "sasportal.nodes.devices.createSigned",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "httpMethod": "POST"
            },
            "signDevice": {
              "id": "sasportal.nodes.devices.signDevice",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+name}:signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "description": "Signs a device."
            },
            "delete": {
              "id": "sasportal.nodes.devices.delete",
              "description": "Deletes a device.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device.",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "DELETE"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "location": "path"
                }
              },
              "id": "sasportal.nodes.devices.create",
              "path": "v1alpha1/{+parent}/devices",
              "httpMethod": "POST",
              "description": "Creates a device under a node or customer.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices"
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Gets details about a device.",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "required": true,
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "id": "sasportal.nodes.devices.get",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}"
            },
            "move": {
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the device to move.",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "id": "sasportal.nodes.devices.move",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "description": "Moves a device under another node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "parameterOrder": [
                "name"
              ]
            },
            "updateSigned": {
              "parameterOrder": [
                "name"
              ],
              "description": "Updates a signed device.",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "id": "sasportal.nodes.devices.updateSigned",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:updateSigned",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the device to update.",
                  "type": "string"
                }
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "id": "sasportal.nodes.devices.list",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "path": "v1alpha1/{+parent}/devices",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "type": "string"
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "location": "path"
                },
                "pageSize": {
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "format": "int32",
                  "location": "query",
                  "type": "integer"
                }
              },
              "description": "Lists devices under a node or customer."
            },
            "patch": {
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "description": "Updates a device.",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "Fields to be updated.",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "name": {
                  "description": "Output only. The resource path name.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "id": "sasportal.nodes.devices.patch",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            }
          }
        },
        "nodes": {
          "resources": {
            "nodes": {
              "methods": {
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of nodes to return in the response.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "sasportal.nodes.nodes.nodes.list",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "description": "Lists nodes.",
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name where the node is to be created.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "id": "sasportal.nodes.nodes.nodes.create",
                  "path": "v1alpha1/{+parent}/nodes",
                  "description": "Creates a new node.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes"
                }
              }
            },
            "devices": {
              "methods": {
                "createSigned": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a signed device under a node or customer.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "sasportal.nodes.nodes.devices.createSigned"
                },
                "bulk": {
                  "id": "sasportal.nodes.nodes.devices.bulk",
                  "path": "v1alpha1/{+parent}/devices:bulk",
                  "description": "Creates a device under a node or customer. Returned devices are unordered.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:bulk",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalBulkCreateDeviceResponse"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalBulkCreateDeviceRequest"
                  }
                },
                "list": {
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "description": "Lists devices under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "sasportal.nodes.nodes.devices.list",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "type": "integer",
                      "format": "int32"
                    },
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "type": "string"
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "sasportal.nodes.nodes.devices.create",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "description": "Creates a device under a node or customer.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Returns a requested node.",
              "httpMethod": "GET",
              "id": "sasportal.nodes.nodes.get",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "patch": {
              "description": "Updates an existing node.",
              "request": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "id": "sasportal.nodes.nodes.patch",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string",
                  "description": "Fields to be updated."
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Output only. Resource name.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+name}"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalNode"
              },
              "id": "sasportal.nodes.nodes.create",
              "httpMethod": "POST",
              "description": "Creates a new node.",
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "parameterOrder": [
                "parent"
              ]
            },
            "move": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "id": "sasportal.nodes.nodes.move",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the node to move.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true
                }
              },
              "description": "Moves a node under another node or customer."
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the node.",
                  "required": true
                }
              },
              "path": "v1alpha1/{+name}",
              "id": "sasportal.nodes.nodes.delete",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Deletes a node."
            },
            "list": {
              "description": "Lists nodes.",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "id": "sasportal.nodes.nodes.list",
              "path": "v1alpha1/{+parent}/nodes",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from."
                },
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "required": true,
                  "location": "path"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of nodes to return in the response."
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            }
          }
        }
      }
    },
    "customers": {
      "methods": {
        "get": {
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "httpMethod": "GET",
          "description": "Returns a requested customer.",
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "pattern": "^customers/[^/]+$",
              "description": "Required. The name of the customer.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "v1alpha1/customers/{customersId}",
          "id": "sasportal.customers.get",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        },
        "list": {
          "description": "Returns a list of requested customers.",
          "parameterOrder": [],
          "httpMethod": "GET",
          "flatPath": "v1alpha1/customers",
          "id": "sasportal.customers.list",
          "path": "v1alpha1/customers",
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A pagination token returned from a previous call to ListCustomers method that indicates where this listing should continue from."
            },
            "pageSize": {
              "description": "The maximum number of customers to return in the response.",
              "type": "integer",
              "location": "query",
              "format": "int32"
            }
          },
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        },
        "patch": {
          "parameterOrder": [
            "name"
          ],
          "path": "v1alpha1/{+name}",
          "httpMethod": "PATCH",
          "id": "sasportal.customers.patch",
          "description": "Updates an existing customer.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "parameters": {
            "updateMask": {
              "format": "google-fieldmask",
              "description": "Fields to be updated.",
              "location": "query",
              "type": "string"
            },
            "name": {
              "pattern": "^customers/[^/]+$",
              "description": "Output only. Resource name of the customer.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "v1alpha1/customers/{customersId}",
          "request": {
            "$ref": "SasPortalCustomer"
          }
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "move": {
              "path": "v1alpha1/{+name}:move",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to move."
                }
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "description": "Moves a device under another node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "id": "sasportal.customers.devices.move",
              "parameterOrder": [
                "name"
              ]
            },
            "createSigned": {
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates a signed device under a node or customer.",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                }
              },
              "id": "sasportal.customers.devices.createSigned",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "POST"
            },
            "get": {
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "sasportal.customers.devices.get",
              "parameterOrder": [
                "name"
              ],
              "description": "Gets details about a device.",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}"
            },
            "updateSigned": {
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "location": "path",
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+name}:updateSigned",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "sasportal.customers.devices.updateSigned",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates a signed device.",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Creates a device under a node or customer.",
              "path": "v1alpha1/{+parent}/devices",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "sasportal.customers.devices.create"
            },
            "delete": {
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string"
                }
              },
              "description": "Deletes a device.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "DELETE",
              "id": "sasportal.customers.devices.delete",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}"
            },
            "bulk": {
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/devices:bulk",
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "id": "sasportal.customers.devices.bulk",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices:bulk",
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists devices under a node or customer.",
              "id": "sasportal.customers.devices.list",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "path": "v1alpha1/{+parent}/devices",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                  "location": "query",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ]
            },
            "signDevice": {
              "httpMethod": "POST",
              "description": "Signs a device.",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "id": "sasportal.customers.devices.signDevice",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Output only. The resource path name."
                }
              },
              "path": "v1alpha1/{+name}:signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice"
            },
            "patch": {
              "id": "sasportal.customers.devices.patch",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "description": "Updates a device.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Output only. The resource path name."
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "Fields to be updated."
                }
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            }
          }
        },
        "nodes": {
          "resources": {
            "nodes": {
              "methods": {
                "create": {
                  "description": "Creates a new node.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "id": "sasportal.customers.nodes.nodes.create",
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes"
                },
                "list": {
                  "path": "v1alpha1/{+parent}/nodes",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists nodes.",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of nodes to return in the response.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource name, for example, \"nodes/1\"."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "id": "sasportal.customers.nodes.nodes.list"
                }
              }
            }
          },
          "methods": {
            "create": {
              "id": "sasportal.customers.nodes.create",
              "request": {
                "$ref": "SasPortalNode"
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                }
              },
              "path": "v1alpha1/{+parent}/nodes",
              "description": "Creates a new node."
            },
            "get": {
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the node.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "id": "sasportal.customers.nodes.get",
              "description": "Returns a requested node.",
              "httpMethod": "GET"
            },
            "patch": {
              "request": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "id": "sasportal.customers.nodes.patch",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Updates an existing node.",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask"
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "description": "Deletes a node.",
              "id": "sasportal.customers.nodes.delete",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "move": {
              "description": "Moves a node under another node or customer.",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the node to move."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "path": "v1alpha1/{+name}:move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "sasportal.customers.nodes.move"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/nodes",
              "id": "sasportal.customers.nodes.list",
              "description": "Lists nodes.",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "required": true,
                  "location": "path"
                },
                "pageSize": {
                  "description": "The maximum number of nodes to return in the response.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes"
            }
          }
        }
      }
    },
    "policies": {
      "methods": {
        "test": {
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "flatPath": "v1alpha1/policies:test",
          "httpMethod": "POST",
          "path": "v1alpha1/policies:test",
          "description": "Returns permissions that a caller has on the specified resource.",
          "id": "sasportal.policies.test",
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        },
        "get": {
          "httpMethod": "POST",
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "parameters": {},
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "flatPath": "v1alpha1/policies:get",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "sasportal.policies.get",
          "parameterOrder": [],
          "path": "v1alpha1/policies:get"
        },
        "set": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          },
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "httpMethod": "POST",
          "id": "sasportal.policies.set",
          "flatPath": "v1alpha1/policies:set",
          "path": "v1alpha1/policies:set",
          "parameterOrder": [],
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
          "parameters": {}
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://sasportal.mtls.googleapis.com/",
  "protocol": "rest"
}
