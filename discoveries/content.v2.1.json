{
  "protocol": "rest",
  "title": "Content API for Shopping",
  "servicePath": "",
  "documentationLink": "https://developers.google.com/shopping-content/v2/",
  "resources": {
    "orderreports": {
      "methods": {
        "listtransactions": {
          "parameterOrder": [
            "merchantId",
            "disbursementId"
          ],
          "id": "content.orderreports.listtransactions",
          "response": {
            "$ref": "OrderreportsListTransactionsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "transactionEndDate": {
              "location": "query",
              "type": "string",
              "description": "The last date in which transaction occurred. In ISO 8601 format. Default: current date."
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "format": "uint32",
              "description": "The maximum number of disbursements to return in the response, used for paging."
            },
            "transactionStartDate": {
              "location": "query",
              "type": "string",
              "description": "The first date in which transaction occurred. In ISO 8601 format."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            },
            "disbursementId": {
              "description": "The Google-provided ID of the disbursement (found in Wallet).",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "description": "Retrieves a list of transactions for a disbursement from your Merchant Center account.",
          "flatPath": "content/v2.1/{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "httpMethod": "GET",
          "path": "content/v2.1/{merchantId}/orderreports/disbursements/{disbursementId}/transactions"
        },
        "listdisbursements": {
          "response": {
            "$ref": "OrderreportsListDisbursementsResponse"
          },
          "description": "Retrieves a report for disbursements from your Merchant Center account.",
          "id": "content.orderreports.listdisbursements",
          "path": "content/v2.1/{merchantId}/orderreports/disbursements",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2.1/{merchantId}/orderreports/disbursements",
          "parameters": {
            "maxResults": {
              "location": "query",
              "type": "integer",
              "format": "uint32",
              "description": "The maximum number of disbursements to return in the response, used for paging."
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string"
            },
            "disbursementStartDate": {
              "type": "string",
              "description": "The first date which disbursements occurred. In ISO 8601 format.",
              "location": "query"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "disbursementEndDate": {
              "location": "query",
              "type": "string",
              "description": "The last date which disbursements occurred. In ISO 8601 format. Default: current date."
            }
          },
          "httpMethod": "GET"
        }
      }
    },
    "pos": {
      "methods": {
        "insert": {
          "path": "content/v2.1/{merchantId}/pos/{targetMerchantId}/store",
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the POS or inventory data provider.",
              "type": "string",
              "format": "uint64",
              "location": "path"
            },
            "targetMerchantId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the target merchant."
            }
          },
          "flatPath": "content/v2.1/{merchantId}/pos/{targetMerchantId}/store",
          "description": "Creates a store for the given merchant.",
          "id": "content.pos.insert",
          "response": {
            "$ref": "PosStore"
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "request": {
            "$ref": "PosStore"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "response": {
            "$ref": "PosStore"
          },
          "flatPath": "content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ],
          "parameters": {
            "storeCode": {
              "description": "A store code that is unique per merchant.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the POS or inventory data provider.",
              "location": "path",
              "format": "uint64",
              "type": "string"
            },
            "targetMerchantId": {
              "location": "path",
              "description": "The ID of the target merchant.",
              "format": "uint64",
              "required": true,
              "type": "string"
            }
          },
          "id": "content.pos.get",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "description": "Retrieves information about the given store."
        },
        "list": {
          "flatPath": "content/v2.1/{merchantId}/pos/{targetMerchantId}/store",
          "response": {
            "$ref": "PosListResponse"
          },
          "description": "Lists the stores of the target merchant.",
          "parameters": {
            "targetMerchantId": {
              "description": "The ID of the target merchant.",
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the POS or inventory data provider.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "httpMethod": "GET",
          "id": "content.pos.list",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/pos/{targetMerchantId}/store"
        },
        "sale": {
          "request": {
            "$ref": "PosSaleRequest"
          },
          "id": "content.pos.sale",
          "response": {
            "$ref": "PosSaleResponse"
          },
          "path": "content/v2.1/{merchantId}/pos/{targetMerchantId}/sale",
          "httpMethod": "POST",
          "description": "Submit a sale event for the given merchant.",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "flatPath": "content/v2.1/{merchantId}/pos/{targetMerchantId}/sale",
          "parameters": {
            "targetMerchantId": {
              "format": "uint64",
              "description": "The ID of the target merchant.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the POS or inventory data provider."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "custombatch": {
          "path": "content/v2.1/pos/batch",
          "response": {
            "$ref": "PosCustomBatchResponse"
          },
          "request": {
            "$ref": "PosCustomBatchRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Batches multiple POS-related calls in a single request.",
          "id": "content.pos.custombatch",
          "flatPath": "content/v2.1/pos/batch",
          "parameters": {},
          "httpMethod": "POST",
          "parameterOrder": []
        },
        "delete": {
          "httpMethod": "DELETE",
          "flatPath": "content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.pos.delete",
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the POS or inventory data provider.",
              "required": true,
              "format": "uint64"
            },
            "storeCode": {
              "location": "path",
              "description": "A store code that is unique per merchant.",
              "type": "string",
              "required": true
            },
            "targetMerchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the target merchant.",
              "format": "uint64",
              "location": "path"
            }
          },
          "description": "Deletes a store for the given merchant.",
          "path": "content/v2.1/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ]
        },
        "inventory": {
          "request": {
            "$ref": "PosInventoryRequest"
          },
          "response": {
            "$ref": "PosInventoryResponse"
          },
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the POS or inventory data provider.",
              "type": "string",
              "format": "uint64",
              "required": true
            },
            "targetMerchantId": {
              "description": "The ID of the target merchant.",
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "httpMethod": "POST",
          "description": "Submit inventory for the given merchant.",
          "flatPath": "content/v2.1/{merchantId}/pos/{targetMerchantId}/inventory",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/pos/{targetMerchantId}/inventory",
          "id": "content.pos.inventory"
        }
      }
    },
    "csses": {
      "methods": {
        "updatelabels": {
          "parameterOrder": [
            "cssGroupId",
            "cssDomainId"
          ],
          "parameters": {
            "cssDomainId": {
              "type": "string",
              "description": "Required. The ID of the updated CSS domain.",
              "location": "path",
              "format": "int64",
              "required": true
            },
            "cssGroupId": {
              "description": "Required. The CSS group ID of the updated CSS domain.",
              "type": "string",
              "location": "path",
              "required": true,
              "format": "int64"
            }
          },
          "flatPath": "content/v2.1/{cssGroupId}/csses/{cssDomainId}/updatelabels",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{cssGroupId}/csses/{cssDomainId}/updatelabels",
          "request": {
            "$ref": "LabelIds"
          },
          "id": "content.csses.updatelabels",
          "httpMethod": "POST",
          "description": "Updates labels that are assigned to a CSS domain by its CSS group.",
          "response": {
            "$ref": "Css"
          }
        },
        "list": {
          "httpMethod": "GET",
          "id": "content.csses.list",
          "parameters": {
            "pageSize": {
              "type": "integer",
              "location": "query",
              "format": "int32",
              "description": "The maximum number of CSS domains to return. The service may return fewer than this value. If unspecified, at most 50 CSS domains will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
            },
            "cssGroupId": {
              "description": "Required. The CSS group ID of CSS domains to be listed.",
              "required": true,
              "type": "string",
              "format": "int64",
              "location": "path"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A page token, received from a previous `ListCsses` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCsses` must match the call that provided the page token."
            }
          },
          "path": "content/v2.1/{cssGroupId}/csses",
          "response": {
            "$ref": "ListCssesResponse"
          },
          "description": "Lists CSS domains affiliated with a CSS group.",
          "parameterOrder": [
            "cssGroupId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{cssGroupId}/csses"
        },
        "get": {
          "response": {
            "$ref": "Css"
          },
          "id": "content.csses.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "cssGroupId",
            "cssDomainId"
          ],
          "flatPath": "content/v2.1/{cssGroupId}/csses/{cssDomainId}",
          "httpMethod": "GET",
          "path": "content/v2.1/{cssGroupId}/csses/{cssDomainId}",
          "description": "Retrieves a single CSS domain by ID.",
          "parameters": {
            "cssDomainId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Required. The ID of the CSS domain to return.",
              "format": "int64"
            },
            "cssGroupId": {
              "format": "int64",
              "type": "string",
              "location": "path",
              "description": "Required. The ID of the managing account. If this parameter is not the same as [cssDomainId](#cssDomainId), then this ID must be a CSS group ID and `cssDomainId` must be the ID of a CSS domain affiliated with this group.",
              "required": true
            }
          }
        }
      }
    },
    "products": {
      "methods": {
        "custombatch": {
          "parameterOrder": [],
          "id": "content.products.custombatch",
          "httpMethod": "POST",
          "description": "Retrieves, inserts, and deletes multiple products in a single request.",
          "response": {
            "$ref": "ProductsCustomBatchResponse"
          },
          "parameters": {},
          "flatPath": "content/v2.1/products/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "ProductsCustomBatchRequest"
          },
          "path": "content/v2.1/products/batch"
        },
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "Product"
          },
          "id": "content.products.insert",
          "request": {
            "$ref": "Product"
          },
          "flatPath": "content/v2.1/{merchantId}/products",
          "description": "Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.",
          "parameters": {
            "feedId": {
              "type": "string",
              "description": "The Content API Supplemental Feed ID.",
              "format": "uint64",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account."
            }
          },
          "path": "content/v2.1/{merchantId}/products"
        },
        "list": {
          "id": "content.products.list",
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2.1/{merchantId}/products",
          "description": "Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "ProductsListResponse"
          },
          "path": "content/v2.1/{merchantId}/products",
          "parameters": {
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "The maximum number of products to return in the response, used for paging."
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account.",
              "type": "string"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            }
          }
        },
        "delete": {
          "path": "content/v2.1/{merchantId}/products/{productId}",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "flatPath": "content/v2.1/{merchantId}/products/{productId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "DELETE",
          "parameters": {
            "feedId": {
              "description": "The Content API Supplemental Feed ID.",
              "location": "query",
              "type": "string",
              "format": "uint64"
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "type": "string",
              "location": "path"
            },
            "productId": {
              "description": "The REST ID of the product.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "id": "content.products.delete",
          "description": "Deletes a product from your Merchant Center account."
        },
        "get": {
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "flatPath": "content/v2.1/{merchantId}/products/{productId}",
          "id": "content.products.get",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path"
            },
            "productId": {
              "type": "string",
              "description": "The REST ID of the product.",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "GET",
          "description": "Retrieves a product from your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Product"
          },
          "path": "content/v2.1/{merchantId}/products/{productId}"
        }
      }
    },
    "liasettings": {
      "methods": {
        "get": {
          "path": "content/v2.1/{merchantId}/liasettings/{accountId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "accountId": {
              "description": "The ID of the account for which to get or update LIA settings.",
              "location": "path",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "merchantId": {
              "type": "string",
              "required": true,
              "format": "uint64",
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            }
          },
          "description": "Retrieves the LIA settings of the account.",
          "flatPath": "content/v2.1/{merchantId}/liasettings/{accountId}",
          "id": "content.liasettings.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LiaSettings"
          }
        },
        "requestinventoryverification": {
          "path": "content/v2.1/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country"
          ],
          "id": "content.liasettings.requestinventoryverification",
          "description": "Requests inventory validation for the specified country.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "LiasettingsRequestInventoryVerificationResponse"
          },
          "flatPath": "content/v2.1/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            },
            "country": {
              "description": "The country for which inventory validation is requested.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "accountId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "format": "uint64"
            }
          }
        },
        "requestgmbaccess": {
          "flatPath": "content/v2.1/{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "description": "Requests access to a specified Google My Business account.",
          "id": "content.liasettings.requestgmbaccess",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LiasettingsRequestGmbAccessResponse"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "content/v2.1/{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "parameters": {
            "merchantId": {
              "type": "string",
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "accountId": {
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account for which GMB access is requested.",
              "required": true
            },
            "gmbEmail": {
              "type": "string",
              "description": "The email of the Google My Business account.",
              "location": "query"
            }
          },
          "httpMethod": "POST"
        },
        "listposdataproviders": {
          "description": "Retrieves the list of POS data providers that have active settings for the all eiligible countries.",
          "httpMethod": "GET",
          "response": {
            "$ref": "LiasettingsListPosDataProvidersResponse"
          },
          "parameterOrder": [],
          "parameters": {},
          "flatPath": "content/v2.1/liasettings/posdataproviders",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/liasettings/posdataproviders",
          "id": "content.liasettings.listposdataproviders"
        },
        "getaccessiblegmbaccounts": {
          "httpMethod": "GET",
          "path": "content/v2.1/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LiasettingsGetAccessibleGmbAccountsResponse"
          },
          "id": "content.liasettings.getaccessiblegmbaccounts",
          "description": "Retrieves the list of accessible Google My Business accounts.",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "content/v2.1/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "accountId": {
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account for which to retrieve accessible Google My Business accounts.",
              "required": true
            }
          }
        },
        "custombatch": {
          "path": "content/v2.1/liasettings/batch",
          "id": "content.liasettings.custombatch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "LiasettingsCustomBatchResponse"
          },
          "request": {
            "$ref": "LiasettingsCustomBatchRequest"
          },
          "flatPath": "content/v2.1/liasettings/batch",
          "description": "Retrieves and/or updates the LIA settings of multiple accounts in a single request.",
          "httpMethod": "POST",
          "parameters": {}
        },
        "setinventoryverificationcontact": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.liasettings.setinventoryverificationcontact",
          "path": "content/v2.1/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "httpMethod": "POST",
          "description": "Sets the inventory verification contract for the specified country.",
          "flatPath": "content/v2.1/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "response": {
            "$ref": "LiasettingsSetInventoryVerificationContactResponse"
          },
          "parameters": {
            "accountId": {
              "required": true,
              "type": "string",
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "language": {
              "description": "The language for which inventory verification is requested.",
              "type": "string",
              "location": "query"
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path"
            },
            "contactEmail": {
              "description": "The email of the inventory verification contact.",
              "type": "string",
              "location": "query"
            },
            "country": {
              "description": "The country for which inventory verification is requested.",
              "type": "string",
              "location": "query"
            },
            "contactName": {
              "type": "string",
              "description": "The name of the inventory verification contact.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "description": "The maximum number of LIA settings to return in the response, used for paging.",
              "format": "uint32"
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account."
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "path": "content/v2.1/{merchantId}/liasettings",
          "response": {
            "$ref": "LiasettingsListResponse"
          },
          "httpMethod": "GET",
          "id": "content.liasettings.list",
          "description": "Lists the LIA settings of the sub-accounts in your Merchant Center account.",
          "flatPath": "content/v2.1/{merchantId}/liasettings"
        },
        "setposdataprovider": {
          "path": "content/v2.1/{merchantId}/liasettings/{accountId}/setposdataprovider",
          "parameters": {
            "posExternalAccountId": {
              "description": "The account ID by which this merchant is known to the POS data provider.",
              "type": "string",
              "location": "query"
            },
            "accountId": {
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account for which to retrieve accessible Google My Business accounts.",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "posDataProviderId": {
              "format": "uint64",
              "location": "query",
              "description": "The ID of POS data provider.",
              "type": "string"
            },
            "country": {
              "location": "query",
              "type": "string",
              "description": "The country for which the POS data provider is selected."
            }
          },
          "response": {
            "$ref": "LiasettingsSetPosDataProviderResponse"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Sets the POS data provider for the specified country.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.liasettings.setposdataprovider",
          "flatPath": "content/v2.1/{merchantId}/liasettings/{accountId}/setposdataprovider",
          "httpMethod": "POST"
        },
        "update": {
          "path": "content/v2.1/{merchantId}/liasettings/{accountId}",
          "parameters": {
            "accountId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the account for which to get or update LIA settings."
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64"
            }
          },
          "response": {
            "$ref": "LiaSettings"
          },
          "httpMethod": "PUT",
          "flatPath": "content/v2.1/{merchantId}/liasettings/{accountId}",
          "description": "Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource.",
          "request": {
            "$ref": "LiaSettings"
          },
          "id": "content.liasettings.update",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        }
      }
    },
    "orderinvoices": {
      "methods": {
        "createrefundinvoice": {
          "request": {
            "$ref": "OrderinvoicesCreateRefundInvoiceRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "description": "Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using `createChargeInvoice`. All amounts (except for the summary) are incremental with respect to the previous invoice.",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "response": {
            "$ref": "OrderinvoicesCreateRefundInvoiceResponse"
          },
          "flatPath": "content/v2.1/{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "id": "content.orderinvoices.createrefundinvoice",
          "parameters": {
            "merchantId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            },
            "orderId": {
              "location": "path",
              "description": "The ID of the order.",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "POST"
        },
        "createchargeinvoice": {
          "id": "content.orderinvoices.createchargeinvoice",
          "path": "content/v2.1/{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "response": {
            "$ref": "OrderinvoicesCreateChargeInvoiceResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "format": "uint64",
              "location": "path"
            },
            "orderId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the order."
            }
          },
          "request": {
            "$ref": "OrderinvoicesCreateChargeInvoiceRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders."
        }
      }
    },
    "orders": {
      "methods": {
        "canceltestorderbycustomer": {
          "request": {
            "$ref": "OrdersCancelTestOrderByCustomerRequest"
          },
          "id": "content.orders.canceltestorderbycustomer",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/testorders/{orderId}/cancelByCustomer",
          "flatPath": "content/v2.1/{merchantId}/testorders/{orderId}/cancelByCustomer",
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersCancelTestOrderByCustomerResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "location": "path"
            },
            "orderId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the test order to cancel."
            }
          },
          "description": "Sandbox only. Cancels a test order for customer-initiated cancellation."
        },
        "acknowledge": {
          "description": "Marks an order as acknowledged.",
          "response": {
            "$ref": "OrdersAcknowledgeResponse"
          },
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/acknowledge",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/orders/{orderId}/acknowledge",
          "parameters": {
            "orderId": {
              "required": true,
              "description": "The ID of the order.",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "location": "path"
            }
          },
          "id": "content.orders.acknowledge",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersAcknowledgeRequest"
          }
        },
        "getbymerchantorderid": {
          "parameterOrder": [
            "merchantId",
            "merchantOrderId"
          ],
          "description": "Retrieves an order using merchant order ID.",
          "path": "content/v2.1/{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "httpMethod": "GET",
          "flatPath": "content/v2.1/{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "format": "uint64"
            },
            "merchantOrderId": {
              "type": "string",
              "description": "The merchant order ID to be looked for.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "OrdersGetByMerchantOrderIdResponse"
          },
          "id": "content.orders.getbymerchantorderid"
        },
        "instorerefundlineitem": {
          "response": {
            "$ref": "OrdersInStoreRefundLineItemResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the order."
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            }
          },
          "request": {
            "$ref": "OrdersInStoreRefundLineItemRequest"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.instorerefundlineitem",
          "description": "Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return."
        },
        "setlineitemmetadata": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/setLineItemMetadata",
          "description": "Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided via other methods. Submitted key-value pairs can be retrieved as part of the orders resource.",
          "request": {
            "$ref": "OrdersSetLineItemMetadataRequest"
          },
          "httpMethod": "POST",
          "path": "content/v2.1/{merchantId}/orders/{orderId}/setLineItemMetadata",
          "id": "content.orders.setlineitemmetadata",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            },
            "orderId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the order."
            }
          },
          "response": {
            "$ref": "OrdersSetLineItemMetadataResponse"
          }
        },
        "list": {
          "description": "Lists the orders in your Merchant Center account.",
          "response": {
            "$ref": "OrdersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/orders",
          "parameters": {
            "orderBy": {
              "description": "Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc ",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page."
            },
            "placedDateEnd": {
              "description": "Obtains orders placed before this date (exclusively), in ISO 8601 format.",
              "type": "string",
              "location": "query"
            },
            "acknowledged": {
              "type": "boolean",
              "location": "query",
              "description": "Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged orders are returned. "
            },
            "statuses": {
              "enum": [
                "ACTIVE",
                "COMPLETED",
                "CANCELED",
                "IN_PROGRESS",
                "PENDING_SHIPMENT",
                "PARTIALLY_SHIPPED",
                "SHIPPED",
                "PARTIALLY_DELIVERED",
                "DELIVERED",
                "PARTIALLY_RETURNED",
                "RETURNED"
              ],
              "repeated": true,
              "description": "Obtains orders that match any of the specified statuses. Please note that `active` is a shortcut for `pendingShipment` and `partiallyShipped`, and `completed` is a shortcut for `shipped`, `partiallyDelivered`, `delivered`, `partiallyReturned`, `returned`, and `canceled`.",
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ]
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "format": "uint64"
            },
            "placedDateStart": {
              "type": "string",
              "description": "Obtains orders placed after this date (inclusively), in ISO 8601 format.",
              "location": "query"
            }
          },
          "id": "content.orders.list",
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "path": "content/v2.1/{merchantId}/orders"
        },
        "updatemerchantorderid": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.updatemerchantorderid",
          "response": {
            "$ref": "OrdersUpdateMerchantOrderIdResponse"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true
            },
            "orderId": {
              "description": "The ID of the order.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "request": {
            "$ref": "OrdersUpdateMerchantOrderIdRequest"
          },
          "path": "content/v2.1/{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "description": "Updates the merchant order ID for a given order."
        },
        "createtestorder": {
          "request": {
            "$ref": "OrdersCreateTestOrderRequest"
          },
          "path": "content/v2.1/{merchantId}/testorders",
          "httpMethod": "POST",
          "id": "content.orders.createtestorder",
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "OrdersCreateTestOrderResponse"
          },
          "flatPath": "content/v2.1/{merchantId}/testorders",
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Sandbox only. Creates a test order.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "refundorder": {
          "parameters": {
            "orderId": {
              "type": "string",
              "description": "The ID of the order to refund.",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/refundorder",
          "request": {
            "$ref": "OrdersRefundOrderRequest"
          },
          "response": {
            "$ref": "OrdersRefundOrderResponse"
          },
          "id": "content.orders.refundorder",
          "path": "content/v2.1/{merchantId}/orders/{orderId}/refundorder",
          "httpMethod": "POST",
          "description": "Issues a partial or total refund for an order.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "gettestordertemplate": {
          "httpMethod": "GET",
          "description": "Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.",
          "path": "content/v2.1/{merchantId}/testordertemplates/{templateName}",
          "response": {
            "$ref": "OrdersGetTestOrderTemplateResponse"
          },
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "templateName": {
              "location": "path",
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "enum": [
                "TEMPLATE1",
                "TEMPLATE2",
                "TEMPLATE1A",
                "TEMPLATE1B",
                "TEMPLATE3",
                "TEMPLATE4"
              ],
              "description": "The name of the template to retrieve.",
              "required": true,
              "type": "string"
            },
            "country": {
              "location": "query",
              "description": "The country of the template to retrieve. Defaults to `US`.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "templateName"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/testordertemplates/{templateName}",
          "id": "content.orders.gettestordertemplate"
        },
        "updateshipment": {
          "response": {
            "$ref": "OrdersUpdateShipmentResponse"
          },
          "path": "content/v2.1/{merchantId}/orders/{orderId}/updateShipment",
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/updateShipment",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path"
            },
            "orderId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the order."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.updateshipment",
          "request": {
            "$ref": "OrdersUpdateShipmentRequest"
          },
          "httpMethod": "POST",
          "description": "Updates a shipment's status, carrier, and/or tracking ID."
        },
        "refunditem": {
          "id": "content.orders.refunditem",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64"
            },
            "orderId": {
              "description": "The ID of the order to refund.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/refunditem",
          "request": {
            "$ref": "OrdersRefundItemRequest"
          },
          "path": "content/v2.1/{merchantId}/orders/{orderId}/refunditem",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrdersRefundItemResponse"
          },
          "httpMethod": "POST",
          "description": "Issues a partial or total refund for items and shipment."
        },
        "cancellineitem": {
          "request": {
            "$ref": "OrdersCancelLineItemRequest"
          },
          "path": "content/v2.1/{merchantId}/orders/{orderId}/cancelLineItem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameters": {
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "type": "string"
            }
          },
          "description": "Cancels a line item, making a full refund.",
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/cancelLineItem",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.cancellineitem",
          "response": {
            "$ref": "OrdersCancelLineItemResponse"
          }
        },
        "returnrefundlineitem": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.returnrefundlineitem",
          "request": {
            "$ref": "OrdersReturnRefundLineItemRequest"
          },
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            }
          },
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem",
          "response": {
            "$ref": "OrdersReturnRefundLineItemResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/orders/{orderId}/returnRefundLineItem",
          "description": "Returns and refunds a line item. Note that this method can only be called on fully shipped orders. Please also note that the Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.",
          "httpMethod": "POST"
        },
        "cancel": {
          "httpMethod": "POST",
          "id": "content.orders.cancel",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/cancel",
          "description": "Cancels all line items in an order, making a full refund.",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "path": "content/v2.1/{merchantId}/orders/{orderId}/cancel",
          "response": {
            "$ref": "OrdersCancelResponse"
          },
          "request": {
            "$ref": "OrdersCancelRequest"
          },
          "parameters": {
            "orderId": {
              "description": "The ID of the order to cancel.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "type": "string",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "format": "uint64"
            }
          }
        },
        "get": {
          "response": {
            "$ref": "Order"
          },
          "id": "content.orders.get",
          "path": "content/v2.1/{merchantId}/orders/{orderId}",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "location": "path"
            },
            "orderId": {
              "description": "The ID of the order.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "description": "Retrieves an order from your Merchant Center account.",
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "advancetestorder": {
          "flatPath": "content/v2.1/{merchantId}/testorders/{orderId}/advance",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "orderId": {
              "type": "string",
              "description": "The ID of the test order to modify.",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "type": "string"
            }
          },
          "id": "content.orders.advancetestorder",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrdersAdvanceTestOrderResponse"
          },
          "path": "content/v2.1/{merchantId}/testorders/{orderId}/advance",
          "description": "Sandbox only. Moves a test order from state \"`inProgress`\" to state \"`pendingShipment`\"."
        },
        "shiplineitems": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "request": {
            "$ref": "OrdersShipLineItemsRequest"
          },
          "description": "Marks line item(s) as shipped.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrdersShipLineItemsResponse"
          },
          "httpMethod": "POST",
          "id": "content.orders.shiplineitems",
          "path": "content/v2.1/{merchantId}/orders/{orderId}/shipLineItems",
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/shipLineItems",
          "parameters": {
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "required": true,
              "format": "uint64",
              "type": "string"
            }
          }
        },
        "updatelineitemshippingdetails": {
          "description": "Updates ship by and delivery by dates for a line item.",
          "request": {
            "$ref": "OrdersUpdateLineItemShippingDetailsRequest"
          },
          "id": "content.orders.updatelineitemshippingdetails",
          "path": "content/v2.1/{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "response": {
            "$ref": "OrdersUpdateLineItemShippingDetailsResponse"
          },
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "required": true
            },
            "orderId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the order."
            }
          },
          "httpMethod": "POST"
        },
        "rejectreturnlineitem": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "parameters": {
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "content/v2.1/{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrdersRejectReturnLineItemResponse"
          },
          "request": {
            "$ref": "OrdersRejectReturnLineItemRequest"
          },
          "id": "content.orders.rejectreturnlineitem",
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "description": "Rejects return on an line item."
        },
        "createtestreturn": {
          "id": "content.orders.createtestreturn",
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            },
            "orderId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the order."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "path": "content/v2.1/{merchantId}/orders/{orderId}/testreturn",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Sandbox only. Creates a test return.",
          "flatPath": "content/v2.1/{merchantId}/orders/{orderId}/testreturn",
          "response": {
            "$ref": "OrdersCreateTestReturnResponse"
          },
          "request": {
            "$ref": "OrdersCreateTestReturnRequest"
          }
        }
      }
    },
    "regionalinventory": {
      "methods": {
        "custombatch": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/regionalinventory/batch",
          "path": "content/v2.1/regionalinventory/batch",
          "response": {
            "$ref": "RegionalinventoryCustomBatchResponse"
          },
          "description": "Updates regional inventory for multiple products or regions in a single request.",
          "parameterOrder": [],
          "parameters": {},
          "httpMethod": "POST",
          "request": {
            "$ref": "RegionalinventoryCustomBatchRequest"
          },
          "id": "content.regionalinventory.custombatch"
        },
        "insert": {
          "path": "content/v2.1/{merchantId}/products/{productId}/regionalinventory",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.regionalinventory.insert",
          "description": "Update the regional inventory of a product in your Merchant Center account. If a regional inventory with the same region ID already exists, this method updates that entry.",
          "flatPath": "content/v2.1/{merchantId}/products/{productId}/regionalinventory",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "request": {
            "$ref": "RegionalInventory"
          },
          "parameters": {
            "productId": {
              "type": "string",
              "description": "The REST ID of the product for which to update the regional inventory.",
              "required": true,
              "location": "path"
            },
            "merchantId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account."
            }
          },
          "response": {
            "$ref": "RegionalInventory"
          },
          "httpMethod": "POST"
        }
      }
    },
    "datafeeds": {
      "methods": {
        "insert": {
          "request": {
            "$ref": "Datafeed"
          },
          "description": "Registers a datafeed configuration with your Merchant Center account.",
          "id": "content.datafeeds.insert",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/datafeeds",
          "path": "content/v2.1/{merchantId}/datafeeds",
          "response": {
            "$ref": "Datafeed"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account."
            }
          }
        },
        "custombatch": {
          "parameters": {},
          "path": "content/v2.1/datafeeds/batch",
          "httpMethod": "POST",
          "description": "Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.",
          "parameterOrder": [],
          "response": {
            "$ref": "DatafeedsCustomBatchResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "DatafeedsCustomBatchRequest"
          },
          "id": "content.datafeeds.custombatch",
          "flatPath": "content/v2.1/datafeeds/batch"
        },
        "list": {
          "path": "content/v2.1/{merchantId}/datafeeds",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account."
            },
            "maxResults": {
              "description": "The maximum number of products to return in the response, used for paging.",
              "type": "integer",
              "location": "query",
              "format": "uint32"
            }
          },
          "response": {
            "$ref": "DatafeedsListResponse"
          },
          "id": "content.datafeeds.list",
          "description": "Lists the configurations for datafeeds in your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2.1/{merchantId}/datafeeds",
          "httpMethod": "GET"
        },
        "get": {
          "description": "Retrieves a datafeed configuration from your Merchant Center account.",
          "path": "content/v2.1/{merchantId}/datafeeds/{datafeedId}",
          "httpMethod": "GET",
          "response": {
            "$ref": "Datafeed"
          },
          "parameters": {
            "datafeedId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the datafeed.",
              "location": "path"
            },
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "format": "uint64"
            }
          },
          "id": "content.datafeeds.get",
          "flatPath": "content/v2.1/{merchantId}/datafeeds/{datafeedId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ]
        },
        "fetchnow": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "datafeedId": {
              "description": "The ID of the datafeed to be fetched.",
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "POST",
          "path": "content/v2.1/{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "response": {
            "$ref": "DatafeedsFetchNowResponse"
          },
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "flatPath": "content/v2.1/{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "id": "content.datafeeds.fetchnow",
          "description": "Invokes a fetch for the datafeed in your Merchant Center account."
        },
        "delete": {
          "path": "content/v2.1/{merchantId}/datafeeds/{datafeedId}",
          "httpMethod": "DELETE",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "flatPath": "content/v2.1/{merchantId}/datafeeds/{datafeedId}",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "required": true,
              "format": "uint64",
              "location": "path",
              "type": "string"
            },
            "datafeedId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the datafeed.",
              "type": "string"
            }
          },
          "id": "content.datafeeds.delete",
          "description": "Deletes a datafeed configuration from your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "update": {
          "request": {
            "$ref": "Datafeed"
          },
          "path": "content/v2.1/{merchantId}/datafeeds/{datafeedId}",
          "response": {
            "$ref": "Datafeed"
          },
          "id": "content.datafeeds.update",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "flatPath": "content/v2.1/{merchantId}/datafeeds/{datafeedId}",
          "httpMethod": "PUT",
          "parameters": {
            "datafeedId": {
              "description": "The ID of the datafeed.",
              "location": "path",
              "type": "string",
              "required": true,
              "format": "uint64"
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "location": "path",
              "type": "string",
              "format": "uint64"
            }
          }
        }
      }
    },
    "pubsubnotificationsettings": {
      "methods": {
        "update": {
          "path": "content/v2.1/{merchantId}/pubsubnotificationsettings",
          "flatPath": "content/v2.1/{merchantId}/pubsubnotificationsettings",
          "parameters": {
            "merchantId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the account.",
              "format": "uint64"
            }
          },
          "request": {
            "$ref": "PubsubNotificationSettings"
          },
          "response": {
            "$ref": "PubsubNotificationSettings"
          },
          "description": "Register a Merchant Center account for pubsub notifications. Note that cloud topic name should not be provided as part of the request.",
          "id": "content.pubsubnotificationsettings.update",
          "httpMethod": "PUT",
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "flatPath": "content/v2.1/{merchantId}/pubsubnotificationsettings",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ],
          "path": "content/v2.1/{merchantId}/pubsubnotificationsettings",
          "id": "content.pubsubnotificationsettings.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves a Merchant Center account's pubsub notification settings.",
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account for which to get pubsub notification settings."
            }
          },
          "response": {
            "$ref": "PubsubNotificationSettings"
          }
        }
      }
    },
    "accountstatuses": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "content/v2.1/{merchantId}/accountstatuses/{accountId}",
          "flatPath": "content/v2.1/{merchantId}/accountstatuses/{accountId}",
          "httpMethod": "GET",
          "id": "content.accountstatuses.get",
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "location": "path"
            },
            "destinations": {
              "repeated": true,
              "type": "string",
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query"
            },
            "accountId": {
              "type": "string",
              "description": "The ID of the account.",
              "required": true,
              "format": "uint64",
              "location": "path"
            }
          },
          "description": "Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts.",
          "response": {
            "$ref": "AccountStatus"
          }
        },
        "custombatch": {
          "path": "content/v2.1/accountstatuses/batch",
          "httpMethod": "POST",
          "description": "Retrieves multiple Merchant Center account statuses in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "AccountstatusesCustomBatchRequest"
          },
          "flatPath": "content/v2.1/accountstatuses/batch",
          "id": "content.accountstatuses.custombatch",
          "parameters": {},
          "response": {
            "$ref": "AccountstatusesCustomBatchResponse"
          },
          "parameterOrder": []
        },
        "list": {
          "response": {
            "$ref": "AccountstatusesListResponse"
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists the statuses of the sub-accounts in your Merchant Center account.",
          "path": "content/v2.1/{merchantId}/accountstatuses",
          "id": "content.accountstatuses.list",
          "flatPath": "content/v2.1/{merchantId}/accountstatuses",
          "parameters": {
            "maxResults": {
              "location": "query",
              "format": "uint32",
              "type": "integer",
              "description": "The maximum number of account statuses to return in the response, used for paging."
            },
            "destinations": {
              "repeated": true,
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "type": "string",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "format": "uint64",
              "required": true,
              "type": "string"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [
            "merchantId"
          ]
        }
      }
    },
    "settlementtransactions": {
      "methods": {
        "list": {
          "flatPath": "content/v2.1/{merchantId}/settlementreports/{settlementId}/transactions",
          "description": "Retrieves a list of transactions for the settlement.",
          "parameterOrder": [
            "merchantId",
            "settlementId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.settlementtransactions.list",
          "response": {
            "$ref": "SettlementtransactionsListResponse"
          },
          "httpMethod": "GET",
          "parameters": {
            "merchantId": {
              "location": "path",
              "required": true,
              "description": "The Merchant Center account to list transactions for.",
              "format": "uint64",
              "type": "string"
            },
            "transactionIds": {
              "location": "query",
              "description": "The list of transactions to return. If not set, all transactions will be returned.",
              "type": "string",
              "repeated": true
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "description": "The maximum number of transactions to return in the response, used for paging. The default value is 200 transactions per page, and the maximum allowed value is 5000 transactions per page.",
              "location": "query"
            },
            "settlementId": {
              "required": true,
              "location": "path",
              "description": "The Google-provided ID of the settlement.",
              "type": "string"
            }
          },
          "path": "content/v2.1/{merchantId}/settlementreports/{settlementId}/transactions"
        }
      }
    },
    "orderreturns": {
      "methods": {
        "acknowledge": {
          "id": "content.orderreturns.acknowledge",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "returnId": {
              "type": "string",
              "description": "The ID of the return.",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "returnId"
          ],
          "request": {
            "$ref": "OrderreturnsAcknowledgeRequest"
          },
          "description": "Acks an order return in your Merchant Center account.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrderreturnsAcknowledgeResponse"
          },
          "path": "content/v2.1/{merchantId}/orderreturns/{returnId}/acknowledge",
          "flatPath": "content/v2.1/{merchantId}/orderreturns/{returnId}/acknowledge"
        },
        "process": {
          "flatPath": "content/v2.1/{merchantId}/orderreturns/{returnId}/process",
          "id": "content.orderreturns.process",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "returnId"
          ],
          "response": {
            "$ref": "OrderreturnsProcessResponse"
          },
          "description": "Processes return in your Merchant Center account.",
          "httpMethod": "POST",
          "request": {
            "$ref": "OrderreturnsProcessRequest"
          },
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "location": "path",
              "required": true,
              "format": "uint64"
            },
            "returnId": {
              "description": "The ID of the return.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "content/v2.1/{merchantId}/orderreturns/{returnId}/process"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/orderreturns/{returnId}",
          "response": {
            "$ref": "MerchantOrderReturn"
          },
          "parameterOrder": [
            "merchantId",
            "returnId"
          ],
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path"
            },
            "returnId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Merchant order return ID generated by Google."
            }
          },
          "description": "Retrieves an order return from your Merchant Center account.",
          "path": "content/v2.1/{merchantId}/orderreturns/{returnId}",
          "httpMethod": "GET",
          "id": "content.orderreturns.get"
        },
        "list": {
          "id": "content.orderreturns.list",
          "description": "Lists order returns in your Merchant Center account.",
          "flatPath": "content/v2.1/{merchantId}/orderreturns",
          "parameters": {
            "googleOrderIds": {
              "repeated": true,
              "type": "string",
              "description": "Obtains order returns with the specified order ids. If this parameter is provided, createdStartDate, createdEndDate, shipmentType, shipmentStatus, shipmentState and acknowledged parameters must be not set. Note: if googleOrderId and shipmentTrackingNumber parameters are provided, the obtained results will include all order returns that either match the specified order id or the specified tracking number.",
              "location": "query"
            },
            "acknowledged": {
              "location": "query",
              "type": "boolean",
              "description": "Obtains order returns that match the acknowledgement status. When set to true, obtains order returns that have been acknowledged. When false, obtains order returns that have not been acknowledged. When not provided, obtains order returns regardless of their acknowledgement status. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged order returns are returned. "
            },
            "shipmentStates": {
              "enum": [
                "NEW",
                "SHIPPED",
                "COMPLETED",
                "UNDELIVERABLE",
                "PENDING"
              ],
              "repeated": true,
              "location": "query",
              "description": "Obtains order returns that match any shipment state provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment states.",
              "type": "string",
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                ""
              ]
            },
            "maxResults": {
              "description": "The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page.",
              "location": "query",
              "type": "integer",
              "format": "uint32"
            },
            "shipmentTrackingNumbers": {
              "repeated": true,
              "type": "string",
              "description": "Obtains order returns with the specified tracking numbers. If this parameter is provided, createdStartDate, createdEndDate, shipmentType, shipmentStatus, shipmentState and acknowledged parameters must be not set. Note: if googleOrderId and shipmentTrackingNumber parameters are provided, the obtained results will include all order returns that either match the specified order id or the specified tracking number.",
              "location": "query"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "createdStartDate": {
              "type": "string",
              "location": "query",
              "description": "Obtains order returns created after this date (inclusively), in ISO 8601 format."
            },
            "shipmentTypes": {
              "location": "query",
              "enum": [
                "BY_MAIL",
                "RETURNLESS",
                "CONTACT_CUSTOMER_SUPPORT"
              ],
              "type": "string",
              "repeated": true,
              "description": "Obtains order returns that match any shipment type provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment types.",
              "enumDescriptions": [
                "",
                "",
                ""
              ]
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true
            },
            "orderBy": {
              "enum": [
                "RETURN_CREATION_TIME_DESC",
                "RETURN_CREATION_TIME_ASC"
              ],
              "description": "Return the results in the specified order.",
              "enumDescriptions": [
                "",
                ""
              ],
              "type": "string",
              "location": "query"
            },
            "createdEndDate": {
              "location": "query",
              "description": "Obtains order returns created before this date (inclusively), in ISO 8601 format.",
              "type": "string"
            },
            "shipmentStatus": {
              "type": "string",
              "location": "query",
              "enum": [
                "NEW",
                "IN_PROGRESS",
                "PROCESSED"
              ],
              "repeated": true,
              "enumDescriptions": [
                "",
                "",
                ""
              ],
              "description": "Obtains order returns that match any shipment status provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment statuses."
            }
          },
          "response": {
            "$ref": "OrderreturnsListResponse"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/orderreturns"
        },
        "createorderreturn": {
          "flatPath": "content/v2.1/{merchantId}/orderreturns/createOrderReturn",
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path",
              "format": "uint64"
            }
          },
          "path": "content/v2.1/{merchantId}/orderreturns/createOrderReturn",
          "request": {
            "$ref": "OrderreturnsCreateOrderReturnRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "OrderreturnsCreateOrderReturnResponse"
          },
          "description": "Create return in your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "id": "content.orderreturns.createorderreturn"
        }
      }
    },
    "returnpolicy": {
      "methods": {
        "delete": {
          "path": "content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}",
          "parameterOrder": [
            "merchantId",
            "returnPolicyId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}",
          "httpMethod": "DELETE",
          "description": "Deletes a return policy for the given Merchant Center account.",
          "id": "content.returnpolicy.delete",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "description": "The Merchant Center account from which to delete the given return policy.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "returnPolicyId": {
              "description": "Return policy ID generated by Google.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          }
        },
        "list": {
          "parameters": {
            "merchantId": {
              "description": "The Merchant Center account to list return policies for.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64"
            }
          },
          "response": {
            "$ref": "ReturnpolicyListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/returnpolicy",
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "path": "content/v2.1/{merchantId}/returnpolicy",
          "description": "Lists the return policies of the Merchant Center account.",
          "id": "content.returnpolicy.list"
        },
        "get": {
          "response": {
            "$ref": "ReturnPolicy"
          },
          "parameters": {
            "returnPolicyId": {
              "type": "string",
              "location": "path",
              "description": "Return policy ID generated by Google.",
              "required": true
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "description": "The Merchant Center account to get a return policy for.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "returnPolicyId"
          ],
          "path": "content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}",
          "httpMethod": "GET",
          "flatPath": "content/v2.1/{merchantId}/returnpolicy/{returnPolicyId}",
          "id": "content.returnpolicy.get",
          "description": "Gets a return policy of the Merchant Center account."
        },
        "custombatch": {
          "response": {
            "$ref": "ReturnpolicyCustomBatchResponse"
          },
          "id": "content.returnpolicy.custombatch",
          "flatPath": "content/v2.1/returnpolicy/batch",
          "parameterOrder": [],
          "parameters": {},
          "httpMethod": "POST",
          "description": "Batches multiple return policy related calls in a single request.",
          "request": {
            "$ref": "ReturnpolicyCustomBatchRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/returnpolicy/batch"
        },
        "insert": {
          "request": {
            "$ref": "ReturnPolicy"
          },
          "path": "content/v2.1/{merchantId}/returnpolicy",
          "description": "Inserts a return policy for the Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "id": "content.returnpolicy.insert",
          "response": {
            "$ref": "ReturnPolicy"
          },
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "required": true,
              "description": "The Merchant Center account to insert a return policy for.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "flatPath": "content/v2.1/{merchantId}/returnpolicy"
        }
      }
    },
    "returnaddress": {
      "methods": {
        "list": {
          "response": {
            "$ref": "ReturnaddressListResponse"
          },
          "id": "content.returnaddress.list",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "The Merchant Center account to list return addresses for.",
              "type": "string",
              "format": "uint64",
              "location": "path"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "country": {
              "type": "string",
              "description": "List only return addresses applicable to the given country of sale. When omitted, all return addresses are listed.",
              "location": "query"
            },
            "maxResults": {
              "format": "uint32",
              "description": "The maximum number of addresses in the response, used for paging.",
              "type": "integer",
              "location": "query"
            }
          },
          "path": "content/v2.1/{merchantId}/returnaddress",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists the return addresses of the Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "flatPath": "content/v2.1/{merchantId}/returnaddress"
        },
        "insert": {
          "flatPath": "content/v2.1/{merchantId}/returnaddress",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "path": "content/v2.1/{merchantId}/returnaddress",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "ReturnAddress"
          },
          "description": "Inserts a return address for the Merchant Center account.",
          "parameters": {
            "merchantId": {
              "type": "string",
              "required": true,
              "description": "The Merchant Center account to insert a return address for.",
              "format": "uint64",
              "location": "path"
            }
          },
          "id": "content.returnaddress.insert",
          "request": {
            "$ref": "ReturnAddress"
          }
        },
        "get": {
          "parameters": {
            "returnAddressId": {
              "required": true,
              "description": "Return address ID generated by Google.",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The Merchant Center account to get a return address for.",
              "format": "uint64"
            }
          },
          "parameterOrder": [
            "merchantId",
            "returnAddressId"
          ],
          "path": "content/v2.1/{merchantId}/returnaddress/{returnAddressId}",
          "response": {
            "$ref": "ReturnAddress"
          },
          "flatPath": "content/v2.1/{merchantId}/returnaddress/{returnAddressId}",
          "description": "Gets a return address of the Merchant Center account.",
          "httpMethod": "GET",
          "id": "content.returnaddress.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "delete": {
          "path": "content/v2.1/{merchantId}/returnaddress/{returnAddressId}",
          "httpMethod": "DELETE",
          "id": "content.returnaddress.delete",
          "parameterOrder": [
            "merchantId",
            "returnAddressId"
          ],
          "description": "Deletes a return address for the given Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "returnAddressId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Return address ID generated by Google."
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "location": "path",
              "format": "uint64",
              "description": "The Merchant Center account from which to delete the given return address."
            }
          },
          "flatPath": "content/v2.1/{merchantId}/returnaddress/{returnAddressId}"
        },
        "custombatch": {
          "path": "content/v2.1/returnaddress/batch",
          "flatPath": "content/v2.1/returnaddress/batch",
          "parameters": {},
          "parameterOrder": [],
          "response": {
            "$ref": "ReturnaddressCustomBatchResponse"
          },
          "description": "Batches multiple return address related calls in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "ReturnaddressCustomBatchRequest"
          },
          "id": "content.returnaddress.custombatch",
          "httpMethod": "POST"
        }
      }
    },
    "datafeedstatuses": {
      "methods": {
        "custombatch": {
          "request": {
            "$ref": "DatafeedstatusesCustomBatchRequest"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "content/v2.1/datafeedstatuses/batch",
          "path": "content/v2.1/datafeedstatuses/batch",
          "parameters": {},
          "id": "content.datafeedstatuses.custombatch",
          "response": {
            "$ref": "DatafeedstatusesCustomBatchResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Gets multiple Merchant Center datafeed statuses in a single request."
        },
        "list": {
          "httpMethod": "GET",
          "parameters": {
            "maxResults": {
              "location": "query",
              "description": "The maximum number of products to return in the response, used for paging.",
              "format": "uint32",
              "type": "integer"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account."
            }
          },
          "id": "content.datafeedstatuses.list",
          "path": "content/v2.1/{merchantId}/datafeedstatuses",
          "response": {
            "$ref": "DatafeedstatusesListResponse"
          },
          "description": "Lists the statuses of the datafeeds in your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/datafeedstatuses",
          "parameterOrder": [
            "merchantId"
          ]
        },
        "get": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/datafeedstatuses/{datafeedId}",
          "description": "Retrieves the status of a datafeed from your Merchant Center account.",
          "path": "content/v2.1/{merchantId}/datafeedstatuses/{datafeedId}",
          "id": "content.datafeedstatuses.get",
          "response": {
            "$ref": "DatafeedStatus"
          },
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "parameters": {
            "datafeedId": {
              "description": "The ID of the datafeed.",
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string"
            },
            "country": {
              "type": "string",
              "location": "query",
              "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target."
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64"
            },
            "language": {
              "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.",
              "location": "query",
              "type": "string"
            }
          }
        }
      }
    },
    "shippingsettings": {
      "methods": {
        "list": {
          "parameters": {
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of shipping settings to return in the response, used for paging.",
              "location": "query",
              "format": "uint32"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "location": "path"
            }
          },
          "description": "Lists the shipping settings of the sub-accounts in your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "response": {
            "$ref": "ShippingsettingsListResponse"
          },
          "path": "content/v2.1/{merchantId}/shippingsettings",
          "httpMethod": "GET",
          "flatPath": "content/v2.1/{merchantId}/shippingsettings",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.shippingsettings.list"
        },
        "update": {
          "flatPath": "content/v2.1/{merchantId}/shippingsettings/{accountId}",
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.shippingsettings.update",
          "description": "Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource.",
          "path": "content/v2.1/{merchantId}/shippingsettings/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "accountId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the account for which to get/update shipping settings.",
              "format": "uint64"
            }
          },
          "request": {
            "$ref": "ShippingSettings"
          },
          "response": {
            "$ref": "ShippingSettings"
          }
        },
        "get": {
          "flatPath": "content/v2.1/{merchantId}/shippingsettings/{accountId}",
          "id": "content.shippingsettings.get",
          "parameters": {
            "accountId": {
              "description": "The ID of the account for which to get/update shipping settings.",
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "content/v2.1/{merchantId}/shippingsettings/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Retrieves the shipping settings of the account.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "ShippingSettings"
          }
        },
        "custombatch": {
          "id": "content.shippingsettings.custombatch",
          "flatPath": "content/v2.1/shippingsettings/batch",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/shippingsettings/batch",
          "description": "Retrieves and updates the shipping settings of multiple accounts in a single request.",
          "response": {
            "$ref": "ShippingsettingsCustomBatchResponse"
          },
          "httpMethod": "POST",
          "parameters": {},
          "request": {
            "$ref": "ShippingsettingsCustomBatchRequest"
          }
        },
        "getsupportedpickupservices": {
          "parameters": {
            "merchantId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the account for which to retrieve the supported pickup services.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "ShippingsettingsGetSupportedPickupServicesResponse"
          },
          "flatPath": "content/v2.1/{merchantId}/supportedPickupServices",
          "description": "Retrieves supported pickup services for an account.",
          "id": "content.shippingsettings.getsupportedpickupservices",
          "path": "content/v2.1/{merchantId}/supportedPickupServices",
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "getsupportedcarriers": {
          "id": "content.shippingsettings.getsupportedcarriers",
          "description": "Retrieves supported carriers and carrier services for an account.",
          "flatPath": "content/v2.1/{merchantId}/supportedCarriers",
          "path": "content/v2.1/{merchantId}/supportedCarriers",
          "httpMethod": "GET",
          "response": {
            "$ref": "ShippingsettingsGetSupportedCarriersResponse"
          },
          "parameters": {
            "merchantId": {
              "description": "The ID of the account for which to retrieve the supported carriers.",
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "getsupportedholidays": {
          "path": "content/v2.1/{merchantId}/supportedHolidays",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "ShippingsettingsGetSupportedHolidaysResponse"
          },
          "httpMethod": "GET",
          "flatPath": "content/v2.1/{merchantId}/supportedHolidays",
          "description": "Retrieves supported holidays for an account.",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "required": true,
              "description": "The ID of the account for which to retrieve the supported holidays.",
              "location": "path",
              "format": "uint64"
            }
          },
          "id": "content.shippingsettings.getsupportedholidays"
        }
      }
    },
    "productstatuses": {
      "methods": {
        "custombatch": {
          "id": "content.productstatuses.custombatch",
          "request": {
            "$ref": "ProductstatusesCustomBatchRequest"
          },
          "parameterOrder": [],
          "response": {
            "$ref": "ProductstatusesCustomBatchResponse"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "description": "Gets the statuses of multiple products in a single request.",
          "path": "content/v2.1/productstatuses/batch",
          "flatPath": "content/v2.1/productstatuses/batch"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "ProductStatus"
          },
          "id": "content.productstatuses.get",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "parameters": {
            "destinations": {
              "repeated": true,
              "type": "string",
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query"
            },
            "productId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The REST ID of the product."
            },
            "merchantId": {
              "location": "path",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "required": true
            }
          },
          "description": "Gets the status of a product from your Merchant Center account.",
          "httpMethod": "GET",
          "path": "content/v2.1/{merchantId}/productstatuses/{productId}",
          "flatPath": "content/v2.1/{merchantId}/productstatuses/{productId}"
        },
        "list": {
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "The maximum number of product statuses to return in the response, used for paging.",
              "format": "uint32"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "destinations": {
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "location": "query",
              "type": "string",
              "repeated": true
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account.",
              "required": true,
              "format": "uint64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "ProductstatusesListResponse"
          },
          "description": "Lists the statuses of the products in your Merchant Center account.",
          "path": "content/v2.1/{merchantId}/productstatuses",
          "flatPath": "content/v2.1/{merchantId}/productstatuses",
          "id": "content.productstatuses.list"
        }
      }
    },
    "accounts": {
      "resources": {
        "labels": {
          "methods": {
            "create": {
              "parameters": {
                "accountId": {
                  "type": "string",
                  "format": "int64",
                  "description": "Required. The id of the account this label belongs to.",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "content/v2.1/accounts/{accountId}/labels",
              "httpMethod": "POST",
              "path": "content/v2.1/accounts/{accountId}/labels",
              "parameterOrder": [
                "accountId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "response": {
                "$ref": "AccountLabel"
              },
              "request": {
                "$ref": "AccountLabel"
              },
              "id": "content.accounts.labels.create",
              "description": "Creates a new label, not assigned to any account."
            },
            "list": {
              "description": "Lists the labels assigned to an account.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "response": {
                "$ref": "ListAccountLabelsResponse"
              },
              "parameterOrder": [
                "accountId"
              ],
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of labels to return. The service may return fewer than this value. If unspecified, at most 50 labels will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAccountLabels` must match the call that provided the page token."
                },
                "accountId": {
                  "description": "Required. The account id for whose labels are to be listed.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "format": "int64"
                }
              },
              "path": "content/v2.1/accounts/{accountId}/labels",
              "id": "content.accounts.labels.list",
              "flatPath": "content/v2.1/accounts/{accountId}/labels"
            },
            "delete": {
              "path": "content/v2.1/accounts/{accountId}/labels/{labelId}",
              "httpMethod": "DELETE",
              "flatPath": "content/v2.1/accounts/{accountId}/labels/{labelId}",
              "id": "content.accounts.labels.delete",
              "parameterOrder": [
                "accountId",
                "labelId"
              ],
              "parameters": {
                "accountId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "format": "int64",
                  "description": "Required. The id of the account that owns the label."
                },
                "labelId": {
                  "type": "string",
                  "description": "Required. The id of the label to delete.",
                  "format": "int64",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Deletes a label and removes it from all accounts to which it was assigned."
            },
            "patch": {
              "path": "content/v2.1/accounts/{accountId}/labels/{labelId}",
              "response": {
                "$ref": "AccountLabel"
              },
              "flatPath": "content/v2.1/accounts/{accountId}/labels/{labelId}",
              "id": "content.accounts.labels.patch",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/content"
              ],
              "description": "Updates a label.",
              "parameterOrder": [
                "accountId",
                "labelId"
              ],
              "parameters": {
                "accountId": {
                  "format": "int64",
                  "required": true,
                  "location": "path",
                  "description": "Required. The id of the account this label belongs to.",
                  "type": "string"
                },
                "labelId": {
                  "description": "Required. The id of the label to update.",
                  "location": "path",
                  "format": "int64",
                  "required": true,
                  "type": "string"
                }
              },
              "request": {
                "$ref": "AccountLabel"
              }
            }
          }
        }
      },
      "methods": {
        "link": {
          "description": "Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.",
          "parameters": {
            "accountId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the account that should be linked."
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "AccountsLinkResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/accounts/{accountId}/link",
          "path": "content/v2.1/{merchantId}/accounts/{accountId}/link",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "id": "content.accounts.link",
          "httpMethod": "POST",
          "request": {
            "$ref": "AccountsLinkRequest"
          }
        },
        "listlinks": {
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "The maximum number of links to return in the response, used for pagination.",
              "format": "uint32"
            },
            "accountId": {
              "location": "path",
              "required": true,
              "description": "The ID of the account for which to list links.",
              "type": "string",
              "format": "uint64"
            }
          },
          "path": "content/v2.1/{merchantId}/accounts/{accountId}/listlinks",
          "response": {
            "$ref": "AccountsListLinksResponse"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Returns the list of accounts linked to your Merchant Center account.",
          "id": "content.accounts.listlinks",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/accounts/{accountId}/listlinks",
          "httpMethod": "GET"
        },
        "delete": {
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "content/v2.1/{merchantId}/accounts/{accountId}",
          "httpMethod": "DELETE",
          "flatPath": "content/v2.1/{merchantId}/accounts/{accountId}",
          "description": "Deletes a Merchant Center sub-account.",
          "id": "content.accounts.delete",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string"
            },
            "force": {
              "default": "false",
              "location": "query",
              "type": "boolean",
              "description": "Flag to delete sub-accounts with products. The default value is false."
            },
            "accountId": {
              "description": "The ID of the account.",
              "required": true,
              "format": "uint64",
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "path": "content/v2.1/{merchantId}/accounts/{accountId}",
          "parameters": {
            "accountId": {
              "type": "string",
              "description": "The ID of the account.",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "required": true,
              "format": "uint64",
              "type": "string"
            },
            "view": {
              "description": "Controls which fields will be populated. Acceptable values are: \"merchant\" and \"css\". The default value is \"merchant\".",
              "type": "string",
              "enumDescriptions": [
                "",
                ""
              ],
              "enum": [
                "MERCHANT",
                "CSS"
              ],
              "location": "query"
            }
          },
          "id": "content.accounts.get",
          "description": "Retrieves a Merchant Center account.",
          "response": {
            "$ref": "Account"
          },
          "flatPath": "content/v2.1/{merchantId}/accounts/{accountId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "updatelabels": {
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "response": {
            "$ref": "AccountsUpdateLabelsResponse"
          },
          "path": "content/v2.1/{merchantId}/accounts/{accountId}/updatelabels",
          "parameters": {
            "accountId": {
              "description": "The ID of the account whose labels are updated.",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "uint64"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the managing account."
            }
          },
          "description": "Updates labels that are assigned to the Merchant Center account by CSS user.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "flatPath": "content/v2.1/{merchantId}/accounts/{accountId}/updatelabels",
          "id": "content.accounts.updatelabels",
          "request": {
            "$ref": "AccountsUpdateLabelsRequest"
          }
        },
        "authinfo": {
          "response": {
            "$ref": "AccountsAuthInfoResponse"
          },
          "parameters": {},
          "flatPath": "content/v2.1/accounts/authinfo",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.accounts.authinfo",
          "parameterOrder": [],
          "path": "content/v2.1/accounts/authinfo",
          "description": "Returns information about the authenticated user."
        },
        "insert": {
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "type": "string"
            }
          },
          "id": "content.accounts.insert",
          "path": "content/v2.1/{merchantId}/accounts",
          "flatPath": "content/v2.1/{merchantId}/accounts",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Account"
          },
          "request": {
            "$ref": "Account"
          },
          "description": "Creates a Merchant Center sub-account."
        },
        "claimwebsite": {
          "flatPath": "content/v2.1/{merchantId}/accounts/{accountId}/claimwebsite",
          "response": {
            "$ref": "AccountsClaimWebsiteResponse"
          },
          "path": "content/v2.1/{merchantId}/accounts/{accountId}/claimwebsite",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "overwrite": {
              "description": "Only available to selected merchants. When set to `True`, this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account.",
              "location": "query",
              "type": "boolean"
            },
            "merchantId": {
              "type": "string",
              "required": true,
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path"
            },
            "accountId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account whose website is claimed."
            }
          },
          "httpMethod": "POST",
          "id": "content.accounts.claimwebsite",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Claims the website of a Merchant Center sub-account."
        },
        "custombatch": {
          "description": "Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.",
          "path": "content/v2.1/accounts/batch",
          "flatPath": "content/v2.1/accounts/batch",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameters": {},
          "request": {
            "$ref": "AccountsCustomBatchRequest"
          },
          "id": "content.accounts.custombatch",
          "response": {
            "$ref": "AccountsCustomBatchResponse"
          }
        },
        "list": {
          "id": "content.accounts.list",
          "response": {
            "$ref": "AccountsListResponse"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2.1/{merchantId}/accounts",
          "path": "content/v2.1/{merchantId}/accounts",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "maxResults": {
              "description": "The maximum number of accounts to return in the response, used for paging.",
              "format": "uint32",
              "location": "query",
              "type": "integer"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "label": {
              "description": "If view is set to \"css\", only return accounts that are assigned label with given ID.",
              "location": "query",
              "type": "string",
              "format": "uint64"
            },
            "view": {
              "type": "string",
              "enumDescriptions": [
                "",
                ""
              ],
              "description": "Controls which fields will be populated. Acceptable values are: \"merchant\" and \"css\". The default value is \"merchant\".",
              "enum": [
                "MERCHANT",
                "CSS"
              ],
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            }
          },
          "description": "Lists the sub-accounts in your Merchant Center account."
        },
        "update": {
          "request": {
            "$ref": "Account"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "response": {
            "$ref": "Account"
          },
          "httpMethod": "PUT",
          "flatPath": "content/v2.1/{merchantId}/accounts/{accountId}",
          "parameters": {
            "accountId": {
              "description": "The ID of the account.",
              "required": true,
              "format": "uint64",
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "required": true,
              "location": "path",
              "format": "uint64"
            }
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "id": "content.accounts.update",
          "path": "content/v2.1/{merchantId}/accounts/{accountId}"
        }
      }
    },
    "settlementreports": {
      "methods": {
        "list": {
          "description": "Retrieves a list of settlement reports from your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/settlementreports",
          "flatPath": "content/v2.1/{merchantId}/settlementreports",
          "parameters": {
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of settlements to return in the response, used for paging. The default value is 200 returns per page, and the maximum allowed value is 5000 returns per page.",
              "format": "uint32",
              "location": "query"
            },
            "transferEndDate": {
              "location": "query",
              "type": "string",
              "description": "Obtains settlements which have transactions before this date (inclusively), in ISO 8601 format."
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "transferStartDate": {
              "description": "Obtains settlements which have transactions after this date (inclusively), in ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "merchantId": {
              "description": "The Merchant Center account to list settlements for.",
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string"
            }
          },
          "id": "content.settlementreports.list",
          "response": {
            "$ref": "SettlementreportsListResponse"
          }
        },
        "get": {
          "response": {
            "$ref": "SettlementReport"
          },
          "id": "content.settlementreports.get",
          "flatPath": "content/v2.1/{merchantId}/settlementreports/{settlementId}",
          "parameters": {
            "merchantId": {
              "description": "The Merchant Center account of the settlement report.",
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true
            },
            "settlementId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The Google-provided ID of the settlement."
            }
          },
          "parameterOrder": [
            "merchantId",
            "settlementId"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves a settlement report from your Merchant Center account.",
          "path": "content/v2.1/{merchantId}/settlementreports/{settlementId}"
        }
      }
    },
    "repricingrules": {
      "methods": {
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "PATCH",
          "response": {
            "$ref": "RepricingRule"
          },
          "id": "content.repricingrules.patch",
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "required": true,
              "format": "int64"
            },
            "ruleId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Required. The id of the rule to update."
            }
          },
          "request": {
            "$ref": "RepricingRule"
          },
          "path": "content/v2.1/{merchantId}/repricingrules/{ruleId}",
          "description": "Updates a repricing rule in your Merchant Center account. All mutable fields will be overwritten in each update request. In each update, you must provide all required mutable fields, or an error will be thrown. If you do not provide an optional field in the update request, if that field currently exists, it will be deleted from the rule.",
          "parameterOrder": [
            "merchantId",
            "ruleId"
          ],
          "flatPath": "content/v2.1/{merchantId}/repricingrules/{ruleId}"
        },
        "get": {
          "response": {
            "$ref": "RepricingRule"
          },
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "int64",
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "required": true,
              "location": "path"
            },
            "ruleId": {
              "type": "string",
              "location": "path",
              "description": "Required. The id of the rule to retrieve.",
              "required": true
            }
          },
          "description": "Retrieves a repricing rule from your Merchant Center account.",
          "id": "content.repricingrules.get",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "ruleId"
          ],
          "path": "content/v2.1/{merchantId}/repricingrules/{ruleId}",
          "flatPath": "content/v2.1/{merchantId}/repricingrules/{ruleId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "create": {
          "httpMethod": "POST",
          "response": {
            "$ref": "RepricingRule"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "merchantId": {
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "format": "int64",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "ruleId": {
              "type": "string",
              "location": "query",
              "description": "Required. The id of the rule to create."
            }
          },
          "flatPath": "content/v2.1/{merchantId}/repricingrules",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Creates a repricing rule for your Merchant Center account.",
          "request": {
            "$ref": "RepricingRule"
          },
          "id": "content.repricingrules.create",
          "path": "content/v2.1/{merchantId}/repricingrules"
        },
        "delete": {
          "flatPath": "content/v2.1/{merchantId}/repricingrules/{ruleId}",
          "parameters": {
            "merchantId": {
              "required": true,
              "description": "Required. The id of the merchant who owns the repricing rule.",
              "type": "string",
              "format": "int64",
              "location": "path"
            },
            "ruleId": {
              "required": true,
              "location": "path",
              "description": "Required. The id of the rule to Delete.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "ruleId"
          ],
          "httpMethod": "DELETE",
          "id": "content.repricingrules.delete",
          "description": "Deletes a repricing rule in your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2.1/{merchantId}/repricingrules/{ruleId}"
        },
        "list": {
          "path": "content/v2.1/{merchantId}/repricingrules",
          "flatPath": "content/v2.1/{merchantId}/repricingrules",
          "parameters": {
            "countryCode": {
              "description": "CLDR country code (e.g. \"US\"), used as a filter on repricing rules.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "The maximum number of repricing rules to return. The service may return fewer than this value. If unspecified, at most 50 rules will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.",
              "type": "integer",
              "location": "query",
              "format": "int32"
            },
            "languageCode": {
              "location": "query",
              "description": "The two-letter ISO 639-1 language code associated with the repricing rule, used as a filter.",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "format": "int64",
              "type": "string",
              "required": true,
              "description": "Required. The id of the merchant who owns the repricing rule."
            },
            "pageToken": {
              "description": "A page token, received from a previous `ListRepricingRules` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRepricingRules` must match the call that provided the page token.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Lists the repricing rules in your Merchant Center account.",
          "id": "content.repricingrules.list",
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "ListRepricingRulesResponse"
          }
        }
      }
    },
    "localinventory": {
      "methods": {
        "custombatch": {
          "path": "content/v2.1/localinventory/batch",
          "request": {
            "$ref": "LocalinventoryCustomBatchRequest"
          },
          "parameterOrder": [],
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates local inventory for multiple products or stores in a single request.",
          "httpMethod": "POST",
          "response": {
            "$ref": "LocalinventoryCustomBatchResponse"
          },
          "flatPath": "content/v2.1/localinventory/batch",
          "id": "content.localinventory.custombatch"
        },
        "insert": {
          "httpMethod": "POST",
          "request": {
            "$ref": "LocalInventory"
          },
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "path": "content/v2.1/{merchantId}/products/{productId}/localinventory",
          "description": "Updates the local inventory of a product in your Merchant Center account.",
          "flatPath": "content/v2.1/{merchantId}/products/{productId}/localinventory",
          "id": "content.localinventory.insert",
          "parameters": {
            "productId": {
              "description": "The REST ID of the product for which to update local inventory.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "format": "uint64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LocalInventory"
          }
        }
      }
    },
    "accounttax": {
      "methods": {
        "custombatch": {
          "response": {
            "$ref": "AccounttaxCustomBatchResponse"
          },
          "id": "content.accounttax.custombatch",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/accounttax/batch",
          "parameterOrder": [],
          "parameters": {},
          "request": {
            "$ref": "AccounttaxCustomBatchRequest"
          },
          "path": "content/v2.1/accounttax/batch",
          "description": "Retrieves and updates tax settings of multiple accounts in a single request."
        },
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Lists the tax settings of the sub-accounts in your Merchant Center account.",
          "id": "content.accounttax.list",
          "flatPath": "content/v2.1/{merchantId}/accounttax",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "format": "uint32",
              "type": "integer",
              "description": "The maximum number of tax settings to return in the response, used for paging."
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the managing account. This must be a multi-client account."
            }
          },
          "response": {
            "$ref": "AccounttaxListResponse"
          },
          "path": "content/v2.1/{merchantId}/accounttax"
        },
        "update": {
          "description": "Updates the tax settings of the account. Any fields that are not provided are deleted from the resource.",
          "path": "content/v2.1/{merchantId}/accounttax/{accountId}",
          "request": {
            "$ref": "AccountTax"
          },
          "flatPath": "content/v2.1/{merchantId}/accounttax/{accountId}",
          "response": {
            "$ref": "AccountTax"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "accountId": {
              "required": true,
              "type": "string",
              "description": "The ID of the account for which to get/update account tax settings.",
              "format": "uint64",
              "location": "path"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "PUT",
          "id": "content.accounttax.update",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        },
        "get": {
          "id": "content.accounttax.get",
          "description": "Retrieves the tax settings of the account.",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "response": {
            "$ref": "AccountTax"
          },
          "httpMethod": "GET",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "accountId": {
              "required": true,
              "description": "The ID of the account for which to get/update account tax settings.",
              "type": "string",
              "format": "uint64",
              "location": "path"
            }
          },
          "path": "content/v2.1/{merchantId}/accounttax/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2.1/{merchantId}/accounttax/{accountId}"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "canonicalName": "Shopping Content",
  "rootUrl": "https://shoppingcontent.googleapis.com/",
  "description": "Manage your product listings and accounts for Google Shopping",
  "id": "content:v2.1",
  "batchPath": "batch",
  "revision": "20201012",
  "name": "content",
  "baseUrl": "https://shoppingcontent.googleapis.com/",
  "version": "v2.1",
  "discoveryVersion": "v1",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/content": {
          "description": "Manage your product listings and accounts for Google Shopping"
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "basePath": "",
  "schemas": {
    "ProductsListResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "items": {
            "$ref": "Product"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of products."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productsListResponse\"."
        }
      },
      "id": "ProductsListResponse"
    },
    "OrderreturnsRefundOperation": {
      "type": "object",
      "properties": {
        "returnRefundReason": {
          "description": "Code of the refund reason.",
          "type": "string"
        },
        "paymentType": {
          "type": "string",
          "description": "The payment way of issuing refund. Default value is ORIGINAL_FOP if not set."
        },
        "partialRefund": {
          "$ref": "OrderreturnsPartialRefund",
          "description": "If this is set, the item will be partially refunded. Merchant can choose this refund option to specify the customized amount that to be refunded to the customer."
        },
        "fullRefund": {
          "type": "boolean",
          "description": "If true, the item will be fully refunded. Allowed only when payment_type is FOP. Merchant can choose this refund option to indicate the full remaining amount of corresponding object to be refunded to the customer via FOP."
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      },
      "id": "OrderreturnsRefundOperation"
    },
    "RepricingRuleRestriction": {
      "description": "Definition of a rule restriction. At least one of the following needs to be true: (1) use_auto_pricing_min_price is true (2) floor.price_delta exists (3) floor.percentage_delta exists If floor.price_delta and floor.percentage_delta are both set on a rule, the highest value will be chosen by the Repricer. In other words, for a product with a price of $50, if the `floor.percentage_delta` is \"-10\" and the floor.price_delta is \"-12\", the offer price will only be lowered $5 (10% lower than the original offer price).",
      "type": "object",
      "id": "RepricingRuleRestriction",
      "properties": {
        "useAutoPricingMinPrice": {
          "description": "If true, use the AUTO_PRICING_MIN_PRICE offer attribute as the lower bound of the rule. If use_auto_pricing_min_price is true, then only offers with `AUTO_PRICING_MIN_PRICE` existing on the offer will get Repricer treatment, even if a floor value is set on the rule. Also, if use_auto_pricing_min_price is true, the floor restriction will be ignored.",
          "type": "boolean"
        },
        "floor": {
          "$ref": "RepricingRuleRestrictionBoundary",
          "description": "The inclusive floor lower bound. The repricing rule only applies when new price \u003e= floor."
        }
      }
    },
    "OrdersCancelTestOrderByCustomerResponse": {
      "id": "OrdersCancelTestOrderByCustomerResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelTestOrderByCustomerResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountBusinessInformation": {
      "properties": {
        "customerService": {
          "$ref": "AccountCustomerService",
          "description": "The customer service information of the business."
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the business."
        },
        "address": {
          "$ref": "AccountAddress",
          "description": "The address of the business."
        }
      },
      "type": "object",
      "id": "AccountBusinessInformation"
    },
    "OrderreturnsProcessRequest": {
      "id": "OrderreturnsProcessRequest",
      "type": "object",
      "properties": {
        "returnItems": {
          "type": "array",
          "items": {
            "$ref": "OrderreturnsReturnItem"
          },
          "description": "The list of items to return."
        },
        "operationId": {
          "description": "[required] The ID of the operation, unique across all operations for a given order return.",
          "type": "string"
        },
        "fullChargeReturnShippingCost": {
          "type": "boolean",
          "description": "Option to charge the customer return shipping cost."
        },
        "refundShippingFee": {
          "description": "Refunds for original shipping fee.",
          "$ref": "OrderreturnsRefundOperation"
        }
      }
    },
    "LiaInventorySettings": {
      "id": "LiaInventorySettings",
      "type": "object",
      "properties": {
        "inventoryVerificationContactEmail": {
          "description": "The email of the contact for the inventory verification process.",
          "type": "string"
        },
        "status": {
          "description": "The status of the inventory verification process. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        },
        "inventoryVerificationContactStatus": {
          "description": "The status of the verification contact. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        },
        "inventoryVerificationContactName": {
          "type": "string",
          "description": "The name of the contact for the inventory verification process."
        }
      }
    },
    "OrdersGetTestOrderTemplateResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetTestOrderTemplateResponse\"."
        },
        "template": {
          "description": "The requested test order template.",
          "$ref": "TestOrder"
        }
      },
      "type": "object",
      "id": "OrdersGetTestOrderTemplateResponse"
    },
    "ShipmentInvoice": {
      "type": "object",
      "id": "ShipmentInvoice",
      "properties": {
        "lineItemInvoices": {
          "description": "[required] Invoice details per line item.",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          },
          "type": "array"
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
        },
        "invoiceSummary": {
          "description": "[required] Invoice summary.",
          "$ref": "InvoiceSummary"
        }
      }
    },
    "ReturnShipment": {
      "type": "object",
      "properties": {
        "shipmentTrackingInfos": {
          "items": {
            "$ref": "ShipmentTrackingInfo"
          },
          "type": "array",
          "description": "Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially."
        },
        "state": {
          "description": "State of the shipment. Acceptable values are: - \"`completed`\" - \"`new`\" - \"`shipped`\" - \"`undeliverable`\" - \"`pending`\" ",
          "type": "string"
        },
        "returnMethodType": {
          "type": "string",
          "description": "Type of the return method. Acceptable values are: - \"`byMail`\" - \"`contactCustomerSupport`\" - \"`returnless`\" "
        },
        "creationDate": {
          "type": "string",
          "description": "The date of creation of the shipment, in ISO 8601 format."
        },
        "shippingDate": {
          "description": "The date of shipping of the shipment, in ISO 8601 format.",
          "type": "string"
        },
        "deliveryDate": {
          "type": "string",
          "description": "The date of delivery of the shipment, in ISO 8601 format."
        },
        "shipmentId": {
          "description": "Shipment ID generated by Google.",
          "type": "string"
        }
      },
      "id": "ReturnShipment"
    },
    "AccountstatusesListResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesListResponse\".",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "AccountStatus"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of account statuses.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountstatusesListResponse"
    },
    "AccounttaxCustomBatchResponseEntry": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accounttaxCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "accountTax": {
          "$ref": "AccountTax",
          "description": "The retrieved or updated account tax settings."
        }
      },
      "id": "AccounttaxCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch accounttax response.",
      "type": "object"
    },
    "ProductShipping": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string",
          "description": "The geographic region to which a shipping rate applies."
        },
        "service": {
          "description": "A free-form description of the service class or delivery speed.",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country to which an item will ship."
        },
        "locationId": {
          "format": "int64",
          "type": "string",
          "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API."
        },
        "locationGroupName": {
          "description": "The location where the shipping is applicable, represented by a location group name.",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "Fixed shipping price, represented as a number."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length."
        }
      },
      "id": "ProductShipping"
    },
    "PickupCarrierService": {
      "id": "PickupCarrierService",
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "The name of the pickup service (e.g., `\"Access point\"`). Required."
        },
        "carrierName": {
          "type": "string",
          "description": "The name of the pickup carrier (e.g., `\"UPS\"`). Required."
        }
      },
      "type": "object"
    },
    "OrderreturnsListResponse": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "MerchantOrderReturn"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreturnsListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of returns."
        }
      },
      "id": "OrderreturnsListResponse",
      "type": "object"
    },
    "OrderCustomer": {
      "properties": {
        "loyaltyInfo": {
          "$ref": "OrderCustomerLoyaltyInfo",
          "description": "Loyalty program information."
        },
        "marketingRightsInfo": {
          "description": "Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order.",
          "$ref": "OrderCustomerMarketingRightsInfo"
        },
        "fullName": {
          "type": "string",
          "description": "Full name of the customer."
        },
        "invoiceReceivingEmail": {
          "type": "string",
          "description": "Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Shopping Actions."
        }
      },
      "id": "OrderCustomer",
      "type": "object"
    },
    "OrderreturnsCreateOrderReturnResponse": {
      "type": "object",
      "id": "OrderreturnsCreateOrderReturnResponse",
      "properties": {
        "orderReturn": {
          "$ref": "MerchantOrderReturn",
          "description": "Created order return."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreturnsCreateOrderReturnResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      }
    },
    "ReturnPricingInfo": {
      "properties": {
        "totalRefundedAmount": {
          "description": "Total amount already refunded by the merchant. It includes all types of refunds (items, shipping, etc.) Not provided if no refund has been applied yet.",
          "$ref": "MonetaryAmount"
        },
        "refundableItemsTotalAmount": {
          "description": "Total amount that can be refunded for the items in this return. It represents the total amount received by the merchant for the items, after applying merchant coupons.",
          "$ref": "MonetaryAmount"
        },
        "refundableShippingAmount": {
          "$ref": "MonetaryAmount",
          "description": "Maximum amount that can be refunded for the original shipping fee."
        },
        "maxReturnShippingFee": {
          "$ref": "MonetaryAmount",
          "description": "Maximum return shipping costs that may be charged to the customer depending on merchant's assessment of the return reason and the merchant's return policy for the items being returned."
        },
        "chargeReturnShippingFee": {
          "type": "boolean",
          "description": "Default option for whether merchant should charge the customer for return shipping costs, based on customer selected return reason and merchant's return policy for the items being returned."
        }
      },
      "type": "object",
      "id": "ReturnPricingInfo"
    },
    "AccountstatusesCustomBatchResponse": {
      "type": "object",
      "id": "AccountstatusesCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "AccountstatusesCustomBatchResponseEntry"
          },
          "type": "array",
          "description": "The result of the execution of the batch requests."
        }
      }
    },
    "MerchantRejectionReason": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the reason."
        },
        "reasonCode": {
          "description": "Code of the rejection reason.",
          "type": "string"
        }
      },
      "id": "MerchantRejectionReason"
    },
    "AccountStatusStatistics": {
      "type": "object",
      "id": "AccountStatusStatistics",
      "properties": {
        "disapproved": {
          "type": "string",
          "format": "int64",
          "description": "Number of disapproved offers."
        },
        "active": {
          "description": "Number of active offers.",
          "format": "int64",
          "type": "string"
        },
        "pending": {
          "description": "Number of pending offers.",
          "format": "int64",
          "type": "string"
        },
        "expiring": {
          "description": "Number of expiring offers.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "OrdersCancelRequest": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        }
      },
      "id": "OrdersCancelRequest"
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "[required] Reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "description": {
          "description": "Optional description of the refund reason.",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption",
      "type": "object"
    },
    "AccountStatusItemLevelIssue": {
      "type": "object",
      "id": "AccountStatusItemLevelIssue",
      "properties": {
        "detail": {
          "description": "A detailed issue description in English.",
          "type": "string"
        },
        "attributeName": {
          "description": "The attribute's name, if the issue is caused by a single attribute.",
          "type": "string"
        },
        "servability": {
          "type": "string",
          "description": "How this issue affects serving of the offer."
        },
        "resolution": {
          "description": "Whether the issue can be resolved by the merchant.",
          "type": "string"
        },
        "numItems": {
          "type": "string",
          "format": "int64",
          "description": "Number of items with this issue."
        },
        "code": {
          "description": "The error code of the issue.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A short issue description in English."
        },
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        }
      }
    },
    "PubsubNotificationSettings": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#pubsubNotificationSettings`\""
        },
        "registeredEvents": {
          "description": "List of event types. Acceptable values are: - \"`orderPendingShipment`\" ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cloudTopicName": {
          "type": "string",
          "description": "Cloud pub/sub topic to which notifications are sent (read-only)."
        }
      },
      "type": "object",
      "id": "PubsubNotificationSettings",
      "description": "Settings for Pub/Sub notifications, all methods require that the caller is a direct user of the merchant center account."
    },
    "GmbAccountsGmbAccount": {
      "type": "object",
      "id": "GmbAccountsGmbAccount",
      "properties": {
        "listingCount": {
          "format": "uint64",
          "type": "string",
          "description": "Number of listings under this account."
        },
        "email": {
          "description": "The email which identifies the GMB account.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the GMB account."
        },
        "type": {
          "description": "The type of the GMB account (User or Business).",
          "type": "string"
        }
      }
    },
    "AccountUser": {
      "id": "AccountUser",
      "properties": {
        "admin": {
          "type": "boolean",
          "description": "Whether user is an admin."
        },
        "paymentsManager": {
          "type": "boolean",
          "description": "Whether user can manage payment settings."
        },
        "emailAddress": {
          "description": "User's email address.",
          "type": "string"
        },
        "orderManager": {
          "description": "Whether user is an order manager.",
          "type": "boolean"
        },
        "paymentsAnalyst": {
          "type": "boolean",
          "description": "Whether user can access payment statements."
        }
      },
      "type": "object"
    },
    "LinkedAccount": {
      "id": "LinkedAccount",
      "type": "object",
      "properties": {
        "linkedAccountId": {
          "type": "string",
          "description": "The ID of the linked account."
        },
        "services": {
          "items": {
            "$ref": "LinkService"
          },
          "type": "array",
          "description": "List of provided services."
        }
      }
    },
    "LiasettingsCustomBatchResponseEntry": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsCustomBatchResponseEntry`\""
        },
        "gmbAccounts": {
          "$ref": "GmbAccounts",
          "description": "The the list of accessible GMB accounts."
        },
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "format": "uint32",
          "type": "integer"
        },
        "liaSettings": {
          "description": "The retrieved or updated Lia settings.",
          "$ref": "LiaSettings"
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "posDataProviders": {
          "type": "array",
          "description": "The list of POS data providers.",
          "items": {
            "$ref": "PosDataProviders"
          }
        }
      },
      "type": "object",
      "id": "LiasettingsCustomBatchResponseEntry"
    },
    "OrdersUpdateShipmentResponse": {
      "id": "OrdersUpdateShipmentResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateShipmentResponse\"."
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "type": "object"
    },
    "DatafeedsCustomBatchRequestEntry": {
      "properties": {
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`fetchNow`\" - \"`get`\" - \"`insert`\" - \"`update`\" ",
          "type": "string"
        },
        "datafeed": {
          "$ref": "Datafeed",
          "description": "The data feed to insert."
        },
        "datafeedId": {
          "type": "string",
          "description": "The ID of the data feed to get, delete or fetch.",
          "format": "uint64"
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        }
      },
      "id": "DatafeedsCustomBatchRequestEntry",
      "type": "object",
      "description": "A batch entry encoding a single non-batch datafeeds request."
    },
    "ReturnAddress": {
      "description": "Return address resource.",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "ReturnAddressAddress",
          "description": "Required. The address."
        },
        "country": {
          "type": "string",
          "description": "Required. The country of sale where the return address is applicable."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnAddress`\"",
          "type": "string"
        },
        "returnAddressId": {
          "description": "Return address ID generated by Google.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Required. The merchant's contact phone number regarding the return."
        },
        "label": {
          "type": "string",
          "description": "Required. The user-defined label of the return address. For the default address, use the label \"default\"."
        }
      },
      "id": "ReturnAddress"
    },
    "UnitInvoice": {
      "id": "UnitInvoice",
      "properties": {
        "unitPriceTaxes": {
          "items": {
            "$ref": "UnitInvoiceTaxLine"
          },
          "description": "Tax amounts to apply to the unit price.",
          "type": "array"
        },
        "unitPrice": {
          "description": "[required] Pre-tax or post-tax price of the unit depending on the locality of the order.",
          "$ref": "Price"
        },
        "additionalCharges": {
          "items": {
            "$ref": "UnitInvoiceAdditionalCharge"
          },
          "type": "array",
          "description": "Additional charges for a unit, e.g. shipping costs."
        }
      },
      "type": "object"
    },
    "OrdersCreateTestOrderResponse": {
      "type": "object",
      "id": "OrdersCreateTestOrderResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestOrderResponse\".",
          "type": "string"
        },
        "orderId": {
          "description": "The ID of the newly created test order.",
          "type": "string"
        }
      }
    },
    "ProductstatusesCustomBatchRequestEntry": {
      "id": "ProductstatusesCustomBatchRequestEntry",
      "type": "object",
      "description": "A batch entry encoding a single non-batch productstatuses request.",
      "properties": {
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "destinations": {
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product whose status to get."
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the managing account."
        },
        "includeAttributes": {
          "type": "boolean"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        }
      }
    },
    "AccountStatusProducts": {
      "type": "object",
      "id": "AccountStatusProducts",
      "properties": {
        "country": {
          "description": "The country the data applies to.",
          "type": "string"
        },
        "channel": {
          "type": "string",
          "description": "The channel the data applies to. Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "itemLevelIssues": {
          "description": "List of item-level issues.",
          "items": {
            "$ref": "AccountStatusItemLevelIssue"
          },
          "type": "array"
        },
        "statistics": {
          "description": "Aggregated product statistics.",
          "$ref": "AccountStatusStatistics"
        },
        "destination": {
          "type": "string",
          "description": "The destination the data applies to."
        }
      }
    },
    "OrdersInStoreRefundLineItemRequest": {
      "id": "OrdersInStoreRefundLineItemRequest",
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "taxAmount": {
          "$ref": "Price",
          "description": "The amount of tax to be refunded. Required."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "priceAmount": {
          "$ref": "Price",
          "description": "The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. Required."
        },
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity to return and refund.",
          "format": "uint32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "TestOrderPickupDetailsPickupPerson": {
      "properties": {
        "name": {
          "description": "Required. Full name of the pickup person.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number of the person picking up the items."
        }
      },
      "id": "TestOrderPickupDetailsPickupPerson",
      "type": "object"
    },
    "OrdersUpdateShipmentRequest": {
      "type": "object",
      "properties": {
        "status": {
          "description": "New status for the shipment. Not updated if missing. Acceptable values are: - \"`delivered`\" - \"`undeliverable`\" - \"`readyForPickup`\" ",
          "type": "string"
        },
        "undeliveredDate": {
          "description": "Date on which the shipment has been undeliverable, in ISO 8601 format. Optional and can be provided only if `status` is `undeliverable`.",
          "type": "string"
        },
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment. Not updated if missing."
        },
        "shipmentId": {
          "description": "The ID of the shipment.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "lastPickupDate": {
          "description": "Date after which the pickup will expire, in ISO 8601 format. Required only when order is buy-online-pickup-in-store(BOPIS) and `status` is `ready for pickup`.",
          "type": "string"
        },
        "readyPickupDate": {
          "type": "string",
          "description": "Date on which the shipment has been ready for pickup, in ISO 8601 format. Optional and can be provided only if `status` is `ready for pickup`."
        },
        "carrier": {
          "type": "string",
          "description": "The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        },
        "deliveryDate": {
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.",
          "type": "string"
        }
      },
      "id": "OrdersUpdateShipmentRequest"
    },
    "OrdersListResponse": {
      "properties": {
        "resources": {
          "items": {
            "$ref": "Order"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of orders."
        }
      },
      "id": "OrdersListResponse",
      "type": "object"
    },
    "ListCssesResponse": {
      "id": "ListCssesResponse",
      "type": "object",
      "properties": {
        "csses": {
          "description": "The CSS domains affiliated with the specified CSS group.",
          "type": "array",
          "items": {
            "$ref": "Css"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      },
      "description": "The response message for the `ListCsses` method"
    },
    "DatafeedTarget": {
      "id": "DatafeedTarget",
      "type": "object",
      "properties": {
        "language": {
          "type": "string",
          "description": "The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`."
        },
        "excludedDestinations": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center)."
        },
        "includedDestinations": {
          "items": {
            "type": "string"
          },
          "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`. List of supported destinations (if available to the account): - DisplayAds - Shopping - ShoppingActions - SurfacesAcrossGoogle ",
          "type": "array"
        },
        "country": {
          "type": "string",
          "description": "The country where the items in the feed will be included in the search index, represented as a CLDR territory code."
        }
      }
    },
    "TestOrderPickupDetails": {
      "type": "object",
      "id": "TestOrderPickupDetails",
      "properties": {
        "locationCode": {
          "type": "string",
          "description": "Required. Code of the location defined by provider or merchant."
        },
        "pickupPersons": {
          "items": {
            "$ref": "TestOrderPickupDetailsPickupPerson"
          },
          "type": "array",
          "description": "Required. all pickup persons set by users."
        },
        "pickupLocationType": {
          "description": "Pickup location type. Acceptable values are: - \"`locker`\" - \"`store`\" - \"`curbside`\" ",
          "type": "string"
        },
        "pickupLocationAddress": {
          "$ref": "TestOrderAddress",
          "description": "Required. Pickup location address."
        }
      }
    },
    "GmbAccounts": {
      "type": "object",
      "id": "GmbAccounts",
      "properties": {
        "gmbAccounts": {
          "type": "array",
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          },
          "description": "A list of GMB accounts which are available to the merchant."
        },
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the Merchant Center account."
        }
      }
    },
    "TestOrder": {
      "properties": {
        "lineItems": {
          "items": {
            "$ref": "TestOrderLineItem"
          },
          "description": "Required. Line items that are ordered. At least one line item must be provided.",
          "type": "array"
        },
        "pickupDetails": {
          "$ref": "TestOrderPickupDetails",
          "description": "Overrides the predefined pickup details if provided."
        },
        "notificationMode": {
          "description": "Restricted. Do not use.",
          "type": "string"
        },
        "predefinedDeliveryAddress": {
          "description": "Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#testOrder`\"",
          "type": "string"
        },
        "shippingOption": {
          "description": "Required. The requested shipping option. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" ",
          "type": "string"
        },
        "promotions": {
          "description": "Promotions associated with the order.",
          "type": "array",
          "items": {
            "$ref": "OrderPromotion"
          }
        },
        "predefinedEmail": {
          "description": "Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" ",
          "type": "string"
        },
        "enableOrderinvoices": {
          "type": "boolean",
          "description": "Whether the orderinvoices service should support this order."
        },
        "predefinedBillingAddress": {
          "type": "string",
          "description": "Required. The billing address. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "deliveryDetails": {
          "$ref": "TestOrderDeliveryDetails",
          "description": "Overrides the predefined delivery details if provided."
        },
        "predefinedPickupDetails": {
          "type": "string",
          "description": "Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "shippingCost": {
          "description": "Required. The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states.",
          "$ref": "Price"
        }
      },
      "id": "TestOrder",
      "type": "object"
    },
    "OrderDeliveryDetails": {
      "type": "object",
      "id": "OrderDeliveryDetails",
      "properties": {
        "address": {
          "$ref": "OrderAddress",
          "description": "The delivery address"
        },
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the person receiving the delivery."
        }
      }
    },
    "AccountAddress": {
      "properties": {
        "region": {
          "type": "string",
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\")."
        },
        "postalCode": {
          "description": "Postal code or ZIP (e.g. \"94043\").",
          "type": "string"
        },
        "locality": {
          "type": "string",
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs)."
        },
        "streetAddress": {
          "description": "Street-level part of the address.",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "CLDR country code (e.g. \"US\"). This value cannot be set for a sub-account of an MCA. All MCA sub-accounts inherit the country of their parent MCA."
        }
      },
      "type": "object",
      "id": "AccountAddress"
    },
    "DatafeedstatusesListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesListResponse\"."
        },
        "resources": {
          "items": {
            "$ref": "DatafeedStatus"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of datafeed statuses."
        }
      },
      "id": "DatafeedstatusesListResponse",
      "type": "object"
    },
    "CustomerReturnReason": {
      "properties": {
        "description": {
          "description": "Description of the reason.",
          "type": "string"
        },
        "reasonCode": {
          "type": "string",
          "description": "Code of the return reason. Acceptable values are: - \"`betterPriceFound`\" - \"`changedMind`\" - \"`damagedOrDefectiveItem`\" - \"`didNotMatchDescription`\" - \"`doesNotFit`\" - \"`expiredItem`\" - \"`incorrectItemReceived`\" - \"`noLongerNeeded`\" - \"`notSpecified`\" - \"`orderedWrongItem`\" - \"`other`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`undeliverable`\" "
        }
      },
      "id": "CustomerReturnReason",
      "type": "object"
    },
    "AccountsCustomBatchRequestEntry": {
      "description": "A batch entry encoding a single non-batch accounts request.",
      "properties": {
        "labelIds": {
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "type": "array",
          "description": "Label IDs for the 'updatelabels' request."
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "overwrite": {
          "type": "boolean",
          "description": "Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict."
        },
        "force": {
          "description": "Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.",
          "type": "boolean"
        },
        "account": {
          "$ref": "Account",
          "description": "The account to create or update. Only defined if the method is `insert` or `update`."
        },
        "accountId": {
          "description": "The ID of the targeted account. Only defined if the method is not `insert`.",
          "format": "uint64",
          "type": "string"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`claimWebsite`\" - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`link`\" - \"`update`\" "
        },
        "view": {
          "description": "Controls which fields are visible. Only applicable if the method is 'get'.",
          "type": "string"
        },
        "linkRequest": {
          "description": "Details about the `link` request.",
          "$ref": "AccountsCustomBatchRequestEntryLinkRequest"
        }
      },
      "type": "object",
      "id": "AccountsCustomBatchRequestEntry"
    },
    "ProductStatus": {
      "properties": {
        "creationDate": {
          "type": "string",
          "description": "Date on which the item has been created, in ISO 8601 format."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productStatus`\"",
          "type": "string"
        },
        "destinationStatuses": {
          "description": "The intended destinations for the product.",
          "type": "array",
          "items": {
            "$ref": "ProductStatusDestinationStatus"
          }
        },
        "productId": {
          "description": "The ID of the product for which status is reported.",
          "type": "string"
        },
        "googleExpirationDate": {
          "type": "string",
          "description": "Date on which the item expires in Google Shopping, in ISO 8601 format."
        },
        "link": {
          "type": "string",
          "description": "The link to the product."
        },
        "lastUpdateDate": {
          "type": "string",
          "description": "Date on which the item has been last updated, in ISO 8601 format."
        },
        "itemLevelIssues": {
          "description": "A list of all issues associated with the product.",
          "items": {
            "$ref": "ProductStatusItemLevelIssue"
          },
          "type": "array"
        },
        "title": {
          "type": "string",
          "description": "The title of the product."
        }
      },
      "description": "The status of a product, i.e., information about a product computed asynchronously.",
      "id": "ProductStatus",
      "type": "object"
    },
    "ShippingsettingsGetSupportedPickupServicesResponse": {
      "id": "ShippingsettingsGetSupportedPickupServicesResponse",
      "properties": {
        "pickupServices": {
          "type": "array",
          "description": "A list of supported pickup services. May be empty.",
          "items": {
            "$ref": "PickupServicesPickupService"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedPickupServicesResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersShipLineItemsResponse": {
      "type": "object",
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersShipLineItemsResponse\".",
          "type": "string"
        }
      },
      "id": "OrdersShipLineItemsResponse"
    },
    "LiasettingsCustomBatchResponse": {
      "id": "LiasettingsCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "LiasettingsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "AccountstatusesCustomBatchResponseEntry": {
      "id": "AccountstatusesCustomBatchResponseEntry",
      "properties": {
        "accountStatus": {
          "description": "The requested account status. Defined if and only if the request was successful.",
          "$ref": "AccountStatus"
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32"
        }
      },
      "type": "object",
      "description": "A batch entry encoding a single non-batch accountstatuses response."
    },
    "OrderLineItemProduct": {
      "type": "object",
      "id": "OrderLineItemProduct",
      "properties": {
        "imageLink": {
          "description": "URL of an image of the item.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The REST ID of the product."
        },
        "shownImage": {
          "type": "string",
          "description": "URL to the cached image shown to the user when order was placed."
        },
        "price": {
          "description": "Price of the item.",
          "$ref": "Price"
        },
        "condition": {
          "type": "string",
          "description": "Condition or state of the item. Acceptable values are: - \"`new`\" - \"`refurbished`\" - \"`used`\" "
        },
        "offerId": {
          "description": "An identifier of the item.",
          "type": "string"
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item.",
          "type": "string"
        },
        "brand": {
          "type": "string",
          "description": "Brand of the item."
        },
        "fees": {
          "description": "Associated fees at order creation time.",
          "items": {
            "$ref": "OrderLineItemProductFee"
          },
          "type": "array"
        },
        "variantAttributes": {
          "type": "array",
          "description": "Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.",
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          }
        },
        "targetCountry": {
          "description": "The CLDR territory // code of the target country of the product.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "The two-letter ISO 639-1 language code for the item."
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number (GTIN) of the item."
        },
        "title": {
          "type": "string",
          "description": "The title of the product."
        }
      }
    },
    "AccountstatusesCustomBatchRequestEntry": {
      "id": "AccountstatusesCustomBatchRequestEntry",
      "type": "object",
      "properties": {
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "destinations": {
          "items": {
            "type": "string"
          },
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
          "type": "array"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "The ID of the (sub-)account whose status to get.",
          "format": "uint64"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        }
      },
      "description": "A batch entry encoding a single non-batch accountstatuses request."
    },
    "AccountsCustomBatchResponse": {
      "type": "object",
      "id": "AccountsCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "AccountsCustomBatchResponseEntry"
          },
          "type": "array"
        }
      }
    },
    "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem": {
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return."
        },
        "quantity": {
          "type": "integer",
          "description": "Quantity that is returned.",
          "format": "uint32"
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
    },
    "AccountStatus": {
      "id": "AccountStatus",
      "description": "The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.",
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The ID of the account for which the status is reported."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountStatus`\"",
          "type": "string"
        },
        "websiteClaimed": {
          "type": "boolean",
          "description": "Whether the account's website is claimed or not."
        },
        "accountLevelIssues": {
          "items": {
            "$ref": "AccountStatusAccountLevelIssue"
          },
          "type": "array",
          "description": "A list of account level issues."
        },
        "products": {
          "description": "List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.",
          "type": "array",
          "items": {
            "$ref": "AccountStatusProducts"
          }
        }
      }
    },
    "MonetaryAmount": {
      "type": "object",
      "properties": {
        "priceAmount": {
          "description": "The pre-tax or post-tax price depends on the location of the order. - For countries (e.g. US) where price attribute excludes tax, this field corresponds to the pre-tax value. - For coutries (e.g. France) where price attribute includes tax, this field corresponds to the post-tax value .",
          "$ref": "Price"
        },
        "taxAmount": {
          "description": "Tax value, present only for countries where price attribute excludes tax (e.g. US). No tax is referenced as 0 value with the corresponding `currency`.",
          "$ref": "Price"
        }
      },
      "id": "MonetaryAmount"
    },
    "ProductProductDetail": {
      "type": "object",
      "id": "ProductProductDetail",
      "properties": {
        "attributeValue": {
          "type": "string",
          "description": "The value of the product detail."
        },
        "attributeName": {
          "description": "The name of the product detail.",
          "type": "string"
        },
        "sectionName": {
          "type": "string",
          "description": "The section header used to group a set of product details."
        }
      }
    },
    "ProductStatusDestinationStatus": {
      "id": "ProductStatusDestinationStatus",
      "properties": {
        "approvedCountries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of country codes (ISO 3166-1 alpha-2) where the offer is approved."
        },
        "destination": {
          "type": "string",
          "description": "The name of the destination"
        },
        "pendingCountries": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of country codes (ISO 3166-1 alpha-2) where the offer is pending approval."
        },
        "status": {
          "type": "string",
          "description": "Destination approval status in `targetCountry` of the offer."
        },
        "disapprovedCountries": {
          "items": {
            "type": "string"
          },
          "description": "List of country codes (ISO 3166-1 alpha-2) where the offer is disapproved.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "AccountsAuthInfoResponse": {
      "properties": {
        "accountIdentifiers": {
          "description": "The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined. ",
          "items": {
            "$ref": "AccountIdentifier"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsAuthInfoResponse\"."
        }
      },
      "id": "AccountsAuthInfoResponse",
      "type": "object"
    },
    "AccounttaxListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxListResponse\".",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "AccountTax"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of account tax settings."
        }
      },
      "id": "AccounttaxListResponse"
    },
    "AccounttaxCustomBatchRequestEntry": {
      "properties": {
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "accountTax": {
          "description": "The account tax settings to update. Only defined if the method is `update`.",
          "$ref": "AccountTax"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" ",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "description": "The ID of the account for which to get/update account tax settings.",
          "format": "uint64"
        }
      },
      "description": "A batch entry encoding a single non-batch accounttax request.",
      "type": "object",
      "id": "AccounttaxCustomBatchRequestEntry"
    },
    "Css": {
      "properties": {
        "displayName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The CSS domain's display name, used when space is constrained."
        },
        "homepageUri": {
          "description": "Output only. Immutable. The CSS domain's homepage.",
          "type": "string",
          "readOnly": true
        },
        "fullName": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Immutable. The CSS domain's full name."
        },
        "cssGroupId": {
          "description": "Output only. Immutable. The ID of the CSS group this CSS domain is affiliated with. Only populated for CSS group users.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        },
        "labelIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "A list of label IDs that are assigned to this CSS domain by its CSS group. Only populated for CSS group users."
        },
        "cssDomainId": {
          "description": "Output only. Immutable. The CSS domain ID.",
          "format": "int64",
          "readOnly": true,
          "type": "string"
        }
      },
      "id": "Css",
      "type": "object",
      "description": "Information about CSS domain."
    },
    "HolidayCutoff": {
      "properties": {
        "holidayId": {
          "type": "string",
          "description": "Unique identifier for the holiday. Required."
        },
        "deadlineHour": {
          "description": "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.",
          "type": "integer",
          "format": "uint32"
        },
        "deadlineDate": {
          "type": "string",
          "description": "Date of the order deadline, in ISO 8601 format. E.g. \"2016-11-29\" for 29th November 2016. Required."
        },
        "deadlineTimezone": {
          "type": "string",
          "description": "Timezone identifier for the deadline hour. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required."
        },
        "visibleFromDate": {
          "type": "string",
          "description": "Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. \"2016-10-31\" for 31st October 2016. Required."
        }
      },
      "type": "object",
      "id": "HolidayCutoff"
    },
    "OrderMerchantProvidedAnnotation": {
      "id": "OrderMerchantProvidedAnnotation",
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for additional merchant provided (as key-value pairs) annotation about the line item.",
          "type": "string"
        },
        "key": {
          "type": "string",
          "description": "Key for additional merchant provided (as key-value pairs) annotation about the line item."
        }
      }
    },
    "OrderReportDisbursement": {
      "description": "Order disbursement. All methods require the payment analyst role.",
      "type": "object",
      "id": "OrderReportDisbursement",
      "properties": {
        "disbursementDate": {
          "description": "The date the disbursement was initiated, in ISO 8601 format.",
          "type": "string"
        },
        "disbursementId": {
          "description": "The ID of the disbursement.",
          "type": "string"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "disbursementAmount": {
          "description": "The disbursement amount.",
          "$ref": "Price"
        },
        "disbursementCreationDate": {
          "type": "string",
          "description": "The disbursement date, in ISO 8601 format."
        }
      }
    },
    "CarriersCarrier": {
      "properties": {
        "country": {
          "description": "The CLDR country code of the carrier (e.g., \"US\"). Always present.",
          "type": "string"
        },
        "services": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of supported services (e.g., `\"ground\"`) for that carrier. Contains at least one service."
        },
        "name": {
          "type": "string",
          "description": "The name of the carrier (e.g., `\"UPS\"`). Always present."
        }
      },
      "type": "object",
      "id": "CarriersCarrier"
    },
    "PosCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "PosCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      },
      "type": "object",
      "id": "PosCustomBatchRequest"
    },
    "DatafeedsFetchNowResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsFetchNowResponse\"."
        }
      },
      "id": "DatafeedsFetchNowResponse",
      "type": "object"
    },
    "PosCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "storeCode": {
          "description": "The store code. Set this only if the method is `delete` or `get`.",
          "type": "string"
        },
        "targetMerchantId": {
          "type": "string",
          "description": "The ID of the account for which to get/submit data.",
          "format": "uint64"
        },
        "batchId": {
          "type": "integer",
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32"
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the POS data provider."
        },
        "store": {
          "description": "The store information to submit. Set this only if the method is `insert`.",
          "$ref": "PosStore"
        },
        "inventory": {
          "description": "The inventory to submit. Set this only if the method is `inventory`.",
          "$ref": "PosInventory"
        },
        "sale": {
          "$ref": "PosSale",
          "description": "The sale information to submit. Set this only if the method is `sale`."
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`inventory`\" - \"`sale`\" "
        }
      },
      "id": "PosCustomBatchRequestEntry"
    },
    "TestOrderLineItem": {
      "properties": {
        "shippingDetails": {
          "description": "Required. Details of the requested shipping for the line item.",
          "$ref": "OrderLineItemShippingDetails"
        },
        "quantityOrdered": {
          "description": "Required. Number of items ordered.",
          "type": "integer",
          "format": "uint32"
        },
        "product": {
          "description": "Required. Product data from the time of the order placement.",
          "$ref": "TestOrderLineItemProduct"
        },
        "returnInfo": {
          "$ref": "OrderLineItemReturnInfo",
          "description": "Required. Details of the return policy for the line item."
        }
      },
      "id": "TestOrderLineItem",
      "type": "object"
    },
    "RepricingRuleEligibleOfferMatcherStringMatcher": {
      "type": "object",
      "description": "Matcher by string attributes.",
      "properties": {
        "strAttributes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "String attributes, as long as such attribute of an offer is one of the string attribute values, the offer is considered as passing the matcher. The string matcher checks an offer for inclusivity in the string attributes, not equality. Only literal string matching is supported, no regex."
        }
      },
      "id": "RepricingRuleEligibleOfferMatcherStringMatcher"
    },
    "PosSaleRequest": {
      "properties": {
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string",
          "format": "int64"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PosSaleRequest"
    },
    "DeliveryTime": {
      "id": "DeliveryTime",
      "type": "object",
      "properties": {
        "maxTransitTimeInDays": {
          "type": "integer",
          "format": "uint32",
          "description": "Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`."
        },
        "minHandlingTimeInDays": {
          "format": "uint32",
          "description": "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.",
          "type": "integer"
        },
        "transitTimeTable": {
          "description": "Transit time table, number of business days spent in transit based on row and column dimensions. Either `{min,max}TransitTimeInDays` or `transitTimeTable` can be set, but not both.",
          "$ref": "TransitTable"
        },
        "maxHandlingTimeInDays": {
          "type": "integer",
          "description": "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.",
          "format": "uint32"
        },
        "handlingBusinessDayConfig": {
          "$ref": "BusinessDayConfig",
          "description": "The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed."
        },
        "cutoffTime": {
          "description": "Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST.",
          "$ref": "CutoffTime"
        },
        "holidayCutoffs": {
          "type": "array",
          "description": "Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.",
          "items": {
            "$ref": "HolidayCutoff"
          }
        },
        "minTransitTimeInDays": {
          "format": "uint32",
          "description": "Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.",
          "type": "integer"
        },
        "transitBusinessDayConfig": {
          "$ref": "BusinessDayConfig",
          "description": "The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed."
        }
      }
    },
    "RepricingRule": {
      "type": "object",
      "properties": {
        "ruleId": {
          "readOnly": true,
          "description": "Output only. Immutable. The ID to uniquely identify each repricing rule.",
          "type": "string"
        },
        "paused": {
          "type": "boolean",
          "description": "Represents whether a rule is paused. A paused rule will behave like a non-paused rule within CRUD operations, with the major difference that a paused rule will not be evaluated and will have no effect on offers."
        },
        "languageCode": {
          "description": "Required. Immutable. The two-letter ISO 639-1 language code associated with the repricing rule.",
          "type": "string"
        },
        "effectiveTimePeriod": {
          "$ref": "RepricingRuleEffectiveTime",
          "description": "Required. Time period when the rule should take effect."
        },
        "eligibleOfferMatcher": {
          "$ref": "RepricingRuleEligibleOfferMatcher",
          "description": "Required. Match criteria for the eligible offers."
        },
        "merchantId": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Immutable. Merchant that owns the repricing rule.",
          "format": "int64"
        },
        "title": {
          "description": "The title for the rule.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Required. Immutable. The type of the rule.",
          "enum": [
            "REPRICING_RULE_TYPE_UNSPECIFIED",
            "TYPE_WIN_BUY_BOX"
          ],
          "enumDescriptions": [
            "Unused.",
            "Buy Box winning price-based rules. In Buy on Google, the Buy Box refers to the offer for a product shown at the top of the Product Detail Page (PDP) with an \"Add to Cart\" button. If this rule is chosen, your offer price will be lowered within the range you set to help increase the likelihood that you will win the Buy Box. There is no RuleDefinition needed for this type."
          ]
        },
        "countryCode": {
          "description": "Required. Immutable. CLDR country code (e.g. \"US\").",
          "type": "string"
        },
        "restriction": {
          "$ref": "RepricingRuleRestriction",
          "description": "Required. Restriction of the rule appliance."
        }
      },
      "id": "RepricingRule",
      "description": "Represents a repricing rule. A repricing rule is used by shopping serving to adjust transactable offer prices if conditions are met. Next ID: 24"
    },
    "OrdersRejectReturnLineItemResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRejectReturnLineItemResponse\"."
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "id": "OrdersRejectReturnLineItemResponse",
      "type": "object"
    },
    "OrdersUpdateMerchantOrderIdRequest": {
      "type": "object",
      "id": "OrdersUpdateMerchantOrderIdRequest",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "merchantOrderId": {
          "type": "string",
          "description": "The merchant order id to be assigned to the order. Must be unique per merchant."
        }
      }
    },
    "Weight": {
      "type": "object",
      "id": "Weight",
      "properties": {
        "value": {
          "type": "string",
          "description": "Required. The weight represented as a number."
        },
        "unit": {
          "description": "Required. The weight unit. Acceptable values are: - \"`kg`\" - \"`lb`\" ",
          "type": "string"
        }
      }
    },
    "AccountGoogleMyBusinessLink": {
      "id": "AccountGoogleMyBusinessLink",
      "properties": {
        "gmbEmail": {
          "type": "string",
          "description": "The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account."
        },
        "gmbAccountId": {
          "description": "The ID of the GMB account. If this is provided, then `gmbEmail` is ignored. The value of this field should match the `accountId` used by the GMB API.",
          "type": "string"
        },
        "status": {
          "description": "Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - \"`active`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderreturnsReturnItem": {
      "type": "object",
      "properties": {
        "refund": {
          "$ref": "OrderreturnsRefundOperation",
          "description": "Refunds the item."
        },
        "returnItemId": {
          "description": "Unit level ID for the return item. Different units of the same product will have different IDs.",
          "type": "string"
        },
        "reject": {
          "description": "Rejects the item.",
          "$ref": "OrderreturnsRejectOperation"
        }
      },
      "id": "OrderreturnsReturnItem"
    },
    "OrderReturn": {
      "id": "OrderReturn",
      "type": "object",
      "properties": {
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "Quantity that is returned.",
          "format": "uint32"
        },
        "actor": {
          "type": "string",
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" "
        },
        "creationDate": {
          "type": "string",
          "description": "Date on which the item has been created, in ISO 8601 format."
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        }
      }
    },
    "TransitTable": {
      "properties": {
        "rows": {
          "items": {
            "$ref": "TransitTableTransitTimeRow"
          },
          "type": "array"
        },
        "transitTimeLabels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of transit time labels. The last value can be `\"all other labels\"`. Example: `[\"food\", \"electronics\", \"all other labels\"]`."
        },
        "postalCodeGroupNames": {
          "items": {
            "type": "string"
          },
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service.",
          "type": "array"
        }
      },
      "id": "TransitTable",
      "type": "object"
    },
    "Headers": {
      "id": "Headers",
      "description": "A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.",
      "type": "object",
      "properties": {
        "weights": {
          "items": {
            "$ref": "Weight"
          },
          "type": "array",
          "description": "A list of inclusive order weight upper bounds. The last weight's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}]` represents the headers \"\u003c= 10kg\", \"\u003c= 50kg\", and \"\u003e 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set."
        },
        "prices": {
          "items": {
            "$ref": "Price"
          },
          "description": "A list of inclusive order price upper bounds. The last price's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}]` represents the headers \"\u003c= $10\", \"\u003c= $500\", and \"\u003e $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array"
        },
        "numberOfItems": {
          "items": {
            "type": "string"
          },
          "description": "A list of inclusive number of items upper bounds. The last value can be `\"infinity\"`. For example `[\"10\", \"50\", \"infinity\"]` represents the headers \"\u003c= 10 items\", \"\u003c= 50 items\", and \"\u003e 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array"
        },
        "postalCodeGroupNames": {
          "type": "array",
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "type": "string"
          }
        },
        "locations": {
          "type": "array",
          "description": "A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "$ref": "LocationIdSet"
          }
        }
      }
    },
    "ProductstatusesCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ProductstatusesCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      },
      "type": "object",
      "id": "ProductstatusesCustomBatchRequest"
    },
    "RepricingRuleEffectiveTime": {
      "properties": {
        "fixedTimePeriods": {
          "items": {
            "$ref": "RepricingRuleEffectiveTimeFixedTimePeriod"
          },
          "description": "A list of fixed time periods combined with OR. The maximum number of entries is limited to 5.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "RepricingRuleEffectiveTime"
    },
    "SettlementTransactionIdentifiers": {
      "properties": {
        "transactionId": {
          "description": "The Google transaction ID.",
          "type": "string"
        },
        "settlementEntryId": {
          "type": "string",
          "description": "The unique ID of the settlement transaction entry."
        },
        "adjustmentId": {
          "description": "The identifier of the adjustments, if it is available.",
          "type": "string"
        },
        "shipmentIds": {
          "description": "The shipment ids for the item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "merchantOrderId": {
          "type": "string",
          "description": "The merchant provided order ID."
        },
        "orderItemId": {
          "description": "The identifier of the item.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SettlementTransactionIdentifiers"
    },
    "PosListResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posListResponse\".",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "PosStore"
          },
          "type": "array"
        }
      },
      "id": "PosListResponse",
      "type": "object"
    },
    "OrderShipment": {
      "id": "OrderShipment",
      "type": "object",
      "properties": {
        "carrier": {
          "description": "The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers will not include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for US are: - \"`ups`\" (United Parcel Service) *automatic status updates* - \"`usps`\" (United States Postal Service) *automatic status updates* - \"`fedex`\" (FedEx) *automatic status updates * - \"`dhl`\" (DHL eCommerce) *automatic status updates* (US only) - \"`ontrac`\" (OnTrac) *automatic status updates * - \"`dhl express`\" (DHL Express) - \"`deliv`\" (Deliv) - \"`dynamex`\" (TForce) - \"`lasership`\" (LaserShip) - \"`mpx`\" (Military Parcel Xpress) - \"`uds`\" (United Delivery Service) - \"`efw`\" (Estes Forwarding Worldwide) - \"`jd logistics`\" (JD Logistics) - \"`yunexpress`\" (YunExpress) - \"`china post`\" (China Post) - \"`china ems`\" (China Post Express Mail Service) - \"`singapore post`\" (Singapore Post) - \"`pos malaysia`\" (Pos Malaysia) - \"`postnl`\" (PostNL) - \"`ptt`\" (PTT Turkish Post) - \"`eub`\" (ePacket) - \"`chukou1`\" (Chukou1 Logistics) - \"`bestex`\" (Best Express) - \"`canada post`\" (Canada Post) - \"`purolator`\" (Purolator) - \"`canpar`\" (Canpar) - \"`india post`\" (India Post) - \"`blue dart`\" (Blue Dart) - \"`delhivery`\" (Delhivery) - \"`dtdc`\" (DTDC) - \"`tpc india`\" (TPC India) Supported carriers for FR are: - \"`la poste`\" (La Poste) *automatic status updates * - \"`colissimo`\" (Colissimo by La Poste) *automatic status updates* - \"`ups`\" (United Parcel Service) *automatic status updates * - \"`chronopost`\" (Chronopost by La Poste) - \"`gls`\" (General Logistics Systems France) - \"`dpd`\" (DPD Group by GeoPost) - \"`bpost`\" (Belgian Post Group) - \"`colis prive`\" (Colis Privé) - \"`boxtal`\" (Boxtal) - \"`geodis`\" (GEODIS) - \"`tnt`\" (TNT) - \"`db schenker`\" (DB Schenker) - \"`aramex`\" (Aramex) ",
          "type": "string"
        },
        "shipmentGroupId": {
          "description": "The shipment group ID of the shipment. This is set in shiplineitems request.",
          "type": "string"
        },
        "scheduledDeliveryDetails": {
          "description": "Delivery details of the shipment if scheduling is needed.",
          "$ref": "OrderShipmentScheduledDeliveryDetails"
        },
        "id": {
          "type": "string",
          "description": "The ID of the shipment."
        },
        "trackingId": {
          "description": "The tracking ID for the shipment.",
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "description": "Date on which the shipment has been created, in ISO 8601 format."
        },
        "status": {
          "description": "The status of the shipment. Acceptable values are: - \"`delivered`\" - \"`readyForPickup`\" - \"`shipped`\" - \"`undeliverable`\" ",
          "type": "string"
        },
        "deliveryDate": {
          "type": "string",
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`"
        },
        "lineItems": {
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "type": "array",
          "description": "The line items that are shipped."
        }
      }
    },
    "MerchantOrderReturnItem": {
      "type": "object",
      "id": "MerchantOrderReturnItem",
      "properties": {
        "shipmentUnitId": {
          "description": "ID of the shipment unit assigned by the merchant. Provided for shipments with invoice support.",
          "type": "string"
        },
        "itemId": {
          "description": "Product level item ID. If the returned items are of the same product, they will have the same ID.",
          "type": "string"
        },
        "state": {
          "type": "string",
          "description": "State of the item. Acceptable values are: - \"`canceled`\" - \"`new`\" - \"`received`\" - \"`refunded`\" - \"`rejected`\" "
        },
        "refundableAmount": {
          "description": "Maximum amount that can be refunded for this return item.",
          "$ref": "MonetaryAmount"
        },
        "customerReturnReason": {
          "$ref": "CustomerReturnReason",
          "description": "The reason that the customer chooses to return an item."
        },
        "merchantRejectionReason": {
          "$ref": "MerchantRejectionReason",
          "description": "The reason that the merchant chose to reject an item return."
        },
        "merchantReturnReason": {
          "$ref": "RefundReason",
          "description": "The reason that merchant chooses to accept a return item."
        },
        "product": {
          "$ref": "OrderLineItemProduct",
          "description": "Product data from the time of the order placement."
        },
        "returnShipmentIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "IDs of the return shipments that this return item belongs to."
        },
        "returnItemId": {
          "type": "string",
          "description": "Unit level ID for the return item. Different units of the same product will have different IDs."
        },
        "shipmentGroupId": {
          "description": "ID of the original shipment group. Provided for shipments with invoice support.",
          "type": "string"
        }
      }
    },
    "DatafeedStatusExample": {
      "description": "An example occurrence for a particular error.",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The problematic value."
        },
        "itemId": {
          "description": "The ID of the example item.",
          "type": "string"
        },
        "lineNumber": {
          "description": "Line number in the data feed where the example is found.",
          "format": "uint64",
          "type": "string"
        }
      },
      "id": "DatafeedStatusExample"
    },
    "AccountsLinkRequest": {
      "properties": {
        "linkedAccountId": {
          "type": "string",
          "description": "The ID of the linked account."
        },
        "linkType": {
          "type": "string",
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" "
        },
        "services": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of provided services."
        },
        "action": {
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" ",
          "type": "string"
        }
      },
      "id": "AccountsLinkRequest",
      "type": "object"
    },
    "AccountCustomerService": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "description": "Customer service phone number.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Customer service email."
        },
        "url": {
          "description": "Customer service URL.",
          "type": "string"
        }
      },
      "id": "AccountCustomerService"
    },
    "OrdersCreateTestOrderRequest": {
      "type": "object",
      "id": "OrdersCreateTestOrderRequest",
      "properties": {
        "testOrder": {
          "$ref": "TestOrder",
          "description": "The test order to create."
        },
        "templateName": {
          "type": "string",
          "description": "The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" "
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via `template_name`, or the addresses of orders created via `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to `US`."
        }
      }
    },
    "HolidaysHoliday": {
      "id": "HolidaysHoliday",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "The holiday type. Always present. Acceptable values are: - \"`Christmas`\" - \"`Easter`\" - \"`Father's Day`\" - \"`Halloween`\" - \"`Independence Day (USA)`\" - \"`Mother's Day`\" - \"`Thanksgiving`\" - \"`Valentine's Day`\" "
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present."
        },
        "deliveryGuaranteeHour": {
          "type": "string",
          "description": "Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.",
          "format": "uint64"
        },
        "date": {
          "description": "Date of the holiday, in ISO 8601 format. E.g. \"2016-12-25\" for Christmas 2016. Always present.",
          "type": "string"
        },
        "countryCode": {
          "description": "The CLDR territory code of the country in which the holiday is available. E.g. \"US\", \"DE\", \"GB\". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present.",
          "type": "string"
        },
        "deliveryGuaranteeDate": {
          "type": "string",
          "description": "Date on which the order has to arrive at the customer's, in ISO 8601 format. E.g. \"2016-12-24\" for 24th December 2016. Always present."
        }
      }
    },
    "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo": {
      "properties": {
        "shipmentId": {
          "type": "string",
          "description": "Required. The ID of the shipment. This is assigned by the merchant and is unique to each shipment."
        },
        "trackingId": {
          "description": "The tracking ID for the shipment.",
          "type": "string"
        },
        "carrier": {
          "type": "string",
          "description": "The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
    },
    "PosCustomBatchResponse": {
      "type": "object",
      "id": "PosCustomBatchResponse",
      "properties": {
        "entries": {
          "items": {
            "$ref": "PosCustomBatchResponseEntry"
          },
          "type": "array",
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posCustomBatchResponse\".",
          "type": "string"
        }
      }
    },
    "ReturnpolicyCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "returnPolicyId": {
          "description": "The return policy ID. Set this only if the method is `delete` or `get`.",
          "type": "string"
        },
        "returnPolicy": {
          "$ref": "ReturnPolicy",
          "description": "The return policy to submit. Set this only if the method is `insert`."
        },
        "method": {
          "description": "Method of the batch request entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" ",
          "type": "string"
        },
        "merchantId": {
          "description": "The Merchant Center account ID.",
          "format": "uint64",
          "type": "string"
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "An entry ID, unique within the batch request."
        }
      },
      "id": "ReturnpolicyCustomBatchRequestEntry"
    },
    "OrderPickupDetailsCollector": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the person picking up the shipment.",
          "type": "string"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number of the person picking up the shipment."
        }
      },
      "id": "OrderPickupDetailsCollector"
    },
    "DatafeedsListResponse": {
      "id": "DatafeedsListResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of datafeeds."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsListResponse\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Datafeed"
          }
        }
      }
    },
    "OrderCustomerLoyaltyInfo": {
      "type": "object",
      "id": "OrderCustomerLoyaltyInfo",
      "properties": {
        "name": {
          "description": "Name of card/membership holder, this field will be populated when",
          "type": "string"
        },
        "loyaltyNumber": {
          "description": "The loyalty card/membership number.",
          "type": "string"
        }
      }
    },
    "ShippingsettingsCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch shipping settings response.",
      "type": "object",
      "id": "ShippingsettingsCustomBatchResponseEntry",
      "properties": {
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "shippingSettings": {
          "description": "The retrieved or updated account shipping settings.",
          "$ref": "ShippingSettings"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "format": "uint32",
          "type": "integer"
        }
      }
    },
    "OrderPromotionItem": {
      "id": "OrderPromotionItem",
      "type": "object",
      "properties": {
        "quantity": {
          "type": "integer",
          "description": "The quantity of the associated product. Do not provide for `orders.createtestorder`.",
          "format": "int32"
        },
        "productId": {
          "type": "string",
          "description": "`orders.createtestorder`."
        },
        "lineItemId": {
          "type": "string",
          "description": "The line item ID of a product. Do not provide for `orders.createtestorder`."
        },
        "offerId": {
          "type": "string",
          "description": "Required. Offer ID of a product. Only for `orders.createtestorder`."
        }
      }
    },
    "OrdersAcknowledgeRequest": {
      "id": "OrdersAcknowledgeRequest",
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiasettingsListResponse": {
      "id": "LiasettingsListResponse",
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "LiaSettings"
          }
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of LIA settings.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListResponse\".",
          "type": "string"
        }
      }
    },
    "CarrierRate": {
      "type": "object",
      "id": "CarrierRate",
      "properties": {
        "originPostalCode": {
          "type": "string",
          "description": "Shipping origin for this carrier rate. Required."
        },
        "carrierService": {
          "type": "string",
          "description": "Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved via the `getSupportedCarriers` method. Required."
        },
        "flatAdjustment": {
          "$ref": "Price",
          "description": "Additive shipping rate modifier. Can be negative. For example `{ \"value\": \"1\", \"currency\" : \"USD\" }` adds $1 to the rate, `{ \"value\": \"-3\", \"currency\" : \"USD\" }` removes $3 from the rate. Optional."
        },
        "percentageAdjustment": {
          "type": "string",
          "description": "Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `\"5.4\"` increases the rate by 5.4%, `\"-3\"` decreases the rate by 3%. Optional."
        },
        "name": {
          "description": "Name of the carrier rate. Must be unique per rate group. Required.",
          "type": "string"
        },
        "carrierName": {
          "description": "Carrier service, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved via the `getSupportedCarriers` method. Required.",
          "type": "string"
        }
      }
    },
    "DatafeedstatusesCustomBatchRequestEntry": {
      "id": "DatafeedstatusesCustomBatchRequestEntry",
      "properties": {
        "language": {
          "type": "string",
          "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target datafeeds this parameter is required."
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" "
        },
        "country": {
          "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target datafeeds this parameter is required.",
          "type": "string"
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "datafeedId": {
          "description": "The ID of the data feed to get.",
          "type": "string",
          "format": "uint64"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        }
      },
      "description": "A batch entry encoding a single non-batch datafeedstatuses request.",
      "type": "object"
    },
    "ReturnpolicyCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "ReturnpolicyCustomBatchRequestEntry"
          }
        }
      },
      "type": "object",
      "id": "ReturnpolicyCustomBatchRequest"
    },
    "LocalinventoryCustomBatchResponseEntry": {
      "properties": {
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#localinventoryCustomBatchResponseEntry`\""
        }
      },
      "description": "Batch entry encoding a single local inventory update response.",
      "id": "LocalinventoryCustomBatchResponseEntry",
      "type": "object"
    },
    "LiasettingsRequestGmbAccessResponse": {
      "id": "LiasettingsRequestGmbAccessResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestGmbAccessResponse\"."
        }
      },
      "type": "object"
    },
    "OrdersSetLineItemMetadataResponse": {
      "type": "object",
      "id": "OrdersSetLineItemMetadataResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersSetLineItemMetadataResponse\"."
        }
      }
    },
    "MerchantOrderReturn": {
      "description": "Order return. Production access (all methods) requires the order manager role. Sandbox access does not.",
      "type": "object",
      "id": "MerchantOrderReturn",
      "properties": {
        "returnPricingInfo": {
          "$ref": "ReturnPricingInfo",
          "description": "Information about shipping costs."
        },
        "returnShipments": {
          "description": "Shipments of the return.",
          "items": {
            "$ref": "ReturnShipment"
          },
          "type": "array"
        },
        "orderId": {
          "type": "string",
          "description": "Google order ID."
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant defined order ID."
        },
        "orderReturnId": {
          "type": "string",
          "description": "Order return ID generated by Google."
        },
        "returnItems": {
          "items": {
            "$ref": "MerchantOrderReturnItem"
          },
          "description": "Items of the return.",
          "type": "array"
        },
        "creationDate": {
          "description": "The date of creation of the return, in ISO 8601 format.",
          "type": "string"
        }
      }
    },
    "MinimumOrderValueTable": {
      "properties": {
        "storeCodeSetWithMovs": {
          "items": {
            "$ref": "MinimumOrderValueTableStoreCodeSetWithMov"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "MinimumOrderValueTable"
    },
    "OrderCancellation": {
      "type": "object",
      "id": "OrderCancellation",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Shopping Actions until you make an update to that product. This will not affect your Shopping ads. Acceptable values are: - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`customerCanceled`\" - \"`customerInitiatedCancel`\" - \"`customerSupportRequested`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceError`\" - \"`returnRefundAbuse`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        },
        "actor": {
          "description": "The actor that created the cancellation. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "The quantity that was canceled.",
          "format": "uint32"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "creationDate": {
          "description": "Date on which the cancellation has been created, in ISO 8601 format.",
          "type": "string"
        }
      }
    },
    "ProductsCustomBatchRequestEntry": {
      "properties": {
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "An entry ID, unique within the batch request."
        },
        "feedId": {
          "format": "uint64",
          "type": "string",
          "description": "The Content API feed id."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" ",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to get or delete. Only defined if the method is `get` or `delete`."
        },
        "product": {
          "$ref": "Product",
          "description": "The product to insert. Only required if the method is `insert`."
        }
      },
      "id": "ProductsCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch products request.",
      "type": "object"
    },
    "OrdersCreateTestReturnRequest": {
      "properties": {
        "items": {
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
          },
          "type": "array",
          "description": "Returned items."
        }
      },
      "type": "object",
      "id": "OrdersCreateTestReturnRequest"
    },
    "TestOrderAddress": {
      "properties": {
        "recipientName": {
          "type": "string",
          "description": "Name of the recipient."
        },
        "streetAddress": {
          "description": "Street-level part of the address.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "isPostOfficeBox": {
          "type": "boolean",
          "description": "Whether the address is a post office box."
        },
        "region": {
          "type": "string",
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\")."
        },
        "postalCode": {
          "type": "string",
          "description": "Postal Code or ZIP (e.g. \"94043\")."
        },
        "locality": {
          "type": "string",
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs)."
        },
        "fullAddress": {
          "items": {
            "type": "string"
          },
          "description": "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States ",
          "type": "array"
        },
        "country": {
          "type": "string",
          "description": "CLDR country code (e.g. \"US\")."
        }
      },
      "type": "object",
      "id": "TestOrderAddress"
    },
    "Row": {
      "id": "Row",
      "type": "object",
      "properties": {
        "cells": {
          "items": {
            "$ref": "Value"
          },
          "description": "The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required.",
          "type": "array"
        }
      }
    },
    "ShipmentInvoiceLineItemInvoice": {
      "id": "ShipmentInvoiceLineItemInvoice",
      "properties": {
        "productId": {
          "type": "string",
          "description": "ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set."
        },
        "lineItemId": {
          "description": "ID of the line item. Either lineItemId or productId must be set.",
          "type": "string"
        },
        "shipmentUnitIds": {
          "type": "array",
          "description": "[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).",
          "items": {
            "type": "string"
          }
        },
        "unitInvoice": {
          "$ref": "UnitInvoice",
          "description": "[required] Invoice details for a single unit."
        }
      },
      "type": "object"
    },
    "AccountsCustomBatchResponseEntry": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsCustomBatchResponseEntry`\""
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        },
        "account": {
          "description": "The retrieved, created, or updated account. Not defined if the method was `delete`, `claimwebsite` or `link`.",
          "$ref": "Account"
        }
      },
      "description": "A batch entry encoding a single non-batch accounts response.",
      "id": "AccountsCustomBatchResponseEntry",
      "type": "object"
    },
    "InvoiceSummary": {
      "id": "InvoiceSummary",
      "type": "object",
      "properties": {
        "productTotal": {
          "$ref": "Amount",
          "description": "[required] Total price for the product."
        },
        "additionalChargeSummaries": {
          "type": "array",
          "items": {
            "$ref": "InvoiceSummaryAdditionalChargeSummary"
          },
          "description": "Summary of the total amounts of the additional charges."
        }
      }
    },
    "Service": {
      "type": "object",
      "properties": {
        "deliveryTime": {
          "$ref": "DeliveryTime",
          "description": "Time spent in various aspects from order to the delivery of the product. Required."
        },
        "eligibility": {
          "type": "string",
          "description": "Eligibility for this service. Acceptable values are: - \"`All scenarios`\" - \"`All scenarios except Shopping Actions`\" - \"`Shopping Actions`\" "
        },
        "currency": {
          "type": "string",
          "description": "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups."
        },
        "name": {
          "description": "Free-form name of the service. Must be unique within target account. Required.",
          "type": "string"
        },
        "shipmentType": {
          "description": "Type of locations this service ships orders to. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        },
        "pickupService": {
          "description": "The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved via the `getSupportedPickupServices` method. Required if and only if the service delivery type is `pickup`.",
          "$ref": "PickupCarrierService"
        },
        "minimumOrderValue": {
          "$ref": "Price",
          "description": "Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency. Cannot be set together with minimum_order_value_table."
        },
        "deliveryCountry": {
          "type": "string",
          "description": "The CLDR territory code of the country to which the service applies. Required."
        },
        "active": {
          "description": "A boolean exposing the active status of the shipping service. Required.",
          "type": "boolean"
        },
        "minimumOrderValueTable": {
          "$ref": "MinimumOrderValueTable",
          "description": "Table of per store minimum order values for the pickup fulfillment type. Cannot be set together with minimum_order_value."
        },
        "rateGroups": {
          "type": "array",
          "items": {
            "$ref": "RateGroup"
          },
          "description": "Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means \"everything else\". The other `applicableShippingLabels` must not overlap."
        }
      },
      "id": "Service"
    },
    "ReturnaddressCustomBatchResponseEntry": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnaddressCustomBatchResponseEntry`\""
        },
        "returnAddress": {
          "$ref": "ReturnAddress",
          "description": "The retrieved return address."
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "id": "ReturnaddressCustomBatchResponseEntry",
      "type": "object"
    },
    "ReturnaddressCustomBatchRequestEntry": {
      "properties": {
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The Merchant Center account ID."
        },
        "method": {
          "type": "string",
          "description": "Method of the batch request entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" "
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        },
        "returnAddressId": {
          "type": "string",
          "description": "The return address ID. Set this only if the method is `delete` or `get`."
        },
        "returnAddress": {
          "$ref": "ReturnAddress",
          "description": "The return address to submit. Set this only if the method is `insert`."
        }
      },
      "type": "object",
      "id": "ReturnaddressCustomBatchRequestEntry"
    },
    "OrdersGetByMerchantOrderIdResponse": {
      "properties": {
        "order": {
          "$ref": "Order",
          "description": "The requested order."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetByMerchantOrderIdResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersGetByMerchantOrderIdResponse"
    },
    "ProductsCustomBatchResponse": {
      "id": "ProductsCustomBatchResponse",
      "type": "object",
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "ProductsCustomBatchResponseEntry"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productsCustomBatchResponse\"."
        }
      }
    },
    "LiaCountrySettings": {
      "id": "LiaCountrySettings",
      "properties": {
        "posDataProvider": {
          "$ref": "LiaPosDataProvider",
          "description": "The POS data provider linked with this country."
        },
        "hostedLocalStorefrontActive": {
          "type": "boolean",
          "description": "The status of the \"Merchant hosted local storefront\" feature."
        },
        "storePickupActive": {
          "description": "The status of the \"Store pickup\" feature.",
          "type": "boolean"
        },
        "inventory": {
          "$ref": "LiaInventorySettings",
          "description": "LIA inventory verification settings."
        },
        "about": {
          "$ref": "LiaAboutPageSettings",
          "description": "The settings for the About page."
        },
        "onDisplayToOrder": {
          "$ref": "LiaOnDisplayToOrderSettings",
          "description": "LIA \"On Display To Order\" settings."
        },
        "country": {
          "type": "string",
          "description": "Required. CLDR country code (e.g. \"US\")."
        }
      },
      "type": "object"
    },
    "OrderreturnsProcessResponse": {
      "id": "OrderreturnsProcessResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreturnsProcessResponse\"."
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "type": "object"
    },
    "UnitInvoiceTaxLine": {
      "type": "object",
      "id": "UnitInvoiceTaxLine",
      "properties": {
        "taxType": {
          "description": "[required] Type of the tax. Acceptable values are: - \"`otherFee`\" - \"`otherFeeTax`\" - \"`sales`\" ",
          "type": "string"
        },
        "taxAmount": {
          "description": "[required] Tax amount for the tax type.",
          "$ref": "Price"
        },
        "taxName": {
          "type": "string",
          "description": "Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`."
        }
      }
    },
    "ReturnPolicyPolicy": {
      "properties": {
        "numberOfDays": {
          "format": "int64",
          "description": "The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. When specifying the return window like this, set the policy type to \"numberOfDaysAfterDelivery\". Acceptable values are 30, 45, 60, 90, 100, 180, 270 and 365 for the default policy. Additional policies further allow 14, 15, 21 and 28 days, but note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics. A policy of less than 30 days can only be applied to those items.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Policy type. Use \"lastReturnDate\" for seasonal overrides only. Note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics or non-returnable items such as food, perishables, and living things. A policy of less than 30 days can only be applied to those items. Acceptable values are: - \"`lastReturnDate`\" - \"`lifetimeReturns`\" - \"`noReturns`\" - \"`numberOfDaysAfterDelivery`\" "
        },
        "lastReturnDate": {
          "type": "string",
          "description": "Required. Last day for returning the items. In ISO 8601 format. When specifying the return window like this, set the policy type to \"lastReturnDate\". Use this for seasonal overrides only."
        }
      },
      "id": "ReturnPolicyPolicy",
      "type": "object"
    },
    "BusinessDayConfig": {
      "properties": {
        "businessDays": {
          "items": {
            "type": "string"
          },
          "description": "Regular business days. May not be empty.",
          "type": "array"
        }
      },
      "id": "BusinessDayConfig",
      "type": "object"
    },
    "DatafeedFetchSchedule": {
      "description": "The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.",
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "An optional password for fetch_url."
        },
        "hour": {
          "format": "uint32",
          "description": "The hour of the day the feed file should be fetched (0-23).",
          "type": "integer"
        },
        "dayOfMonth": {
          "format": "uint32",
          "type": "integer",
          "description": "The day of the month the feed file should be fetched (1-31)."
        },
        "minuteOfHour": {
          "type": "integer",
          "description": "The minute of the hour the feed file should be fetched (0-59). Read-only.",
          "format": "uint32"
        },
        "username": {
          "type": "string",
          "description": "An optional user name for fetch_url."
        },
        "fetchUrl": {
          "description": "The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.",
          "type": "string"
        },
        "weekday": {
          "type": "string",
          "description": "The day of the week the feed file should be fetched. Acceptable values are: - \"`monday`\" - \"`tuesday`\" - \"`wednesday`\" - \"`thursday`\" - \"`friday`\" - \"`saturday`\" - \"`sunday`\" "
        },
        "paused": {
          "description": "Whether the scheduled fetch is paused or not.",
          "type": "boolean"
        },
        "timeZone": {
          "type": "string",
          "description": "Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\"."
        }
      },
      "id": "DatafeedFetchSchedule"
    },
    "OrdersUpdateMerchantOrderIdResponse": {
      "id": "OrdersUpdateMerchantOrderIdResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateMerchantOrderIdResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "type": "object"
    },
    "OrdersCancelLineItemRequest": {
      "id": "OrdersCancelLineItemRequest",
      "properties": {
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "lineItemId": {
          "description": "The ID of the line item to cancel. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity to cancel.",
          "type": "integer"
        },
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ShippingsettingsGetSupportedCarriersResponse": {
      "id": "ShippingsettingsGetSupportedCarriersResponse",
      "type": "object",
      "properties": {
        "carriers": {
          "items": {
            "$ref": "CarriersCarrier"
          },
          "type": "array",
          "description": "A list of supported carriers. May be empty."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedCarriersResponse\".",
          "type": "string"
        }
      }
    },
    "UnitInvoiceAdditionalCharge": {
      "properties": {
        "additionalChargeAmount": {
          "description": "[required] Amount of the additional charge.",
          "$ref": "Amount"
        },
        "type": {
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "UnitInvoiceAdditionalCharge"
    },
    "PosInventoryRequest": {
      "type": "object",
      "id": "PosInventoryRequest",
      "properties": {
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "Required. The available quantity of the item."
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        }
      }
    },
    "LoyaltyPoints": {
      "type": "object",
      "id": "LoyaltyPoints",
      "properties": {
        "pointsValue": {
          "description": "The retailer's loyalty points in absolute value.",
          "format": "int64",
          "type": "string"
        },
        "ratio": {
          "type": "number",
          "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.",
          "format": "double"
        },
        "name": {
          "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.",
          "type": "string"
        }
      }
    },
    "TestOrderLineItemProduct": {
      "id": "TestOrderLineItemProduct",
      "type": "object",
      "properties": {
        "imageLink": {
          "type": "string",
          "description": "Required. URL of an image of the item."
        },
        "condition": {
          "type": "string",
          "description": "Required. Condition or state of the item. Acceptable values are: - \"`new`\" "
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product. Optional."
        },
        "title": {
          "description": "Required. The title of the product.",
          "type": "string"
        },
        "variantAttributes": {
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          },
          "description": "Variant attributes for the item. Optional.",
          "type": "array"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - \"`en`\" - \"`fr`\" "
        },
        "brand": {
          "description": "Required. Brand of the item.",
          "type": "string"
        },
        "targetCountry": {
          "description": "Required. The CLDR territory // code of the target country of the product.",
          "type": "string"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number (GTIN) of the item. Optional."
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item. Optional.",
          "type": "string"
        },
        "offerId": {
          "description": "Required. An identifier of the item.",
          "type": "string"
        },
        "fees": {
          "type": "array",
          "items": {
            "$ref": "OrderLineItemProductFee"
          },
          "description": "Fees for the item. Optional."
        },
        "price": {
          "description": "Required. The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied.",
          "$ref": "Price"
        }
      }
    },
    "TransitTableTransitTimeRow": {
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "TransitTableTransitTimeRowTransitTimeValue"
          }
        }
      },
      "type": "object",
      "id": "TransitTableTransitTimeRow"
    },
    "DatafeedstatusesCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesCustomBatchResponse\"."
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "DatafeedstatusesCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        }
      },
      "type": "object",
      "id": "DatafeedstatusesCustomBatchResponse"
    },
    "Product": {
      "type": "object",
      "properties": {
        "shipping": {
          "description": "Shipping rules.",
          "type": "array",
          "items": {
            "$ref": "ProductShipping"
          }
        },
        "gtin": {
          "description": "Global Trade Item Number (GTIN) of the item.",
          "type": "string"
        },
        "multipack": {
          "format": "int64",
          "type": "string",
          "description": "The number of identical products in a merchant-defined multipack."
        },
        "channel": {
          "type": "string",
          "description": "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "shippingLength": {
          "$ref": "ProductShippingDimension",
          "description": "Length of the item for shipping."
        },
        "description": {
          "type": "string",
          "description": "Description of the item."
        },
        "shippingWeight": {
          "description": "Weight of the item for shipping.",
          "$ref": "ProductShippingWeight"
        },
        "salePriceEffectiveDate": {
          "description": "Date range during which the item is on sale (see products data specification ).",
          "type": "string"
        },
        "shippingLabel": {
          "type": "string",
          "description": "The shipping label of the product, used to group product in account-level shipping rules."
        },
        "sizeSystem": {
          "type": "string",
          "description": "System in which the size is specified. Recommended for apparel items."
        },
        "minHandlingTime": {
          "format": "int64",
          "type": "string",
          "description": "Minimal product handling time (in business days)."
        },
        "customLabel1": {
          "type": "string",
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign."
        },
        "canonicalLink": {
          "type": "string",
          "description": "URL for the canonical version of your item's landing page."
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item.",
          "type": "string"
        },
        "shoppingAdsExcludedCountries": {
          "description": "List of country codes (ISO 3166-1 alpha-2) to exclude the offer from Shopping Ads destination. Countries from this list are removed from countries configured in MC feed settings.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "productDetails": {
          "type": "array",
          "items": {
            "$ref": "ProductProductDetail"
          },
          "description": "Technical specification or additional product details."
        },
        "unitPricingMeasure": {
          "description": "The measure and dimension of an item.",
          "$ref": "ProductUnitPricingMeasure"
        },
        "productHighlights": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Bullet points describing the most relevant highlights of a product."
        },
        "subscriptionCost": {
          "$ref": "ProductSubscriptionCost",
          "description": "Number of periods (months or years) and amount of payment per period for an item with an associated subscription contract."
        },
        "sizeType": {
          "description": "The cut of the item. Recommended for apparel items.",
          "type": "string"
        },
        "productTypes": {
          "description": "Categories of the item (formatted as in products data specification).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayAdsValue": {
          "type": "number",
          "format": "double",
          "description": "Offer margin for dynamic remarketing campaigns."
        },
        "unitPricingBaseMeasure": {
          "description": "The preference of the denominator of the unit price.",
          "$ref": "ProductUnitPricingBaseMeasure"
        },
        "customAttributes": {
          "items": {
            "$ref": "CustomAttribute"
          },
          "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., `{ \"name\": \"size type\", \"value\": \"regular\" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Shopping Actions.",
          "type": "array"
        },
        "displayAdsTitle": {
          "type": "string",
          "description": "Title of an item for dynamic remarketing campaigns."
        },
        "customLabel3": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign."
        },
        "displayAdsLink": {
          "type": "string",
          "description": "URL directly to your item's landing page for dynamic remarketing campaigns."
        },
        "imageLink": {
          "description": "URL of an image of the item.",
          "type": "string"
        },
        "condition": {
          "type": "string",
          "description": "Condition or state of the item."
        },
        "customLabel0": {
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "offerId": {
          "type": "string",
          "description": "Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier."
        },
        "adsGrouping": {
          "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.",
          "type": "string"
        },
        "additionalImageLinks": {
          "type": "array",
          "description": "Additional URLs of images of the item.",
          "items": {
            "type": "string"
          }
        },
        "excludedDestinations": {
          "items": {
            "type": "string"
          },
          "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).",
          "type": "array"
        },
        "installment": {
          "$ref": "Installment",
          "description": "Number and amount of installments to pay for an item."
        },
        "ageGroup": {
          "description": "Target age group of the item.",
          "type": "string"
        },
        "maxHandlingTime": {
          "format": "int64",
          "type": "string",
          "description": "Maximal product handling time (in business days)."
        },
        "maxEnergyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU.",
          "type": "string"
        },
        "availability": {
          "type": "string",
          "description": "Availability status of the item."
        },
        "isBundle": {
          "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.",
          "type": "boolean"
        },
        "salePrice": {
          "description": "Advertised sale price of the item.",
          "$ref": "Price"
        },
        "pattern": {
          "description": "The item's pattern (e.g. polka dots).",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#product`\"",
          "type": "string"
        },
        "title": {
          "description": "Title of the item.",
          "type": "string"
        },
        "itemGroupId": {
          "type": "string",
          "description": "Shared identifier for all variants of the same product."
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        },
        "adsRedirect": {
          "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads.",
          "type": "string"
        },
        "id": {
          "description": "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId.",
          "type": "string"
        },
        "availabilityDate": {
          "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format.",
          "type": "string"
        },
        "taxes": {
          "description": "Tax information.",
          "items": {
            "$ref": "ProductTax"
          },
          "type": "array"
        },
        "link": {
          "type": "string",
          "description": "URL directly linking to your item's page on your website."
        },
        "sellOnGoogleQuantity": {
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "type": "string",
          "format": "int64"
        },
        "minEnergyEfficiencyClass": {
          "type": "string",
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU."
        },
        "shippingHeight": {
          "$ref": "ProductShippingDimension",
          "description": "Height of the item for shipping."
        },
        "sizes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition)."
        },
        "material": {
          "type": "string",
          "description": "The material of which the item is made."
        },
        "adsLabels": {
          "type": "array",
          "description": "Similar to ads_grouping, but only works on CPC.",
          "items": {
            "type": "string"
          }
        },
        "gender": {
          "description": "Target gender of the item.",
          "type": "string"
        },
        "googleProductCategory": {
          "description": "Google's category of the item (see Google product taxonomy).",
          "type": "string"
        },
        "energyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU.",
          "type": "string"
        },
        "brand": {
          "description": "Brand of the item.",
          "type": "string"
        },
        "mobileLink": {
          "type": "string",
          "description": "URL for the mobile-optimized version of your item's landing page."
        },
        "displayAdsId": {
          "description": "An identifier for an item for dynamic remarketing campaigns.",
          "type": "string"
        },
        "taxCategory": {
          "type": "string",
          "description": "The tax category of the product, used to configure detailed tax nexus in account-level tax settings."
        },
        "transitTimeLabel": {
          "description": "The transit time label of the product, used to group product in account-level transit time tables.",
          "type": "string"
        },
        "customLabel4": {
          "type": "string",
          "description": "Custom label 4 for custom grouping of items in a Shopping campaign."
        },
        "includedDestinations": {
          "type": "array",
          "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.",
          "items": {
            "type": "string"
          }
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "identifierExists": {
          "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.",
          "type": "boolean"
        },
        "source": {
          "description": "The source of the offer, i.e., how the offer was created. Acceptable values are: - \"`api`\" - \"`crawl`\" - \"`feed`\" ",
          "type": "string"
        },
        "adult": {
          "description": "Set to true if the item is targeted towards adults.",
          "type": "boolean"
        },
        "shippingWidth": {
          "description": "Width of the item for shipping.",
          "$ref": "ProductShippingDimension"
        },
        "expirationDate": {
          "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.",
          "type": "string"
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "customLabel2": {
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "price": {
          "description": "Price of the item.",
          "$ref": "Price"
        },
        "color": {
          "type": "string",
          "description": "Color of the item."
        },
        "displayAdsSimilarIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Advertiser-specified recommendations."
        },
        "promotionIds": {
          "description": "The unique ID of a promotion.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "costOfGoodsSold": {
          "description": "Cost of goods sold. Used for gross profit reporting.",
          "$ref": "Price"
        }
      },
      "description": " Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Some attributes are country-specific, so make sure you select the appropriate country in the drop-down selector at the top of the page. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.",
      "id": "Product"
    },
    "OrderinvoicesCreateRefundInvoiceResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateRefundInvoiceResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCreateRefundInvoiceResponse",
      "type": "object"
    },
    "SettlementTransactionAmount": {
      "type": "object",
      "id": "SettlementTransactionAmount",
      "properties": {
        "transactionAmount": {
          "$ref": "Price",
          "description": "The amount that contributes to the line item price."
        },
        "commission": {
          "$ref": "SettlementTransactionAmountCommission"
        },
        "description": {
          "type": "string",
          "description": "The description of the event. Acceptable values are: - \"`taxWithhold`\" - \"`principal`\" - \"`principalAdjustment`\" - \"`shippingFee`\" - \"`merchantRemittedSalesTax`\" - \"`googleRemittedSalesTax`\" - \"`merchantCoupon`\" - \"`merchantCouponTax`\" - \"`merchantRemittedDisposalTax`\" - \"`googleRemittedDisposalTax`\" - \"`merchantRemittedRedemptionFee`\" - \"`googleRemittedRedemptionFee`\" - \"`eeeEcoFee`\" - \"`furnitureEcoFee`\" - \"`copyPrivateFee`\" - \"`eeeEcoFeeCommission`\" - \"`furnitureEcoFeeCommission`\" - \"`copyPrivateFeeCommission`\" - \"`principalRefund`\" - \"`principalRefundTax`\" - \"`itemCommission`\" - \"`adjustmentCommission`\" - \"`shippingFeeCommission`\" - \"`commissionRefund`\" - \"`damaged`\" - \"`damagedOrDefectiveItem`\" - \"`expiredItem`\" - \"`faultyItem`\" - \"`incorrectItemReceived`\" - \"`itemMissing`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`storePackageMissing`\" - \"`transitPackageMissing`\" - \"`unsuccessfulDeliveryUndeliverable`\" - \"`wrongChargeInStore`\" - \"`wrongItem`\" - \"`returns`\" - \"`undeliverable`\" - \"`refundFromMerchant`\" - \"`returnLabelShippingFee`\" "
        },
        "type": {
          "type": "string",
          "description": "The type of the amount. Acceptable values are: - \"`itemPrice`\" - \"`orderPrice`\" - \"`refund`\" - \"`earlyRefund`\" - \"`courtesyRefund`\" - \"`returnRefund`\" - \"`returnLabelShippingFeeAmount`\" "
        }
      }
    },
    "PosSaleResponse": {
      "id": "PosSaleResponse",
      "properties": {
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posSaleResponse\".",
          "type": "string"
        },
        "saleId": {
          "type": "string",
          "description": "A unique ID to group items from the same sale event."
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "quantity": {
          "format": "int64",
          "type": "string",
          "description": "Required. The relative change of the available quantity. Negative for items returned."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersRefundOrderResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRefundOrderResponse\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrdersRefundOrderResponse"
    },
    "OrderreturnsLineItem": {
      "properties": {
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity of this line item."
        },
        "lineItemId": {
          "description": "The ID of the line item. This value is assigned by Google when an order is created.",
          "type": "string"
        }
      },
      "id": "OrderreturnsLineItem",
      "type": "object"
    },
    "ProductStatusItemLevelIssue": {
      "id": "ProductStatusItemLevelIssue",
      "properties": {
        "code": {
          "description": "The error code of the issue.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A short issue description in English."
        },
        "servability": {
          "type": "string",
          "description": "How this issue affects serving of the offer."
        },
        "destination": {
          "description": "The destination the issue applies to.",
          "type": "string"
        },
        "resolution": {
          "description": "Whether the issue can be resolved by the merchant.",
          "type": "string"
        },
        "detail": {
          "description": "A detailed issue description in English.",
          "type": "string"
        },
        "attributeName": {
          "description": "The attribute's name, if the issue is caused by a single attribute.",
          "type": "string"
        },
        "applicableCountries": {
          "description": "List of country codes (ISO 3166-1 alpha-2) where issue applies to the offer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "documentation": {
          "description": "The URL of a web page to help with resolving this issue.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption": {
      "properties": {
        "description": {
          "description": "Optional description of the return reason.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "[required] Reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        }
      },
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption",
      "type": "object"
    },
    "OrderinvoicesCreateRefundInvoiceRequest": {
      "properties": {
        "shipmentInvoices": {
          "items": {
            "$ref": "ShipmentInvoice"
          },
          "type": "array",
          "description": "Invoice details for different shipment groups."
        },
        "returnOption": {
          "description": "Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of `refundOnlyOption` or `returnOption` must be provided.",
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption"
        },
        "refundOnlyOption": {
          "description": "Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or `returnOption` must be provided.",
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption"
        },
        "operationId": {
          "type": "string",
          "description": "[required] The ID of the operation, unique across all operations for a given order."
        },
        "invoiceId": {
          "type": "string",
          "description": "[required] The ID of the invoice."
        }
      },
      "id": "OrderinvoicesCreateRefundInvoiceRequest",
      "type": "object"
    },
    "OrderinvoicesCreateChargeInvoiceResponse": {
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateChargeInvoiceResponse\".",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCreateChargeInvoiceResponse",
      "type": "object"
    },
    "OrderLineItemProductVariantAttribute": {
      "id": "OrderLineItemProductVariantAttribute",
      "properties": {
        "dimension": {
          "type": "string",
          "description": "The dimension of the variant."
        },
        "value": {
          "description": "The value for the dimension.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersCancelResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelResponse\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersCancelResponse"
    },
    "OrderReportTransaction": {
      "properties": {
        "disbursementAmount": {
          "$ref": "Price",
          "description": "The disbursement amount."
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant-provided ID of the order."
        },
        "orderId": {
          "type": "string",
          "description": "The ID of the order."
        },
        "disbursementId": {
          "description": "The ID of the disbursement.",
          "type": "string"
        },
        "disbursementDate": {
          "description": "The date the disbursement was initiated, in ISO 8601 format.",
          "type": "string"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "disbursementCreationDate": {
          "type": "string",
          "description": "The date the disbursement was created, in ISO 8601 format."
        },
        "transactionDate": {
          "description": "The date of the transaction, in ISO 8601 format.",
          "type": "string"
        },
        "productAmount": {
          "$ref": "ProductAmount",
          "description": "Total amount for the items."
        }
      },
      "id": "OrderReportTransaction",
      "type": "object"
    },
    "LiasettingsCustomBatchRequest": {
      "id": "LiasettingsCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "LiasettingsCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "LiasettingsSetInventoryVerificationContactResponse": {
      "type": "object",
      "id": "LiasettingsSetInventoryVerificationContactResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetInventoryVerificationContactResponse\"."
        }
      }
    },
    "OrdersCustomBatchRequestEntryRefundItemShipping": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryRefundItemShipping",
      "properties": {
        "amount": {
          "description": "The amount that is refunded. If this is not the first refund for the shipment, this should be the newly refunded amount.",
          "$ref": "Price"
        },
        "fullRefund": {
          "description": "If set to true, all shipping costs for the order will be refunded. If this is true, amount should not be provided and will be ignored.",
          "type": "boolean"
        }
      }
    },
    "ShipmentTrackingInfo": {
      "properties": {
        "carrier": {
          "type": "string",
          "description": "The shipping carrier that handles the package. Acceptable values are: - \"`boxtal`\" - \"`bpost`\" - \"`chronopost`\" - \"`colisPrive`\" - \"`colissimo`\" - \"`cxt`\" - \"`deliv`\" - \"`dhl`\" - \"`dpd`\" - \"`dynamex`\" - \"`eCourier`\" - \"`easypost`\" - \"`efw`\" - \"`fedex`\" - \"`fedexSmartpost`\" - \"`geodis`\" - \"`gls`\" - \"`googleCourier`\" - \"`gsx`\" - \"`jdLogistics`\" - \"`laPoste`\" - \"`lasership`\" - \"`manual`\" - \"`mpx`\" - \"`onTrac`\" - \"`other`\" - \"`tnt`\" - \"`uds`\" - \"`ups`\" - \"`usps`\" "
        },
        "trackingNumber": {
          "type": "string",
          "description": "The tracking number for the package."
        }
      },
      "type": "object",
      "id": "ShipmentTrackingInfo"
    },
    "RefundReason": {
      "properties": {
        "reasonCode": {
          "description": "Code of the refund reason. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Description of the reason."
        }
      },
      "type": "object",
      "id": "RefundReason"
    },
    "OrdersShipLineItemsRequest": {
      "properties": {
        "shipmentGroupId": {
          "description": "ID of the shipment group. Required for orders that use the orderinvoices service.",
          "type": "string"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "shipmentInfos": {
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          },
          "description": "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs)."
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "description": "Line items to ship."
        }
      },
      "type": "object",
      "id": "OrdersShipLineItemsRequest"
    },
    "OrdersRejectReturnLineItemRequest": {
      "id": "OrdersRejectReturnLineItemRequest",
      "properties": {
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`damagedOrUsed`\" - \"`missingComponent`\" - \"`notEligible`\" - \"`other`\" - \"`outOfReturnWindow`\" ",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity to return and refund."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderreturnsCreateOrderReturnRequest": {
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "returnMethodType": {
          "description": "The way of the package being returned.",
          "type": "string"
        },
        "orderId": {
          "type": "string",
          "description": "The ID of the order."
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "OrderreturnsLineItem"
          },
          "description": "The list of line items to return."
        }
      },
      "id": "OrderreturnsCreateOrderReturnRequest",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryRefundItemItem": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryRefundItemItem",
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item. Either lineItemId or productId is required."
        },
        "amount": {
          "$ref": "MonetaryAmount",
          "description": "The total amount that is refunded. (e.g. refunding $5 each for 2 products should be done by setting quantity to 2 and amount to 10$) In case of multiple refunds, this should be the amount you currently want to refund to the customer."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "quantity": {
          "type": "integer",
          "format": "int32",
          "description": "The number of products that are refunded."
        },
        "fullRefund": {
          "type": "boolean",
          "description": "If true, the full item will be refunded. If this is true, amount should not be provided and will be ignored."
        }
      }
    },
    "AccountLabel": {
      "type": "object",
      "id": "AccountLabel",
      "properties": {
        "labelId": {
          "format": "int64",
          "description": "Output only. Immutable. The ID of the label.",
          "type": "string",
          "readOnly": true
        },
        "accountId": {
          "readOnly": true,
          "description": "Output only. Immutable. The ID of account this label belongs to.",
          "format": "int64",
          "type": "string"
        },
        "description": {
          "description": "Description for this label.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The display name of this label."
        }
      },
      "description": "Label assigned by CSS domain or CSS group to one of its sub-accounts."
    },
    "PosInventoryResponse": {
      "properties": {
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "Required. The available quantity of the item."
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posInventoryResponse\".",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        }
      },
      "type": "object",
      "id": "PosInventoryResponse"
    },
    "OrderLineItem": {
      "type": "object",
      "id": "OrderLineItem",
      "properties": {
        "adjustments": {
          "items": {
            "$ref": "OrderLineItemAdjustment"
          },
          "type": "array",
          "description": "Price and tax adjustments applied on the line item."
        },
        "price": {
          "$ref": "Price",
          "description": "Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20."
        },
        "annotations": {
          "description": "Annotations that are attached to the line item.",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          },
          "type": "array"
        },
        "quantityDelivered": {
          "format": "uint32",
          "description": "Number of items delivered.",
          "type": "integer"
        },
        "id": {
          "description": "The ID of the line item.",
          "type": "string"
        },
        "shippingDetails": {
          "$ref": "OrderLineItemShippingDetails",
          "description": "Details of the requested shipping for the line item."
        },
        "quantityReadyForPickup": {
          "type": "integer",
          "format": "uint32",
          "description": "Number of items ready for pickup."
        },
        "quantityShipped": {
          "format": "uint32",
          "description": "Number of items shipped.",
          "type": "integer"
        },
        "returnInfo": {
          "$ref": "OrderLineItemReturnInfo",
          "description": "Details of the return policy for the line item."
        },
        "quantityUndeliverable": {
          "format": "uint32",
          "description": "Number of items undeliverable.",
          "type": "integer"
        },
        "product": {
          "$ref": "OrderLineItemProduct",
          "description": "Product data as seen by customer from the time of the order placement. Note that certain attributes values (e.g. title or gtin) might be reformatted and no longer match values submitted via product feed."
        },
        "tax": {
          "description": "Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4.",
          "$ref": "Price"
        },
        "quantityPending": {
          "description": "Number of items pending.",
          "format": "uint32",
          "type": "integer"
        },
        "quantityCanceled": {
          "type": "integer",
          "description": "Number of items canceled.",
          "format": "uint32"
        },
        "returns": {
          "type": "array",
          "description": "Returns of the line item.",
          "items": {
            "$ref": "OrderReturn"
          }
        },
        "cancellations": {
          "items": {
            "$ref": "OrderCancellation"
          },
          "type": "array",
          "description": "Cancellations of the line item."
        },
        "quantityReturned": {
          "type": "integer",
          "format": "uint32",
          "description": "Number of items returned."
        },
        "quantityOrdered": {
          "type": "integer",
          "description": "Number of items ordered.",
          "format": "uint32"
        }
      }
    },
    "RepricingRuleEffectiveTimeFixedTimePeriod": {
      "type": "object",
      "properties": {
        "startTime": {
          "description": "The start time (inclusive) of the period. It can only be hour granularity.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The end time (exclusive) of the period. It can only be hour granularity.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Definition of a fixed time period.",
      "id": "RepricingRuleEffectiveTimeFixedTimePeriod"
    },
    "DatafeedStatus": {
      "properties": {
        "processingStatus": {
          "description": "The processing status of the feed. Acceptable values are: - \"`\"`failure`\": The feed could not be processed or all items had errors.`\" - \"`in progress`\": The feed is being processed. - \"`none`\": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - \"`success`\": The feed was processed successfully, though some items might have had errors. ",
          "type": "string"
        },
        "language": {
          "type": "string",
          "description": "The two-letter ISO 639-1 language for which the status is reported."
        },
        "itemsTotal": {
          "description": "The number of items in the feed that were processed.",
          "format": "uint64",
          "type": "string"
        },
        "warnings": {
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "description": "The list of errors occurring in the feed.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedStatus`\""
        },
        "errors": {
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "description": "The list of errors occurring in the feed.",
          "type": "array"
        },
        "itemsValid": {
          "description": "The number of items in the feed that were valid.",
          "format": "uint64",
          "type": "string"
        },
        "lastUploadDate": {
          "type": "string",
          "description": "The last date at which the feed was uploaded."
        },
        "datafeedId": {
          "type": "string",
          "description": "The ID of the feed for which the status is reported.",
          "format": "uint64"
        },
        "country": {
          "description": "The country for which the status is reported, represented as a CLDR territory code.",
          "type": "string"
        }
      },
      "description": "The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.",
      "id": "DatafeedStatus",
      "type": "object"
    },
    "AccountsCustomBatchRequest": {
      "id": "AccountsCustomBatchRequest",
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccountsCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      },
      "type": "object"
    },
    "OrdersInStoreRefundLineItemResponse": {
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersInStoreRefundLineItemResponse\".",
          "type": "string"
        }
      },
      "id": "OrdersInStoreRefundLineItemResponse",
      "type": "object"
    },
    "ProductstatusesCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesCustomBatchResponse\"."
        },
        "entries": {
          "items": {
            "$ref": "ProductstatusesCustomBatchResponseEntry"
          },
          "type": "array",
          "description": "The result of the execution of the batch requests."
        }
      },
      "type": "object",
      "id": "ProductstatusesCustomBatchResponse"
    },
    "OrderLineItemShippingDetails": {
      "id": "OrderLineItemShippingDetails",
      "type": "object",
      "properties": {
        "shipByDate": {
          "description": "Required. The ship by date, in ISO 8601 format.",
          "type": "string"
        },
        "method": {
          "description": "Required. Details of the shipping method.",
          "$ref": "OrderLineItemShippingDetailsMethod"
        },
        "pickupPromiseInMinutes": {
          "type": "integer",
          "description": "The promised time in minutes in which the order will be ready for pickup. This only applies to buy-online-pickup-in-store same-day order.",
          "format": "uint32"
        },
        "deliverByDate": {
          "description": "Required. The delivery by date, in ISO 8601 format.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" "
        }
      }
    },
    "AccountsClaimWebsiteResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsClaimWebsiteResponse\"."
        }
      },
      "id": "AccountsClaimWebsiteResponse",
      "type": "object"
    },
    "ProductUnitPricingBaseMeasure": {
      "type": "object",
      "properties": {
        "unit": {
          "description": "The unit of the denominator.",
          "type": "string"
        },
        "value": {
          "format": "int64",
          "type": "string",
          "description": "The denominator of the unit price."
        }
      },
      "id": "ProductUnitPricingBaseMeasure"
    },
    "ReturnaddressListResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#returnaddressListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of addresses."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ReturnAddress"
          }
        }
      },
      "id": "ReturnaddressListResponse",
      "type": "object"
    },
    "ProductUnitPricingMeasure": {
      "id": "ProductUnitPricingMeasure",
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of the measure."
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The measure of an item."
        }
      },
      "type": "object"
    },
    "AccountsLinkResponse": {
      "id": "AccountsLinkResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsLinkResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiasettingsGetAccessibleGmbAccountsResponse": {
      "id": "LiasettingsGetAccessibleGmbAccountsResponse",
      "properties": {
        "accountId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the Merchant Center account."
        },
        "gmbAccounts": {
          "description": "A list of GMB accounts which are available to the merchant.",
          "type": "array",
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsGetAccessibleGmbAccountsResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductTax": {
      "type": "object",
      "id": "ProductTax",
      "properties": {
        "region": {
          "description": "The geographic region to which the tax rate applies.",
          "type": "string"
        },
        "taxShip": {
          "description": "Set to true if tax is charged on shipping.",
          "type": "boolean"
        },
        "rate": {
          "format": "double",
          "description": "The percentage of tax rate that applies to the item price.",
          "type": "number"
        },
        "country": {
          "type": "string",
          "description": "The country within which the item is taxed, specified as a CLDR territory code."
        },
        "postalCode": {
          "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
          "format": "int64"
        }
      }
    },
    "AccountsCustomBatchRequestEntryLinkRequest": {
      "properties": {
        "linkType": {
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" ",
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" "
        },
        "linkedAccountId": {
          "description": "The ID of the linked account.",
          "type": "string"
        },
        "services": {
          "items": {
            "type": "string"
          },
          "description": "List of provided services.",
          "type": "array"
        }
      },
      "id": "AccountsCustomBatchRequestEntryLinkRequest",
      "type": "object"
    },
    "ShippingsettingsListResponse": {
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ShippingSettings"
          }
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of shipping settings.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsListResponse\".",
          "type": "string"
        }
      },
      "id": "ShippingsettingsListResponse",
      "type": "object"
    },
    "AccounttaxCustomBatchResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxCustomBatchResponse\"."
        },
        "entries": {
          "items": {
            "$ref": "AccounttaxCustomBatchResponseEntry"
          },
          "type": "array",
          "description": "The result of the execution of the batch requests."
        }
      },
      "type": "object",
      "id": "AccounttaxCustomBatchResponse"
    },
    "AccountAdsLink": {
      "id": "AccountAdsLink",
      "properties": {
        "status": {
          "description": "Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google Ads or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" ",
          "type": "string"
        },
        "adsId": {
          "description": "Customer ID of the Ads account.",
          "type": "string",
          "format": "uint64"
        }
      },
      "type": "object"
    },
    "OrdersRefundItemRequest": {
      "type": "object",
      "properties": {
        "shipping": {
          "$ref": "OrdersCustomBatchRequestEntryRefundItemShipping",
          "description": "The refund on shipping. Optional, but either Item or Shipping must be provided in the request."
        },
        "items": {
          "type": "array",
          "description": "The items that are refunded. Either Item or Shipping must be provided in the request.",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryRefundItemItem"
          }
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`shippingCostAdjustment`\" - \"`priceAdjustment`\" - \"`taxAdjustment`\" - \"`feeAdjustment`\" - \"`courtesyAdjustment`\" - \"`adjustment`\" - \"`customerCancelled`\" - \"`noInventory`\" - \"`productNotAsDescribed`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" - \"`lateShipmentCredit`\" - \"`deliveredLateByCarrier`\" - \"`productArrivedDamaged`\" ",
          "type": "string"
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "id": "OrdersRefundItemRequest"
    },
    "OrderinvoicesCreateChargeInvoiceRequest": {
      "properties": {
        "shipmentGroupId": {
          "type": "string",
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
        },
        "lineItemInvoices": {
          "description": "[required] Invoice details per line item.",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          },
          "type": "array"
        },
        "invoiceId": {
          "type": "string",
          "description": "[required] The ID of the invoice."
        },
        "invoiceSummary": {
          "description": "[required] Invoice summary.",
          "$ref": "InvoiceSummary"
        },
        "operationId": {
          "description": "[required] The ID of the operation, unique across all operations for a given order.",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCreateChargeInvoiceRequest",
      "type": "object"
    },
    "OrdersRefundItemResponse": {
      "id": "OrdersRefundItemResponse",
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRefundItemResponse\".",
          "type": "string"
        }
      }
    },
    "OrderLineItemAdjustment": {
      "type": "object",
      "id": "OrderLineItemAdjustment",
      "properties": {
        "priceAdjustment": {
          "$ref": "Price",
          "description": "Adjustment for total price of the line item."
        },
        "type": {
          "description": "Type of this adjustment. Acceptable values are: - \"`promotion`\" ",
          "type": "string"
        },
        "taxAdjustment": {
          "$ref": "Price",
          "description": "Adjustment for total tax of the line item."
        }
      }
    },
    "AccountYouTubeChannelLink": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in YT Creator Studio or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.",
          "type": "string"
        },
        "channelId": {
          "description": "Channel ID.",
          "type": "string"
        }
      },
      "id": "AccountYouTubeChannelLink"
    },
    "AccountsUpdateLabelsResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsUpdateLabelsResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountsUpdateLabelsResponse"
    },
    "RepricingRuleRestrictionBoundary": {
      "id": "RepricingRuleRestrictionBoundary",
      "type": "object",
      "properties": {
        "priceDelta": {
          "description": "The price micros relative to the offer selling price. This field is signed. It must be negative in floor. If an offer is selling at $10 and this field is -$2 in floor, the repricing rule only applies if the calculated new price is \u003e= $8.",
          "type": "string"
        },
        "percentageDelta": {
          "description": "The percentage delta relative to the offer selling price. This field is signed. It must be negative in floor. When it is used in floor, it should be \u003e -100. If an offer is selling at $10 and this field is -30 in floor, the repricing rule only applies if the calculated new price is \u003e= $7.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Definition of a boundary."
    },
    "Account": {
      "type": "object",
      "description": "Account data. After the creation of a new account it may take a few minutes before it is fully operational. The methods delete, insert, and update require the admin role.",
      "properties": {
        "websiteUrl": {
          "type": "string",
          "description": "The merchant's website."
        },
        "businessInformation": {
          "$ref": "AccountBusinessInformation",
          "description": "The business information of the account."
        },
        "users": {
          "description": "Users with access to the account. Every account (except for subaccounts) must have at least one admin user.",
          "items": {
            "$ref": "AccountUser"
          },
          "type": "array"
        },
        "youtubeChannelLinks": {
          "description": "List of linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.",
          "items": {
            "$ref": "AccountYouTubeChannelLink"
          },
          "type": "array"
        },
        "googleMyBusinessLink": {
          "description": "The GMB account which is linked or in the process of being linked with the Merchant Center account.",
          "$ref": "AccountGoogleMyBusinessLink"
        },
        "adsLinks": {
          "description": "List of linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the Ads interface or through the AdWords API. To delete an active link, or to cancel a link request, remove it from the list.",
          "items": {
            "$ref": "AccountAdsLink"
          },
          "type": "array"
        },
        "sellerId": {
          "description": "Client-specific, locally-unique, internal ID for the child account.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#account`\""
        },
        "id": {
          "format": "uint64",
          "description": "Required for update. Merchant Center account ID.",
          "type": "string"
        },
        "cssId": {
          "format": "uint64",
          "description": "ID of CSS the account belongs to.",
          "type": "string"
        },
        "adultContent": {
          "description": "Indicates whether the merchant sells adult content.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Required. Display name for the account."
        },
        "labelIds": {
          "items": {
            "type": "string",
            "format": "uint64"
          },
          "description": "List of label IDs that are assigned to the account by CSS.",
          "type": "array"
        }
      },
      "id": "Account"
    },
    "OrderCustomerMarketingRightsInfo": {
      "properties": {
        "explicitMarketingPreference": {
          "description": "Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected `granted` in their most recent order, they can be subscribed to marketing emails. Customers who have chosen `denied` must not be subscribed, or must be unsubscribed if already opted-in. Acceptable values are: - \"`denied`\" - \"`granted`\" ",
          "type": "string"
        },
        "lastUpdatedTimestamp": {
          "type": "string",
          "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet."
        },
        "marketingEmailAddress": {
          "type": "string",
          "description": "Email address that can be used for marketing purposes. The field may be empty even if `explicitMarketingPreference` is 'granted'. This happens when retrieving an old order from the customer who deleted their account."
        }
      },
      "id": "OrderCustomerMarketingRightsInfo",
      "type": "object"
    },
    "PostalCodeGroup": {
      "type": "object",
      "id": "PostalCodeGroup",
      "properties": {
        "postalCodeRanges": {
          "description": "A range of postal codes. Required.",
          "items": {
            "$ref": "PostalCodeRange"
          },
          "type": "array"
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country the postal code group applies to. Required."
        },
        "name": {
          "type": "string",
          "description": "The name of the postal code group, referred to in headers. Required."
        }
      }
    },
    "OrderAddress": {
      "id": "OrderAddress",
      "type": "object",
      "properties": {
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).",
          "type": "string"
        },
        "fullAddress": {
          "description": "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "type": "string",
          "description": "CLDR country code (e.g. \"US\")."
        },
        "postalCode": {
          "description": "Postal Code or ZIP (e.g. \"94043\").",
          "type": "string"
        },
        "streetAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Street-level part of the address."
        },
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "isPostOfficeBox": {
          "type": "boolean",
          "description": "Whether the address is a post office box."
        },
        "recipientName": {
          "description": "Name of the recipient.",
          "type": "string"
        }
      }
    },
    "CutoffTime": {
      "id": "CutoffTime",
      "type": "object",
      "properties": {
        "minute": {
          "format": "uint32",
          "description": "Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
          "type": "integer"
        },
        "hour": {
          "format": "uint32",
          "description": "Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
          "type": "integer"
        },
        "timezone": {
          "description": "Timezone identifier for the cutoff time. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required.",
          "type": "string"
        }
      }
    },
    "LiaSettings": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liaSettings`\""
        },
        "accountId": {
          "description": "The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.",
          "type": "string",
          "format": "uint64"
        },
        "countrySettings": {
          "description": "The LIA settings for each country.",
          "type": "array",
          "items": {
            "$ref": "LiaCountrySettings"
          }
        }
      },
      "type": "object",
      "id": "LiaSettings",
      "description": "Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role."
    },
    "RepricingRuleEligibleOfferMatcher": {
      "properties": {
        "matcherOption": {
          "type": "string",
          "enum": [
            "MATCHER_OPTION_UNSPECIFIED",
            "MATCHER_OPTION_CUSTOM_FILTER",
            "MATCHER_OPTION_USE_FEED_ATTRIBUTE",
            "MATCHER_OPTION_ALL_PRODUCTS"
          ],
          "description": "Determines whether to use the custom matchers or the product feed attribute \"repricing_rule_id\" to specify offer-rule mapping.",
          "enumDescriptions": [
            "Unused.",
            "Use custom filters.",
            "Use repricing_rule_id feed attribute on the product resource to specify offer-rule mapping.",
            "Matching all products."
          ]
        },
        "offerIdMatcher": {
          "$ref": "RepricingRuleEligibleOfferMatcherStringMatcher",
          "description": "Filter by the offer id."
        },
        "brandMatcher": {
          "$ref": "RepricingRuleEligibleOfferMatcherStringMatcher",
          "description": "Filter by the brand."
        },
        "itemGroupIdMatcher": {
          "description": "Filter by the item group id.",
          "$ref": "RepricingRuleEligibleOfferMatcherStringMatcher"
        }
      },
      "id": "RepricingRuleEligibleOfferMatcher",
      "type": "object",
      "description": "Matcher that specifies eligible offers. When the USE_FEED_ATTRIBUTE option is selected, only the repricing_rule_id attribute on the product feed is used to specify offer-rule mapping. When the CUSTOM_FILTER option is selected, only the *_matcher fields are used to filter the offers for offer-rule mapping. If the CUSTOM_FILTER option is selected, an offer needs to satisfy each custom filter matcher to be eligible for a rule. Size limit: the sum of the number of entries in all the matchers should not exceed 20. For example, there can be 15 product ids and 5 brands, but not 10 product ids and 11 brands."
    },
    "ShippingsettingsCustomBatchRequest": {
      "id": "ShippingsettingsCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "ShippingsettingsCustomBatchRequestEntry"
          },
          "type": "array",
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "ShippingsettingsCustomBatchRequestEntry": {
      "id": "ShippingsettingsCustomBatchRequestEntry",
      "type": "object",
      "properties": {
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "shippingSettings": {
          "description": "The account shipping settings to update. Only defined if the method is `update`.",
          "$ref": "ShippingSettings"
        },
        "accountId": {
          "format": "uint64",
          "description": "The ID of the account for which to get/update account shipping settings.",
          "type": "string"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" ",
          "type": "string"
        }
      },
      "description": "A batch entry encoding a single non-batch shippingsettings request."
    },
    "OrdersUpdateLineItemShippingDetailsResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateLineItemShippingDetailsResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "type": "object",
      "id": "OrdersUpdateLineItemShippingDetailsResponse"
    },
    "OrderreturnsAcknowledgeResponse": {
      "id": "OrderreturnsAcknowledgeResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreturnsAcknowledgeResponse\"."
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      },
      "type": "object"
    },
    "OrderRefund": {
      "id": "OrderRefund",
      "type": "object",
      "properties": {
        "actor": {
          "type": "string",
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" "
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "creationDate": {
          "type": "string",
          "description": "Date on which the item has been created, in ISO 8601 format."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amount": {
          "$ref": "Price",
          "description": "The amount that is refunded."
        }
      }
    },
    "OrderPickupDetails": {
      "properties": {
        "collectors": {
          "items": {
            "$ref": "OrderPickupDetailsCollector"
          },
          "type": "array",
          "description": "Collectors authorized to pick up shipment from the pickup location."
        },
        "locationId": {
          "type": "string",
          "description": "ID of the pickup location."
        },
        "address": {
          "description": "Address of the pickup location where the shipment should be sent. Note that `recipientName` in the address is the name of the business at the pickup location.",
          "$ref": "OrderAddress"
        },
        "pickupType": {
          "type": "string",
          "description": "The pickup type of this order. Acceptable values are: - \"`merchantStore`\" - \"`merchantStoreCurbside`\" - \"`merchantStoreLocker`\" - \"`thirdPartyPickupPoint`\" - \"`thirdPartyLocker`\" "
        }
      },
      "id": "OrderPickupDetails",
      "type": "object"
    },
    "DatafeedFormat": {
      "properties": {
        "columnDelimiter": {
          "description": "Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`pipe`\" - \"`tab`\" - \"`tilde`\" ",
          "type": "string"
        },
        "fileEncoding": {
          "type": "string",
          "description": "Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \"`latin-1`\" - \"`utf-16be`\" - \"`utf-16le`\" - \"`utf-8`\" - \"`windows-1252`\" "
        },
        "quotingMode": {
          "type": "string",
          "description": "Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`normal character`\" - \"`value quoting`\" "
        }
      },
      "type": "object",
      "id": "DatafeedFormat"
    },
    "ShippingsettingsGetSupportedHolidaysResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedHolidaysResponse\"."
        },
        "holidays": {
          "description": "A list of holidays applicable for delivery guarantees. May be empty.",
          "items": {
            "$ref": "HolidaysHoliday"
          },
          "type": "array"
        }
      },
      "id": "ShippingsettingsGetSupportedHolidaysResponse",
      "type": "object"
    },
    "ProductShippingWeight": {
      "id": "ProductShippingWeight",
      "properties": {
        "unit": {
          "description": "The unit of value.",
          "type": "string"
        },
        "value": {
          "description": "The weight of the product used to calculate the shipping cost of the item.",
          "type": "number",
          "format": "double"
        }
      },
      "type": "object"
    },
    "DatafeedstatusesCustomBatchRequest": {
      "id": "DatafeedstatusesCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "DatafeedstatusesCustomBatchRequestEntry"
          }
        }
      }
    },
    "SettlementtransactionsListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#settlementtransactionsListResponse\"."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of returns.",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "SettlementTransaction"
          },
          "type": "array"
        }
      },
      "id": "SettlementtransactionsListResponse"
    },
    "ReturnpolicyListResponse": {
      "properties": {
        "resources": {
          "items": {
            "$ref": "ReturnPolicy"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#returnpolicyListResponse\"."
        }
      },
      "id": "ReturnpolicyListResponse",
      "type": "object"
    },
    "OrdersUpdateLineItemShippingDetailsRequest": {
      "type": "object",
      "properties": {
        "deliverByDate": {
          "type": "string",
          "description": "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past."
        },
        "shipByDate": {
          "description": "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required."
        }
      },
      "id": "OrdersUpdateLineItemShippingDetailsRequest"
    },
    "ReturnaddressCustomBatchRequest": {
      "type": "object",
      "id": "ReturnaddressCustomBatchRequest",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "ReturnaddressCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "SettlementTransactionTransaction": {
      "type": "object",
      "id": "SettlementTransactionTransaction",
      "properties": {
        "postDate": {
          "description": "The time on which the event occurred in ISO 8601 format.",
          "type": "string"
        },
        "type": {
          "description": "The type of the transaction that occurred. Acceptable values are: - \"`order`\" - \"`reversal`\" - \"`orderRefund`\" - \"`reversalRefund`\" - \"`issueRelatedRefundAndReplacement`\" - \"`returnLabelShippingFeeTransaction`\" - \"`reversalIssueRelatedRefundAndReplacement`\" - \"`reversalReturnLabelShippingFeeTransaction`\" ",
          "type": "string"
        }
      }
    },
    "OrderPromotion": {
      "properties": {
        "endTime": {
          "type": "string",
          "description": "Promotion end time in ISO 8601 format. Date, time, and offset required, e.g., \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"."
        },
        "priceValue": {
          "$ref": "Price",
          "description": "Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of order."
        },
        "startTime": {
          "type": "string",
          "description": "Promotion start time in ISO 8601 format. Date, time, and offset required, e.g., \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\"."
        },
        "funder": {
          "description": "Required. The party funding the promotion. Only `merchant` is supported for `orders.createtestorder`. Acceptable values are: - \"`google`\" - \"`merchant`\" ",
          "type": "string"
        },
        "taxValue": {
          "description": "Estimated discount applied to tax (if allowed by law). Do not provide for `orders.createtestorder`.",
          "$ref": "Price"
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the promotion."
        },
        "applicableItems": {
          "type": "array",
          "description": "Items that this promotion may be applied to. If empty, there are no restrictions on applicable items and quantity. This field will also be empty for shipping promotions because shipping is not tied to any specific item.",
          "items": {
            "$ref": "OrderPromotionItem"
          }
        },
        "merchantPromotionId": {
          "type": "string",
          "description": "Required. This field is used to identify promotions within merchants' own systems."
        },
        "shortTitle": {
          "description": "A short title of the promotion to be shown on the checkout page. Do not provide for `orders.createtestorder`.",
          "type": "string"
        },
        "subtype": {
          "description": "Required. The category of the promotion. Only `moneyOff` is supported for `orders.createtestorder`. Acceptable values are: - \"`buyMGetMoneyOff`\" - \"`buyMGetNMoneyOff`\" - \"`buyMGetNPercentOff`\" - \"`buyMGetPercentOff`\" - \"`freeGift`\" - \"`freeGiftWithItemId`\" - \"`freeGiftWithValue`\" - \"`freeShippingOvernight`\" - \"`freeShippingStandard`\" - \"`freeShippingTwoDay`\" - \"`moneyOff`\" - \"`percentOff`\" - \"`rewardPoints`\" - \"`salePrice`\" ",
          "type": "string"
        },
        "appliedItems": {
          "type": "array",
          "description": "Items that this promotion have been applied to. Do not provide for `orders.createtestorder`. This field will be empty for shipping promotions because shipping is not tied to any specific item.",
          "items": {
            "$ref": "OrderPromotionItem"
          }
        },
        "type": {
          "type": "string",
          "description": "Required. The scope of the promotion. Only `product` is supported for `orders.createtestorder`. Acceptable values are: - \"`product`\" - \"`shipping`\" "
        }
      },
      "id": "OrderPromotion",
      "type": "object"
    },
    "DatafeedsCustomBatchResponseEntry": {
      "properties": {
        "datafeed": {
          "$ref": "Datafeed",
          "description": "The requested data feed. Defined if and only if the request was successful."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to."
        }
      },
      "id": "DatafeedsCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch datafeeds response.",
      "type": "object"
    },
    "ReturnPolicy": {
      "properties": {
        "seasonalOverrides": {
          "items": {
            "$ref": "ReturnPolicySeasonalOverride"
          },
          "type": "array",
          "description": "An optional list of seasonal overrides."
        },
        "returnPolicyId": {
          "description": "Return policy ID generated by Google.",
          "type": "string"
        },
        "nonFreeReturnReasons": {
          "items": {
            "type": "string"
          },
          "description": "Return reasons that will incur return fees.",
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnPolicy`\"",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Required. The country of sale where the return policy is applicable."
        },
        "label": {
          "description": "Required. The user-defined label of the return policy. For the default policy, use the label \"default\".",
          "type": "string"
        },
        "policy": {
          "$ref": "ReturnPolicyPolicy",
          "description": "Required. The policy."
        },
        "name": {
          "description": "Required. The name of the policy as shown in Merchant Center.",
          "type": "string"
        }
      },
      "id": "ReturnPolicy",
      "type": "object",
      "description": "Return policy resource."
    },
    "LiaAboutPageSettings": {
      "properties": {
        "status": {
          "description": "The status of the verification process for the About page. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "The URL for the About page."
        }
      },
      "id": "LiaAboutPageSettings",
      "type": "object"
    },
    "OrdersAdvanceTestOrderResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAdvanceTestOrderResponse\".",
          "type": "string"
        }
      },
      "id": "OrdersAdvanceTestOrderResponse",
      "type": "object"
    },
    "LocalinventoryCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "localInventory": {
          "$ref": "LocalInventory",
          "description": "Local inventory of the product."
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which to update local inventory."
        },
        "method": {
          "description": "Method of the batch request entry. Acceptable values are: - \"`insert`\" ",
          "type": "string"
        }
      },
      "id": "LocalinventoryCustomBatchRequestEntry",
      "description": "Batch entry encoding a single local inventory update request."
    },
    "OrderreturnsAcknowledgeRequest": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "[required] The ID of the operation, unique across all operations for a given order return."
        }
      },
      "id": "OrderreturnsAcknowledgeRequest"
    },
    "OrderShipmentScheduledDeliveryDetails": {
      "type": "object",
      "id": "OrderShipmentScheduledDeliveryDetails",
      "properties": {
        "carrierPhoneNumber": {
          "description": "The phone number of the carrier fulfilling the delivery. The phone number is formatted as the international notation in ITU-T Recommendation E.123 (e.g., \"+41 44 668 1800\").",
          "type": "string"
        },
        "scheduledDate": {
          "type": "string",
          "description": "The date a shipment is scheduled for delivery, in ISO 8601 format."
        }
      }
    },
    "AccountStatusAccountLevelIssue": {
      "properties": {
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help resolving this issue."
        },
        "country": {
          "description": "Country for which this issue is reported.",
          "type": "string"
        },
        "detail": {
          "type": "string",
          "description": "Additional details about the issue."
        },
        "id": {
          "description": "Issue identifier.",
          "type": "string"
        },
        "severity": {
          "type": "string",
          "description": "Severity of the issue. Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" "
        },
        "title": {
          "description": "Short description of the issue.",
          "type": "string"
        },
        "destination": {
          "type": "string",
          "description": "The destination the issue applies to. If this field is empty then the issue applies to all available destinations."
        }
      },
      "type": "object",
      "id": "AccountStatusAccountLevelIssue"
    },
    "Installment": {
      "id": "Installment",
      "properties": {
        "months": {
          "description": "The number of installments the buyer has to pay.",
          "type": "string",
          "format": "int64"
        },
        "amount": {
          "description": "The amount the buyer has to pay per month.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "RegionalinventoryCustomBatchResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#regionalinventoryCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "RegionalinventoryCustomBatchResponseEntry"
          }
        }
      },
      "type": "object",
      "id": "RegionalinventoryCustomBatchResponse"
    },
    "ProductstatusesListResponse": {
      "properties": {
        "resources": {
          "items": {
            "$ref": "ProductStatus"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of products statuses."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesListResponse\"."
        }
      },
      "type": "object",
      "id": "ProductstatusesListResponse"
    },
    "AccountsListLinksResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of links.",
          "type": "string"
        },
        "links": {
          "type": "array",
          "description": "The list of available links.",
          "items": {
            "$ref": "LinkedAccount"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsListLinksResponse\"."
        }
      },
      "id": "AccountsListLinksResponse"
    },
    "OrdersSetLineItemMetadataRequest": {
      "id": "OrdersSetLineItemMetadataRequest",
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required."
        }
      },
      "type": "object"
    },
    "OrdersReturnRefundLineItemResponse": {
      "type": "object",
      "id": "OrdersReturnRefundLineItemResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersReturnRefundLineItemResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      }
    },
    "ProductsCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch products response.",
      "properties": {
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32"
        },
        "product": {
          "description": "The inserted product. Only defined if the method is `insert` and if the request was successful.",
          "$ref": "Product"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productsCustomBatchResponseEntry`\""
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        }
      },
      "id": "ProductsCustomBatchResponseEntry",
      "type": "object"
    },
    "OrdersReturnRefundLineItemRequest": {
      "id": "OrdersReturnRefundLineItemRequest",
      "type": "object",
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "priceAmount": {
          "$ref": "Price",
          "description": "The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. If omitted, refundless return is assumed."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "taxAmount": {
          "description": "The amount of tax to be refunded. Optional, but if filled, then priceAmount must be set. Calculated automatically if not provided.",
          "$ref": "Price"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "quantity": {
          "description": "The quantity to return and refund.",
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "DatafeedStatusError": {
      "id": "DatafeedStatusError",
      "type": "object",
      "properties": {
        "count": {
          "description": "The number of occurrences of the error in the feed.",
          "type": "string",
          "format": "uint64"
        },
        "message": {
          "description": "The error message, e.g., \"Invalid price\".",
          "type": "string"
        },
        "examples": {
          "description": "A list of example occurrences of the error, grouped by product.",
          "items": {
            "$ref": "DatafeedStatusExample"
          },
          "type": "array"
        },
        "code": {
          "description": "The code of the error, e.g., \"validation/invalid_value\".",
          "type": "string"
        }
      },
      "description": "An error occurring in the feed, like \"invalid price\"."
    },
    "PickupServicesPickupService": {
      "properties": {
        "serviceName": {
          "description": "The name of the pickup service (e.g., `\"Access point\"`). Always present.",
          "type": "string"
        },
        "country": {
          "description": "The CLDR country code of the carrier (e.g., \"US\"). Always present.",
          "type": "string"
        },
        "carrierName": {
          "description": "The name of the carrier (e.g., `\"UPS\"`). Always present.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PickupServicesPickupService"
    },
    "ShippingsettingsCustomBatchResponse": {
      "id": "ShippingsettingsCustomBatchResponse",
      "type": "object",
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "ShippingsettingsCustomBatchResponseEntry"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsCustomBatchResponse\".",
          "type": "string"
        }
      }
    },
    "OrdersCancelLineItemResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelLineItemResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "id": "OrdersCancelLineItemResponse",
      "type": "object"
    },
    "Datafeed": {
      "type": "object",
      "id": "Datafeed",
      "description": "Datafeed configuration data.",
      "properties": {
        "fileName": {
          "description": "Required. The filename of the feed. All feeds must have a unique file name.",
          "type": "string"
        },
        "name": {
          "description": "Required for insert. A descriptive name of the data feed.",
          "type": "string"
        },
        "contentType": {
          "type": "string",
          "description": "Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \"`local products`\" - \"`product inventory`\" - \"`products`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeed`\"",
          "type": "string"
        },
        "fetchSchedule": {
          "description": "Fetch schedule for the feed file.",
          "$ref": "DatafeedFetchSchedule"
        },
        "targets": {
          "type": "array",
          "items": {
            "$ref": "DatafeedTarget"
          },
          "description": "The targets this feed should apply to (country, language, destinations)."
        },
        "attributeLanguage": {
          "type": "string",
          "description": "The two-letter ISO 639-1 language in which the attributes are defined in the data feed."
        },
        "format": {
          "$ref": "DatafeedFormat",
          "description": "Format of the feed file."
        },
        "id": {
          "format": "int64",
          "type": "string",
          "description": "Required for update. The ID of the data feed."
        }
      }
    },
    "ReturnpolicyCustomBatchResponseEntry": {
      "type": "object",
      "id": "ReturnpolicyCustomBatchResponseEntry",
      "properties": {
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if, and only if, the request failed."
        },
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "format": "uint32",
          "type": "integer"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#returnpolicyCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "returnPolicy": {
          "$ref": "ReturnPolicy",
          "description": "The retrieved return policy."
        }
      }
    },
    "LiasettingsCustomBatchRequestEntry": {
      "id": "LiasettingsCustomBatchRequestEntry",
      "type": "object",
      "properties": {
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the account for which to get/update account LIA settings."
        },
        "country": {
          "type": "string",
          "description": "The country code. Required only for RequestInventoryVerification."
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "liaSettings": {
          "$ref": "LiaSettings",
          "description": "The account Lia settings to update. Only defined if the method is `update`."
        },
        "posExternalAccountId": {
          "description": "The account ID by which this merchant is known to the POS provider.",
          "type": "string"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`getAccessibleGmbAccounts`\" - \"`requestGmbAccess`\" - \"`requestInventoryVerification`\" - \"`setInventoryVerificationContact`\" - \"`update`\" ",
          "type": "string"
        },
        "contactEmail": {
          "description": "Inventory validation contact email. Required only for SetInventoryValidationContact.",
          "type": "string"
        },
        "gmbEmail": {
          "description": "The GMB account. Required only for RequestGmbAccess.",
          "type": "string"
        },
        "posDataProviderId": {
          "format": "uint64",
          "description": "The ID of POS data provider. Required only for SetPosProvider.",
          "type": "string"
        },
        "contactName": {
          "type": "string",
          "description": "Inventory validation contact name. Required only for SetInventoryValidationContact."
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The REST ID of the order. Globally unique.",
          "type": "string"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderOrderAnnotation"
          },
          "description": "List of key-value pairs that are attached to a given order."
        },
        "status": {
          "type": "string",
          "description": "The status of the order. Acceptable values are: - \"`canceled`\" - \"`delivered`\" - \"`inProgress`\" - \"`partiallyDelivered`\" - \"`partiallyReturned`\" - \"`partiallyShipped`\" - \"`pendingShipment`\" - \"`returned`\" - \"`shipped`\" "
        },
        "pickupDetails": {
          "description": "Pickup details for shipments of type `pickup`.",
          "$ref": "OrderPickupDetails"
        },
        "placedDate": {
          "description": "The date when the order was placed, in ISO 8601 format.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#order`\""
        },
        "refunds": {
          "items": {
            "$ref": "OrderRefund"
          },
          "description": "Refunds for the order.",
          "type": "array"
        },
        "netTaxAmount": {
          "description": "The net amount for the order (tax part). Note that in certain cases due to taxable base adjustment `netTaxAmount` might not match to a sum of tax field across all lineItems and refunds.",
          "$ref": "Price"
        },
        "customer": {
          "description": "The details of the customer who placed the order.",
          "$ref": "OrderCustomer"
        },
        "deliveryDetails": {
          "$ref": "OrderDeliveryDetails",
          "description": "Delivery details for shipments of type `delivery`."
        },
        "shippingCostTax": {
          "$ref": "Price",
          "description": "The tax for the total shipping cost."
        },
        "taxCollector": {
          "description": "The party responsible for collecting and remitting taxes. Acceptable values are: - \"`marketplaceFacilitator`\" - \"`merchant`\" ",
          "type": "string"
        },
        "netPriceAmount": {
          "$ref": "Price",
          "description": "The net amount for the order (price part). For example, if an order was originally for $100 and a refund was issued for $20, the net amount will be $80."
        },
        "merchantId": {
          "format": "uint64",
          "type": "string"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "OrderPromotion"
          },
          "description": "Promotions associated with the order. To determine which promotions apply to which products, check the `Promotions[].appliedItems[].lineItemId` field against the `LineItems[].id` field for each promotion. If a promotion is applied to more than 1 offerId, divide the discount value by the number of affected offers to determine how much discount to apply to each offerId. Examples: 1. To calculate price paid by the customer for a single line item including the discount: For each promotion, subtract the `LineItems[].adjustments[].priceAdjustment.value` amount from the `LineItems[].Price.value`. 2. To calculate price paid by the customer for a single line item including the discount in case of multiple quantity: For each promotion, divide the `LineItems[].adjustments[].priceAdjustment.value` by the quantity of products then subtract the resulting value from the `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here."
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant-provided ID of the order."
        },
        "billingAddress": {
          "description": "The billing address.",
          "$ref": "OrderAddress"
        },
        "shippingCost": {
          "description": "The total cost of shipping for all items.",
          "$ref": "Price"
        },
        "shipments": {
          "items": {
            "$ref": "OrderShipment"
          },
          "type": "array",
          "description": "Shipments of the order."
        },
        "paymentStatus": {
          "type": "string",
          "description": "The status of the payment. Acceptable values are: - \"`paymentCaptured`\" - \"`paymentRejected`\" - \"`paymentSecured`\" - \"`pendingAuthorization`\" "
        },
        "acknowledged": {
          "type": "boolean",
          "description": "Whether the order was acknowledged."
        },
        "lineItems": {
          "description": "Line items that are ordered.",
          "type": "array",
          "items": {
            "$ref": "OrderLineItem"
          }
        }
      },
      "description": "Order. Production access (all methods) requires the order manager role. Sandbox access does not.",
      "id": "Order"
    },
    "AccounttaxCustomBatchRequest": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccounttaxCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "AccounttaxCustomBatchRequest"
    },
    "AccountTaxTaxRule": {
      "type": "object",
      "properties": {
        "shippingTaxed": {
          "type": "boolean",
          "description": "If true, shipping charges are also taxed."
        },
        "ratePercent": {
          "type": "string",
          "description": "Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative."
        },
        "useGlobalRate": {
          "type": "boolean",
          "description": "Whether the tax rate is taken from a global tax table or specified explicitly."
        },
        "country": {
          "description": "Country code in which tax is applicable.",
          "type": "string"
        },
        "locationId": {
          "format": "uint64",
          "type": "string",
          "description": "Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID)."
        }
      },
      "description": "Tax calculation rule to apply in a state or province (USA only).",
      "id": "AccountTaxTaxRule"
    },
    "RateGroup": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the rate group. Optional. If set has to be unique within shipping service."
        },
        "subtables": {
          "type": "array",
          "description": "A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set.",
          "items": {
            "$ref": "Table"
          }
        },
        "mainTable": {
          "description": "A table defining the rate group, when `singleValue` is not expressive enough. Can only be set if `singleValue` is not set.",
          "$ref": "Table"
        },
        "carrierRates": {
          "description": "A list of carrier rates that can be referred to by `mainTable` or `singleValue`.",
          "items": {
            "$ref": "CarrierRate"
          },
          "type": "array"
        },
        "singleValue": {
          "description": "The value of the rate group (e.g. flat rate $10). Can only be set if `mainTable` and `subtables` are not set.",
          "$ref": "Value"
        },
        "applicableShippingLabels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required."
        }
      },
      "id": "RateGroup",
      "type": "object"
    },
    "SettlementTransactionAmountCommission": {
      "properties": {
        "rate": {
          "type": "string",
          "description": "Rate of the commission in percentage."
        },
        "category": {
          "type": "string",
          "description": "The category of the commission. Acceptable values are: - \"`animalsAndPetSupplies`\" - \"`dogCatFoodAndCatLitter`\" - \"`apparelAndAccessories`\" - \"`shoesHandbagsAndSunglasses`\" - \"`costumesAndAccessories`\" - \"`jewelry`\" - \"`watches`\" - \"`hobbiesArtsAndCrafts`\" - \"`homeAndGarden`\" - \"`entertainmentCollectibles`\" - \"`collectibleCoins`\" - \"`sportsCollectibles`\" - \"`sportingGoods`\" - \"`toysAndGames`\" - \"`musicalInstruments`\" - \"`giftCards`\" - \"`babyAndToddler`\" - \"`babyFoodWipesAndDiapers`\" - \"`businessAndIndustrial`\" - \"`camerasOpticsAndPhotography`\" - \"`consumerElectronics`\" - \"`electronicsAccessories`\" - \"`personalComputers`\" - \"`videoGameConsoles`\" - \"`foodAndGrocery`\" - \"`beverages`\" - \"`tobaccoProducts`\" - \"`furniture`\" - \"`hardware`\" - \"`buildingMaterials`\" - \"`tools`\" - \"`healthAndPersonalCare`\" - \"`beauty`\" - \"`householdSupplies`\" - \"`kitchenAndDining`\" - \"`majorAppliances`\" - \"`luggageAndBags`\" - \"`media`\" - \"`officeSupplies`\" - \"`softwareAndVideoGames`\" - \"`vehiclePartsAndAccessories`\" - \"`vehicleTiresAndWheels`\" - \"`vehicles`\" - \"`everythingElse`\" "
        }
      },
      "id": "SettlementTransactionAmountCommission",
      "type": "object"
    },
    "ProductShippingDimension": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of value."
        },
        "value": {
          "format": "double",
          "type": "number",
          "description": "The dimension of the product used to calculate the shipping cost of the item."
        }
      },
      "id": "ProductShippingDimension"
    },
    "LinkService": {
      "id": "LinkService",
      "properties": {
        "status": {
          "description": "Status of the link Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        },
        "service": {
          "type": "string",
          "description": "Service provided to or by the linked account. Acceptable values are: - \"`shoppingActionsOrderManagement`\" - \"`shoppingActionsProductManagement`\" - \"`shoppingAdsProductManagement`\" "
        }
      },
      "type": "object"
    },
    "TransitTableTransitTimeRowTransitTimeValue": {
      "id": "TransitTableTransitTimeRowTransitTimeValue",
      "type": "object",
      "properties": {
        "minTransitTimeInDays": {
          "description": "Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.",
          "type": "integer",
          "format": "uint32"
        },
        "maxTransitTimeInDays": {
          "description": "Must be greater than or equal to `minTransitTimeInDays`.",
          "type": "integer",
          "format": "uint32"
        }
      }
    },
    "ProductsCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "ProductsCustomBatchRequestEntry"
          }
        }
      },
      "id": "ProductsCustomBatchRequest",
      "type": "object"
    },
    "AccountTax": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\"."
        },
        "rules": {
          "description": "Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.",
          "type": "array",
          "items": {
            "$ref": "AccountTaxTaxRule"
          }
        },
        "accountId": {
          "description": "Required. The ID of the account to which these account tax settings belong.",
          "type": "string",
          "format": "uint64"
        }
      },
      "type": "object",
      "description": "The tax settings of a merchant account. All methods require the admin role.",
      "id": "AccountTax"
    },
    "Price": {
      "properties": {
        "currency": {
          "description": "The currency of the price.",
          "type": "string"
        },
        "value": {
          "description": "The price represented as a number.",
          "type": "string"
        }
      },
      "id": "Price",
      "type": "object"
    },
    "ProductstatusesCustomBatchResponseEntry": {
      "id": "ProductstatusesCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch productstatuses response.",
      "properties": {
        "productStatus": {
          "$ref": "ProductStatus",
          "description": "The requested product status. Only defined if the request was successful."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors, if the request failed."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productstatusesCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        }
      },
      "type": "object"
    },
    "LiaOnDisplayToOrderSettings": {
      "properties": {
        "shippingCostPolicyUrl": {
          "type": "string",
          "description": "Shipping cost and policy URL."
        },
        "status": {
          "description": "The status of the ?On display to order? feature. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "id": "LiaOnDisplayToOrderSettings",
      "type": "object"
    },
    "RegionalinventoryCustomBatchRequestEntry": {
      "type": "object",
      "id": "RegionalinventoryCustomBatchRequestEntry",
      "properties": {
        "regionalInventory": {
          "description": "Price and availability of the product.",
          "$ref": "RegionalInventory"
        },
        "merchantId": {
          "type": "string",
          "description": "The ID of the managing account.",
          "format": "uint64"
        },
        "method": {
          "description": "Method of the batch request entry. Acceptable values are: - \"`insert`\" ",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "productId": {
          "description": "The ID of the product for which to update price and availability.",
          "type": "string"
        }
      },
      "description": "A batch entry encoding a single non-batch regional inventory request."
    },
    "RegionalInventory": {
      "id": "RegionalInventory",
      "properties": {
        "price": {
          "description": "The price of the product.",
          "$ref": "Price"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#regionalInventory\".",
          "type": "string"
        },
        "salePriceEffectiveDate": {
          "type": "string",
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided."
        },
        "availability": {
          "description": "The availability of the product.",
          "type": "string"
        },
        "salePrice": {
          "$ref": "Price",
          "description": "The sale price of the product. Mandatory if `sale_price_effective_date` is defined."
        },
        "regionId": {
          "type": "string",
          "description": "The ID uniquely identifying each region."
        },
        "customAttributes": {
          "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form.",
          "type": "array",
          "items": {
            "$ref": "CustomAttribute"
          }
        }
      },
      "type": "object",
      "description": "Regional inventory resource. contains the regional name and all attributes which are overridden for the specified region."
    },
    "DatafeedsCustomBatchRequest": {
      "id": "DatafeedsCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "DatafeedsCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "LiasettingsRequestInventoryVerificationResponse": {
      "type": "object",
      "id": "LiasettingsRequestInventoryVerificationResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestInventoryVerificationResponse\".",
          "type": "string"
        }
      }
    },
    "Error": {
      "properties": {
        "reason": {
          "description": "The error code.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "A description of the error."
        },
        "domain": {
          "description": "The domain of the error.",
          "type": "string"
        }
      },
      "id": "Error",
      "description": "An error returned by the API.",
      "type": "object"
    },
    "OrderLineItemReturnInfo": {
      "properties": {
        "daysToReturn": {
          "format": "int32",
          "type": "integer",
          "description": "Required. How many days later the item can be returned."
        },
        "isReturnable": {
          "type": "boolean",
          "description": "Required. Whether the item is returnable."
        },
        "policyUrl": {
          "description": "Required. URL of the item return policy.",
          "type": "string"
        }
      },
      "id": "OrderLineItemReturnInfo",
      "type": "object"
    },
    "DatafeedstatusesCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch datafeedstatuses response.",
      "id": "DatafeedstatusesCustomBatchResponseEntry",
      "properties": {
        "batchId": {
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "datafeedStatus": {
          "$ref": "DatafeedStatus",
          "description": "The requested data feed status. Defined if and only if the request was successful."
        }
      },
      "type": "object"
    },
    "PosStore": {
      "properties": {
        "storeCode": {
          "description": "Required. A store identifier that is unique for the given merchant.",
          "type": "string"
        },
        "storeAddress": {
          "type": "string",
          "description": "Required. The street address of the store."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\"",
          "type": "string"
        }
      },
      "description": "Store resource.",
      "id": "PosStore",
      "type": "object"
    },
    "SettlementreportsListResponse": {
      "type": "object",
      "id": "SettlementreportsListResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#settlementreportsListResponse\"."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of returns.",
          "type": "string"
        },
        "resources": {
          "items": {
            "$ref": "SettlementReport"
          },
          "type": "array"
        }
      }
    },
    "OrderreturnsRejectOperation": {
      "id": "OrderreturnsRejectOperation",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the return."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      }
    },
    "PosSale": {
      "type": "object",
      "properties": {
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posSale`\""
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "saleId": {
          "description": "A unique ID to group items from the same sale event.",
          "type": "string"
        },
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "quantity": {
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "type": "string",
          "format": "int64"
        }
      },
      "id": "PosSale",
      "description": "The change of the available quantity of an item at the given store."
    },
    "ReturnPolicySeasonalOverride": {
      "id": "ReturnPolicySeasonalOverride",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the seasonal override as shown in Merchant Center.",
          "type": "string"
        },
        "policy": {
          "$ref": "ReturnPolicyPolicy",
          "description": "Required. The policy which is in effect during that time."
        },
        "endDate": {
          "type": "string",
          "description": "Required. Last day on which the override applies. In ISO 8601 format."
        },
        "startDate": {
          "description": "Required. First day on which the override applies. In ISO 8601 format.",
          "type": "string"
        }
      }
    },
    "AccountsUpdateLabelsRequest": {
      "type": "object",
      "id": "AccountsUpdateLabelsRequest",
      "properties": {
        "labelIds": {
          "description": "The IDs of labels that should be assigned to the account.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        }
      }
    },
    "SettlementReport": {
      "properties": {
        "transferAmount": {
          "description": "The money due to the merchant.",
          "$ref": "Price"
        },
        "settlementId": {
          "description": "The ID of the settlement report.",
          "type": "string"
        },
        "transferIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of bank identifiers used for the transfer. e.g. Trace ID for Federal Automated Clearing House (ACH). This may also be known as the Wire ID."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#settlementReport`\"",
          "type": "string"
        },
        "startDate": {
          "description": "The start date on which all transactions are included in the report, in ISO 8601 format.",
          "type": "string"
        },
        "previousBalance": {
          "$ref": "Price",
          "description": "The residual amount from the previous invoice. This is set only if the previous invoices are not paid because of negative balance."
        },
        "endDate": {
          "type": "string",
          "description": "The end date on which all transactions are included in the report, in ISO 8601 format."
        },
        "transferDate": {
          "type": "string",
          "description": "Date on which transfer for this payment was initiated by Google, in ISO 8601 format."
        }
      },
      "description": " Settlement reports detail order-level and item-level credits and debits between you and Google.",
      "type": "object",
      "id": "SettlementReport"
    },
    "ListAccountLabelsResponse": {
      "description": "Response message for the `ListAccountLabels` method.",
      "id": "ListAccountLabelsResponse",
      "type": "object",
      "properties": {
        "accountLabels": {
          "description": "The labels from the specified account.",
          "items": {
            "$ref": "AccountLabel"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages."
        }
      }
    },
    "MinimumOrderValueTableStoreCodeSetWithMov": {
      "id": "MinimumOrderValueTableStoreCodeSetWithMov",
      "properties": {
        "storeCodes": {
          "description": "A list of unique store codes or empty for the catch all.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "value": {
          "$ref": "Price",
          "description": "The minimum order value for the given stores."
        }
      },
      "type": "object",
      "description": "A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency."
    },
    "Table": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the table. Required for subtables, ignored for the main table."
        },
        "rows": {
          "description": "The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.",
          "items": {
            "$ref": "Row"
          },
          "type": "array"
        },
        "rowHeaders": {
          "description": "Headers of the table's rows. Required.",
          "$ref": "Headers"
        },
        "columnHeaders": {
          "description": "Headers of the table's columns. Optional: if not set then the table has only one dimension.",
          "$ref": "Headers"
        }
      },
      "type": "object",
      "id": "Table"
    },
    "LiasettingsSetPosDataProviderResponse": {
      "id": "LiasettingsSetPosDataProviderResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetPosDataProviderResponse\".",
          "type": "string"
        }
      }
    },
    "PostalCodeRange": {
      "properties": {
        "postalCodeRangeBegin": {
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`. Required.",
          "type": "string"
        },
        "postalCodeRangeEnd": {
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`.",
          "type": "string"
        }
      },
      "id": "PostalCodeRange",
      "type": "object"
    },
    "AccountsListResponse": {
      "id": "AccountsListResponse",
      "type": "object",
      "properties": {
        "resources": {
          "items": {
            "$ref": "Account"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of accounts.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsListResponse\"."
        }
      }
    },
    "PosDataProvidersPosDataProvider": {
      "id": "PosDataProvidersPosDataProvider",
      "properties": {
        "providerId": {
          "description": "The ID of the account.",
          "type": "string",
          "format": "uint64"
        },
        "fullName": {
          "type": "string",
          "description": "The full name of this POS data Provider."
        },
        "displayName": {
          "description": "The display name of Pos data Provider.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RegionalinventoryCustomBatchResponseEntry": {
      "properties": {
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "regionalInventory": {
          "description": "Price and availability of the product.",
          "$ref": "RegionalInventory"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#regionalinventoryCustomBatchResponseEntry\"."
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "id": "RegionalinventoryCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch regional inventory response.",
      "type": "object"
    },
    "Errors": {
      "description": "A list of errors returned by a failed batch entry.",
      "type": "object",
      "id": "Errors",
      "properties": {
        "code": {
          "format": "uint32",
          "type": "integer",
          "description": "The HTTP status of the first error in `errors`."
        },
        "message": {
          "type": "string",
          "description": "The message of the first error in `errors`."
        },
        "errors": {
          "description": "A list of errors.",
          "items": {
            "$ref": "Error"
          },
          "type": "array"
        }
      }
    },
    "PosInventory": {
      "id": "PosInventory",
      "properties": {
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "quantity": {
          "format": "int64",
          "description": "Required. The available quantity of the item.",
          "type": "string"
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posInventory`\"",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        }
      },
      "description": "The absolute quantity of an item available at the given store.",
      "type": "object"
    },
    "ReturnaddressCustomBatchResponse": {
      "type": "object",
      "id": "ReturnaddressCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#returnaddressCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "ReturnaddressCustomBatchResponseEntry"
          }
        }
      }
    },
    "AccountIdentifier": {
      "id": "AccountIdentifier",
      "type": "object",
      "properties": {
        "merchantId": {
          "description": "The merchant account ID, set for individual accounts and subaccounts.",
          "format": "uint64",
          "type": "string"
        },
        "aggregatorId": {
          "type": "string",
          "format": "uint64",
          "description": "The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount)."
        }
      }
    },
    "OrdersCreateTestReturnResponse": {
      "id": "OrdersCreateTestReturnResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestReturnResponse\"."
        },
        "returnId": {
          "type": "string",
          "description": "The ID of the newly created test order return."
        }
      }
    },
    "Value": {
      "description": "The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set.",
      "id": "Value",
      "type": "object",
      "properties": {
        "flatRate": {
          "description": "A flat rate. Can only be set if all other fields are not set.",
          "$ref": "Price"
        },
        "noShipping": {
          "type": "boolean",
          "description": "If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set."
        },
        "carrierRateName": {
          "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.",
          "type": "string"
        },
        "subtableName": {
          "description": "The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set.",
          "type": "string"
        },
        "pricePercentage": {
          "type": "string",
          "description": "A percentage of the price represented as a number in decimal notation (e.g., `\"5.4\"`). Can only be set if all other fields are not set."
        }
      }
    },
    "ProductSubscriptionCost": {
      "type": "object",
      "properties": {
        "amount": {
          "description": "The amount the buyer has to pay per subscription period.",
          "$ref": "Price"
        },
        "periodLength": {
          "type": "string",
          "format": "int64",
          "description": "The number of subscription periods the buyer has to pay."
        },
        "period": {
          "type": "string",
          "description": "The type of subscription period."
        }
      },
      "id": "ProductSubscriptionCost"
    },
    "ReturnAddressAddress": {
      "id": "ReturnAddressAddress",
      "properties": {
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "streetAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Street-level part of the address. May be up to two lines, each line specified as an array element."
        },
        "recipientName": {
          "type": "string",
          "description": "Name of the recipient to address returns to."
        },
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).",
          "type": "string"
        },
        "country": {
          "description": "CLDR country code (e.g. \"US\").",
          "type": "string"
        },
        "postalCode": {
          "description": "Postal code or ZIP (e.g. \"94043\").",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PosDataProviders": {
      "properties": {
        "country": {
          "description": "Country code.",
          "type": "string"
        },
        "posDataProviders": {
          "type": "array",
          "description": "A list of POS data providers.",
          "items": {
            "$ref": "PosDataProvidersPosDataProvider"
          }
        }
      },
      "id": "PosDataProviders",
      "type": "object"
    },
    "LiaPosDataProvider": {
      "properties": {
        "posExternalAccountId": {
          "description": "The account ID by which this merchant is known to the POS data provider.",
          "type": "string"
        },
        "posDataProviderId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the POS data provider."
        }
      },
      "id": "LiaPosDataProvider",
      "type": "object"
    },
    "ReturnpolicyCustomBatchResponse": {
      "type": "object",
      "id": "ReturnpolicyCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#returnpolicyCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "ReturnpolicyCustomBatchResponseEntry"
          }
        }
      }
    },
    "OrderOrderAnnotation": {
      "type": "object",
      "properties": {
        "value": {
          "description": "Value for additional google provided (as key-value pairs) annotation.",
          "type": "string"
        },
        "key": {
          "description": "Key for additional google provided (as key-value pairs) annotation.",
          "type": "string"
        }
      },
      "id": "OrderOrderAnnotation"
    },
    "SettlementTransaction": {
      "description": "Settlement transactions give a detailed breakdown of the settlement report.",
      "id": "SettlementTransaction",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#settlementTransaction`\""
        },
        "identifiers": {
          "$ref": "SettlementTransactionIdentifiers",
          "description": "Identifiers of the transaction."
        },
        "transaction": {
          "$ref": "SettlementTransactionTransaction",
          "description": "Details of the transaction."
        },
        "amount": {
          "$ref": "SettlementTransactionAmount",
          "description": "The amount for the transaction."
        }
      },
      "type": "object"
    },
    "LocalinventoryCustomBatchResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "LocalinventoryCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#localinventoryCustomBatchResponse\"."
        }
      },
      "id": "LocalinventoryCustomBatchResponse"
    },
    "LabelIds": {
      "description": "The IDs of labels that should be assigned to the CSS domain.",
      "id": "LabelIds",
      "type": "object",
      "properties": {
        "labelIds": {
          "description": "The list of label IDs.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        }
      }
    },
    "OrdersCancelTestOrderByCustomerRequest": {
      "id": "OrdersCancelTestOrderByCustomerRequest",
      "properties": {
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`changedMind`\" - \"`orderedWrongItem`\" - \"`other`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderShipmentLineItemShipment": {
      "id": "OrderShipmentLineItemShipment",
      "properties": {
        "lineItemId": {
          "description": "The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity that is shipped."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required."
        }
      },
      "type": "object"
    },
    "OrderLineItemShippingDetailsMethod": {
      "type": "object",
      "id": "OrderLineItemShippingDetailsMethod",
      "properties": {
        "methodName": {
          "type": "string",
          "description": "Required. The name of the shipping method."
        },
        "carrier": {
          "type": "string",
          "description": "The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values."
        },
        "maxDaysInTransit": {
          "format": "uint32",
          "description": "Required. Maximum transit time.",
          "type": "integer"
        },
        "minDaysInTransit": {
          "format": "uint32",
          "type": "integer",
          "description": "Required. Minimum transit time."
        }
      }
    },
    "ProductAmount": {
      "type": "object",
      "id": "ProductAmount",
      "properties": {
        "remittedTaxAmount": {
          "description": "Remitted tax value.",
          "$ref": "Price"
        },
        "taxAmount": {
          "description": "Tax value.",
          "$ref": "Price"
        },
        "priceAmount": {
          "description": "The pre-tax or post-tax price depending on the location of the order.",
          "$ref": "Price"
        }
      }
    },
    "OrdersRefundOrderRequest": {
      "id": "OrdersRefundOrderRequest",
      "properties": {
        "fullRefund": {
          "description": "If true, the full order will be refunded, including shipping. If this is true, amount should not be provided and will be ignored.",
          "type": "boolean"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`courtesyAdjustment`\" - \"`other`\" ",
          "type": "string"
        },
        "amount": {
          "description": "The amount that is refunded. If this is not the first refund for the order, this should be the newly refunded amount.",
          "$ref": "MonetaryAmount"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "type": "object"
    },
    "AccountstatusesCustomBatchRequest": {
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccountstatusesCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch.",
          "type": "array"
        }
      },
      "id": "AccountstatusesCustomBatchRequest"
    },
    "LiasettingsListPosDataProvidersResponse": {
      "type": "object",
      "id": "LiasettingsListPosDataProvidersResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListPosDataProvidersResponse\".",
          "type": "string"
        },
        "posDataProviders": {
          "items": {
            "$ref": "PosDataProviders"
          },
          "description": "The list of POS data providers for each eligible country",
          "type": "array"
        }
      }
    },
    "LocalinventoryCustomBatchRequest": {
      "id": "LocalinventoryCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "LocalinventoryCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch.",
          "type": "array"
        }
      }
    },
    "PosCustomBatchResponseEntry": {
      "properties": {
        "inventory": {
          "description": "The updated inventory information.",
          "$ref": "PosInventory"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posCustomBatchResponseEntry`\""
        },
        "store": {
          "description": "The retrieved or updated store information.",
          "$ref": "PosStore"
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "sale": {
          "description": "The updated sale information.",
          "$ref": "PosSale"
        },
        "batchId": {
          "description": "The ID of the request entry to which this entry responds.",
          "format": "uint32",
          "type": "integer"
        }
      },
      "id": "PosCustomBatchResponseEntry",
      "type": "object"
    },
    "OrderreportsListTransactionsResponse": {
      "id": "OrderreportsListTransactionsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of transactions."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListTransactionsResponse\".",
          "type": "string"
        },
        "transactions": {
          "items": {
            "$ref": "OrderReportTransaction"
          },
          "description": "The list of transactions.",
          "type": "array"
        }
      }
    },
    "Amount": {
      "properties": {
        "priceAmount": {
          "description": "[required] The pre-tax or post-tax price depending on the location of the order.",
          "$ref": "Price"
        },
        "taxAmount": {
          "description": "[required] Tax value.",
          "$ref": "Price"
        }
      },
      "type": "object",
      "id": "Amount"
    },
    "OrderreturnsPartialRefund": {
      "id": "OrderreturnsPartialRefund",
      "type": "object",
      "properties": {
        "taxAmount": {
          "description": "Tax amount to be refunded. Note: This has different meaning depending on the location of the order.",
          "$ref": "Price"
        },
        "priceAmount": {
          "$ref": "Price",
          "description": "The pre-tax or post-tax amount to be refunded, depending on the location of the order."
        }
      }
    },
    "OrdersAcknowledgeResponse": {
      "type": "object",
      "id": "OrdersAcknowledgeResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAcknowledgeResponse\".",
          "type": "string"
        }
      }
    },
    "DatafeedsCustomBatchResponse": {
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "DatafeedsCustomBatchResponseEntry"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsCustomBatchResponse\"."
        }
      },
      "type": "object",
      "id": "DatafeedsCustomBatchResponse"
    },
    "ListRepricingRulesResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        },
        "repricingRules": {
          "description": "The rules from the specified merchant.",
          "items": {
            "$ref": "RepricingRule"
          },
          "type": "array"
        }
      },
      "id": "ListRepricingRulesResponse",
      "description": "Response message for the `ListRepricingRules` method.",
      "type": "object"
    },
    "ShippingSettings": {
      "id": "ShippingSettings",
      "type": "object",
      "description": "The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.",
      "properties": {
        "postalCodeGroups": {
          "items": {
            "$ref": "PostalCodeGroup"
          },
          "type": "array",
          "description": "A list of postal code groups that can be referred to in `services`. Optional."
        },
        "accountId": {
          "format": "uint64",
          "description": "The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.",
          "type": "string"
        },
        "services": {
          "description": "The target account's list of services. Optional.",
          "items": {
            "$ref": "Service"
          },
          "type": "array"
        }
      }
    },
    "TestOrderDeliveryDetails": {
      "id": "TestOrderDeliveryDetails",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "The phone number of the person receiving the delivery."
        },
        "address": {
          "description": "The delivery address",
          "$ref": "TestOrderAddress"
        }
      },
      "type": "object"
    },
    "OrderLineItemProductFee": {
      "id": "OrderLineItemProductFee",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the fee."
        },
        "amount": {
          "description": "Amount of the fee.",
          "$ref": "Price"
        }
      }
    },
    "RegionalinventoryCustomBatchRequest": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "RegionalinventoryCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "RegionalinventoryCustomBatchRequest"
    },
    "InvoiceSummaryAdditionalChargeSummary": {
      "type": "object",
      "id": "InvoiceSummaryAdditionalChargeSummary",
      "properties": {
        "totalAmount": {
          "$ref": "Amount",
          "description": "[required] Total additional charge for this type."
        },
        "type": {
          "type": "string",
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" "
        }
      }
    },
    "LocalInventory": {
      "properties": {
        "availability": {
          "type": "string",
          "description": "Availability of the product."
        },
        "pickupSla": {
          "description": "Expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`.",
          "type": "string"
        },
        "quantity": {
          "description": "Quantity of the product. Must be nonnegative.",
          "format": "uint32",
          "type": "integer"
        },
        "price": {
          "description": "Price of the product.",
          "$ref": "Price"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#localInventory`\"",
          "type": "string"
        },
        "pickupMethod": {
          "type": "string",
          "description": "Supported pickup method for this offer. Unless the value is \"not supported\", this field must be submitted together with `pickupSla`."
        },
        "salePrice": {
          "description": "Sale price of the product. Mandatory if `sale_price_effective_date` is defined.",
          "$ref": "Price"
        },
        "instoreProductLocation": {
          "type": "string",
          "description": "In-store product location."
        },
        "storeCode": {
          "type": "string",
          "description": "Required. Store code of this local inventory resource."
        },
        "salePriceEffectiveDate": {
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates may be specified as 'null' if undecided.",
          "type": "string"
        }
      },
      "id": "LocalInventory",
      "description": "Local inventory resource. For accepted attribute values, see the local product inventory feed specification.",
      "type": "object"
    },
    "LocationIdSet": {
      "id": "LocationIdSet",
      "properties": {
        "locationIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A non-empty list of location IDs. They must all be of the same location type (e.g., state)."
        }
      },
      "type": "object"
    },
    "CustomAttribute": {
      "id": "CustomAttribute",
      "properties": {
        "value": {
          "description": "The value of the attribute.",
          "type": "string"
        },
        "groupValues": {
          "description": "Subattributes within this attribute group. Exactly one of value or groupValues must be provided.",
          "type": "array",
          "items": {
            "$ref": "CustomAttribute"
          }
        },
        "name": {
          "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderreportsListDisbursementsResponse": {
      "id": "OrderreportsListDisbursementsResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListDisbursementsResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of disbursements."
        },
        "disbursements": {
          "type": "array",
          "items": {
            "$ref": "OrderReportDisbursement"
          },
          "description": "The list of disbursements."
        }
      },
      "type": "object"
    }
  },
  "mtlsRootUrl": "https://shoppingcontent.mtls.googleapis.com/",
  "parameters": {
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "alt": {
      "default": "json",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    }
  }
}
