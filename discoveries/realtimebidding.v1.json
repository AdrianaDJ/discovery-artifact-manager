{
  "ownerDomain": "google.com",
  "revision": "20201006",
  "version": "v1",
  "canonicalName": "Real-time Bidding",
  "ownerName": "Google",
  "version_module": true,
  "baseUrl": "https://realtimebidding.googleapis.com/",
  "parameters": {
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "description": "Data format for response.",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query",
      "type": "boolean"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ]
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "schemas": {
    "WatchCreativesRequest": {
      "properties": {},
      "type": "object",
      "description": "A request to receive push notifications when any of the creatives belonging to the bidder changes status.",
      "id": "WatchCreativesRequest"
    },
    "DestinationNotWorkingEvidence": {
      "properties": {
        "redirectionError": {
          "enumDescriptions": [
            "Default value that should never be used.",
            "Too many redirect hops.",
            "Got a redirect but it was invalid.",
            "Got a redirect but it was empty.",
            "Unknown redirect error."
          ],
          "description": "HTTP redirect chain error.",
          "enum": [
            "REDIRECTION_ERROR_UNSPECIFIED",
            "TOO_MANY_REDIRECTS",
            "INVALID_REDIRECT",
            "EMPTY_REDIRECT",
            "REDIRECT_ERROR_UNKNOWN"
          ],
          "type": "string"
        },
        "invalidPage": {
          "enum": [
            "INVALID_PAGE_UNSPECIFIED",
            "EMPTY_OR_ERROR_PAGE"
          ],
          "enumDescriptions": [
            "Default value that should never be used.",
            "Page was empty or had an error."
          ],
          "description": "Page was crawled successfully, but was detected as either a page with no content or an error page.",
          "type": "string"
        },
        "httpError": {
          "description": "HTTP error code (e.g. 404 or 5xx)",
          "type": "integer",
          "format": "int32"
        },
        "expandedUrl": {
          "description": "The full non-working URL.",
          "type": "string"
        },
        "lastCheckTime": {
          "format": "google-datetime",
          "description": "Approximate time when the ad destination was last checked.",
          "type": "string"
        },
        "dnsError": {
          "enumDescriptions": [
            "Default value that should never be used.",
            "DNS name was not found.",
            "An internal issue occurred when Google's crawler tried to resolve the DNS entry. This is a Google-internal issue and may not be the result of an issue with the landing page."
          ],
          "description": "DNS lookup errors.",
          "type": "string",
          "enum": [
            "DNS_ERROR_UNSPECIFIED",
            "ERROR_DNS",
            "GOOGLE_CRAWLER_DNS_ISSUE"
          ]
        },
        "platform": {
          "description": "Platform of the non-working URL.",
          "type": "string",
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "PERSONAL_COMPUTER",
            "ANDROID",
            "IOS"
          ],
          "enumDescriptions": [
            "Default value that should never be used.",
            "The personal computer platform.",
            "The Android platform.",
            "The iOS platform."
          ]
        },
        "urlRejected": {
          "type": "string",
          "enum": [
            "URL_REJECTED_UNSPECIFIED",
            "BAD_REQUEST",
            "MALFORMED_URL",
            "URL_REJECTED_UNKNOWN"
          ],
          "description": "Rejected because of malformed URLs or invalid requests.",
          "enumDescriptions": [
            "Default value that should never be used.",
            "URL rejected because of a malformed request.",
            "URL rejected because of a malformed URL.",
            "URL rejected because of unknown reason."
          ]
        }
      },
      "description": "Evidence of the creative's destination URL not functioning properly or having been incorrectly set up.",
      "id": "DestinationNotWorkingEvidence",
      "type": "object"
    },
    "AdvertiserAndBrand": {
      "properties": {
        "brandName": {
          "description": "Brand name. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "brandId": {
          "description": "Detected brand ID or zero if no brand has been detected. See https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt for the list of possible values. Can be used to filter the response of the creatives.list method.",
          "format": "int64",
          "type": "string"
        },
        "advertiserId": {
          "description": "See https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt for the list of possible values. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "format": "int64"
        },
        "advertiserName": {
          "description": "Advertiser name. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        }
      },
      "description": "Detected advertiser and brand information.",
      "id": "AdvertiserAndBrand",
      "type": "object"
    },
    "MediaFile": {
      "id": "MediaFile",
      "description": "Information about each media file in the VAST.",
      "type": "object",
      "properties": {
        "mimeType": {
          "enum": [
            "VIDEO_MIME_TYPE_UNSPECIFIED",
            "MIME_VIDEO_XFLV",
            "MIME_VIDEO_WEBM",
            "MIME_VIDEO_MP4",
            "MIME_VIDEO_OGG",
            "MIME_VIDEO_YT_HOSTED",
            "MIME_VIDEO_X_MS_WMV",
            "MIME_VIDEO_3GPP",
            "MIME_VIDEO_MOV",
            "MIME_APPLICATION_SWF",
            "MIME_APPLICATION_SURVEY",
            "MIME_APPLICATION_JAVASCRIPT",
            "MIME_APPLICATION_SILVERLIGHT",
            "MIME_APPLICATION_MPEGURL",
            "MIME_APPLICATION_MPEGDASH",
            "MIME_AUDIO_MP4A",
            "MIME_AUDIO_MP3",
            "MIME_AUDIO_OGG"
          ],
          "description": "The MIME type of this media file. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Flash container.",
            "WebM container assuming VP9 codec.",
            "MPEG-4 container typically with H.264 codec.",
            "Ogg container assuming Theora codec.",
            "Video files hosted on YouTube.",
            "Windows Media Video Codec.",
            "3GPP container format used on 3G phones.",
            "Quicktime container format.",
            "Shockwave Flash (used for VPAID ads).",
            "Properties of VAST served by consumer survey.",
            "JavaScript (used for VPAID ads).",
            "Silverlight (used for VPAID ads).",
            "HLS/M3U8.",
            "DASH.",
            "MPEG-4 audio format.",
            "MPEG-3 audio format.",
            "Ogg audio format"
          ]
        },
        "bitrate": {
          "description": "Bitrate of the video file, in Kbps. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "UserList": {
      "id": "UserList",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the user list that must follow the pattern `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64 identifier assigned by Google to uniquely identify a user list."
        },
        "membershipDurationDays": {
          "format": "int64",
          "type": "string",
          "description": "Required. The number of days a user's cookie stays on the user list. The field must be between 0 and 540 inclusive."
        },
        "urlRestriction": {
          "description": "Required. The URL restriction for the user list.",
          "$ref": "UrlRestriction"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name of the user list. This must be unique across all user lists for a given account."
        },
        "status": {
          "enumDescriptions": [
            "Default value that should never be used.",
            "New users can be added to the user list.",
            "New users cannot be added to the user list."
          ],
          "readOnly": true,
          "description": "Output only. The status of the user list. A new user list starts out as open.",
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "OPEN",
            "CLOSED"
          ]
        },
        "description": {
          "type": "string",
          "description": "The description for the user list."
        }
      },
      "description": "Represents an Authorized Buyers user list. Authorized Buyers can create/update/list user lists. Once a user list is created in the system, Authorized Buyers can add users to the user list using the bulk uploader API. Alternatively, users can be added by hosting a tag on the advertiser's page.",
      "type": "object"
    },
    "NativeContent": {
      "id": "NativeContent",
      "type": "object",
      "properties": {
        "starRating": {
          "type": "number",
          "format": "double",
          "description": "The app rating in the app store. Must be in the range [0-5]."
        },
        "priceDisplayText": {
          "type": "string",
          "description": "The price of the promoted app including currency info."
        },
        "appIcon": {
          "description": "The app icon, for app download ads.",
          "$ref": "Image"
        },
        "body": {
          "type": "string",
          "description": "A long description of the ad."
        },
        "clickTrackingUrl": {
          "description": "The URL to use for click tracking.",
          "type": "string"
        },
        "callToAction": {
          "description": "A label for the button that the user is supposed to click.",
          "type": "string"
        },
        "headline": {
          "type": "string",
          "description": "A short title for the ad."
        },
        "logo": {
          "$ref": "Image",
          "description": "A smaller image, for the advertiser's logo."
        },
        "videoUrl": {
          "type": "string",
          "description": "The URL to fetch a native video ad."
        },
        "advertiserName": {
          "type": "string",
          "description": "The name of the advertiser or sponsor, to be displayed in the ad creative."
        },
        "clickLinkUrl": {
          "type": "string",
          "description": "The URL that the browser/SDK will load when the user clicks the ad."
        },
        "image": {
          "description": "A large image.",
          "$ref": "Image"
        }
      },
      "description": "Native content for a creative."
    },
    "ServingStatus": {
      "type": "object",
      "id": "ServingStatus",
      "properties": {
        "topics": {
          "type": "array",
          "items": {
            "$ref": "PolicyTopicEntry"
          },
          "description": "Policy topics related to the serving decision for this transaction type (e.g., open auction, deals) or region (e.g., China, Russia). Topics may be present only if status is DISAPPROVED."
        },
        "status": {
          "description": "Serving status for the given transaction type (e.g., open auction, deals) or region (e.g., China, Russia). Can be used to filter the response of the creatives.list method.",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Creative is pending review.",
            "Creative cannot serve.",
            "Creative is approved."
          ],
          "type": "string",
          "enum": [
            "STATUS_UNSPECIFIED",
            "PENDING_REVIEW",
            "DISAPPROVED",
            "APPROVED"
          ]
        }
      },
      "description": "Serving status of the creative for a transaction type or a region."
    },
    "UrlRestriction": {
      "type": "object",
      "id": "UrlRestriction",
      "properties": {
        "url": {
          "type": "string",
          "description": "Required. The URL to use for applying the restriction on the user list."
        },
        "startDate": {
          "$ref": "Date",
          "description": "Start date (if specified) of the URL restriction."
        },
        "endDate": {
          "$ref": "Date",
          "description": "End date (if specified) of the URL restriction. End date should be later than the start date for the date range to be valid."
        },
        "restrictionType": {
          "enum": [
            "RESTRICTION_TYPE_UNSPECIFIED",
            "CONTAINS",
            "EQUALS",
            "STARTS_WITH",
            "ENDS_WITH",
            "DOES_NOT_EQUAL",
            "DOES_NOT_CONTAIN",
            "DOES_NOT_START_WITH",
            "DOES_NOT_END_WITH"
          ],
          "enumDescriptions": [
            "Default value that should never be used.",
            "The tag URL (as recorded by the pixel callback) contains the specified URL.",
            "The tag URL (as recorded by the pixel callback) exactly matches the specified URL.",
            "The tag URL (as recorded by the pixel callback) starts with the specified URL.",
            "The tag URL (as recorded by the pixel callback) ends with the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not equal the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not contain the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not start with the specified URL.",
            "The tag URL (as recorded by the pixel callback) does not end with the specified URL."
          ],
          "type": "string",
          "description": "The restriction type for the specified URL."
        }
      },
      "description": "Represents the URL restriction (for the URL captured by the pixel callback) for a user list."
    },
    "DomainCalls": {
      "type": "object",
      "description": "The number of HTTP calls made to the given domain.",
      "properties": {
        "httpCallCount": {
          "type": "integer",
          "description": "Number of HTTP calls made to the domain.",
          "format": "int32"
        },
        "domain": {
          "description": "The domain name.",
          "type": "string"
        }
      },
      "id": "DomainCalls"
    },
    "DownloadSizeEvidence": {
      "id": "DownloadSizeEvidence",
      "type": "object",
      "properties": {
        "topUrlDownloadSizeBreakdowns": {
          "description": "Download size broken down by URLs with the top download size.",
          "type": "array",
          "items": {
            "$ref": "UrlDownloadSize"
          }
        },
        "totalDownloadSizeKb": {
          "type": "integer",
          "format": "int32",
          "description": "Total download size (in kilobytes) for all the resources in the creative."
        }
      },
      "description": "Total download size and URL-level download size breakdown for resources in a creative."
    },
    "HtmlContent": {
      "id": "HtmlContent",
      "type": "object",
      "properties": {
        "width": {
          "description": "The width of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
          "format": "int32",
          "type": "integer"
        },
        "snippet": {
          "description": "The HTML snippet that displays the ad when inserted in the web page.",
          "type": "string"
        },
        "height": {
          "description": "The height of the HTML snippet in pixels. Can be used to filter the response of the creatives.list method.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "HTML content for a creative."
    },
    "PolicyTopicEvidence": {
      "type": "object",
      "id": "PolicyTopicEvidence",
      "description": "Evidence associated with a policy topic entry.",
      "properties": {
        "destinationNotCrawlable": {
          "description": "The creative's destination URL was not crawlable by Google.",
          "$ref": "DestinationNotCrawlableEvidence"
        },
        "httpCookie": {
          "description": "Evidence for HTTP cookie-related policy violations.",
          "$ref": "HttpCookieEvidence"
        },
        "destinationUrl": {
          "$ref": "DestinationUrlEvidence",
          "description": "URL of the actual landing page."
        },
        "destinationNotWorking": {
          "description": "The creative's destination URL did not function properly or was incorrectly set up.",
          "$ref": "DestinationNotWorkingEvidence"
        },
        "downloadSize": {
          "$ref": "DownloadSizeEvidence",
          "description": "Total download size and URL-level download size breakdown for resources in a creative."
        },
        "domainCall": {
          "$ref": "DomainCallEvidence",
          "description": "Number of HTTP calls made by the creative, broken down by domain."
        },
        "httpCall": {
          "$ref": "HttpCallEvidence",
          "description": "HTTP calls made by the creative that resulted in policy violations."
        }
      }
    },
    "OpenUserListRequest": {
      "description": "A request to open a specified user list.",
      "type": "object",
      "id": "OpenUserListRequest",
      "properties": {}
    },
    "CloseUserListRequest": {
      "properties": {},
      "description": "A request to close a specified user list.",
      "id": "CloseUserListRequest",
      "type": "object"
    },
    "VideoMetadata": {
      "properties": {
        "duration": {
          "description": "The duration of the ad. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "format": "google-duration"
        },
        "isValidVast": {
          "description": "Is this a valid VAST ad? Can be used to filter the response of the creatives.list method.",
          "type": "boolean"
        },
        "vastVersion": {
          "description": "The maximum VAST version across all wrapped VAST documents. Can be used to filter the response of the creatives.list method.",
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "VAST 1.0",
            "VAST 2.0",
            "VAST 3.0",
            "VAST 4.0"
          ],
          "enum": [
            "VAST_VERSION_UNSPECIFIED",
            "VAST_VERSION_1_0",
            "VAST_VERSION_2_0",
            "VAST_VERSION_3_0",
            "VAST_VERSION_4_0"
          ]
        },
        "skipOffset": {
          "type": "string",
          "description": "The minimum duration that the user has to watch before being able to skip this ad. If the field is not set, the ad is not skippable. If the field is set, the ad is skippable. Can be used to filter the response of the creatives.list method.",
          "format": "google-duration"
        },
        "isVpaid": {
          "description": "Is this a VPAID ad? Can be used to filter the response of the creatives.list method.",
          "type": "boolean"
        },
        "mediaFiles": {
          "description": "The list of all media files declared in the VAST. If there are multiple VASTs in a wrapper chain, this includes the media files from the deepest one in the chain.",
          "type": "array",
          "items": {
            "$ref": "MediaFile"
          }
        }
      },
      "description": "Video metadata for a creative.",
      "type": "object",
      "id": "VideoMetadata"
    },
    "Date": {
      "description": "Represents a whole or partial calendar date, e.g. a birthday. The time of day and time zone are either specified elsewhere or are not significant. The date is relative to the Proleptic Gregorian Calendar. This can represent: * A full date, with non-zero year, month and day values * A month and day value, with a zero year, e.g. an anniversary * A year on its own, with zero month and day values * A year and month value, with a zero day, e.g. a credit card expiration date Related types are google.type.TimeOfDay and `google.protobuf.Timestamp`.",
      "id": "Date",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without a year.",
          "format": "int32",
          "type": "integer"
        },
        "day": {
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a year by itself or a year and month where the day is not significant.",
          "format": "int32",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "type": "integer",
          "description": "Month of year. Must be from 1 to 12, or 0 if specifying a year without a month and day."
        }
      }
    },
    "ListCreativesResponse": {
      "description": "A response for listing creatives.",
      "id": "ListCreativesResponse",
      "type": "object",
      "properties": {
        "creatives": {
          "items": {
            "$ref": "Creative"
          },
          "description": "The list of creatives.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in the ListCreativesRequest.pageToken field in the subsequent call to the `ListCreatives` method to retrieve the next page of results."
        }
      }
    },
    "Image": {
      "type": "object",
      "properties": {
        "width": {
          "type": "integer",
          "format": "int32",
          "description": "Image width in pixels."
        },
        "height": {
          "format": "int32",
          "description": "Image height in pixels.",
          "type": "integer"
        },
        "url": {
          "description": "The URL of the image.",
          "type": "string"
        }
      },
      "id": "Image",
      "description": "An image resource. You may provide a larger image than was requested, so long as the aspect ratio is preserved."
    },
    "GetRemarketingTagResponse": {
      "type": "object",
      "description": "Response for a request to get remarketing tag.",
      "properties": {
        "snippet": {
          "type": "string",
          "description": "A HTML tag that can be placed on the advertiser's page to add users to a user list. For more information and code samples on using snippet on your website refer to [Tag your site for remarketing]( https://support.google.com/google-ads/answer/2476688)."
        }
      },
      "id": "GetRemarketingTagResponse"
    },
    "VideoContent": {
      "id": "VideoContent",
      "description": "Video content for a creative.",
      "properties": {
        "videoVastXml": {
          "description": "The contents of a VAST document for a video ad. This document should conform to the VAST 2.0 or 3.0 standard.",
          "type": "string"
        },
        "videoMetadata": {
          "$ref": "VideoMetadata",
          "readOnly": true,
          "description": "Output only. Video metadata."
        },
        "videoUrl": {
          "type": "string",
          "description": "The URL to fetch a video ad."
        }
      },
      "type": "object"
    },
    "Creative": {
      "type": "object",
      "description": "A creative and its classification data.",
      "id": "Creative",
      "properties": {
        "declaredRestrictedCategories": {
          "type": "array",
          "description": "All declared restricted categories for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method.",
          "items": {
            "type": "string",
            "enum": [
              "RESTRICTED_CATEGORY_UNSPECIFIED",
              "ALCOHOL"
            ],
            "enumDescriptions": [
              "Default value that should never be used.",
              "The alcohol restricted category."
            ]
          }
        },
        "adChoicesDestinationUrl": {
          "type": "string",
          "description": "The link to AdChoices destination page. This is only supported for native ads."
        },
        "name": {
          "type": "string",
          "description": "Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response."
        },
        "dealIds": {
          "readOnly": true,
          "description": "Output only. IDs of all of the deals with which this creative has been used in bidding. Can be used to filter the response of the creatives.list method.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "creativeId": {
          "type": "string",
          "description": "Buyer-specific creative ID that references this creative in bid responses. This field is Ignored in update operations. Can be used to filter the response of the creatives.list method. The maximum length of the creative ID is 128 bytes."
        },
        "agencyId": {
          "type": "string",
          "description": "The agency ID for this creative.",
          "format": "int64"
        },
        "creativeFormat": {
          "enum": [
            "CREATIVE_FORMAT_UNSPECIFIED",
            "HTML",
            "VIDEO",
            "NATIVE"
          ],
          "readOnly": true,
          "enumDescriptions": [
            "The format is unknown.",
            "HTML creative.",
            "Video creative.",
            "Native creative."
          ],
          "description": "Output only. The format of this creative. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "declaredClickThroughUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The set of declared destination URLs for the creative. Can be used to filter the response of the creatives.list method."
        },
        "restrictedCategories": {
          "type": "array",
          "description": "All restricted categories for the ads that may be shown from this creative.",
          "items": {
            "enumDescriptions": [
              "Default value that should never be used.",
              "The alcohol restricted category."
            ],
            "type": "string",
            "enum": [
              "RESTRICTED_CATEGORY_UNSPECIFIED",
              "ALCOHOL"
            ]
          }
        },
        "html": {
          "description": "An HTML creative.",
          "$ref": "HtmlContent"
        },
        "creativeServingDecision": {
          "readOnly": true,
          "description": "Output only. Top level status and detected attributes of a creative (for example domain, language, advertiser, product category, etc.) that affect whether (status) and where (context) a creative will be allowed to serve.",
          "$ref": "CreativeServingDecision"
        },
        "declaredAttributes": {
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Do not use. This is a placeholder value only.",
              "The creative is of type image/rich media. For pretargeting.",
              "The creative is of video type Adobe Flash FLV. For pretargeting.",
              "The creative is tagged.",
              "The creative is cookie targeted.",
              "The creative is user interest targeted.",
              "The creative does not expand.",
              "The creative expands up.",
              "The creative expands down.",
              "The creative expands left.",
              "The creative expands right.",
              "The creative expands up and left.",
              "The creative expands up and right.",
              "The creative expands down and left.",
              "The creative expands down and right.",
              "The creative type is HTML.",
              "The creative type is VAST video.",
              "The creative expands up or down.",
              "The creative expands left or right.",
              "The creative expands on any diagonal.",
              "The creative expands when rolled over.",
              "The instream vast video type is vpaid flash.",
              "The creative is MRAID.",
              "The creative is Flash.",
              "The creative is HTML5.",
              "The creative has an instream VAST video type of skippable instream video. For pretargeting.",
              "The creative is SSL.",
              "The creative is non-SSL.",
              "The creative is an interstitial.",
              "The creative has an instream VAST video type of non-skippable instream video. For pretargeting.",
              "The creative is eligible for native.",
              "The creative has an instream VAST video type of non-VPAID. For pretargeting.",
              "The creative is not eligible for native.",
              "The creative has an interstitial size of any interstitial. For pretargeting.",
              "The creative has an interstitial size of non interstitial. For pretargeting.",
              "The video type is in-banner video.",
              "The creative can dynamically resize to fill a variety of slot sizes.",
              "The open measurement SDK is supported."
            ],
            "enum": [
              "ATTRIBUTE_UNSPECIFIED",
              "IMAGE_RICH_MEDIA",
              "ADOBE_FLASH_FLV",
              "IS_TAGGED",
              "IS_COOKIE_TARGETED",
              "IS_USER_INTEREST_TARGETED",
              "EXPANDING_DIRECTION_NONE",
              "EXPANDING_DIRECTION_UP",
              "EXPANDING_DIRECTION_DOWN",
              "EXPANDING_DIRECTION_LEFT",
              "EXPANDING_DIRECTION_RIGHT",
              "EXPANDING_DIRECTION_UP_LEFT",
              "EXPANDING_DIRECTION_UP_RIGHT",
              "EXPANDING_DIRECTION_DOWN_LEFT",
              "EXPANDING_DIRECTION_DOWN_RIGHT",
              "CREATIVE_TYPE_HTML",
              "CREATIVE_TYPE_VAST_VIDEO",
              "EXPANDING_DIRECTION_UP_OR_DOWN",
              "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
              "EXPANDING_DIRECTION_ANY_DIAGONAL",
              "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
              "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
              "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
              "SKIPPABLE_INSTREAM_VIDEO",
              "RICH_MEDIA_CAPABILITY_TYPE_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
              "NON_SKIPPABLE_INSTREAM_VIDEO",
              "NATIVE_ELIGIBILITY_ELIGIBLE",
              "NON_VPAID",
              "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
              "ANY_INTERSTITIAL",
              "NON_INTERSTITIAL",
              "IN_BANNER_VIDEO",
              "RENDERING_SIZELESS_ADX",
              "OMSDK_1_0"
            ]
          },
          "description": "All declared attributes for the ads that may be shown from this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto\") contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction."
        },
        "video": {
          "$ref": "VideoContent",
          "description": "A video creative."
        },
        "advertiserName": {
          "description": "The name of the company being advertised in the creative. Can be used to filter the response of the creatives.list method.",
          "type": "string"
        },
        "declaredVendorIds": {
          "description": "IDs for the declared ad technology vendors that may be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "native": {
          "description": "A native creative.",
          "$ref": "NativeContent"
        },
        "impressionTrackingUrls": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of URLs to be called to record an impression."
        },
        "apiUpdateTime": {
          "format": "google-datetime",
          "description": "Output only. The last update timestamp of the creative via API.",
          "readOnly": true,
          "type": "string"
        },
        "version": {
          "format": "int32",
          "readOnly": true,
          "description": "Output only. The version of this creative. Version for a new creative is 1 and it increments during subsequent creative updates.",
          "type": "integer"
        },
        "accountId": {
          "readOnly": true,
          "format": "int64",
          "type": "string",
          "description": "Output only. ID of the buyer account that this creative is owned by. Can be used to filter the response of the creatives.list method with equality and inequality check."
        }
      }
    },
    "WatchCreativesResponse": {
      "properties": {
        "topic": {
          "type": "string",
          "description": "The Pub/Sub topic that will be used to publish creative serving status notifications. This would be of the format `projects/{project_id}/topics/{topic_id}`."
        },
        "subscription": {
          "type": "string",
          "description": "The Pub/Sub subscription that can be used to pull creative status notifications. This would be of the format `projects/{project_id}/subscriptions/{subscription_id}`. Subscription is created with pull delivery. All service accounts belonging to the bidder will have read access to this subscription. Subscriptions that are inactive for more than 90 days will be disabled. Please use watchCreatives to re-enable the subscription."
        }
      },
      "description": "A response for the request to receive push notification when a bidder's creatives change status.",
      "id": "WatchCreativesResponse",
      "type": "object"
    },
    "HttpCookieEvidence": {
      "id": "HttpCookieEvidence",
      "type": "object",
      "description": "Evidence for HTTP cookie-related policy violations.",
      "properties": {
        "maxCookieCount": {
          "type": "integer",
          "format": "int32",
          "description": "The largest number of cookies set by a creative. If this field is set, cookie_names above will be set to the cookie names of top domains with the largest number of cookies. This field will only be set for TOO_MANY_COOKIES policy."
        },
        "cookieNames": {
          "description": "Names of cookies that violate Google policies. For TOO_MANY_COOKIES policy, this will be the cookie names of top domains with the largest number of cookies. For other policies, this will be all the cookie names that violate the policy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HttpCallEvidence": {
      "type": "object",
      "description": "HTTP calls made by a creative that resulted in policy violations.",
      "properties": {
        "urls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "URLs of HTTP calls made by the creative."
        }
      },
      "id": "HttpCallEvidence"
    },
    "DestinationUrlEvidence": {
      "properties": {
        "destinationUrl": {
          "description": "The full landing page URL of the destination.",
          "type": "string"
        }
      },
      "description": "The full landing page URL of the destination.",
      "type": "object",
      "id": "DestinationUrlEvidence"
    },
    "UrlDownloadSize": {
      "description": "The URL-level breakdown for the download size.",
      "id": "UrlDownloadSize",
      "type": "object",
      "properties": {
        "normalizedUrl": {
          "description": "The normalized URL with query parameters and fragment removed.",
          "type": "string"
        },
        "downloadSizeKb": {
          "type": "integer",
          "format": "int32",
          "description": "Download size of the URL in kilobytes."
        }
      }
    },
    "DomainCallEvidence": {
      "description": "Number of HTTP calls made by a creative, broken down by domain.",
      "properties": {
        "topHttpCallDomains": {
          "type": "array",
          "items": {
            "$ref": "DomainCalls"
          },
          "description": "Breakdown of the most frequent domains called via HTTP by the creative."
        },
        "totalHttpCallCount": {
          "type": "integer",
          "description": "The total number of HTTP calls made by the creative, including but not limited to the number of calls in the top_http_call_domains.",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "DomainCallEvidence"
    },
    "DestinationNotCrawlableEvidence": {
      "description": "Evidence that the creative's destination URL was not crawlable by Google.",
      "type": "object",
      "properties": {
        "crawlTime": {
          "description": "Approximate time of the crawl.",
          "type": "string",
          "format": "google-datetime"
        },
        "reason": {
          "enum": [
            "REASON_UNSPECIFIED",
            "UNREACHABLE_ROBOTS",
            "TIMEOUT_ROBOTS",
            "ROBOTED_DENIED",
            "UNKNOWN"
          ],
          "description": "Reason of destination not crawlable.",
          "type": "string",
          "enumDescriptions": [
            "Default value that should never be used.",
            "Site's robots exclusion file (e.g., robots.txt) was unreachable.",
            "Timed out reading site's robots exclusion file (e.g., robots.txt).",
            "Crawler was disallowed by the site's robots exclusion file (e.g., robots.txt).",
            "Unknown reason."
          ]
        },
        "crawledUrl": {
          "type": "string",
          "description": "Destination URL that was attempted to be crawled."
        }
      },
      "id": "DestinationNotCrawlableEvidence"
    },
    "ListUserListsResponse": {
      "id": "ListUserListsResponse",
      "type": "object",
      "description": "The list user list response.",
      "properties": {
        "userLists": {
          "items": {
            "$ref": "UserList"
          },
          "type": "array",
          "description": "List of user lists from the search."
        },
        "nextPageToken": {
          "description": "The continuation page token to send back to the server in a subsequent request. Due to a currently known issue, it is recommended that the caller keep invoking the list method till the time a next page token is not returned (even if the result set is empty).",
          "type": "string"
        }
      }
    },
    "CreativeServingDecision": {
      "id": "CreativeServingDecision",
      "description": "Top level status and detected attributes of a creative.",
      "type": "object",
      "properties": {
        "openAuctionServingStatus": {
          "description": "Status of this creative when bidding in open auction, private auction, or auction packages (outside of Russia and China).",
          "$ref": "ServingStatus"
        },
        "detectedClickThroughUrls": {
          "description": "The set of detected destination URLs for the creative. Can be used to filter the response of the creatives.list method.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "detectedVendorIds": {
          "description": "IDs of the ad technology vendors that were detected to be used by this creative. See https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt for possible values. Can be used to filter the response of the creatives.list method. If the `allowed_vendor_type` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) does not contain one of the vendor type IDs that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        },
        "dealsServingStatus": {
          "$ref": "ServingStatus",
          "description": "Status of this creative when bidding on PG and PD deals (outside of Russia and China)."
        },
        "detectedAttributes": {
          "items": {
            "type": "string",
            "enum": [
              "ATTRIBUTE_UNSPECIFIED",
              "IMAGE_RICH_MEDIA",
              "ADOBE_FLASH_FLV",
              "IS_TAGGED",
              "IS_COOKIE_TARGETED",
              "IS_USER_INTEREST_TARGETED",
              "EXPANDING_DIRECTION_NONE",
              "EXPANDING_DIRECTION_UP",
              "EXPANDING_DIRECTION_DOWN",
              "EXPANDING_DIRECTION_LEFT",
              "EXPANDING_DIRECTION_RIGHT",
              "EXPANDING_DIRECTION_UP_LEFT",
              "EXPANDING_DIRECTION_UP_RIGHT",
              "EXPANDING_DIRECTION_DOWN_LEFT",
              "EXPANDING_DIRECTION_DOWN_RIGHT",
              "CREATIVE_TYPE_HTML",
              "CREATIVE_TYPE_VAST_VIDEO",
              "EXPANDING_DIRECTION_UP_OR_DOWN",
              "EXPANDING_DIRECTION_LEFT_OR_RIGHT",
              "EXPANDING_DIRECTION_ANY_DIAGONAL",
              "EXPANDING_ACTION_ROLLOVER_TO_EXPAND",
              "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_MRAID",
              "RICH_MEDIA_CAPABILITY_TYPE_FLASH",
              "RICH_MEDIA_CAPABILITY_TYPE_HTML5",
              "SKIPPABLE_INSTREAM_VIDEO",
              "RICH_MEDIA_CAPABILITY_TYPE_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_NON_SSL",
              "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL",
              "NON_SKIPPABLE_INSTREAM_VIDEO",
              "NATIVE_ELIGIBILITY_ELIGIBLE",
              "NON_VPAID",
              "NATIVE_ELIGIBILITY_NOT_ELIGIBLE",
              "ANY_INTERSTITIAL",
              "NON_INTERSTITIAL",
              "IN_BANNER_VIDEO",
              "RENDERING_SIZELESS_ADX",
              "OMSDK_1_0"
            ],
            "enumDescriptions": [
              "Do not use. This is a placeholder value only.",
              "The creative is of type image/rich media. For pretargeting.",
              "The creative is of video type Adobe Flash FLV. For pretargeting.",
              "The creative is tagged.",
              "The creative is cookie targeted.",
              "The creative is user interest targeted.",
              "The creative does not expand.",
              "The creative expands up.",
              "The creative expands down.",
              "The creative expands left.",
              "The creative expands right.",
              "The creative expands up and left.",
              "The creative expands up and right.",
              "The creative expands down and left.",
              "The creative expands down and right.",
              "The creative type is HTML.",
              "The creative type is VAST video.",
              "The creative expands up or down.",
              "The creative expands left or right.",
              "The creative expands on any diagonal.",
              "The creative expands when rolled over.",
              "The instream vast video type is vpaid flash.",
              "The creative is MRAID.",
              "The creative is Flash.",
              "The creative is HTML5.",
              "The creative has an instream VAST video type of skippable instream video. For pretargeting.",
              "The creative is SSL.",
              "The creative is non-SSL.",
              "The creative is an interstitial.",
              "The creative has an instream VAST video type of non-skippable instream video. For pretargeting.",
              "The creative is eligible for native.",
              "The creative has an instream VAST video type of non-VPAID. For pretargeting.",
              "The creative is not eligible for native.",
              "The creative has an interstitial size of any interstitial. For pretargeting.",
              "The creative has an interstitial size of non interstitial. For pretargeting.",
              "The video type is in-banner video.",
              "The creative can dynamically resize to fill a variety of slot sizes.",
              "The open measurement SDK is supported."
            ]
          },
          "description": "Publisher-excludable attributes that were detected for this creative. Can be used to filter the response of the creatives.list method. If the `excluded_attribute` field of a [bid request](https://developers.google.com/authorized-buyers/rtb/downloads/realtime-bidding-proto) contains one of the attributes that were declared or detected for a given creative, and a bid is submitted with that creative, the bid will be filtered before the auction.",
          "type": "array"
        },
        "detectedDomains": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The detected domains for this creative."
        },
        "russiaServingStatus": {
          "$ref": "ServingStatus",
          "description": "The serving status of this creative in Russia. When approved or disapproved, this status applies to both deals and open auction in Russia. When pending review, this creative is allowed to serve for deals but not for open auction."
        },
        "detectedProductCategories": {
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array",
          "description": "Detected product categories, if any. See the ad-product-categories.txt file in the technical documentation for a list of IDs. Can be used to filter the response of the creatives.list method."
        },
        "detectedSensitiveCategories": {
          "description": "Detected sensitive categories, if any. Can be used to filter the response of the creatives.list method. See the ad-sensitive-categories.txt file in the technical documentation for a list of IDs. You should use these IDs along with the excluded-sensitive-category field in the bid request to filter your bids.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "detectedLanguages": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The detected languages for this creative. The order is arbitrary. The codes are 2 or 5 characters and are documented at https://developers.google.com/adwords/api/docs/appendix/languagecodes. Can be used to filter the response of the creatives.list method."
        },
        "chinaServingStatus": {
          "description": "The serving status of this creative in China. When approved or disapproved, this status applies to both deals and open auction in China. When pending review, this creative is allowed to serve for deals but not for open auction.",
          "$ref": "ServingStatus"
        },
        "detectedAdvertisers": {
          "items": {
            "$ref": "AdvertiserAndBrand"
          },
          "description": "Detected advertisers and brands.",
          "type": "array"
        },
        "lastStatusUpdate": {
          "format": "google-datetime",
          "type": "string",
          "description": "The last time the creative status was updated. Can be used to filter the response of the creatives.list method."
        }
      }
    },
    "PolicyTopicEntry": {
      "type": "object",
      "properties": {
        "policyTopic": {
          "type": "string",
          "description": "Policy topic this entry refers to. For example, \"ALCOHOL\", \"TRADEMARKS_IN_AD_TEXT\", or \"DESTINATION_NOT_WORKING\". The set of possible policy topics is not fixed for a particular API version and may change at any time. Can be used to filter the response of the creatives.list method"
        },
        "helpCenterUrl": {
          "description": "URL of the help center article describing this policy topic.",
          "type": "string"
        },
        "evidences": {
          "type": "array",
          "items": {
            "$ref": "PolicyTopicEvidence"
          },
          "description": "Pieces of evidence associated with this policy topic entry."
        }
      },
      "id": "PolicyTopicEntry",
      "description": "Each policy topic entry will represent a violation of a policy topic for a creative, with the policy topic information and optional evidence for the policy violation."
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/realtime-bidding": {
          "description": "See, create, edit, and delete your Authorized Buyers and Open Bidding account entities"
        }
      }
    }
  },
  "name": "realtimebidding",
  "discoveryVersion": "v1",
  "protocol": "rest",
  "resources": {
    "buyers": {
      "resources": {
        "userLists": {
          "methods": {
            "update": {
              "httpMethod": "PUT",
              "request": {
                "$ref": "UserList"
              },
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}",
              "id": "realtimebidding.buyers.userLists.update",
              "description": "Update the given user list. Only user lists with URLRestrictions can be updated.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "UserList"
              },
              "parameters": {
                "name": {
                  "description": "Output only. Name of the user list that must follow the pattern `buyers/{buyer}/userLists/{user_list}`, where `{buyer}` represents the account ID of the buyer who owns the user list. For a bidder accessing user lists on behalf of a child seat buyer, `{buyer}` represents the account ID of the child seat buyer. `{user_list}` is an int64 identifier assigned by Google to uniquely identify a user list.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$"
                }
              }
            },
            "close": {
              "response": {
                "$ref": "UserList"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "path": "v1/{+name}:close",
              "parameterOrder": [
                "name"
              ],
              "description": "Change the status of a user list to CLOSED. This prevents new users from being added to the user list.",
              "id": "realtimebidding.buyers.userLists.close",
              "parameters": {
                "name": {
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the user list to close. See UserList.name"
                }
              },
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:close",
              "httpMethod": "POST",
              "request": {
                "$ref": "CloseUserListRequest"
              }
            },
            "getRemarketingTag": {
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:getRemarketingTag",
              "description": "Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list.",
              "path": "v1/{+name}:getRemarketingTag",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "location": "path",
                  "description": "Required. To fetch remarketing tag for an account, name must follow the pattern `buyers/{accountId}` where `{accountId}` represents ID of a buyer that owns the remarketing tag. For a bidder accessing remarketing tag on behalf of a child seat buyer, `{accountId}` should represent the ID of the child seat buyer. To fetch remarketing tag for a specific user list, name must follow the pattern `buyers/{accountId}/userLists/{userListId}`. See UserList.name.",
                  "type": "string",
                  "required": true
                }
              },
              "id": "realtimebidding.buyers.userLists.getRemarketingTag",
              "response": {
                "$ref": "GetRemarketingTagResponse"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the user list to be retrieved. See UserList.name.",
                  "location": "path",
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "description": "Gets a user list by its name.",
              "path": "v1/{+name}",
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}",
              "id": "realtimebidding.buyers.userLists.get",
              "response": {
                "$ref": "UserList"
              }
            },
            "open": {
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "response": {
                "$ref": "UserList"
              },
              "parameters": {
                "name": {
                  "pattern": "^buyers/[^/]+/userLists/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the user list to open. See UserList.name"
                }
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "OpenUserListRequest"
              },
              "description": "Change the status of a user list to OPEN. This allows new users to be added to the user list.",
              "parameterOrder": [
                "name"
              ],
              "id": "realtimebidding.buyers.userLists.open",
              "path": "v1/{+name}:open",
              "flatPath": "v1/buyers/{buyersId}/userLists/{userListsId}:open"
            },
            "create": {
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the parent buyer of the user list to be retrieved that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns user lists. For a bidder accessing user lists on behalf of a child seat buyer , `{buyerAccountId}` should represent the account ID of the child seat buyer.",
                  "required": true,
                  "pattern": "^buyers/[^/]+$"
                }
              },
              "description": "Create a new user list.",
              "response": {
                "$ref": "UserList"
              },
              "path": "v1/{+parent}/userLists",
              "flatPath": "v1/buyers/{buyersId}/userLists",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "request": {
                "$ref": "UserList"
              },
              "id": "realtimebidding.buyers.userLists.create",
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "response": {
                "$ref": "ListUserListsResponse"
              },
              "id": "realtimebidding.buyers.userLists.list",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "Continuation page token (as received from a previous response).",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The number of results to return per page.",
                  "type": "integer",
                  "format": "int32"
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the parent buyer for the user lists to be returned that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns user lists. For a bidder accessing user lists on behalf of a child seat buyer , `{buyerAccountId}` should represent the account ID of the child seat buyer.",
                  "pattern": "^buyers/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "description": "Lists the user lists visible to the current user.",
              "path": "v1/{+parent}/userLists",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "flatPath": "v1/buyers/{buyersId}/userLists"
            }
          }
        },
        "creatives": {
          "methods": {
            "patch": {
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Name of the creative. Follows the pattern `buyers/{buyer}/creatives/{creative}`, where `{buyer}` represents the account ID of the buyer who owns the creative, and `{creative}` is the buyer-specific creative ID that references this creative in the bid response.",
                  "type": "string",
                  "pattern": "^buyers/[^/]+/creatives/[^/]+$",
                  "required": true
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "Field mask to use for partial in-place updates."
                }
              },
              "description": "Updates a creative.",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "path": "v1/{+name}",
              "id": "realtimebidding.buyers.creatives.patch",
              "request": {
                "$ref": "Creative"
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Creative"
              },
              "flatPath": "v1/buyers/{buyersId}/creatives/{creativesId}"
            },
            "create": {
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^buyers/[^/]+$",
                  "description": "Required. The name of the parent buyer that the new creative belongs to that must follow the pattern `buyers/{buyerAccountId}`, where `{buyerAccountId}` represents the account ID of the buyer who owns a creative. For a bidder accessing creatives on behalf of a child seat buyer, `{buyerAccountId}` should represent the account ID of the child seat buyer.",
                  "location": "path"
                }
              },
              "description": "Creates a creative.",
              "request": {
                "$ref": "Creative"
              },
              "id": "realtimebidding.buyers.creatives.create",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/buyers/{buyersId}/creatives",
              "path": "v1/{+parent}/creatives",
              "response": {
                "$ref": "Creative"
              },
              "httpMethod": "POST"
            },
            "list": {
              "description": "Lists creatives.",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "description": "Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED'",
                  "type": "string"
                },
                "pageToken": {
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available via another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive.",
                  "location": "query"
                },
                "view": {
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ],
                  "type": "string",
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".",
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "location": "query"
                },
                "parent": {
                  "description": "Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either `buyers/{buyerAccountId}` or `bidders/{bidderAccountId}`. For `buyers/{buyerAccountId}`, the `buyerAccountId` can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer (`456`) under bidder account (`123`), you would use the pattern: `buyers/456`. 3. The ID of the bidder itself. So for listing creatives pertaining to bidder (`123`), you would use `buyers/123`. If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use `bidders/{bidderAccountId}`, e.g., for all creatives pertaining to bidder (`123`), use `bidders/123`.",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^buyers/[^/]+$"
                }
              },
              "id": "realtimebidding.buyers.creatives.list",
              "httpMethod": "GET",
              "flatPath": "v1/buyers/{buyersId}/creatives",
              "path": "v1/{+parent}/creatives"
            },
            "get": {
              "id": "realtimebidding.buyers.creatives.get",
              "response": {
                "$ref": "Creative"
              },
              "description": "Gets a creative.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. Name of the creative to retrieve. See creative.name.",
                  "pattern": "^buyers/[^/]+/creatives/[^/]+$",
                  "required": true,
                  "location": "path"
                },
                "view": {
                  "type": "string",
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\".",
                  "location": "query",
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ]
                }
              },
              "path": "v1/{+name}",
              "flatPath": "v1/buyers/{buyersId}/creatives/{creativesId}"
            }
          }
        }
      },
      "methods": {
        "getRemarketingTag": {
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}:getRemarketingTag",
          "response": {
            "$ref": "GetRemarketingTagResponse"
          },
          "httpMethod": "GET",
          "id": "realtimebidding.buyers.getRemarketingTag",
          "flatPath": "v1/buyers/{buyersId}:getRemarketingTag",
          "scopes": [
            "https://www.googleapis.com/auth/realtime-bidding"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "type": "string",
              "pattern": "^buyers/[^/]+$",
              "required": true,
              "description": "Required. To fetch remarketing tag for an account, name must follow the pattern `buyers/{accountId}` where `{accountId}` represents ID of a buyer that owns the remarketing tag. For a bidder accessing remarketing tag on behalf of a child seat buyer, `{accountId}` should represent the ID of the child seat buyer. To fetch remarketing tag for a specific user list, name must follow the pattern `buyers/{accountId}/userLists/{userListId}`. See UserList.name."
            }
          },
          "description": "Gets remarketing tag for a buyer. A remarketing tag is a piece of JavaScript code that can be placed on a web page. When a user visits a page containing a remarketing tag, Google adds the user to a user list."
        }
      }
    },
    "bidders": {
      "resources": {
        "creatives": {
          "methods": {
            "watch": {
              "flatPath": "v1/bidders/{biddersId}/creatives:watch",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. To watch all creatives pertaining to the bidder and all its child seat accounts, the bidder must follow the pattern `bidders/{bidderAccountId}`.",
                  "required": true,
                  "pattern": "^bidders/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "id": "realtimebidding.bidders.creatives.watch",
              "description": "Watches all creatives pertaining to a bidder. It is sufficient to invoke this endpoint once per bidder. A Pub/Sub topic will be created and notifications will be pushed to the topic when any of the bidder's creatives change status. All of the bidder's service accounts will have access to read from the topic. Subsequent invocations of this method will return the existing Pub/Sub configuration.",
              "path": "v1/{+parent}/creatives:watch",
              "response": {
                "$ref": "WatchCreativesResponse"
              },
              "request": {
                "$ref": "WatchCreativesRequest"
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "id": "realtimebidding.bidders.creatives.list",
              "scopes": [
                "https://www.googleapis.com/auth/realtime-bidding"
              ],
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "A token identifying a page of results the server should return. Typically, this is the value of ListCreativesResponse.nextPageToken returned from the previous call to the 'ListCreatives' method.",
                  "location": "query"
                },
                "filter": {
                  "description": "Query string to filter creatives. If no filter is specified, all active creatives will be returned. Example: 'accountId=12345 AND (dealsStatus:DISAPPROVED AND disapprovalReason:UNACCEPTABLE_CONTENT) OR declaredAttributes:IS_COOKIE_TARGETED'",
                  "location": "query",
                  "type": "string"
                },
                "view": {
                  "enum": [
                    "CREATIVE_VIEW_UNSPECIFIED",
                    "SERVING_DECISION_ONLY",
                    "FULL"
                  ],
                  "enumDescriptions": [
                    "Not specified, equivalent to SERVING_DECISION_ONLY.",
                    "Only creativeServingDecision is included in the response.",
                    "The entire creative resource (including the declared fields and the creative content) is included in the response."
                  ],
                  "location": "query",
                  "type": "string",
                  "description": "Controls the amount of information included in the response. By default only creativeServingDecision is included. To retrieve the entire creative resource (including the declared fields and the creative content) specify the view as \"FULL\"."
                },
                "parent": {
                  "pattern": "^bidders/[^/]+$",
                  "description": "Required. Name of the parent buyer that owns the creatives. The pattern for this resource is either `buyers/{buyerAccountId}` or `bidders/{bidderAccountId}`. For `buyers/{buyerAccountId}`, the `buyerAccountId` can be one of the following: 1. The ID of the buyer that is accessing their own creatives. 2. The ID of the child seat buyer under a bidder account. So for listing creatives pertaining to the child seat buyer (`456`) under bidder account (`123`), you would use the pattern: `buyers/456`. 3. The ID of the bidder itself. So for listing creatives pertaining to bidder (`123`), you would use `buyers/123`. If you want to access all creatives pertaining to both the bidder and all of its child seat accounts, you would use `bidders/{bidderAccountId}`, e.g., for all creatives pertaining to bidder (`123`), use `bidders/123`.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "description": "Requested page size. The server may return fewer creatives than requested (due to timeout constraint) even if more are available via another call. If unspecified, server will pick an appropriate default. Acceptable values are 1 to 1000, inclusive.",
                  "format": "int32",
                  "type": "integer"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListCreativesResponse"
              },
              "httpMethod": "GET",
              "path": "v1/{+parent}/creatives",
              "description": "Lists creatives.",
              "flatPath": "v1/bidders/{biddersId}/creatives"
            }
          }
        }
      }
    }
  },
  "rootUrl": "https://realtimebidding.googleapis.com/",
  "title": "Real-time Bidding API",
  "servicePath": "",
  "basePath": "",
  "fullyEncodeReservedExpansion": true,
  "id": "realtimebidding:v1",
  "documentationLink": "https://developers.google.com/authorized-buyers/apis/realtimebidding/reference/rest/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "mtlsRootUrl": "https://realtimebidding.mtls.googleapis.com/",
  "batchPath": "batch",
  "kind": "discovery#restDescription",
  "description": "Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status."
}
