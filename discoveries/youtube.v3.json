{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/youtube.force-ssl": {
          "description": "See, edit, and permanently delete your YouTube videos, ratings, comments and captions"
        },
        "https://www.googleapis.com/auth/youtubepartner-channel-audit": {
          "description": "View private information of your YouTube channel relevant during the audit process with a YouTube partner"
        },
        "https://www.googleapis.com/auth/youtube.readonly": {
          "description": "View your YouTube account"
        },
        "https://www.googleapis.com/auth/youtube": {
          "description": "Manage your YouTube account"
        },
        "https://www.googleapis.com/auth/youtube.upload": {
          "description": "Manage your YouTube videos"
        },
        "https://www.googleapis.com/auth/youtube.channel-memberships.creator": {
          "description": "See a list of your current active channel members, their current level, and when they became a member"
        },
        "https://www.googleapis.com/auth/youtubepartner": {
          "description": "View and manage your assets and associated content on YouTube"
        }
      }
    }
  },
  "basePath": "",
  "title": "YouTube Data API v3",
  "parameters": {
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    }
  },
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "version": "v3",
  "resources": {
    "playlists": {
      "methods": {
        "list": {
          "id": "youtube.playlists.list",
          "parameterOrder": [
            "part"
          ],
          "description": "Retrieves a list of resources, possibly filtered.",
          "response": {
            "$ref": "PlaylistListResponse"
          },
          "flatPath": "youtube/v3/playlists",
          "httpMethod": "GET",
          "path": "youtube/v3/playlists",
          "parameters": {
            "maxResults": {
              "default": "5",
              "location": "query",
              "format": "uint32",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved."
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            },
            "mine": {
              "type": "boolean",
              "location": "query",
              "description": "Return the playlists owned by the authenticated user."
            },
            "part": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003eplaylist\u003c/code\u003e resource\nproperties that the API response will include.\u003cbr\u003e\u003cbr\u003eIf the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in a \u003ccode\u003eplaylist\u003c/code\u003e\nresource, the \u003ccode\u003esnippet\u003c/code\u003e property contains properties like\n\u003ccode\u003eauthor\u003c/code\u003e, \u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e,\n\u003ccode\u003etags\u003c/code\u003e, and \u003ccode\u003etimeCreated\u003c/code\u003e. As such, if you set\n\u003ccode\u003e\u003cstrong\u003epart=snippet\u003c/strong\u003e\u003c/code\u003e, the API response will contain\nall of those properties."
            },
            "id": {
              "repeated": true,
              "location": "query",
              "description": "Return the playlists with the given IDs for Stubby or Apiary.",
              "type": "string"
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "location": "query",
              "type": "string"
            },
            "hl": {
              "description": "Returen content in specified language",
              "type": "string",
              "location": "query"
            },
            "channelId": {
              "location": "query",
              "description": "Return the playlists owned by the specified channel ID.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ]
        },
        "update": {
          "parameters": {
            "onBehalfOfContentOwner": {
              "location": "query",
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "part": {
              "required": true,
              "repeated": true,
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr/\u003e\u003cbr/\u003eNote that this method will override the existing values\nfor mutable properties that are contained in any parts that the request\nbody specifies. For example, a\nplaylist's description is contained in the \u003ccode\u003esnippet\u003c/code\u003e part, which\nmust be included in the request body. If the request does not specify a\nvalue for the \u003ccode\u003esnippet.description\u003c/code\u003e property, the playlist's\nexisting description will be deleted.",
              "type": "string"
            }
          },
          "path": "youtube/v3/playlists",
          "httpMethod": "PUT",
          "parameterOrder": [
            "part"
          ],
          "id": "youtube.playlists.update",
          "request": {
            "$ref": "Playlist"
          },
          "description": "Updates an existing resource.",
          "response": {
            "$ref": "Playlist"
          },
          "flatPath": "youtube/v3/playlists",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ]
        },
        "delete": {
          "parameterOrder": [
            "id"
          ],
          "parameters": {
            "onBehalfOfContentOwner": {
              "location": "query",
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "id": {
              "required": true,
              "location": "query",
              "type": "string"
            }
          },
          "id": "youtube.playlists.delete",
          "description": "Deletes a resource.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "path": "youtube/v3/playlists",
          "httpMethod": "DELETE",
          "flatPath": "youtube/v3/playlists"
        },
        "insert": {
          "path": "youtube/v3/playlists",
          "httpMethod": "POST",
          "parameterOrder": [
            "part"
          ],
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "type": "string",
              "location": "query"
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "type": "string",
              "location": "query"
            },
            "part": {
              "repeated": true,
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will include.",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "Playlist"
          },
          "description": "Inserts a new resource into this collection.",
          "id": "youtube.playlists.insert",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "flatPath": "youtube/v3/playlists",
          "request": {
            "$ref": "Playlist"
          }
        }
      }
    },
    "playlistItems": {
      "methods": {
        "update": {
          "request": {
            "$ref": "PlaylistItem"
          },
          "flatPath": "youtube/v3/playlistItems",
          "path": "youtube/v3/playlistItems",
          "parameterOrder": [
            "part"
          ],
          "id": "youtube.playlistItems.update",
          "parameters": {
            "part": {
              "required": true,
              "repeated": true,
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr/\u003e\u003cbr/\u003eNote that this method will override the existing values\nfor all of the mutable properties that are contained in any parts that the\nparameter value specifies. For example, a playlist item can specify a start\ntime and end time, which identify the times portion of the video that\nshould play when users watch the video in the playlist. If your request is\nupdating a playlist item that sets these values, and the\nrequest's \u003ccode\u003epart\u003c/code\u003e parameter value includes the\n\u003ccode\u003econtentDetails\u003c/code\u003e part, the playlist item's start and end times\nwill be updated to whatever value the request body specifies. If the\nrequest body does not specify values, the existing start and end times will\nbe removed and replaced with the default settings.",
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "description": "Updates an existing resource.",
          "httpMethod": "PUT",
          "response": {
            "$ref": "PlaylistItem"
          }
        },
        "insert": {
          "path": "youtube/v3/playlistItems",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "response": {
            "$ref": "PlaylistItem"
          },
          "parameterOrder": [
            "part"
          ],
          "parameters": {
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "part": {
              "type": "string",
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will include.",
              "repeated": true,
              "location": "query"
            }
          },
          "httpMethod": "POST",
          "id": "youtube.playlistItems.insert",
          "flatPath": "youtube/v3/playlistItems",
          "request": {
            "$ref": "PlaylistItem"
          },
          "description": "Inserts a new resource into this collection."
        },
        "list": {
          "parameterOrder": [
            "part"
          ],
          "parameters": {
            "videoId": {
              "location": "query",
              "type": "string",
              "description": "Return the playlist items associated with the given video ID."
            },
            "id": {
              "repeated": true,
              "type": "string",
              "location": "query"
            },
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003eplaylistItem\u003c/code\u003e resource\nproperties that the API response will include.\u003cbr\u003e\u003cbr\u003eIf the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in a\n\u003ccode\u003eplaylistItem\u003c/code\u003e resource, the \u003ccode\u003esnippet\u003c/code\u003e property\ncontains numerous fields, including the \u003ccode\u003etitle\u003c/code\u003e,\n\u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003eposition\u003c/code\u003e, and\n\u003ccode\u003eresourceId\u003c/code\u003e properties. As such, if you set\n\u003ccode\u003e\u003cstrong\u003epart=snippet\u003c/strong\u003e\u003c/code\u003e, the API response will contain\nall of those properties.",
              "required": true,
              "type": "string",
              "location": "query",
              "repeated": true
            },
            "onBehalfOfContentOwner": {
              "location": "query",
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "maxResults": {
              "type": "integer",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5",
              "location": "query",
              "format": "uint32"
            },
            "pageToken": {
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "location": "query"
            },
            "playlistId": {
              "location": "query",
              "description": "Return the playlist items within the given playlist.",
              "type": "string"
            }
          },
          "path": "youtube/v3/playlistItems",
          "id": "youtube.playlistItems.list",
          "description": "Retrieves a list of resources, possibly filtered.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "httpMethod": "GET",
          "flatPath": "youtube/v3/playlistItems",
          "response": {
            "$ref": "PlaylistItemListResponse"
          }
        },
        "delete": {
          "parameters": {
            "id": {
              "type": "string",
              "location": "query",
              "required": true
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            }
          },
          "description": "Deletes a resource.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "flatPath": "youtube/v3/playlistItems",
          "path": "youtube/v3/playlistItems",
          "id": "youtube.playlistItems.delete",
          "parameterOrder": [
            "id"
          ],
          "httpMethod": "DELETE"
        }
      }
    },
    "videoAbuseReportReasons": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "description": "Retrieves a list of resources, possibly filtered.",
          "path": "youtube/v3/videoAbuseReportReasons",
          "httpMethod": "GET",
          "parameterOrder": [
            "part"
          ],
          "id": "youtube.videoAbuseReportReasons.list",
          "parameters": {
            "hl": {
              "location": "query",
              "default": "en_US",
              "type": "string"
            },
            "part": {
              "required": true,
              "type": "string",
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003evideoCategory\u003c/code\u003e resource parts that the API response will\ninclude. Supported values are \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003esnippet\u003c/code\u003e.",
              "repeated": true
            }
          },
          "response": {
            "$ref": "VideoAbuseReportReasonListResponse"
          },
          "flatPath": "youtube/v3/videoAbuseReportReasons"
        }
      }
    },
    "guideCategories": {
      "methods": {
        "list": {
          "response": {
            "$ref": "GuideCategoryListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "id": "youtube.guideCategories.list",
          "path": "youtube/v3/guideCategories",
          "httpMethod": "GET",
          "flatPath": "youtube/v3/guideCategories",
          "parameters": {
            "part": {
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003eguideCategory\u003c/code\u003e resource properties that the API response will\ninclude. Set the parameter value to \u003ccode\u003esnippet\u003c/code\u003e.",
              "repeated": true,
              "type": "string",
              "required": true
            },
            "hl": {
              "location": "query",
              "default": "en-US",
              "type": "string"
            },
            "regionCode": {
              "description": "Return all categories in the given region code.",
              "location": "query",
              "type": "string"
            },
            "id": {
              "type": "string",
              "description": "Return the guide categories with the given IDs.",
              "location": "query",
              "repeated": true
            }
          },
          "parameterOrder": [
            "part"
          ],
          "description": "Retrieves a list of guide categories."
        }
      }
    },
    "videoCategories": {
      "methods": {
        "list": {
          "parameterOrder": [
            "part"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameters": {
            "hl": {
              "location": "query",
              "default": "en_US",
              "type": "string"
            },
            "regionCode": {
              "location": "query",
              "type": "string"
            },
            "id": {
              "type": "string",
              "location": "query",
              "repeated": true,
              "description": "Returns the video categories with the given IDs for Stubby or Apiary."
            },
            "part": {
              "type": "string",
              "required": true,
              "location": "query",
              "repeated": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003evideoCategory\u003c/code\u003e resource properties that the API response will\ninclude. Set the parameter value to \u003ccode\u003esnippet\u003c/code\u003e."
            }
          },
          "id": "youtube.videoCategories.list",
          "response": {
            "$ref": "VideoCategoryListResponse"
          },
          "path": "youtube/v3/videoCategories",
          "description": "Retrieves a list of resources, possibly filtered.",
          "httpMethod": "GET",
          "flatPath": "youtube/v3/videoCategories"
        }
      }
    },
    "i18nRegions": {
      "methods": {
        "list": {
          "path": "youtube/v3/i18nRegions",
          "parameterOrder": [
            "part"
          ],
          "response": {
            "$ref": "I18nRegionListResponse"
          },
          "flatPath": "youtube/v3/i18nRegions",
          "id": "youtube.i18nRegions.list",
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "hl": {
              "type": "string",
              "default": "en_US",
              "location": "query"
            },
            "part": {
              "type": "string",
              "repeated": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003ei18nRegion\u003c/code\u003e resource properties that the API response will\ninclude. Set the parameter value to \u003ccode\u003esnippet\u003c/code\u003e.",
              "required": true,
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ]
        }
      }
    },
    "videos": {
      "methods": {
        "insert": {
          "response": {
            "$ref": "Video"
          },
          "supportsMediaUpload": true,
          "request": {
            "$ref": "Video"
          },
          "httpMethod": "POST",
          "id": "youtube.videos.insert",
          "description": "Inserts a new resource into this collection.",
          "parameters": {
            "stabilize": {
              "type": "boolean",
              "location": "query",
              "description": "Should stabilize be applied to the upload."
            },
            "notifySubscribers": {
              "default": "true",
              "description": "Notify the channel subscribers about the new video. As default, the\nnotification is enabled.",
              "location": "query",
              "type": "boolean"
            },
            "autoLevels": {
              "type": "boolean",
              "description": "Should auto-levels be applied to the upload.",
              "location": "query"
            },
            "onBehalfOfContentOwnerChannel": {
              "location": "query",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query",
              "type": "string"
            },
            "part": {
              "type": "string",
              "location": "query",
              "repeated": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr/\u003e\u003cbr/\u003eNote that not all parts contain properties that can be\nset when inserting or updating a video. For example, the\n\u003ccode\u003estatistics\u003c/code\u003e object encapsulates statistics that YouTube\ncalculates for a video and does not contain values that you can set or\nmodify. If the parameter value specifies a \u003ccode\u003epart\u003c/code\u003e that does not\ncontain mutable values, that \u003ccode\u003epart\u003c/code\u003e will still be included in\nthe API response.",
              "required": true
            }
          },
          "flatPath": "youtube/v3/videos",
          "mediaUpload": {
            "accept": [
              "video/*",
              "application/octet-stream"
            ],
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/videos"
              }
            },
            "maxSize": "137438953472"
          },
          "path": "youtube/v3/videos",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.upload",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameterOrder": [
            "part"
          ]
        },
        "update": {
          "description": "Updates an existing resource.",
          "parameters": {
            "onBehalfOfContentOwner": {
              "location": "query",
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The actual\nCMS account that the user authenticates with must be linked to the\nspecified YouTube content owner."
            },
            "part": {
              "required": true,
              "repeated": true,
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr/\u003e\u003cbr/\u003eNote that this method will override the existing values\nfor all of the mutable properties that are contained in any parts that the\nparameter value specifies. For example, a\nvideo's privacy setting is contained in the \u003ccode\u003estatus\u003c/code\u003e part. As\nsuch, if your request is updating a private video, and the request's\n\u003ccode\u003epart\u003c/code\u003e parameter value includes the \u003ccode\u003estatus\u003c/code\u003e part,\nthe\nvideo's privacy setting will be updated to whatever value the request body\nspecifies. If the request body does not specify a value, the existing\nprivacy setting will be removed and the video will revert to the default\nprivacy setting.\u003cbr/\u003e\u003cbr/\u003eIn addition, not all parts contain properties\nthat can be set when inserting or updating a video. For example, the\n\u003ccode\u003estatistics\u003c/code\u003e object encapsulates statistics that YouTube\ncalculates for a video and does not contain values that you can set or\nmodify. If the parameter value specifies a \u003ccode\u003epart\u003c/code\u003e that does not\ncontain mutable values, that \u003ccode\u003epart\u003c/code\u003e will still be included in\nthe API response.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "request": {
            "$ref": "Video"
          },
          "id": "youtube.videos.update",
          "response": {
            "$ref": "Video"
          },
          "parameterOrder": [
            "part"
          ],
          "flatPath": "youtube/v3/videos",
          "path": "youtube/v3/videos",
          "httpMethod": "PUT"
        },
        "delete": {
          "parameterOrder": [
            "id"
          ],
          "path": "youtube/v3/videos",
          "id": "youtube.videos.delete",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "location": "query",
              "required": true,
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The actual\nCMS account that the user authenticates with must be linked to the\nspecified YouTube content owner.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "httpMethod": "DELETE",
          "flatPath": "youtube/v3/videos"
        },
        "getRating": {
          "id": "youtube.videos.getRating",
          "path": "youtube/v3/videos/getRating",
          "flatPath": "youtube/v3/videos/getRating",
          "description": "Retrieves the ratings that the authorized user gave to a list of specified\nvideos.",
          "parameters": {
            "id": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "required": true
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            }
          },
          "parameterOrder": [
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "VideoRatingListResponse"
          }
        },
        "reportAbuse": {
          "parameters": {
            "onBehalfOfContentOwner": {
              "location": "query",
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "description": "Report abuse for a video.",
          "request": {
            "$ref": "VideoAbuseReport"
          },
          "id": "youtube.videos.reportAbuse",
          "path": "youtube/v3/videos/reportAbuse",
          "flatPath": "youtube/v3/videos/reportAbuse",
          "httpMethod": "POST",
          "parameterOrder": []
        },
        "list": {
          "response": {
            "$ref": "VideoListResponse"
          },
          "httpMethod": "GET",
          "parameters": {
            "maxResults": {
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result\nset.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is supported for use in\nconjunction with the \u003ccode\u003e\u003ca href=\"#myRating\"\u003emyRating\u003c/a\u003e\u003c/code\u003e and\n\u003ccode\u003e\u003ca href=\"#chart\"\u003echart\u003c/a\u003e\u003c/code\u003e parameters, but it is not supported\nfor use in conjunction with the \u003ccode\u003e\u003ca href=\"#id\"\u003eid\u003c/a\u003e\u003c/code\u003e\nparameter.",
              "default": "5",
              "type": "integer",
              "format": "uint32"
            },
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003evideo\u003c/code\u003e resource properties\nthat the API response will include.\u003cbr\u003e\u003cbr\u003eIf the parameter identifies a\nproperty that contains child properties, the child properties will be\nincluded in the response. For example, in a \u003ccode\u003evideo\u003c/code\u003e resource,\nthe \u003ccode\u003esnippet\u003c/code\u003e property contains the \u003ccode\u003echannelId\u003c/code\u003e,\n\u003ccode\u003etitle\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e, \u003ccode\u003etags\u003c/code\u003e, and\n\u003ccode\u003ecategoryId\u003c/code\u003e properties. As such, if you set\n\u003ccode\u003e\u003cstrong\u003epart=snippet\u003c/strong\u003e\u003c/code\u003e, the API response will contain\nall of those properties.",
              "type": "string",
              "location": "query",
              "repeated": true,
              "required": true
            },
            "chart": {
              "enum": [
                "chartUnspecified",
                "mostPopular"
              ],
              "type": "string",
              "description": "Return the videos that are in the specified chart.",
              "location": "query"
            },
            "locale": {
              "type": "string",
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "myRating": {
              "description": "Return videos liked/disliked by the authenticated user.\nDoes not support RateType.RATED_TYPE_NONE.",
              "location": "query",
              "type": "string",
              "enum": [
                "none",
                "like",
                "dislike"
              ]
            },
            "videoCategoryId": {
              "type": "string",
              "default": "0",
              "location": "query",
              "description": "Use chart that is specific to the specified video category"
            },
            "pageToken": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.\u003cbr\u003e\u003cbr\u003e\u003cstrong\u003eNote:\u003c/strong\u003e\nThis parameter is supported for use in conjunction with the \u003ccode\u003e\u003ca\nhref=\"#myRating\"\u003emyRating\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e\u003ca\nhref=\"#chart\"\u003echart\u003c/a\u003e\u003c/code\u003e parameters, but it is not supported for use\nin conjunction with the \u003ccode\u003e\u003ca href=\"#id\"\u003eid\u003c/a\u003e\u003c/code\u003e parameter.",
              "location": "query",
              "type": "string"
            },
            "regionCode": {
              "type": "string",
              "location": "query",
              "description": "Use a chart that is specific to the specified region"
            },
            "maxHeight": {
              "format": "int32",
              "type": "integer",
              "location": "query"
            },
            "id": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "Return videos with the given ids."
            },
            "maxWidth": {
              "location": "query",
              "format": "int32",
              "type": "integer",
              "description": "Return the player with maximum height specified in"
            },
            "hl": {
              "location": "query",
              "type": "string",
              "description": "Stands for \"host language\". Specifies the localization language of the\nmetadata to be filled into snippet.localized. The field is filled with the\ndefault metadata if there is no localization in the specified language.\nThe parameter value must be a language code included in the list returned\nby the i18nLanguages.list method (e.g. en_US, es_MX)."
            }
          },
          "parameterOrder": [
            "part"
          ],
          "flatPath": "youtube/v3/videos",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "path": "youtube/v3/videos",
          "id": "youtube.videos.list",
          "description": "Retrieves a list of resources, possibly filtered."
        },
        "rate": {
          "parameterOrder": [
            "id",
            "rating"
          ],
          "description": "Adds a like or dislike rating to a video or removes a rating from a video.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameters": {
            "id": {
              "location": "query",
              "required": true,
              "type": "string"
            },
            "rating": {
              "type": "string",
              "enum": [
                "none",
                "like",
                "dislike"
              ],
              "required": true,
              "location": "query"
            }
          },
          "flatPath": "youtube/v3/videos/rate",
          "id": "youtube.videos.rate",
          "httpMethod": "POST",
          "path": "youtube/v3/videos/rate"
        }
      }
    },
    "channelSections": {
      "methods": {
        "update": {
          "response": {
            "$ref": "ChannelSection"
          },
          "id": "youtube.channelSections.update",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "path": "youtube/v3/channelSections",
          "httpMethod": "PUT",
          "flatPath": "youtube/v3/channelSections",
          "parameters": {
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "part": {
              "required": true,
              "type": "string",
              "repeated": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr/\u003e\u003cbr/\u003eThe \u003ccode\u003epart\u003c/code\u003e names that you can include in the\nparameter value are \u003ccode\u003esnippet\u003c/code\u003e and \u003ccode\u003econtentDetails\u003c/code\u003e.",
              "location": "query"
            }
          },
          "request": {
            "$ref": "ChannelSection"
          },
          "description": "Updates an existing resource.",
          "parameterOrder": [
            "part"
          ]
        },
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameters": {
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "location": "query",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "location": "query",
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "part": {
              "location": "query",
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr/\u003e\u003cbr/\u003eThe \u003ccode\u003epart\u003c/code\u003e names that you can include in the\nparameter value are \u003ccode\u003esnippet\u003c/code\u003e and \u003ccode\u003econtentDetails\u003c/code\u003e.",
              "type": "string",
              "repeated": true
            }
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "part"
          ],
          "id": "youtube.channelSections.insert",
          "path": "youtube/v3/channelSections",
          "flatPath": "youtube/v3/channelSections",
          "response": {
            "$ref": "ChannelSection"
          },
          "description": "Inserts a new resource into this collection.",
          "request": {
            "$ref": "ChannelSection"
          }
        },
        "list": {
          "parameters": {
            "id": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "description": "Return the ChannelSections with the given IDs for Stubby or Apiary."
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "type": "string",
              "location": "query"
            },
            "mine": {
              "location": "query",
              "description": "Return the ChannelSections owned by the authenticated user.",
              "type": "boolean"
            },
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003echannelSection\u003c/code\u003e resource\nproperties that the API response will include. The \u003ccode\u003epart\u003c/code\u003e names\nthat you can include in the parameter value are \u003ccode\u003eid\u003c/code\u003e,\n\u003ccode\u003esnippet\u003c/code\u003e, and \u003ccode\u003econtentDetails\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003eIf the\nparameter identifies a property that contains child properties, the child\nproperties will be included in the response. For example, in a\n\u003ccode\u003echannelSection\u003c/code\u003e resource, the \u003ccode\u003esnippet\u003c/code\u003e property\ncontains other properties, such as a display title for the channelSection.\nIf you set \u003ccode\u003e\u003cstrong\u003epart=snippet\u003c/strong\u003e\u003c/code\u003e, the API response\nwill also contain all of those nested properties.",
              "repeated": true,
              "type": "string",
              "required": true,
              "location": "query"
            },
            "hl": {
              "location": "query",
              "type": "string",
              "description": "Return content in specified language"
            },
            "channelId": {
              "location": "query",
              "description": "Return the ChannelSections owned by the specified channel ID.",
              "type": "string"
            }
          },
          "flatPath": "youtube/v3/channelSections",
          "httpMethod": "GET",
          "id": "youtube.channelSections.list",
          "response": {
            "$ref": "ChannelSectionListResponse"
          },
          "description": "Retrieves a list of resources, possibly filtered.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "path": "youtube/v3/channelSections",
          "parameterOrder": [
            "part"
          ]
        },
        "delete": {
          "id": "youtube.channelSections.delete",
          "description": "Deletes a resource.",
          "httpMethod": "DELETE",
          "path": "youtube/v3/channelSections",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameterOrder": [
            "id"
          ],
          "parameters": {
            "id": {
              "type": "string",
              "required": true,
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            }
          },
          "flatPath": "youtube/v3/channelSections"
        }
      }
    },
    "liveStreams": {
      "methods": {
        "insert": {
          "parameterOrder": [
            "part"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "description": "Inserts a new stream for the authenticated user.",
          "request": {
            "$ref": "LiveStream"
          },
          "flatPath": "youtube/v3/liveStreams",
          "path": "youtube/v3/liveStreams",
          "httpMethod": "POST",
          "response": {
            "$ref": "LiveStream"
          },
          "parameters": {
            "part": {
              "required": true,
              "type": "string",
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr\u003e\u003cbr\u003eThe \u003ccode\u003epart\u003c/code\u003e properties that you can include in\nthe parameter value are \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esnippet\u003c/code\u003e,\n\u003ccode\u003ecdn\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e.",
              "repeated": true
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "onBehalfOfContentOwnerChannel": {
              "location": "query",
              "type": "string",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel."
            }
          },
          "id": "youtube.liveStreams.insert"
        },
        "list": {
          "parameterOrder": [
            "part"
          ],
          "parameters": {
            "id": {
              "description": "Return LiveStreams with the given ids from Stubby or Apiary.",
              "repeated": true,
              "type": "string",
              "location": "query"
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "type": "string",
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            },
            "mine": {
              "location": "query",
              "type": "boolean"
            },
            "maxResults": {
              "format": "uint32",
              "default": "5",
              "type": "integer",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "location": "query"
            },
            "pageToken": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "type": "string",
              "location": "query"
            },
            "part": {
              "location": "query",
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003eliveStream\u003c/code\u003e resource\nproperties that the API response will include. The \u003ccode\u003epart\u003c/code\u003e names\nthat you can include in the parameter value are \u003ccode\u003eid\u003c/code\u003e,\n\u003ccode\u003esnippet\u003c/code\u003e, \u003ccode\u003ecdn\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e.",
              "repeated": true,
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "httpMethod": "GET",
          "path": "youtube/v3/liveStreams",
          "response": {
            "$ref": "LiveStreamListResponse"
          },
          "id": "youtube.liveStreams.list",
          "flatPath": "youtube/v3/liveStreams",
          "description": "Retrieve the list of streams associated with the given channel. --"
        },
        "update": {
          "httpMethod": "PUT",
          "path": "youtube/v3/liveStreams",
          "id": "youtube.liveStreams.update",
          "description": "Updates an existing stream for the authenticated user.",
          "flatPath": "youtube/v3/liveStreams",
          "parameters": {
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "location": "query",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            },
            "part": {
              "repeated": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr\u003e\u003cbr\u003eThe \u003ccode\u003epart\u003c/code\u003e properties that you can include in\nthe parameter value are \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esnippet\u003c/code\u003e,\n\u003ccode\u003ecdn\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003eNote that this method\nwill override the existing values for all of the mutable properties that\nare contained in any parts that the parameter value specifies. If the\nrequest body does not specify a value for a mutable property, the existing\nvalue for that property will be removed.",
              "required": true,
              "type": "string",
              "location": "query"
            }
          },
          "request": {
            "$ref": "LiveStream"
          },
          "response": {
            "$ref": "LiveStream"
          },
          "parameterOrder": [
            "part"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ]
        },
        "delete": {
          "parameterOrder": [
            "id"
          ],
          "httpMethod": "DELETE",
          "description": "Deletes an existing stream for the authenticated user.",
          "flatPath": "youtube/v3/liveStreams",
          "id": "youtube.liveStreams.delete",
          "parameters": {
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "location": "query",
              "type": "string"
            },
            "id": {
              "location": "query",
              "required": true,
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query",
              "type": "string"
            }
          },
          "path": "youtube/v3/liveStreams",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ]
        }
      }
    },
    "comments": {
      "methods": {
        "markAsSpam": {
          "description": "Expresses the caller's opinion that one or more comments should be flagged\nas spam.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "parameters": {
            "id": {
              "description": "Flags the comments with the given IDs as spam in the caller's opinion.",
              "location": "query",
              "repeated": true,
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "id"
          ],
          "flatPath": "youtube/v3/comments/markAsSpam",
          "httpMethod": "POST",
          "id": "youtube.comments.markAsSpam",
          "path": "youtube/v3/comments/markAsSpam"
        },
        "update": {
          "parameters": {
            "part": {
              "required": true,
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter identifies the properties\nthat the API response will include. You must at least include the\n\u003ccode\u003esnippet\u003c/code\u003e part in the parameter value since that part contains\nall of the properties that the API request can update."
            }
          },
          "parameterOrder": [
            "part"
          ],
          "description": "Updates an existing resource.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "httpMethod": "PUT",
          "response": {
            "$ref": "Comment"
          },
          "request": {
            "$ref": "Comment"
          },
          "id": "youtube.comments.update",
          "flatPath": "youtube/v3/comments",
          "path": "youtube/v3/comments"
        },
        "setModerationStatus": {
          "flatPath": "youtube/v3/comments/setModerationStatus",
          "parameterOrder": [
            "id",
            "moderationStatus"
          ],
          "httpMethod": "POST",
          "parameters": {
            "banAuthor": {
              "description": "If set to true the author of the comment gets added to the ban list.\nThis means all future comments of the author will autmomatically be\nrejected.\nOnly valid in combination with STATUS_REJECTED.",
              "type": "boolean",
              "location": "query",
              "default": "false"
            },
            "moderationStatus": {
              "description": "Specifies the requested moderation status. Note, comments can be in\nstatuses, which are not available through this call. For example, this\ncall does not allow to mark a comment as 'likely spam'.\nValid values: MODERATION_STATUS_PUBLISHED,\nMODERATION_STATUS_HELD_FOR_REVIEW, MODERATION_STATUS_REJECTED.",
              "enum": [
                "published",
                "heldForReview",
                "likelySpam",
                "rejected"
              ],
              "type": "string",
              "required": true,
              "location": "query"
            },
            "id": {
              "required": true,
              "description": "Modifies the moderation status of the comments with the given IDs",
              "repeated": true,
              "type": "string",
              "location": "query"
            }
          },
          "path": "youtube/v3/comments/setModerationStatus",
          "description": "Sets the moderation status of one or more comments.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "id": "youtube.comments.setModerationStatus"
        },
        "list": {
          "description": "Retrieves a list of resources, possibly filtered.",
          "response": {
            "$ref": "CommentListResponse"
          },
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "type": "string",
              "location": "query"
            },
            "parentId": {
              "description": "Returns replies to the specified comment.\nNote, currently YouTube features only one level of replies (ie replies\nto top level comments). However replies to replies may be supported in\nthe future.",
              "type": "string",
              "location": "query"
            },
            "textFormat": {
              "enum": [
                "textFormatUnspecified",
                "html",
                "plainText"
              ],
              "location": "query",
              "description": "The requested text format for the returned comments.",
              "type": "string",
              "default": "html"
            },
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "20"
            },
            "id": {
              "description": "Returns the comments with the given IDs for One Platform.",
              "repeated": true,
              "location": "query",
              "type": "string"
            },
            "part": {
              "required": true,
              "repeated": true,
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003ecomment\u003c/code\u003e resource\nproperties that the API response will include.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "parameterOrder": [
            "part"
          ],
          "flatPath": "youtube/v3/comments",
          "id": "youtube.comments.list",
          "path": "youtube/v3/comments"
        },
        "insert": {
          "description": "Inserts a new resource into this collection.",
          "path": "youtube/v3/comments",
          "httpMethod": "POST",
          "id": "youtube.comments.insert",
          "response": {
            "$ref": "Comment"
          },
          "flatPath": "youtube/v3/comments",
          "parameters": {
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter identifies the properties\nthat the API response will include. Set the parameter value to\n\u003ccode\u003esnippet\u003c/code\u003e. The \u003ccode\u003esnippet\u003c/code\u003e part has a quota cost of 2\nunits.",
              "required": true,
              "type": "string",
              "repeated": true,
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "request": {
            "$ref": "Comment"
          },
          "parameterOrder": [
            "part"
          ]
        },
        "delete": {
          "httpMethod": "DELETE",
          "flatPath": "youtube/v3/comments",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "id": "youtube.comments.delete",
          "description": "Deletes a resource.",
          "parameters": {
            "id": {
              "location": "query",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "id"
          ],
          "path": "youtube/v3/comments"
        }
      }
    },
    "liveChatModerators": {
      "methods": {
        "insert": {
          "parameterOrder": [
            "part"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "id": "youtube.liveChatModerators.insert",
          "parameters": {
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response returns. Set the\nparameter value to \u003ccode\u003esnippet\u003c/code\u003e.",
              "location": "query",
              "required": true,
              "repeated": true,
              "type": "string"
            }
          },
          "response": {
            "$ref": "LiveChatModerator"
          },
          "flatPath": "youtube/v3/liveChat/moderators",
          "request": {
            "$ref": "LiveChatModerator"
          },
          "path": "youtube/v3/liveChat/moderators",
          "httpMethod": "POST",
          "description": "Inserts a new resource into this collection."
        },
        "list": {
          "parameters": {
            "liveChatId": {
              "required": true,
              "location": "query",
              "type": "string",
              "description": "The id of the live chat for which moderators should be returned."
            },
            "pageToken": {
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "location": "query"
            },
            "part": {
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003eliveChatModerator\u003c/code\u003e resource parts that the API response will\ninclude. Supported values are \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003esnippet\u003c/code\u003e.",
              "required": true
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "format": "uint32",
              "default": "5"
            }
          },
          "id": "youtube.liveChatModerators.list",
          "flatPath": "youtube/v3/liveChat/moderators",
          "path": "youtube/v3/liveChat/moderators",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "response": {
            "$ref": "LiveChatModeratorListResponse"
          },
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameterOrder": [
            "liveChatId",
            "part"
          ]
        },
        "delete": {
          "parameters": {
            "id": {
              "location": "query",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "DELETE",
          "path": "youtube/v3/liveChat/moderators",
          "parameterOrder": [
            "id"
          ],
          "id": "youtube.liveChatModerators.delete",
          "description": "Deletes a chat moderator.",
          "flatPath": "youtube/v3/liveChat/moderators",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ]
        }
      }
    },
    "liveChatBans": {
      "methods": {
        "insert": {
          "path": "youtube/v3/liveChat/bans",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "description": "Inserts a new resource into this collection.",
          "flatPath": "youtube/v3/liveChat/bans",
          "parameters": {
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response returns. Set the\nparameter value to \u003ccode\u003esnippet\u003c/code\u003e.",
              "required": true,
              "repeated": true,
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "LiveChatBan"
          },
          "parameterOrder": [
            "part"
          ],
          "httpMethod": "POST",
          "id": "youtube.liveChatBans.insert",
          "request": {
            "$ref": "LiveChatBan"
          }
        },
        "delete": {
          "flatPath": "youtube/v3/liveChat/bans",
          "parameterOrder": [
            "id"
          ],
          "description": "Deletes a chat ban.",
          "path": "youtube/v3/liveChat/bans",
          "parameters": {
            "id": {
              "required": true,
              "location": "query",
              "type": "string"
            }
          },
          "id": "youtube.liveChatBans.delete",
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ]
        }
      }
    },
    "i18nLanguages": {
      "methods": {
        "list": {
          "description": "Retrieves a list of resources, possibly filtered.",
          "response": {
            "$ref": "I18nLanguageListResponse"
          },
          "parameterOrder": [
            "part"
          ],
          "id": "youtube.i18nLanguages.list",
          "flatPath": "youtube/v3/i18nLanguages",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameters": {
            "part": {
              "location": "query",
              "repeated": true,
              "required": true,
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003ei18nLanguage\u003c/code\u003e resource properties that the API response will\ninclude. Set the parameter value to \u003ccode\u003esnippet\u003c/code\u003e."
            },
            "hl": {
              "location": "query",
              "default": "en_US",
              "type": "string"
            }
          },
          "path": "youtube/v3/i18nLanguages",
          "httpMethod": "GET"
        }
      }
    },
    "liveChatMessages": {
      "methods": {
        "delete": {
          "parameterOrder": [
            "id"
          ],
          "id": "youtube.liveChatMessages.delete",
          "flatPath": "youtube/v3/liveChat/messages",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "path": "youtube/v3/liveChat/messages",
          "parameters": {
            "id": {
              "required": true,
              "location": "query",
              "type": "string"
            }
          },
          "description": "Deletes a chat message.",
          "httpMethod": "DELETE"
        },
        "insert": {
          "parameters": {
            "part": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes. It\nidentifies the properties that the write operation will set as well as the\nproperties that the API response will include. Set the parameter value to\n\u003ccode\u003esnippet\u003c/code\u003e."
            }
          },
          "parameterOrder": [
            "part"
          ],
          "description": "Inserts a new resource into this collection.",
          "path": "youtube/v3/liveChat/messages",
          "response": {
            "$ref": "LiveChatMessage"
          },
          "request": {
            "$ref": "LiveChatMessage"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "flatPath": "youtube/v3/liveChat/messages",
          "id": "youtube.liveChatMessages.insert",
          "httpMethod": "POST"
        },
        "list": {
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameterOrder": [
            "liveChatId",
            "part"
          ],
          "id": "youtube.liveChatMessages.list",
          "path": "youtube/v3/liveChat/messages",
          "httpMethod": "GET",
          "flatPath": "youtube/v3/liveChat/messages",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "parameters": {
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003eliveChatComment\u003c/code\u003e resource parts that the API response will\ninclude. Supported values are \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003esnippet\u003c/code\u003e.",
              "repeated": true,
              "type": "string",
              "required": true,
              "location": "query"
            },
            "profileImageSize": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "Specifies the size of the profile image that should be\nreturned for each user."
            },
            "liveChatId": {
              "location": "query",
              "description": "The id of the live chat for which comments should be returned.",
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "location": "query",
              "format": "uint32",
              "default": "500"
            },
            "pageToken": {
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e property identify other pages that could be\nretrieved.",
              "type": "string"
            },
            "hl": {
              "type": "string",
              "location": "query",
              "description": "Specifies the localization language in which the system messages\nshould be returned."
            }
          },
          "response": {
            "$ref": "LiveChatMessageListResponse"
          }
        }
      }
    },
    "captions": {
      "methods": {
        "update": {
          "supportsMediaUpload": true,
          "id": "youtube.captions.update",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "response": {
            "$ref": "Caption"
          },
          "request": {
            "$ref": "Caption"
          },
          "mediaUpload": {
            "protocols": {
              "simple": {
                "path": "/upload/youtube/v3/captions",
                "multipart": true
              }
            },
            "accept": [
              "text/xml",
              "application/octet-stream",
              "*/*"
            ],
            "maxSize": "104857600"
          },
          "parameterOrder": [
            "part"
          ],
          "httpMethod": "PUT",
          "path": "youtube/v3/captions",
          "flatPath": "youtube/v3/captions",
          "description": "Updates an existing resource.",
          "parameters": {
            "onBehalfOf": {
              "location": "query",
              "description": "ID of the Google+ Page for the channel that the request is on behalf of.",
              "type": "string"
            },
            "sync": {
              "description": "Extra parameter to allow automatically syncing the uploaded\ncaption/transcript with the audio.",
              "location": "query",
              "type": "boolean"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "type": "string",
              "location": "query"
            },
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003ecaption\u003c/code\u003e resource parts\nthat the API response will include. The \u003ccode\u003epart\u003c/code\u003e names that you\ncan include in the parameter value are \u003ccode\u003eid\u003c/code\u003e and\n\u003ccode\u003esnippet\u003c/code\u003e.",
              "location": "query",
              "type": "string",
              "required": true,
              "repeated": true
            }
          }
        },
        "download": {
          "httpMethod": "GET",
          "flatPath": "youtube/v3/captions/{id}",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "path": "youtube/v3/captions/{id}",
          "parameterOrder": [
            "id"
          ],
          "supportsMediaDownload": true,
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "location": "query",
              "type": "string"
            },
            "tfmt": {
              "location": "query",
              "type": "string",
              "description": "Convert the captions into this format. Supported options are\nsbv, srt, and vtt."
            },
            "id": {
              "description": "The ID of the caption track to download, required for One Platform.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "tlang": {
              "type": "string",
              "description": "tlang is the language code; machine translate the captions into\nthis language.",
              "location": "query"
            },
            "onBehalfOf": {
              "description": "ID of the Google+ Page for the channel that the request is be on behalf of",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Downloads a caption track.",
          "id": "youtube.captions.download",
          "useMediaDownloadService": true
        },
        "insert": {
          "request": {
            "$ref": "Caption"
          },
          "supportsMediaUpload": true,
          "flatPath": "youtube/v3/captions",
          "response": {
            "$ref": "Caption"
          },
          "description": "Inserts a new resource into this collection.",
          "mediaUpload": {
            "maxSize": "104857600",
            "accept": [
              "text/xml",
              "application/octet-stream",
              "*/*"
            ],
            "protocols": {
              "simple": {
                "path": "/upload/youtube/v3/captions",
                "multipart": true
              }
            }
          },
          "path": "youtube/v3/captions",
          "id": "youtube.captions.insert",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameterOrder": [
            "part"
          ],
          "parameters": {
            "onBehalfOf": {
              "type": "string",
              "description": "ID of the Google+ Page for the channel that the request is be on behalf of",
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner."
            },
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003ecaption\u003c/code\u003e resource parts that the API response will include. Set\nthe parameter value to \u003ccode\u003esnippet\u003c/code\u003e.",
              "type": "string",
              "location": "query",
              "required": true,
              "repeated": true
            },
            "sync": {
              "location": "query",
              "type": "boolean",
              "description": "Extra parameter to allow automatically syncing the uploaded\ncaption/transcript with the audio."
            }
          }
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameterOrder": [
            "id"
          ],
          "path": "youtube/v3/captions",
          "description": "Deletes a resource.",
          "flatPath": "youtube/v3/captions",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameters": {
            "id": {
              "type": "string",
              "required": true,
              "location": "query"
            },
            "onBehalfOf": {
              "description": "ID of the Google+ Page for the channel that the request is be on behalf of",
              "location": "query",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "location": "query"
            }
          },
          "id": "youtube.captions.delete"
        },
        "list": {
          "response": {
            "$ref": "CaptionListResponse"
          },
          "httpMethod": "GET",
          "description": "Retrieves a list of resources, possibly filtered.",
          "flatPath": "youtube/v3/captions",
          "parameterOrder": [
            "videoId",
            "part"
          ],
          "path": "youtube/v3/captions",
          "id": "youtube.captions.list",
          "parameters": {
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "location": "query",
              "type": "string"
            },
            "videoId": {
              "description": "Returns the captions for the specified video.",
              "required": true,
              "type": "string",
              "location": "query"
            },
            "id": {
              "repeated": true,
              "description": "Returns the captions with the given IDs for Stubby or Apiary.",
              "location": "query",
              "type": "string"
            },
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003ecaption\u003c/code\u003e resource parts\nthat the API response will include. The \u003ccode\u003epart\u003c/code\u003e names that you\ncan include in the parameter value are \u003ccode\u003eid\u003c/code\u003e and\n\u003ccode\u003esnippet\u003c/code\u003e.",
              "repeated": true,
              "required": true,
              "location": "query",
              "type": "string"
            },
            "onBehalfOf": {
              "description": "ID of the Google+ Page for the channel that the request is on behalf of.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ]
        }
      }
    },
    "thumbnails": {
      "methods": {
        "set": {
          "flatPath": "youtube/v3/thumbnails/set",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.upload",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameterOrder": [
            "videoId"
          ],
          "response": {
            "$ref": "ThumbnailSetResponse"
          },
          "parameters": {
            "videoId": {
              "required": true,
              "description": "Returns the Thumbnail with the given video IDs for Stubby or Apiary.",
              "location": "query",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The actual\nCMS account that the user authenticates with must be linked to the\nspecified YouTube content owner.",
              "type": "string",
              "location": "query"
            }
          },
          "path": "youtube/v3/thumbnails/set",
          "httpMethod": "POST",
          "mediaUpload": {
            "maxSize": "2097152",
            "accept": [
              "image/jpeg",
              "image/png",
              "application/octet-stream"
            ],
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/thumbnails/set"
              }
            }
          },
          "description": "As this is not an insert in a strict sense (it supports uploading/setting\nof a thumbnail for multiple videos, which doesn't result in creation of a\nsingle resource), I use a custom verb here.",
          "supportsMediaUpload": true,
          "id": "youtube.thumbnails.set"
        }
      }
    },
    "channels": {
      "methods": {
        "list": {
          "parameters": {
            "mine": {
              "description": "Return the ids of channels owned by the authenticated user.",
              "type": "boolean",
              "location": "query"
            },
            "categoryId": {
              "location": "query",
              "description": "Return the channels within the specified guide category ID.",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "type": "string",
              "location": "query"
            },
            "managedByMe": {
              "type": "boolean",
              "location": "query",
              "description": "Return the channels managed by the authenticated user."
            },
            "mySubscribers": {
              "description": "Return the channels subscribed to the authenticated user",
              "type": "boolean",
              "location": "query"
            },
            "forUsername": {
              "description": "Return the channel associated with a YouTube username.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "type": "string"
            },
            "id": {
              "type": "string",
              "description": "Return the channels with the specified IDs.",
              "repeated": true,
              "location": "query"
            },
            "hl": {
              "location": "query",
              "type": "string",
              "description": "Stands for \"host language\". Specifies the localization language of the\nmetadata to be filled into snippet.localized. The field is filled with the\ndefault metadata if there is no localization in the specified language.\nThe parameter value must be a language code included in the list returned\nby the i18nLanguages.list method (e.g. en_US, es_MX)."
            },
            "part": {
              "type": "string",
              "location": "query",
              "required": true,
              "repeated": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003echannel\u003c/code\u003e resource\nproperties that the API response will include.\u003cbr\u003e\u003cbr\u003eIf the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in a \u003ccode\u003echannel\u003c/code\u003e\nresource, the \u003ccode\u003econtentDetails\u003c/code\u003e property contains other\nproperties, such as the \u003ccode\u003euploads\u003c/code\u003e properties. As such, if you\nset \u003ccode\u003e\u003cstrong\u003epart=contentDetails\u003c/strong\u003e\u003c/code\u003e, the API response\nwill also contain all of those nested properties."
            },
            "maxResults": {
              "default": "5",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "format": "uint32",
              "location": "query",
              "type": "integer"
            }
          },
          "flatPath": "youtube/v3/channels",
          "httpMethod": "GET",
          "path": "youtube/v3/channels",
          "description": "Retrieves a list of resources, possibly filtered.",
          "id": "youtube.channels.list",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner",
            "https://www.googleapis.com/auth/youtubepartner-channel-audit"
          ],
          "parameterOrder": [
            "part"
          ],
          "response": {
            "$ref": "ChannelListResponse"
          }
        },
        "update": {
          "request": {
            "$ref": "Channel"
          },
          "parameterOrder": [
            "part"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "flatPath": "youtube/v3/channels",
          "path": "youtube/v3/channels",
          "response": {
            "$ref": "Channel"
          },
          "description": "Updates an existing resource.",
          "httpMethod": "PUT",
          "parameters": {
            "part": {
              "required": true,
              "type": "string",
              "repeated": true,
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr/\u003e\u003cbr/\u003eThe API currently only allows the parameter value to be\nset to either \u003ccode\u003ebrandingSettings\u003c/code\u003e or\n\u003ccode\u003einvideoPromotion\u003c/code\u003e. (You cannot update both of those parts with\na single request.)\u003cbr/\u003e\u003cbr/\u003eNote that this method overrides the existing\nvalues for all of the mutable properties that are contained in any parts\nthat the parameter value specifies."
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter\nindicates that the authenticated user is acting on behalf of the content\nowner specified in the parameter value. This parameter is intended for\nYouTube content partners that own and manage many different YouTube\nchannels. It allows content owners to authenticate once and get access to\nall their video and channel data, without having to provide authentication\ncredentials for each individual channel. The actual CMS account that the\nuser authenticates with needs to be linked to the specified YouTube content\nowner."
            }
          },
          "id": "youtube.channels.update"
        }
      }
    },
    "search": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "path": "youtube/v3/search",
          "parameters": {
            "videoDuration": {
              "description": "Filter on the duration of the videos.",
              "type": "string",
              "enum": [
                "videoDurationUnspecified",
                "any",
                "short",
                "medium",
                "long"
              ],
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "default": "5",
              "format": "uint32",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set."
            },
            "regionCode": {
              "location": "query",
              "description": "Display the content as seen by viewers in this country.",
              "type": "string"
            },
            "relevanceLanguage": {
              "location": "query",
              "description": "Return results relevant to this language.",
              "type": "string"
            },
            "videoCaption": {
              "enum": [
                "videoCaptionUnspecified",
                "any",
                "closedCaption",
                "none"
              ],
              "description": "Filter on the presence of captions on the videos.",
              "type": "string",
              "location": "query"
            },
            "order": {
              "default": "relevance",
              "location": "query",
              "enum": [
                "searchSortUnspecified",
                "date",
                "rating",
                "viewCount",
                "relevance",
                "title",
                "videoCount"
              ],
              "description": "Sort order of the results.",
              "type": "string"
            },
            "forContentOwner": {
              "location": "query",
              "description": "Search owned by a content owner.",
              "type": "boolean"
            },
            "channelType": {
              "location": "query",
              "enum": [
                "channelTypeUnspecified",
                "any",
                "show"
              ],
              "description": "Add a filter on the channel search.",
              "type": "string"
            },
            "videoLicense": {
              "type": "string",
              "description": "Filter on the license of the videos.",
              "location": "query",
              "enum": [
                "any",
                "youtube",
                "creativeCommon"
              ]
            },
            "videoDefinition": {
              "description": "Filter on the definition of the videos.",
              "location": "query",
              "type": "string",
              "enum": [
                "any",
                "standard",
                "high"
              ]
            },
            "publishedAfter": {
              "location": "query",
              "format": "google-datetime",
              "description": "Filter on resources published after this date.",
              "type": "string"
            },
            "location": {
              "location": "query",
              "type": "string",
              "description": "Filter on location of the video"
            },
            "relatedToVideoId": {
              "type": "string",
              "location": "query",
              "description": "Search related to a resource."
            },
            "videoSyndicated": {
              "type": "string",
              "enum": [
                "videoSyndicatedUnspecified",
                "any",
                "true"
              ],
              "location": "query",
              "description": "Filter on syndicated videos."
            },
            "safeSearch": {
              "default": "moderate",
              "enum": [
                "safeSearchSettingUnspecified",
                "none",
                "moderate",
                "strict"
              ],
              "type": "string",
              "description": "Indicates whether the search results should include restricted content as\nwell as standard content.",
              "location": "query"
            },
            "channelId": {
              "type": "string",
              "location": "query",
              "description": "Filter on resources belonging to this channelId."
            },
            "type": {
              "location": "query",
              "type": "string",
              "repeated": true,
              "default": "video,channel,playlist",
              "description": "Restrict results to a particular set of resource types from One Platform."
            },
            "eventType": {
              "type": "string",
              "enum": [
                "none",
                "upcoming",
                "live",
                "completed"
              ],
              "location": "query",
              "description": "Filter on the livestream status of the videos."
            },
            "part": {
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003esearch\u003c/code\u003e resource properties\nthat the API response will include. Set the parameter value to\n\u003ccode\u003esnippet\u003c/code\u003e.",
              "location": "query",
              "type": "string",
              "repeated": true
            },
            "forMine": {
              "description": "Search for the private videos of the authenticated user.",
              "location": "query",
              "type": "boolean"
            },
            "topicId": {
              "type": "string",
              "location": "query",
              "description": "Restrict results to a particular topic."
            },
            "videoType": {
              "description": "Filter on videos of a specific type.",
              "type": "string",
              "location": "query",
              "enum": [
                "videoTypeUnspecified",
                "any",
                "movie",
                "episode"
              ]
            },
            "forDeveloper": {
              "type": "boolean",
              "description": "Restrict the search to only retrieve videos uploaded using the project id\nof the authenticated user.",
              "location": "query"
            },
            "q": {
              "description": "Textual search terms to match.",
              "type": "string",
              "location": "query"
            },
            "locationRadius": {
              "location": "query",
              "type": "string",
              "description": "Filter on distance from the location (specified above)."
            },
            "videoCategoryId": {
              "location": "query",
              "description": "Filter on videos in a specific category.",
              "type": "string"
            },
            "videoDimension": {
              "description": "Filter on 3d videos.",
              "location": "query",
              "type": "string",
              "enum": [
                "any",
                "2d",
                "3d"
              ]
            },
            "pageToken": {
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "type": "string"
            },
            "publishedBefore": {
              "type": "string",
              "format": "google-datetime",
              "description": "Filter on resources published before this date.",
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "type": "string",
              "location": "query"
            },
            "videoEmbeddable": {
              "enum": [
                "videoEmbeddableUnspecified",
                "any",
                "true"
              ],
              "description": "Filter on embeddable videos.",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "youtube/v3/search",
          "description": "Retrieves a list of search resources",
          "response": {
            "$ref": "SearchListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "id": "youtube.search.list",
          "parameterOrder": [
            "part"
          ]
        }
      }
    },
    "superChatEvents": {
      "methods": {
        "list": {
          "parameterOrder": [
            "part"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "httpMethod": "GET",
          "flatPath": "youtube/v3/superChatEvents",
          "response": {
            "$ref": "SuperChatEventListResponse"
          },
          "description": "Retrieves a list of resources, possibly filtered.",
          "parameters": {
            "maxResults": {
              "type": "integer",
              "default": "5",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "location": "query",
              "format": "uint32"
            },
            "hl": {
              "description": "Return rendered funding amounts in specified language.",
              "location": "query",
              "type": "string"
            },
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003esuperChatEvent\u003c/code\u003e resource parts that the API response will\ninclude. Supported values are \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003esnippet\u003c/code\u003e.",
              "location": "query",
              "type": "string",
              "required": true,
              "repeated": true
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved."
            }
          },
          "path": "youtube/v3/superChatEvents",
          "id": "youtube.superChatEvents.list"
        }
      }
    },
    "activities": {
      "methods": {
        "list": {
          "id": "youtube.activities.list",
          "httpMethod": "GET",
          "response": {
            "$ref": "ActivityListResponse"
          },
          "flatPath": "youtube/v3/activities",
          "parameters": {
            "part": {
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003eactivity\u003c/code\u003e resource\nproperties that the API response will include.\u003cbr\u003e\u003cbr\u003eIf the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in an \u003ccode\u003eactivity\u003c/code\u003e\nresource, the \u003ccode\u003esnippet\u003c/code\u003e property contains other properties that\nidentify the type of activity, a display title for the activity, and so\nforth. If you set \u003ccode\u003e\u003cstrong\u003epart=snippet\u003c/strong\u003e\u003c/code\u003e, the API\nresponse will also contain all of those nested properties.",
              "location": "query",
              "type": "string",
              "repeated": true
            },
            "maxResults": {
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "type": "integer",
              "format": "uint32",
              "default": "5"
            },
            "channelId": {
              "type": "string",
              "location": "query"
            },
            "home": {
              "location": "query",
              "type": "boolean"
            },
            "regionCode": {
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "type": "string"
            },
            "publishedBefore": {
              "location": "query",
              "type": "string",
              "format": "google-datetime"
            },
            "publishedAfter": {
              "format": "google-datetime",
              "location": "query",
              "type": "string"
            },
            "mine": {
              "type": "boolean",
              "location": "query"
            }
          },
          "parameterOrder": [
            "part"
          ],
          "path": "youtube/v3/activities",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "description": "Retrieves a list of resources, possibly filtered."
        }
      }
    },
    "subscriptions": {
      "methods": {
        "list": {
          "parameters": {
            "order": {
              "description": "The order of the returned subscriptions",
              "default": "relevance",
              "location": "query",
              "enum": [
                "subscriptionOrderUnspecified",
                "relevance",
                "unread",
                "alphabetical"
              ],
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            },
            "forChannelId": {
              "location": "query",
              "type": "string",
              "description": "Return the subscriptions to the subset of these channels that the\nauthenticated user is subscribed to."
            },
            "myRecentSubscribers": {
              "type": "boolean",
              "location": "query"
            },
            "pageToken": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "type": "string",
              "location": "query"
            },
            "part": {
              "location": "query",
              "repeated": true,
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003esubscription\u003c/code\u003e resource\nproperties that the API response will include.\u003cbr\u003e\u003cbr\u003eIf the parameter\nidentifies a property that contains child properties, the child properties\nwill be included in the response. For example, in a\n\u003ccode\u003esubscription\u003c/code\u003e resource, the \u003ccode\u003esnippet\u003c/code\u003e property\ncontains other properties, such as a display title for the subscription. If\nyou set \u003ccode\u003e\u003cstrong\u003epart=snippet\u003c/strong\u003e\u003c/code\u003e, the API response will\nalso contain all of those nested properties.",
              "required": true
            },
            "channelId": {
              "location": "query",
              "description": "Return the subscriptions of the given channel owner.",
              "type": "string"
            },
            "id": {
              "location": "query",
              "type": "string",
              "repeated": true,
              "description": "Return the subscriptions with the given IDs for Stubby or Apiary."
            },
            "mySubscribers": {
              "description": "Return the subscribers of the given channel owner.",
              "location": "query",
              "type": "boolean"
            },
            "onBehalfOfContentOwnerChannel": {
              "type": "string",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "location": "query"
            },
            "mine": {
              "location": "query",
              "type": "boolean",
              "description": "Flag for returning the subscriptions of the authenticated user."
            },
            "maxResults": {
              "default": "5",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "type": "integer",
              "location": "query",
              "format": "uint32"
            }
          },
          "path": "youtube/v3/subscriptions",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "SubscriptionListResponse"
          },
          "description": "Retrieves a list of resources, possibly filtered.",
          "id": "youtube.subscriptions.list",
          "parameterOrder": [
            "part"
          ],
          "flatPath": "youtube/v3/subscriptions"
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameters": {
            "id": {
              "required": true,
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "id": "youtube.subscriptions.delete",
          "path": "youtube/v3/subscriptions",
          "flatPath": "youtube/v3/subscriptions",
          "description": "Deletes a resource."
        },
        "insert": {
          "httpMethod": "POST",
          "parameters": {
            "part": {
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will include.",
              "type": "string",
              "repeated": true,
              "location": "query"
            }
          },
          "id": "youtube.subscriptions.insert",
          "path": "youtube/v3/subscriptions",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "flatPath": "youtube/v3/subscriptions",
          "description": "Inserts a new resource into this collection.",
          "response": {
            "$ref": "Subscription"
          },
          "request": {
            "$ref": "Subscription"
          },
          "parameterOrder": [
            "part"
          ]
        }
      }
    },
    "liveBroadcasts": {
      "methods": {
        "transition": {
          "description": "Transition a broadcast to a given status.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "response": {
            "$ref": "LiveBroadcast"
          },
          "parameters": {
            "id": {
              "required": true,
              "location": "query",
              "description": "Broadcast to transition.",
              "type": "string"
            },
            "part": {
              "repeated": true,
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003eliveBroadcast\u003c/code\u003e resource\nproperties that the API response will include. The \u003ccode\u003epart\u003c/code\u003e names\nthat you can include in the parameter value are \u003ccode\u003eid\u003c/code\u003e,\n\u003ccode\u003esnippet\u003c/code\u003e, \u003ccode\u003econtentDetails\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e.",
              "required": true,
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query",
              "type": "string"
            },
            "broadcastStatus": {
              "description": "The status to which the broadcast is going to transition.",
              "required": true,
              "type": "string",
              "enum": [
                "statusUnspecified",
                "testing",
                "live",
                "complete"
              ],
              "location": "query"
            },
            "onBehalfOfContentOwnerChannel": {
              "location": "query",
              "type": "string",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel."
            }
          },
          "flatPath": "youtube/v3/liveBroadcasts/transition",
          "id": "youtube.liveBroadcasts.transition",
          "httpMethod": "POST",
          "path": "youtube/v3/liveBroadcasts/transition",
          "parameterOrder": [
            "id",
            "broadcastStatus",
            "part"
          ]
        },
        "bind": {
          "description": "Bind a broadcast to a stream.",
          "path": "youtube/v3/liveBroadcasts/bind",
          "parameterOrder": [
            "id",
            "part"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "parameters": {
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            },
            "onBehalfOfContentOwnerChannel": {
              "location": "query",
              "type": "string",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel."
            },
            "part": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003eliveBroadcast\u003c/code\u003e resource\nproperties that the API response will include. The \u003ccode\u003epart\u003c/code\u003e names\nthat you can include in the parameter value are \u003ccode\u003eid\u003c/code\u003e,\n\u003ccode\u003esnippet\u003c/code\u003e, \u003ccode\u003econtentDetails\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e.",
              "repeated": true,
              "type": "string",
              "required": true,
              "location": "query"
            },
            "id": {
              "type": "string",
              "description": "Broadcast to bind to the stream",
              "location": "query",
              "required": true
            },
            "streamId": {
              "description": "Stream to bind, if not set unbind the current one.",
              "location": "query",
              "type": "string"
            }
          },
          "flatPath": "youtube/v3/liveBroadcasts/bind",
          "id": "youtube.liveBroadcasts.bind",
          "response": {
            "$ref": "LiveBroadcast"
          }
        },
        "update": {
          "description": "Updates an existing broadcast for the authenticated user.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "id": "youtube.liveBroadcasts.update",
          "parameters": {
            "part": {
              "repeated": true,
              "required": true,
              "type": "string",
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr\u003e\u003cbr\u003eThe \u003ccode\u003epart\u003c/code\u003e properties that you can include in\nthe parameter value are \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esnippet\u003c/code\u003e,\n\u003ccode\u003econtentDetails\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003eNote that this\nmethod will override the existing values for all of the mutable properties\nthat are contained in any parts that the parameter value specifies. For\nexample, a\nbroadcast's privacy status is defined in the \u003ccode\u003estatus\u003c/code\u003e part. As\nsuch, if your request is updating a private or unlisted broadcast, and the\nrequest's \u003ccode\u003epart\u003c/code\u003e parameter value includes the\n\u003ccode\u003estatus\u003c/code\u003e part, the broadcast's privacy setting will be updated\nto whatever value the request body specifies. If the request body does not\nspecify a value, the existing privacy setting will be removed and the\nbroadcast will revert to the default privacy setting."
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            },
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "type": "string",
              "location": "query"
            }
          },
          "path": "youtube/v3/liveBroadcasts",
          "request": {
            "$ref": "LiveBroadcast"
          },
          "httpMethod": "PUT",
          "parameterOrder": [
            "part"
          ],
          "flatPath": "youtube/v3/liveBroadcasts",
          "response": {
            "$ref": "LiveBroadcast"
          }
        },
        "list": {
          "flatPath": "youtube/v3/liveBroadcasts",
          "parameters": {
            "broadcastType": {
              "description": "Return only broadcasts with the selected type.",
              "location": "query",
              "default": "event",
              "type": "string",
              "enum": [
                "broadcastTypeFilterUnspecified",
                "all",
                "event",
                "persistent"
              ]
            },
            "id": {
              "description": "Return broadcasts with the given ids from Stubby or Apiary.",
              "repeated": true,
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "default": "5",
              "location": "query",
              "format": "uint32",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "type": "integer"
            },
            "broadcastStatus": {
              "location": "query",
              "type": "string",
              "description": "Return broadcasts with a certain status, e.g. active broadcasts.",
              "enum": [
                "broadcastStatusFilterUnspecified",
                "all",
                "active",
                "upcoming",
                "completed"
              ]
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved."
            },
            "part": {
              "location": "query",
              "required": true,
              "type": "string",
              "repeated": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003eliveBroadcast\u003c/code\u003e resource\nproperties that the API response will include. The \u003ccode\u003epart\u003c/code\u003e names\nthat you can include in the parameter value are \u003ccode\u003eid\u003c/code\u003e,\n\u003ccode\u003esnippet\u003c/code\u003e, \u003ccode\u003econtentDetails\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e."
            },
            "mine": {
              "type": "boolean",
              "location": "query"
            },
            "onBehalfOfContentOwnerChannel": {
              "location": "query",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "location": "query",
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            }
          },
          "description": "Retrieve the list of broadcasts associated with the given channel.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "httpMethod": "GET",
          "id": "youtube.liveBroadcasts.list",
          "response": {
            "$ref": "LiveBroadcastListResponse"
          },
          "path": "youtube/v3/liveBroadcasts",
          "parameterOrder": [
            "part"
          ]
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameters": {
            "onBehalfOfContentOwnerChannel": {
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "type": "string",
              "location": "query"
            },
            "id": {
              "required": true,
              "location": "query",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "flatPath": "youtube/v3/liveBroadcasts",
          "description": "Delete a given broadcast.",
          "parameterOrder": [
            "id"
          ],
          "path": "youtube/v3/liveBroadcasts",
          "id": "youtube.liveBroadcasts.delete"
        },
        "insert": {
          "description": "Inserts a new stream for the authenticated user.",
          "response": {
            "$ref": "LiveBroadcast"
          },
          "parameterOrder": [
            "part"
          ],
          "path": "youtube/v3/liveBroadcasts",
          "id": "youtube.liveBroadcasts.insert",
          "parameters": {
            "onBehalfOfContentOwnerChannel": {
              "type": "string",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query",
              "type": "string"
            },
            "part": {
              "type": "string",
              "location": "query",
              "repeated": true,
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter serves two purposes in\nthis operation. It identifies the properties that the write operation will\nset as well as the properties that the API response will\ninclude.\u003cbr\u003e\u003cbr\u003eThe \u003ccode\u003epart\u003c/code\u003e properties that you can include in\nthe parameter value are \u003ccode\u003eid\u003c/code\u003e, \u003ccode\u003esnippet\u003c/code\u003e,\n\u003ccode\u003econtentDetails\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e."
            }
          },
          "flatPath": "youtube/v3/liveBroadcasts",
          "request": {
            "$ref": "LiveBroadcast"
          },
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "httpMethod": "POST"
        },
        "control": {
          "description": "Slate and recording control of the live broadcast.\nSupport actions: slate on/off, recording start/stop/pause/resume.\nDesign doc: goto/yt-api-liveBroadcast-control",
          "parameterOrder": [
            "id",
            "part"
          ],
          "flatPath": "youtube/v3/liveBroadcasts/control",
          "parameters": {
            "offsetTimeMs": {
              "type": "string",
              "location": "query",
              "format": "uint64",
              "description": "The exact time when the actions (e.g. slate on) are executed.\nIt is an offset from the first frame of the monitor stream.\nIf not set, it means \"now\" or ASAP.\nThis field should not be set if the monitor stream is disabled,\notherwise an error will be returned."
            },
            "id": {
              "required": true,
              "type": "string",
              "location": "query",
              "description": "Broadcast to operate."
            },
            "displaySlate": {
              "location": "query",
              "type": "boolean",
              "description": "Whether display or hide slate."
            },
            "onBehalfOfContentOwnerChannel": {
              "type": "string",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "location": "query"
            },
            "part": {
              "required": true,
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003eliveBroadcast\u003c/code\u003e resource\nproperties that the API response will include. The \u003ccode\u003epart\u003c/code\u003e names\nthat you can include in the parameter value are \u003ccode\u003eid\u003c/code\u003e,\n\u003ccode\u003esnippet\u003c/code\u003e, \u003ccode\u003econtentDetails\u003c/code\u003e, and \u003ccode\u003estatus\u003c/code\u003e.",
              "location": "query",
              "repeated": true,
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner.",
              "location": "query"
            },
            "walltime": {
              "type": "string",
              "description": "The wall clock time at which the action should be executed.\nOnly one of offset_time_ms and walltime may be set at a time.",
              "location": "query",
              "format": "google-datetime"
            }
          },
          "response": {
            "$ref": "LiveBroadcast"
          },
          "id": "youtube.liveBroadcasts.control",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "httpMethod": "POST",
          "path": "youtube/v3/liveBroadcasts/control"
        }
      }
    },
    "watermarks": {
      "methods": {
        "unset": {
          "flatPath": "youtube/v3/watermarks/unset",
          "id": "youtube.watermarks.unset",
          "httpMethod": "POST",
          "parameters": {
            "channelId": {
              "type": "string",
              "required": true,
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "location": "query",
              "type": "string",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            }
          },
          "parameterOrder": [
            "channelId"
          ],
          "path": "youtube/v3/watermarks/unset",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "description": "Allows removal of channel watermark."
        },
        "set": {
          "httpMethod": "POST",
          "supportsMediaUpload": true,
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.upload",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "path": "youtube/v3/watermarks/set",
          "mediaUpload": {
            "accept": [
              "image/jpeg",
              "image/png",
              "application/octet-stream"
            ],
            "maxSize": "10485760",
            "protocols": {
              "simple": {
                "multipart": true,
                "path": "/upload/youtube/v3/watermarks/set"
              }
            }
          },
          "flatPath": "youtube/v3/watermarks/set",
          "id": "youtube.watermarks.set",
          "parameterOrder": [
            "channelId"
          ],
          "description": "Allows upload of watermark image and setting it for a channel.",
          "parameters": {
            "channelId": {
              "required": true,
              "location": "query",
              "type": "string"
            },
            "onBehalfOfContentOwner": {
              "type": "string",
              "location": "query",
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the\nrequest's authorization credentials identify a YouTube CMS user who is\nacting on behalf of the content owner specified in the parameter value.\nThis parameter is intended for YouTube content partners that own and manage\nmany different YouTube channels. It allows content owners to authenticate\nonce and get access to all their video and channel data, without having to\nprovide authentication credentials for each individual channel. The CMS\naccount that the user authenticates with must be linked to the specified\nYouTube content owner."
            }
          },
          "request": {
            "$ref": "InvideoBranding"
          }
        }
      }
    },
    "membershipsLevels": {
      "methods": {
        "list": {
          "description": "Retrieves a list of all pricing levels offered by a creator to the fans.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.channel-memberships.creator",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "id": "youtube.membershipsLevels.list",
          "parameterOrder": [
            "part"
          ],
          "parameters": {
            "part": {
              "repeated": true,
              "required": true,
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003emembershipsLevel\u003c/code\u003e resource parts that the API response will\ninclude. Supported values are \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003esnippet\u003c/code\u003e.",
              "type": "string"
            }
          },
          "path": "youtube/v3/membershipsLevels",
          "response": {
            "$ref": "MembershipsLevelListResponse"
          },
          "flatPath": "youtube/v3/membershipsLevels",
          "httpMethod": "GET"
        }
      }
    },
    "members": {
      "methods": {
        "list": {
          "flatPath": "youtube/v3/members",
          "response": {
            "$ref": "MemberListResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "part"
          ],
          "description": "Retrieves a list of members that match the request criteria for a channel.",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.channel-memberships.creator",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly",
            "https://www.googleapis.com/auth/youtubepartner"
          ],
          "parameters": {
            "hasAccessToLevel": {
              "type": "string",
              "description": "Filter members in the results set to the ones that have access to a level.",
              "location": "query"
            },
            "pageToken": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "type": "string",
              "location": "query"
            },
            "filterByMemberChannelId": {
              "description": "Comma separated list of channel IDs. Only data about members that are part\nof this list will be included in the response.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "default": "5",
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "type": "integer",
              "format": "uint32"
            },
            "mode": {
              "type": "string",
              "default": "all_current",
              "location": "query",
              "enum": [
                "listMembersModeUnknown",
                "updates",
                "all_current"
              ],
              "description": "Parameter that specifies which channel members to return."
            },
            "part": {
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003emember\u003c/code\u003e resource parts that the API response will include. Set\nthe parameter value to \u003ccode\u003esnippet\u003c/code\u003e.",
              "repeated": true,
              "location": "query",
              "required": true
            }
          },
          "id": "youtube.members.list",
          "path": "youtube/v3/members"
        }
      }
    },
    "sponsors": {
      "methods": {
        "list": {
          "httpMethod": "GET",
          "id": "youtube.sponsors.list",
          "parameterOrder": [
            "part"
          ],
          "parameters": {
            "filter": {
              "enum": [
                "sponsorFilterUnknown",
                "newest",
                "all"
              ],
              "description": "Parameter that specifies which channel sponsors to return.",
              "location": "query",
              "default": "newest",
              "type": "string"
            },
            "part": {
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies the\n\u003ccode\u003esponsor\u003c/code\u003e resource parts that the API response will include.\nSupported values are \u003ccode\u003eid\u003c/code\u003e and \u003ccode\u003esnippet\u003c/code\u003e.",
              "repeated": true,
              "required": true,
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "type": "integer",
              "format": "uint32",
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "default": "5"
            },
            "pageToken": {
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved.",
              "location": "query",
              "type": "string"
            }
          },
          "description": "Retrieves a list of sponsors that match the request criteria for a\nchannel.",
          "flatPath": "youtube/v3/sponsors",
          "path": "youtube/v3/sponsors",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.readonly"
          ],
          "response": {
            "$ref": "SponsorListResponse"
          }
        }
      }
    },
    "channelBanners": {
      "methods": {
        "insert": {
          "parameters": {
            "channelId": {
              "type": "string",
              "description": "Unused, channel_id is currently derived from the security context of the\nrequestor.",
              "location": "query"
            },
            "onBehalfOfContentOwner": {
              "description": "\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwner\u003c/strong\u003e\u003c/code\u003e parameter indicates\nthat the request's authorization credentials identify a YouTube CMS user\nwho is acting on behalf of the content owner specified in the parameter\nvalue. This parameter is intended for YouTube content partners that own and\nmanage many different YouTube channels. It allows content owners to\nauthenticate once and get access to all their video and channel data,\nwithout having to provide authentication credentials for each individual\nchannel. The actual CMS account that the user authenticates with must be\nlinked to the specified YouTube content owner.",
              "type": "string",
              "location": "query"
            },
            "onBehalfOfContentOwnerChannel": {
              "type": "string",
              "description": "This parameter can only be used in a properly \u003ca\nhref=\"/youtube/v3/guides/authentication\"\u003eauthorized request\u003c/a\u003e.\n\u003cstrong\u003eNote:\u003c/strong\u003e This parameter is intended exclusively for YouTube\ncontent partners.\u003cbr\u003e\u003cbr\u003eThe\n\u003ccode\u003e\u003cstrong\u003eonBehalfOfContentOwnerChannel\u003c/strong\u003e\u003c/code\u003e parameter\nspecifies the YouTube channel ID of the channel to which a video is being\nadded. This parameter is required when a request specifies a value for the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter, and it can only be used in\nconjunction with that parameter. In addition, the request must be\nauthorized using a CMS account that is linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies. Finally, the\nchannel that the \u003ccode\u003eonBehalfOfContentOwnerChannel\u003c/code\u003e parameter value\nspecifies must be linked to the content owner that the\n\u003ccode\u003eonBehalfOfContentOwner\u003c/code\u003e parameter specifies.\u003cbr\u003e\u003cbr\u003eThis\nparameter is intended for YouTube content partners that own and manage many\ndifferent YouTube channels. It allows content owners to authenticate once\nand perform actions on behalf of the channel specified in the parameter\nvalue, without having to provide authentication credentials for each\nseparate channel.",
              "location": "query"
            }
          },
          "supportsMediaUpload": true,
          "mediaUpload": {
            "maxSize": "6291456",
            "protocols": {
              "simple": {
                "path": "/upload/youtube/v3/channelBanners/insert",
                "multipart": true
              }
            },
            "accept": [
              "image/jpeg",
              "image/png",
              "application/octet-stream"
            ]
          },
          "parameterOrder": [],
          "flatPath": "youtube/v3/channelBanners/insert",
          "id": "youtube.channelBanners.insert",
          "request": {
            "$ref": "ChannelBannerResource"
          },
          "path": "youtube/v3/channelBanners/insert",
          "scopes": [
            "https://www.googleapis.com/auth/youtube",
            "https://www.googleapis.com/auth/youtube.force-ssl",
            "https://www.googleapis.com/auth/youtube.upload"
          ],
          "response": {
            "$ref": "ChannelBannerResource"
          },
          "description": "Inserts a new resource into this collection.",
          "httpMethod": "POST"
        }
      }
    },
    "commentThreads": {
      "methods": {
        "insert": {
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "id": "youtube.commentThreads.insert",
          "flatPath": "youtube/v3/commentThreads",
          "description": "Inserts a new resource into this collection.",
          "response": {
            "$ref": "CommentThread"
          },
          "path": "youtube/v3/commentThreads",
          "request": {
            "$ref": "CommentThread"
          },
          "parameters": {
            "part": {
              "repeated": true,
              "type": "string",
              "required": true,
              "location": "query",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter identifies the properties\nthat the API response will include. Set the parameter value to\n\u003ccode\u003esnippet\u003c/code\u003e. The \u003ccode\u003esnippet\u003c/code\u003e part has a quota cost of 2\nunits."
            }
          },
          "parameterOrder": [
            "part"
          ],
          "httpMethod": "POST"
        },
        "update": {
          "id": "youtube.commentThreads.update",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "httpMethod": "PUT",
          "parameterOrder": [
            "part"
          ],
          "response": {
            "$ref": "CommentThread"
          },
          "flatPath": "youtube/v3/commentThreads",
          "description": "Updates an existing resource.",
          "request": {
            "$ref": "CommentThread"
          },
          "parameters": {
            "part": {
              "location": "query",
              "required": true,
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of \u003ccode\u003ecommentThread\u003c/code\u003e resource properties that\nthe API response will include. You must at least include the\n\u003ccode\u003esnippet\u003c/code\u003e part in the parameter value since that part contains\nall of the properties that the API request can update.",
              "repeated": true
            }
          },
          "path": "youtube/v3/commentThreads"
        },
        "list": {
          "id": "youtube.commentThreads.list",
          "httpMethod": "GET",
          "path": "youtube/v3/commentThreads",
          "scopes": [
            "https://www.googleapis.com/auth/youtube.force-ssl"
          ],
          "parameterOrder": [
            "part"
          ],
          "flatPath": "youtube/v3/commentThreads",
          "response": {
            "$ref": "CommentThreadListResponse"
          },
          "parameters": {
            "textFormat": {
              "enum": [
                "textFormatUnspecified",
                "html",
                "plainText"
              ],
              "type": "string",
              "description": "The requested text format for the returned comments.",
              "default": "html",
              "location": "query"
            },
            "moderationStatus": {
              "default": "published",
              "description": "Limits the returned comment threads to those with the specified\nmoderation status. Not compatible with the 'id' filter.\nValid values: published, heldForReview, likelySpam.",
              "enum": [
                "published",
                "heldForReview",
                "likelySpam",
                "rejected"
              ],
              "type": "string",
              "location": "query"
            },
            "order": {
              "location": "query",
              "default": "time",
              "type": "string",
              "enum": [
                "orderUnspecified",
                "time",
                "relevance"
              ]
            },
            "part": {
              "required": true,
              "location": "query",
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epart\u003c/strong\u003e\u003c/code\u003e parameter specifies a\ncomma-separated list of one or more \u003ccode\u003ecommentThread\u003c/code\u003e resource\nproperties that the API response will include.",
              "repeated": true
            },
            "maxResults": {
              "description": "The \u003ccode\u003e\u003cstrong\u003emaxResults\u003c/strong\u003e\u003c/code\u003e parameter specifies the\nmaximum number of items that should be returned in the result set.",
              "location": "query",
              "default": "20",
              "type": "integer",
              "format": "uint32"
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The \u003ccode\u003e\u003cstrong\u003epageToken\u003c/strong\u003e\u003c/code\u003e parameter identifies a specific\npage in the result set that should be returned. In an API response, the\n\u003ccode\u003enextPageToken\u003c/code\u003e and \u003ccode\u003eprevPageToken\u003c/code\u003e properties\nidentify other pages that could be retrieved."
            },
            "videoId": {
              "location": "query",
              "description": "Returns the comment threads of the specified video.",
              "type": "string"
            },
            "allThreadsRelatedToChannelId": {
              "description": "Returns the comment threads of all videos of the channel and the\nchannel comments as well.",
              "type": "string",
              "location": "query"
            },
            "searchTerms": {
              "location": "query",
              "description": "Limits the returned comment threads to those matching the specified\nkey words. Not compatible with the 'id' filter.",
              "type": "string"
            },
            "id": {
              "repeated": true,
              "location": "query",
              "type": "string",
              "description": "Returns the comment threads with the given IDs for Stubby or Apiary."
            },
            "channelId": {
              "type": "string",
              "description": "Returns the comment threads for all the channel comments (ie does not\ninclude comments left on videos).",
              "location": "query"
            }
          },
          "description": "Retrieves a list of resources, possibly filtered."
        }
      }
    }
  },
  "name": "youtube",
  "protocol": "rest",
  "baseUrl": "https://www.googleapis.com/",
  "rootUrl": "https://www.googleapis.com/",
  "schemas": {
    "ChannelStatistics": {
      "id": "ChannelStatistics",
      "type": "object",
      "properties": {
        "subscriberCount": {
          "format": "uint64",
          "type": "string",
          "description": "The number of subscribers that the channel has."
        },
        "hiddenSubscriberCount": {
          "type": "boolean",
          "description": "Whether or not the number of subscribers is shown for this user."
        },
        "videoCount": {
          "type": "string",
          "format": "uint64",
          "description": "The number of videos uploaded to the channel."
        },
        "viewCount": {
          "format": "uint64",
          "type": "string",
          "description": "The number of times the channel has been viewed."
        },
        "commentCount": {
          "type": "string",
          "format": "uint64",
          "description": "The number of comments for the channel."
        }
      },
      "description": "Statistics about a channel: number of subscribers, number of videos in the\nchannel, etc."
    },
    "I18nLanguage": {
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the i18n language."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#i18nLanguage\"\u003c/code\u003e.",
          "default": "youtube#i18nLanguage",
          "type": "string"
        },
        "snippet": {
          "$ref": "I18nLanguageSnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the i18n\nlanguage, such as language code and human-readable name."
        }
      },
      "id": "I18nLanguage",
      "description": "An \u003ccode\u003e\u003cstrong\u003ei18nLanguage\u003c/strong\u003e\u003c/code\u003e resource identifies a UI\nlanguage currently supported by YouTube.",
      "type": "object"
    },
    "ContentRating": {
      "type": "object",
      "properties": {
        "ecbmctRating": {
          "enumDescriptions": [
            "",
            "G",
            "7A",
            "7+",
            "13A",
            "13+",
            "15A",
            "15+",
            "18+",
            ""
          ],
          "enum": [
            "ecbmctUnspecified",
            "ecbmctG",
            "ecbmct7a",
            "ecbmct7plus",
            "ecbmct13a",
            "ecbmct13plus",
            "ecbmct15a",
            "ecbmct15plus",
            "ecbmct18plus",
            "ecbmctUnrated"
          ],
          "description": "Rating system in Turkey - Evaluation and Classification Board of the\nMinistry of Culture and Tourism",
          "type": "string"
        },
        "mekuRating": {
          "enum": [
            "mekuUnspecified",
            "mekuS",
            "meku7",
            "meku12",
            "meku16",
            "meku18",
            "mekuUnrated"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "S",
            "7",
            "12",
            "16",
            "18",
            ""
          ],
          "description": "The video's rating from Finland's Kansallinen Audiovisuaalinen Instituutti\n(National Audiovisual Institute)."
        },
        "nkclvRating": {
          "description": "The video's rating from the Nacion&atilde;lais Kino centrs (National Film\nCentre of Latvia).",
          "type": "string",
          "enumDescriptions": [
            "",
            "U",
            "7+",
            "12+",
            "! 16+",
            "18+",
            ""
          ],
          "enum": [
            "nkclvUnspecified",
            "nkclvU",
            "nkclv7plus",
            "nkclv12plus",
            "nkclv16plus",
            "nkclv18plus",
            "nkclvUnrated"
          ]
        },
        "agcomRating": {
          "enumDescriptions": [
            "",
            "T",
            "VM14",
            "VM18",
            ""
          ],
          "enum": [
            "agcomUnspecified",
            "agcomT",
            "agcomVm14",
            "agcomVm18",
            "agcomUnrated"
          ],
          "type": "string",
          "description": "The video's rating from Italy's Autorit&agrave; per le Garanzie nelle\nComunicazioni (AGCOM)."
        },
        "anatelRating": {
          "enumDescriptions": [
            "",
            "F",
            "I",
            "I-7",
            "I-10",
            "I-12",
            "R",
            "A",
            ""
          ],
          "description": "The video's Anatel (Asociaci&oacute;n Nacional de Televisi&oacute;n)\nrating for Chilean television.",
          "enum": [
            "anatelUnspecified",
            "anatelF",
            "anatelI",
            "anatelI7",
            "anatelI10",
            "anatelI12",
            "anatelR",
            "anatelA",
            "anatelUnrated"
          ],
          "type": "string"
        },
        "nfrcRating": {
          "type": "string",
          "enumDescriptions": [
            "",
            "A",
            "B",
            "C",
            "D",
            "X",
            ""
          ],
          "enum": [
            "nfrcUnspecified",
            "nfrcA",
            "nfrcB",
            "nfrcC",
            "nfrcD",
            "nfrcX",
            "nfrcUnrated"
          ],
          "description": "The video's rating from the \u003ca href=\"http://www.nfc.bg/\"\u003eBulgarian\nNational Film Center\u003c/a\u003e."
        },
        "tvpgRating": {
          "description": "The video's TV Parental Guidelines (TVPG) rating.",
          "type": "string",
          "enumDescriptions": [
            "",
            "TV-Y",
            "TV-Y7",
            "TV-Y7-FV",
            "TV-G",
            "TV-PG",
            "TV-14",
            "TV-MA",
            ""
          ],
          "enum": [
            "tvpgUnspecified",
            "tvpgY",
            "tvpgY7",
            "tvpgY7Fv",
            "tvpgG",
            "tvpgPg",
            "pg14",
            "tvpgMa",
            "tvpgUnrated"
          ]
        },
        "djctqRatingReasons": {
          "description": "Reasons that explain why the video received its DJCQT (Brazil) rating.",
          "enumDescriptions": [
            "",
            "Brazil rating content descriptors. See http://go/brazilratings section F.\nViolência (Violence)",
            "Violência extrema (Extreme violence)",
            "Conteúdo sexual (Sexual content)",
            "Nudez (Nudity)",
            "Sexo (Sex)",
            "Sexo Explícito (Explicit sex)",
            "Drogas (Drugs)",
            "Drogas Lícitas (Legal drugs)",
            "Drogas Ilícitas (Illegal drugs)",
            "Linguagem Imprópria (Inappropriate language)",
            "Atos Criminosos (Criminal Acts)",
            "Conteúdo Impactante (Impacting content)"
          ],
          "items": {
            "type": "string",
            "enum": [
              "djctqRatingReasonUnspecified",
              "djctqViolence",
              "djctqExtremeViolence",
              "djctqSexualContent",
              "djctqNudity",
              "djctqSex",
              "djctqExplicitSex",
              "djctqDrugs",
              "djctqLegalDrugs",
              "djctqIllegalDrugs",
              "djctqInappropriateLanguage",
              "djctqCriminalActs",
              "djctqImpactingContent"
            ]
          },
          "type": "array"
        },
        "cicfRating": {
          "enumDescriptions": [
            "",
            "E",
            "KT/EA",
            "KNT/ENA",
            ""
          ],
          "description": "The video's rating from the Commission de Contr&ocirc;le des Films\n(Belgium).",
          "type": "string",
          "enum": [
            "cicfUnspecified",
            "cicfE",
            "cicfKtEa",
            "cicfKntEna",
            "cicfUnrated"
          ]
        },
        "fskRating": {
          "enum": [
            "fskUnspecified",
            "fsk0",
            "fsk6",
            "fsk12",
            "fsk16",
            "fsk18",
            "fskUnrated"
          ],
          "type": "string",
          "description": "The video's Freiwillige Selbstkontrolle der Filmwirtschaft\n(FSK - Germany) rating.",
          "enumDescriptions": [
            "",
            "FSK 0",
            "FSK 6",
            "FSK 12",
            "FSK 16",
            "FSK 18",
            ""
          ]
        },
        "icaaRating": {
          "enum": [
            "icaaUnspecified",
            "icaaApta",
            "icaa7",
            "icaa12",
            "icaa13",
            "icaa16",
            "icaa18",
            "icaaX",
            "icaaUnrated"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "APTA",
            "7",
            "12",
            "13",
            "16",
            "18",
            "X",
            ""
          ],
          "description": "The video's Instituto de la Cinematograf&iacute;a y de las Artes\nAudiovisuales (ICAA - Spain) rating."
        },
        "skfilmRating": {
          "enum": [
            "skfilmUnspecified",
            "skfilmG",
            "skfilmP2",
            "skfilmP5",
            "skfilmP8",
            "skfilmUnrated"
          ],
          "type": "string",
          "description": "The video's rating in Slovakia.",
          "enumDescriptions": [
            "",
            "G",
            "P2",
            "P5",
            "P8",
            ""
          ]
        },
        "catvRating": {
          "enum": [
            "catvUnspecified",
            "catvC",
            "catvC8",
            "catvG",
            "catvPg",
            "catv14plus",
            "catv18plus",
            "catvUnrated"
          ],
          "description": "Rating system for Canadian TV - Canadian TV Classification System\nThe video's rating from the Canadian Radio-Television and\nTelecommunications Commission (CRTC) for Canadian English-language\nbroadcasts. For more information, see the\n\u003ca href=\"http://www.cbsc.ca/english/agvot/englishsystem.php\"\u003eCanadian\nBroadcast Standards Council\u003c/a\u003e website.",
          "type": "string",
          "enumDescriptions": [
            "",
            "C",
            "C8",
            "G",
            "PG",
            "14+",
            "18+",
            ""
          ]
        },
        "kfcbRating": {
          "enumDescriptions": [
            "",
            "GE",
            "PG",
            "16",
            "18",
            ""
          ],
          "enum": [
            "kfcbUnspecified",
            "kfcbG",
            "kfcbPg",
            "kfcb16plus",
            "kfcbR",
            "kfcbUnrated"
          ],
          "type": "string",
          "description": "The video's rating from the Kenya Film Classification Board."
        },
        "smaisRating": {
          "enum": [
            "smaisUnspecified",
            "smaisL",
            "smais7",
            "smais12",
            "smais14",
            "smais16",
            "smais18",
            "smaisUnrated"
          ],
          "description": "The video's rating in Iceland.",
          "type": "string",
          "enumDescriptions": [
            "",
            "L",
            "7",
            "12",
            "14",
            "16",
            "18",
            ""
          ]
        },
        "russiaRating": {
          "description": "The video's National Film Registry of the Russian Federation\n(MKRF - Russia) rating.",
          "enumDescriptions": [
            "",
            "0+",
            "6+",
            "12+",
            "16+",
            "18+",
            ""
          ],
          "enum": [
            "russiaUnspecified",
            "russia0",
            "russia6",
            "russia12",
            "russia16",
            "russia18",
            "russiaUnrated"
          ],
          "type": "string"
        },
        "mpaaRating": {
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "PG-13",
            "R",
            "NC-17",
            "! X",
            ""
          ],
          "description": "The video's Motion Picture Association of America (MPAA) rating.",
          "type": "string",
          "enum": [
            "mpaaUnspecified",
            "mpaaG",
            "mpaaPg",
            "mpaaPg13",
            "mpaaR",
            "mpaaNc17",
            "mpaaX",
            "mpaaUnrated"
          ]
        },
        "cceRating": {
          "enumDescriptions": [
            "",
            "4",
            "6",
            "12",
            "16",
            "18",
            "",
            "14"
          ],
          "description": "The video's rating from Portugal's Comiss&atilde;o de\nClassifica&ccedil;&atilde;o de Espect&acute;culos.",
          "type": "string",
          "enum": [
            "cceUnspecified",
            "cceM4",
            "cceM6",
            "cceM12",
            "cceM16",
            "cceM18",
            "cceUnrated",
            "cceM14"
          ]
        },
        "cscfRating": {
          "enumDescriptions": [
            "",
            "AL",
            "A",
            "6",
            "9",
            "12",
            "16",
            "18",
            ""
          ],
          "type": "string",
          "description": "The video's rating from Luxembourg's Commission de surveillance\nde la classification des films (CSCF).",
          "enum": [
            "cscfUnspecified",
            "cscfAl",
            "cscfA",
            "cscf6",
            "cscf9",
            "cscf12",
            "cscf16",
            "cscf18",
            "cscfUnrated"
          ]
        },
        "cccRating": {
          "enumDescriptions": [
            "",
            "Todo espectador",
            "6+ - Inconveniente para menores de 7 años",
            "14+",
            "18+",
            "18+ - contenido excesivamente violento",
            "18+ - contenido pornográfico",
            ""
          ],
          "type": "string",
          "description": "The video's Consejo de Calificaci&oacute;n Cinematogr&aacute;fica (Chile)\nrating.",
          "enum": [
            "cccUnspecified",
            "cccTe",
            "ccc6",
            "ccc14",
            "ccc18",
            "ccc18v",
            "ccc18s",
            "cccUnrated"
          ]
        },
        "cnaRating": {
          "enumDescriptions": [
            "",
            "AP",
            "12",
            "15",
            "18",
            "18+",
            ""
          ],
          "description": "The video's rating from Romania's CONSILIUL NATIONAL AL AUDIOVIZUALULUI\n(CNA).",
          "enum": [
            "cnaUnspecified",
            "cnaAp",
            "cna12",
            "cna15",
            "cna18",
            "cna18plus",
            "cnaUnrated"
          ],
          "type": "string"
        },
        "bfvcRating": {
          "enumDescriptions": [
            "",
            "G",
            "E",
            "13",
            "15",
            "18",
            "20",
            "B",
            ""
          ],
          "description": "The video's rating from Thailand's Board of Film and Video Censors.",
          "type": "string",
          "enum": [
            "bfvcUnspecified",
            "bfvcG",
            "bfvcE",
            "bfvc13",
            "bfvc15",
            "bfvc18",
            "bfvc20",
            "bfvcB",
            "bfvcUnrated"
          ]
        },
        "ilfilmRating": {
          "enumDescriptions": [
            "",
            "AA",
            "12",
            "14",
            "16",
            "18",
            ""
          ],
          "enum": [
            "ilfilmUnspecified",
            "ilfilmAa",
            "ilfilm12",
            "ilfilm14",
            "ilfilm16",
            "ilfilm18",
            "ilfilmUnrated"
          ],
          "description": "The video's rating in Israel.",
          "type": "string"
        },
        "mocRating": {
          "enumDescriptions": [
            "",
            "E",
            "T",
            "7",
            "12",
            "15",
            "18",
            "X",
            "Banned",
            ""
          ],
          "description": "The video's Ministerio de Cultura (Colombia) rating.",
          "type": "string",
          "enum": [
            "mocUnspecified",
            "mocE",
            "mocT",
            "moc7",
            "moc12",
            "moc15",
            "moc18",
            "mocX",
            "mocBanned",
            "mocUnrated"
          ]
        },
        "rcnofRating": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "The video's rating from the Hungarian Nemzeti Filmiroda, the Rating\nCommittee of the National Office of Film.",
          "enum": [
            "rcnofUnspecified",
            "rcnofI",
            "rcnofIi",
            "rcnofIii",
            "rcnofIv",
            "rcnofV",
            "rcnofVi",
            "rcnofUnrated"
          ],
          "type": "string"
        },
        "acbRating": {
          "enum": [
            "acbUnspecified",
            "acbE",
            "acbP",
            "acbC",
            "acbG",
            "acbPg",
            "acbM",
            "acbMa15plus",
            "acbR18plus",
            "acbUnrated"
          ],
          "enumDescriptions": [
            "",
            "E",
            "Programs that have been given a \u003ccode\u003eP\u003c/code\u003e classification by the\nAustralian Communications and Media Authority. These programs are\nintended for preschool children.",
            "Programs that have been given a \u003ccode\u003eC\u003c/code\u003e classification by the\nAustralian Communications and Media Authority. These programs are\nintended for children (other than preschool children) who are younger\nthan 14 years of age.",
            "G",
            "PG",
            "M",
            "MA15+",
            "R18+",
            ""
          ],
          "type": "string",
          "description": "The video's Australian Classification Board (ACB) or Australian\nCommunications and Media Authority (ACMA) rating. ACMA ratings are used\nto classify children's television programming."
        },
        "moctwRating": {
          "type": "string",
          "enum": [
            "moctwUnspecified",
            "moctwG",
            "moctwP",
            "moctwPg",
            "moctwR",
            "moctwUnrated",
            "moctwR12",
            "moctwR15"
          ],
          "description": "The video's rating from Taiwan's Ministry of Culture\n(&#25991;&#21270;&#37096;).",
          "enumDescriptions": [
            "",
            "G",
            "P",
            "PG",
            "R",
            "",
            "R-12",
            "R-15"
          ]
        },
        "kijkwijzerRating": {
          "enumDescriptions": [
            "",
            "AL",
            "6",
            "9",
            "12",
            "16",
            "",
            ""
          ],
          "enum": [
            "kijkwijzerUnspecified",
            "kijkwijzerAl",
            "kijkwijzer6",
            "kijkwijzer9",
            "kijkwijzer12",
            "kijkwijzer16",
            "kijkwijzer18",
            "kijkwijzerUnrated"
          ],
          "type": "string",
          "description": "The video's NICAM/Kijkwijzer rating from the Nederlands Instituut\nvoor de Classificatie van Audiovisuele Media (Netherlands)."
        },
        "mccaaRating": {
          "description": "The video's rating from Malta's Film Age-Classification Board.",
          "enum": [
            "mccaaUnspecified",
            "mccaaU",
            "mccaaPg",
            "mccaa12a",
            "mccaa12",
            "mccaa14",
            "mccaa15",
            "mccaa16",
            "mccaa18",
            "mccaaUnrated"
          ],
          "enumDescriptions": [
            "",
            "U",
            "PG",
            "12A",
            "12",
            "14 - this rating was removed from the new classification structure\nintroduced in 2013.",
            "15",
            "16 - this rating was removed from the new classification structure\nintroduced in 2013.",
            "18",
            ""
          ],
          "type": "string"
        },
        "mcstRating": {
          "description": "The video's rating system for Vietnam - MCST",
          "enum": [
            "mcstUnspecified",
            "mcstP",
            "mcst0",
            "mcstC13",
            "mcstC16",
            "mcst16plus",
            "mcstC18",
            "mcstGPg",
            "mcstUnrated"
          ],
          "enumDescriptions": [
            "",
            "P",
            "0",
            "C13",
            "C16",
            "16+",
            "C18",
            "MCST_G_PG",
            ""
          ],
          "type": "string"
        },
        "fcbmRating": {
          "description": "The video's rating from Malaysia's Film Censorship Board.",
          "type": "string",
          "enumDescriptions": [
            "",
            "U",
            "PG13",
            "P13",
            "18",
            "18SX",
            "18PA",
            "18SG",
            "18PL",
            ""
          ],
          "enum": [
            "fcbmUnspecified",
            "fcbmU",
            "fcbmPg13",
            "fcbmP13",
            "fcbm18",
            "fcbm18sx",
            "fcbm18pa",
            "fcbm18sg",
            "fcbm18pl",
            "fcbmUnrated"
          ]
        },
        "lsfRating": {
          "enum": [
            "lsfUnspecified",
            "lsfSu",
            "lsfA",
            "lsfBo",
            "lsf13",
            "lsfR",
            "lsf17",
            "lsfD",
            "lsf21",
            "lsfUnrated"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "SU",
            "A",
            "BO",
            "13",
            "R",
            "17",
            "D",
            "21",
            ""
          ],
          "description": "The video's rating from Indonesia's Lembaga Sensor Film."
        },
        "bmukkRating": {
          "type": "string",
          "description": "The video's rating from the Austrian Board of Media Classification\n(Bundesministerium f&uuml;r Unterricht, Kunst und Kultur).",
          "enum": [
            "bmukkUnspecified",
            "bmukkAa",
            "bmukk6",
            "bmukk8",
            "bmukk10",
            "bmukk12",
            "bmukk14",
            "bmukk16",
            "bmukkUnrated"
          ],
          "enumDescriptions": [
            "",
            "Unrestricted",
            "6+",
            "8+",
            "10+",
            "12+",
            "14+",
            "16+",
            ""
          ]
        },
        "czfilmRating": {
          "description": "The video's rating in the Czech Republic.",
          "enumDescriptions": [
            "",
            "U",
            "12",
            "14",
            "18",
            ""
          ],
          "type": "string",
          "enum": [
            "czfilmUnspecified",
            "czfilmU",
            "czfilm12",
            "czfilm14",
            "czfilm18",
            "czfilmUnrated"
          ]
        },
        "ifcoRating": {
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "12",
            "12A",
            "15",
            "15A",
            "16",
            "18",
            ""
          ],
          "type": "string",
          "enum": [
            "ifcoUnspecified",
            "ifcoG",
            "ifcoPg",
            "ifco12",
            "ifco12a",
            "ifco15",
            "ifco15a",
            "ifco16",
            "ifco18",
            "ifcoUnrated"
          ],
          "description": "The video's Irish Film Classification Office (IFCO - Ireland) rating.\nSee the \u003ca\nhref=\"http://www.ifco.ie/website/ifco/ifcoweb.nsf/web/classcatintro\"\u003eIFCO\u003c/a\u003e\nwebsite for more information."
        },
        "mtrcbRating": {
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "R-13",
            "R-16",
            "R-18",
            "X",
            ""
          ],
          "type": "string",
          "description": "The video's rating from the Movie and Television Review and\nClassification Board (Philippines).",
          "enum": [
            "mtrcbUnspecified",
            "mtrcbG",
            "mtrcbPg",
            "mtrcbR13",
            "mtrcbR16",
            "mtrcbR18",
            "mtrcbX",
            "mtrcbUnrated"
          ]
        },
        "resorteviolenciaRating": {
          "type": "string",
          "description": "The video's rating in Venezuela.",
          "enum": [
            "resorteviolenciaUnspecified",
            "resorteviolenciaA",
            "resorteviolenciaB",
            "resorteviolenciaC",
            "resorteviolenciaD",
            "resorteviolenciaE",
            "resorteviolenciaUnrated"
          ],
          "enumDescriptions": [
            "",
            "A",
            "B",
            "C",
            "D",
            "E",
            ""
          ]
        },
        "eirinRating": {
          "enum": [
            "eirinUnspecified",
            "eirinG",
            "eirinPg12",
            "eirinR15plus",
            "eirinR18plus",
            "eirinUnrated"
          ],
          "description": "The video's Eirin (&#26144;&#20523;) rating.\nEirin is the Japanese rating system.",
          "type": "string",
          "enumDescriptions": [
            "",
            "G",
            "PG-12",
            "R15+",
            "R18+",
            ""
          ]
        },
        "oflcRating": {
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "M",
            "R13",
            "R15",
            "R16",
            "R18",
            "",
            "RP13",
            "RP16",
            "RP18"
          ],
          "type": "string",
          "description": "The video's Office of Film and Literature Classification\n(OFLC - New Zealand) rating.",
          "enum": [
            "oflcUnspecified",
            "oflcG",
            "oflcPg",
            "oflcM",
            "oflcR13",
            "oflcR15",
            "oflcR16",
            "oflcR18",
            "oflcUnrated",
            "oflcRp13",
            "oflcRp16",
            "oflcRp18"
          ]
        },
        "nbcRating": {
          "enum": [
            "nbcUnspecified",
            "nbcG",
            "nbcPg",
            "nbc12plus",
            "nbc15plus",
            "nbc18plus",
            "nbc18plusr",
            "nbcPu",
            "nbcUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "12+",
            "15+",
            "18+",
            "18+R",
            "PU",
            ""
          ],
          "type": "string",
          "description": "The video's rating from the Maldives National Bureau of Classification."
        },
        "bbfcRating": {
          "type": "string",
          "description": "The video's British Board of Film Classification (BBFC) rating.",
          "enumDescriptions": [
            "",
            "U",
            "PG",
            "12A",
            "12",
            "15",
            "18",
            "R18",
            ""
          ],
          "enum": [
            "bbfcUnspecified",
            "bbfcU",
            "bbfcPg",
            "bbfc12a",
            "bbfc12",
            "bbfc15",
            "bbfc18",
            "bbfcR18",
            "bbfcUnrated"
          ]
        },
        "ytRating": {
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "A rating that YouTube uses to identify age-restricted content.",
          "enum": [
            "ytUnspecified",
            "ytAgeRestricted"
          ],
          "type": "string"
        },
        "mpaatRating": {
          "description": "The rating system for trailer, DVD, and Ad in the US.  See\nhttp://movielabs.com/md/ratings/v2.3/html/US_MPAAT_Ratings.html.",
          "type": "string",
          "enumDescriptions": [
            "",
            "GB",
            "RB"
          ],
          "enum": [
            "mpaatUnspecified",
            "mpaatGb",
            "mpaatRb"
          ]
        },
        "smsaRating": {
          "enum": [
            "smsaUnspecified",
            "smsaA",
            "smsa7",
            "smsa11",
            "smsa15",
            "smsaUnrated"
          ],
          "type": "string",
          "description": "The video's rating from Statens medier&aring;d (Sweden's National Media\nCouncil).",
          "enumDescriptions": [
            "",
            "All ages",
            "7",
            "11",
            "15",
            ""
          ]
        },
        "fpbRating": {
          "enumDescriptions": [
            "",
            "A",
            "PG",
            "7-9PG",
            "10-12PG",
            "13",
            "16",
            "18",
            "X18",
            "XX",
            "",
            "10"
          ],
          "enum": [
            "fpbUnspecified",
            "fpbA",
            "fpbPg",
            "fpb79Pg",
            "fpb1012Pg",
            "fpb13",
            "fpb16",
            "fpb18",
            "fpbX18",
            "fpbXx",
            "fpbUnrated",
            "fpb10"
          ],
          "description": "The video's rating from South Africa's Film and Publication Board.",
          "type": "string"
        },
        "rtcRating": {
          "enumDescriptions": [
            "",
            "AA",
            "A",
            "B",
            "B15",
            "C",
            "D",
            ""
          ],
          "type": "string",
          "enum": [
            "rtcUnspecified",
            "rtcAa",
            "rtcA",
            "rtcB",
            "rtcB15",
            "rtcC",
            "rtcD",
            "rtcUnrated"
          ],
          "description": "The video's General Directorate of Radio, Television and Cinematography\n(Mexico) rating."
        },
        "pefilmRating": {
          "enum": [
            "pefilmUnspecified",
            "pefilmPt",
            "pefilmPg",
            "pefilm14",
            "pefilm18",
            "pefilmUnrated"
          ],
          "description": "The video's rating in Peru.",
          "enumDescriptions": [
            "",
            "PT",
            "PG",
            "14",
            "18",
            ""
          ],
          "type": "string"
        },
        "nmcRating": {
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "PG-13",
            "PG-15",
            "15+",
            "18+",
            "18TC",
            ""
          ],
          "enum": [
            "nmcUnspecified",
            "nmcG",
            "nmcPg",
            "nmcPg13",
            "nmcPg15",
            "nmc15plus",
            "nmc18plus",
            "nmc18tc",
            "nmcUnrated"
          ],
          "type": "string",
          "description": "The National Media Council ratings system for United Arab Emirates."
        },
        "nbcplRating": {
          "type": "string",
          "enum": [
            "nbcplUnspecified",
            "nbcplI",
            "nbcplIi",
            "nbcplIii",
            "nbcplIv",
            "nbcpl18plus",
            "nbcplUnrated"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "The video's rating in Poland."
        },
        "nfvcbRating": {
          "type": "string",
          "enum": [
            "nfvcbUnspecified",
            "nfvcbG",
            "nfvcbPg",
            "nfvcb12",
            "nfvcb12a",
            "nfvcb15",
            "nfvcb18",
            "nfvcbRe",
            "nfvcbUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "12",
            "12A",
            "15",
            "18",
            "RE",
            ""
          ],
          "description": "The video's rating from Nigeria's National Film and Video Censors Board."
        },
        "egfilmRating": {
          "enum": [
            "egfilmUnspecified",
            "egfilmGn",
            "egfilm18",
            "egfilmBn",
            "egfilmUnrated"
          ],
          "description": "The video's rating in Egypt.",
          "enumDescriptions": [
            "",
            "GN",
            "18",
            "BN",
            ""
          ],
          "type": "string"
        },
        "mccypRating": {
          "type": "string",
          "enum": [
            "mccypUnspecified",
            "mccypA",
            "mccyp7",
            "mccyp11",
            "mccyp15",
            "mccypUnrated"
          ],
          "enumDescriptions": [
            "",
            "A",
            "7",
            "11",
            "15",
            ""
          ],
          "description": "The video's rating from the Danish Film Institute's (Det Danske\nFilminstitut) Media Council for Children and Young People."
        },
        "mdaRating": {
          "description": "The video's rating from Singapore's Media Development Authority (MDA) and,\nspecifically, it's Board of Film Censors (BFC).",
          "enum": [
            "mdaUnspecified",
            "mdaG",
            "mdaPg",
            "mdaPg13",
            "mdaNc16",
            "mdaM18",
            "mdaR21",
            "mdaUnrated"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "PG13",
            "NC16",
            "M18",
            "R21",
            ""
          ]
        },
        "incaaRating": {
          "description": "The video's INCAA (Instituto Nacional de Cine y Artes Audiovisuales -\nArgentina) rating.",
          "enum": [
            "incaaUnspecified",
            "incaaAtp",
            "incaaSam13",
            "incaaSam16",
            "incaaSam18",
            "incaaC",
            "incaaUnrated"
          ],
          "enumDescriptions": [
            "",
            "ATP (Apta para todo publico)",
            "13 (Solo apta para mayores de 13 años)",
            "16 (Solo apta para mayores de 16 años)",
            "18 (Solo apta para mayores de 18 años)",
            "X (Solo apta para mayores de 18 años, de exhibición condicionada)",
            ""
          ],
          "type": "string"
        },
        "rteRating": {
          "enum": [
            "rteUnspecified",
            "rteGa",
            "rteCh",
            "rtePs",
            "rteMa",
            "rteUnrated"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "GA",
            "CH",
            "PS",
            "MA",
            ""
          ],
          "description": "The video's rating from Ireland's Raidi&oacute; Teilif&iacute;s\n&Eacute;ireann."
        },
        "medietilsynetRating": {
          "type": "string",
          "enumDescriptions": [
            "",
            "A",
            "6",
            "7",
            "9",
            "11",
            "12",
            "15",
            "18",
            ""
          ],
          "description": "The video's rating from Medietilsynet, the Norwegian Media Authority.",
          "enum": [
            "medietilsynetUnspecified",
            "medietilsynetA",
            "medietilsynet6",
            "medietilsynet7",
            "medietilsynet9",
            "medietilsynet11",
            "medietilsynet12",
            "medietilsynet15",
            "medietilsynet18",
            "medietilsynetUnrated"
          ]
        },
        "eefilmRating": {
          "description": "The video's rating in Estonia.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Pere",
            "L",
            "MS-6",
            "K-6",
            "MS-12",
            "K-12",
            "K-14",
            "K-16",
            ""
          ],
          "enum": [
            "eefilmUnspecified",
            "eefilmPere",
            "eefilmL",
            "eefilmMs6",
            "eefilmK6",
            "eefilmMs12",
            "eefilmK12",
            "eefilmK14",
            "eefilmK16",
            "eefilmUnrated"
          ]
        },
        "chfilmRating": {
          "enumDescriptions": [
            "",
            "0",
            "6",
            "12",
            "16",
            "18",
            ""
          ],
          "description": "The video's rating in Switzerland.",
          "enum": [
            "chfilmUnspecified",
            "chfilm0",
            "chfilm6",
            "chfilm12",
            "chfilm16",
            "chfilm18",
            "chfilmUnrated"
          ],
          "type": "string"
        },
        "grfilmRating": {
          "enum": [
            "grfilmUnspecified",
            "grfilmK",
            "grfilmE",
            "grfilmK12",
            "grfilmK13",
            "grfilmK15",
            "grfilmK17",
            "grfilmK18",
            "grfilmUnrated"
          ],
          "type": "string",
          "description": "The video's rating in Greece.",
          "enumDescriptions": [
            "",
            "K",
            "E",
            "K-12",
            "K-13",
            "K-15",
            "K-17",
            "K-18",
            ""
          ]
        },
        "csaRating": {
          "enum": [
            "csaUnspecified",
            "csaT",
            "csa10",
            "csa12",
            "csa16",
            "csa18",
            "csaInterdiction",
            "csaUnrated"
          ],
          "type": "string",
          "description": "The video's rating from France's Conseil sup&eacute;rieur de\nl’audiovisuel, which rates broadcast content.",
          "enumDescriptions": [
            "",
            "T",
            "10",
            "12",
            "16",
            "18",
            "Interdiction",
            ""
          ]
        },
        "fcoRating": {
          "enum": [
            "fcoUnspecified",
            "fcoI",
            "fcoIia",
            "fcoIib",
            "fcoIi",
            "fcoIii",
            "fcoUnrated"
          ],
          "description": "The video's rating from Hong Kong's Office for Film, Newspaper\nand Article Administration.",
          "enumDescriptions": [
            "",
            "I",
            "IIA",
            "IIB",
            "II",
            "III",
            ""
          ],
          "type": "string"
        },
        "cbfcRating": {
          "enumDescriptions": [
            "",
            "U",
            "U/A",
            "A",
            "S",
            ""
          ],
          "enum": [
            "cbfcUnspecified",
            "cbfcU",
            "cbfcUA",
            "cbfcA",
            "cbfcS",
            "cbfcUnrated"
          ],
          "description": "The video's Central Board of Film Certification (CBFC - India) rating.",
          "type": "string"
        },
        "fmocRating": {
          "enumDescriptions": [
            "",
            "U",
            "10",
            "12",
            "16",
            "18",
            "E",
            ""
          ],
          "type": "string",
          "enum": [
            "fmocUnspecified",
            "fmocU",
            "fmoc10",
            "fmoc12",
            "fmoc16",
            "fmoc18",
            "fmocE",
            "fmocUnrated"
          ],
          "description": "\u003cspan class=\"deprecated\"\u003eThis property has been deprecated. Use the\n\u003ccode\u003e\u003ca\nhref=\"#contentDetails.contentRating.cncRating\"\u003econtentDetails.contentRating.cncRating\u003c/a\u003e\u003c/code\u003e\ninstead.\u003c/span\u003e"
        },
        "mibacRating": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "mibacUnspecified",
            "mibacT",
            "mibacVap",
            "mibacVm12",
            "mibacVm14",
            "mibacVm18",
            "mibacUnrated"
          ],
          "description": "The video's rating from the Ministero dei Beni e delle Attivit&agrave;\nCulturali e del Turismo (Italy)."
        },
        "menaMpaaRating": {
          "enum": [
            "menaMpaaUnspecified",
            "menaMpaaG",
            "menaMpaaPg",
            "menaMpaaPg13",
            "menaMpaaR",
            "menaMpaaUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "PG-13",
            "R",
            "To keep the same enum values as MPAA's items have, skip NC_17."
          ],
          "description": "The rating system for MENA countries, a clone of MPAA. It is needed to\nprevent titles go live w/o additional QC check, since some of them can be\ninappropriate for the countries at all. See b/33408548 for more details.",
          "type": "string"
        },
        "chvrsRating": {
          "enum": [
            "chvrsUnspecified",
            "chvrsG",
            "chvrsPg",
            "chvrs14a",
            "chvrs18a",
            "chvrsR",
            "chvrsE",
            "chvrsUnrated"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "G",
            "PG",
            "14A",
            "18A",
            "R",
            "E",
            ""
          ],
          "description": "The video's Canadian Home Video Rating System (CHVRS) rating."
        },
        "kmrbRating": {
          "description": "The video's Korea Media Rating Board\n(&#50689;&#49345;&#47932;&#46321;&#44553;&#50948;&#50896;&#54924;) rating.\nThe KMRB rates videos in South Korea.",
          "enum": [
            "kmrbUnspecified",
            "kmrbAll",
            "kmrb12plus",
            "kmrb15plus",
            "kmrbTeenr",
            "kmrbR",
            "kmrbUnrated"
          ],
          "enumDescriptions": [
            "",
            "&#51204;&#52404;&#44288;&#46988;&#44032;",
            "12&#49464; &#51060;&#49345;&#32;&#44288;&#46988;&#44032;",
            "15&#49464; &#51060;&#49345;&#32;&#44288;&#46988;&#44032;",
            "",
            "&#52397;&#49548;&#45380; &#44288;&#46988;&#48520;&#44032;",
            ""
          ],
          "type": "string"
        },
        "djctqRating": {
          "enum": [
            "djctqUnspecified",
            "djctqL",
            "djctq10",
            "djctq12",
            "djctq14",
            "djctq16",
            "djctq18",
            "djctqEr",
            "djctqL10",
            "djctqL12",
            "djctqL14",
            "djctqL16",
            "djctqL18",
            "djctq1012",
            "djctq1014",
            "djctq1016",
            "djctq1018",
            "djctq1214",
            "djctq1216",
            "djctq1218",
            "djctq1416",
            "djctq1418",
            "djctq1618",
            "djctqUnrated"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "L",
            "10",
            "12",
            "14",
            "16",
            "18",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "The video's Departamento de Justi&ccedil;a, Classifica&ccedil;&atilde;o,\nQualifica&ccedil;&atilde;o e T&iacute;tulos (DJCQT - Brazil) rating."
        },
        "fpbRatingReasons": {
          "items": {
            "enum": [
              "fpbRatingReasonUnspecified",
              "fpbBlasphemy",
              "fpbLanguage",
              "fpbNudity",
              "fpbPrejudice",
              "fpbSex",
              "fpbViolence",
              "fpbDrugs",
              "fpbSexualViolence",
              "fpbHorror",
              "fpbCriminalTechniques",
              "fpbImitativeActsTechniques"
            ],
            "type": "string"
          },
          "description": "Reasons that explain why the video received its FPB (South Africa) rating.",
          "enumDescriptions": [
            "",
            "South Africa rating content descriptors.",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "array"
        },
        "cncRating": {
          "enum": [
            "cncUnspecified",
            "cncT",
            "cnc10",
            "cnc12",
            "cnc16",
            "cnc18",
            "cncE",
            "cncInterdiction",
            "cncUnrated"
          ],
          "type": "string",
          "description": "Rating system in France - Commission de classification cinematographique",
          "enumDescriptions": [
            "",
            "T",
            "10",
            "12",
            "16",
            "18",
            "E",
            "interdiction",
            ""
          ]
        },
        "catvfrRating": {
          "enum": [
            "catvfrUnspecified",
            "catvfrG",
            "catvfr8plus",
            "catvfr13plus",
            "catvfr16plus",
            "catvfr18plus",
            "catvfrUnrated"
          ],
          "enumDescriptions": [
            "",
            "G",
            "8+",
            "13+",
            "16+",
            "18+",
            ""
          ],
          "type": "string",
          "description": "The video's rating from the Canadian Radio-Television and\nTelecommunications Commission (CRTC) for Canadian French-language\nbroadcasts. For more information, see the\n\u003ca href=\"http://www.cbsc.ca/english/agvot/frenchsystem.php\"\u003eCanadian\nBroadcast Standards Council\u003c/a\u003e website."
        }
      },
      "id": "ContentRating",
      "description": "Ratings schemes. The country-specific ratings are mostly for\nmovies and shows.\nLINT.IfChange"
    },
    "VideoRating": {
      "description": "Basic details about rating of a video.",
      "type": "object",
      "properties": {
        "videoId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the video."
        },
        "rating": {
          "enum": [
            "none",
            "like",
            "dislike"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Rating of a video."
        }
      },
      "id": "VideoRating"
    },
    "InvideoTiming": {
      "type": "object",
      "id": "InvideoTiming",
      "properties": {
        "durationMs": {
          "format": "uint64",
          "description": "Defines the duration in milliseconds for which the promotion should be\ndisplayed. If missing, the client should use the default.",
          "type": "string"
        },
        "offsetMs": {
          "description": "Defines the time at which the promotion will appear. Depending on the value\nof \u003ccode\u003etype\u003c/code\u003e the value of the \u003ccode\u003eoffsetMs\u003c/code\u003e field will\nrepresent a time offset from the start or from the end of the video,\nexpressed in milliseconds.",
          "type": "string",
          "format": "uint64"
        },
        "type": {
          "description": "Describes a timing type. If the value is \u003ccode\u003eoffsetFromStart\u003c/code\u003e, then\nthe \u003ccode\u003eoffsetMs\u003c/code\u003e field represents an offset from the start of the\nvideo. If the value is \u003ccode\u003eoffsetFromEnd\u003c/code\u003e, then the\n\u003ccode\u003eoffsetMs\u003c/code\u003e field represents an offset from the end of the video.",
          "enum": [
            "offsetFromStart",
            "offsetFromEnd"
          ],
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string"
        }
      },
      "description": "Describes a temporal position of a visual widget inside a video."
    },
    "LevelDetails": {
      "properties": {
        "displayName": {
          "description": "The name that should be used when referring to this level.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LevelDetails"
    },
    "LiveChatMessageDeletedDetails": {
      "properties": {
        "deletedMessageId": {
          "type": "string"
        }
      },
      "id": "LiveChatMessageDeletedDetails",
      "type": "object"
    },
    "CommentSnippet": {
      "id": "CommentSnippet",
      "type": "object",
      "description": "Basic details about a comment, such as its author and text.",
      "properties": {
        "authorChannelId": {
          "$ref": "CommentSnippetAuthorChannelId"
        },
        "channelId": {
          "type": "string",
          "description": "The id of the corresponding YouTube channel. In case of a channel comment\nthis is the channel the comment refers to. In case of a video comment\nit's the video's channel."
        },
        "authorProfileImageUrl": {
          "description": "The URL for the avatar of the user who posted the comment.",
          "type": "string"
        },
        "likeCount": {
          "description": "The total number of likes this comment has received.",
          "type": "integer",
          "format": "uint32"
        },
        "textDisplay": {
          "type": "string",
          "description": "The comment's text. The format is either plain text or HTML dependent on\nwhat has been requested. Even the plain text representation may differ\nfrom the text originally posted in that it may replace video links with\nvideo titles etc."
        },
        "authorDisplayName": {
          "type": "string",
          "description": "The name of the user who posted the comment."
        },
        "parentId": {
          "description": "The unique id of the parent comment, only set for replies.",
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "description": "The date and time when was last updated . The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "canRate": {
          "description": "Whether the current viewer can rate this comment.",
          "type": "boolean"
        },
        "authorChannelUrl": {
          "description": "Link to the author's YouTube channel, if any.",
          "type": "string"
        },
        "videoId": {
          "type": "string",
          "description": "The ID of the video the comment refers to, if any."
        },
        "publishedAt": {
          "description": "The date and time when the comment was orignally published. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        },
        "viewerRating": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "none",
            "like",
            "dislike"
          ],
          "type": "string",
          "description": "The rating the viewer has given to this comment. For the time being this\nwill never return RATE_TYPE_DISLIKE and instead return RATE_TYPE_NONE.\nThis may change in the future."
        },
        "moderationStatus": {
          "enum": [
            "published",
            "heldForReview",
            "likelySpam",
            "rejected"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The comment's moderation status. Will not be set if the comments were\nrequested through the id filter."
        },
        "textOriginal": {
          "type": "string",
          "description": "The comment's original raw text as initially posted or last updated. The\noriginal text will only be returned if it is accessible to the viewer,\nwhich is only guaranteed if the viewer is the comment's author."
        }
      }
    },
    "Video": {
      "id": "Video",
      "description": "A \u003ccode\u003e\u003cstrong\u003evideo\u003c/strong\u003e\u003c/code\u003e resource represents a YouTube video.",
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "contentDetails": {
          "$ref": "VideoContentDetails",
          "description": "The \u003ccode\u003econtentDetails\u003c/code\u003e object contains information about the video\ncontent, including the length of the video and its aspect ratio."
        },
        "status": {
          "description": "The \u003ccode\u003estatus\u003c/code\u003e object contains information about the video's\nuploading, processing, and privacy statuses.",
          "$ref": "VideoStatus"
        },
        "processingDetails": {
          "description": "The \u003ccode\u003eprocessingDetails\u003c/code\u003e object encapsulates information about\nYouTube's progress in processing the uploaded video file. The properties\nin the object identify the current processing status and an estimate of\nthe time remaining until YouTube finishes processing the video. This part\nalso indicates whether different types of data or content, such as file\ndetails or thumbnail images, are available for the video.\u003cbr\u003e\u003cbr\u003e\nThe \u003ccode\u003eprocessingProgress\u003c/code\u003e object is designed to be polled so\nthat the video uploaded can track the progress that YouTube has made in\nprocessing the uploaded video file. This data can only be retrieved by\nthe video owner.",
          "$ref": "VideoProcessingDetails"
        },
        "localizations": {
          "description": "The \u003ccode\u003elocalizations\u003c/code\u003e object contains localized versions of the\nbasic details about the video, such as its title and description.",
          "type": "object",
          "additionalProperties": {
            "$ref": "VideoLocalization"
          }
        },
        "monetizationDetails": {
          "$ref": "VideoMonetizationDetails",
          "description": "The \u003ccode\u003emonetizationDetails\u003c/code\u003e object encapsulates information\nabout the monetization status of the video."
        },
        "topicDetails": {
          "description": "The \u003ccode\u003etopicDetails\u003c/code\u003e object encapsulates information about \u003ca\nhref=\"http://www.freebase.com\"\u003eFreebase\u003c/a\u003e topics associated with the\nvideo.",
          "$ref": "VideoTopicDetails"
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the video,\nsuch as its title, description, and category.",
          "$ref": "VideoSnippet"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#video\"\u003c/code\u003e.",
          "default": "youtube#video"
        },
        "recordingDetails": {
          "description": "The \u003ccode\u003erecordingDetails\u003c/code\u003e object encapsulates information about the\nlocation, date and address where the video was recorded.",
          "$ref": "VideoRecordingDetails"
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the video.",
          "type": "string"
        },
        "statistics": {
          "description": "The \u003ccode\u003estatistics\u003c/code\u003e object contains statistics about the video.",
          "$ref": "VideoStatistics"
        },
        "player": {
          "$ref": "VideoPlayer",
          "description": "The \u003ccode\u003eplayer\u003c/code\u003e object contains information that you would use to\nplay the video in an embedded player."
        },
        "liveStreamingDetails": {
          "$ref": "VideoLiveStreamingDetails",
          "description": "The \u003ccode\u003eliveStreamingDetails\u003c/code\u003e object contains metadata about a live\nvideo broadcast. The object will only be present in a \u003ccode\u003evideo\u003c/code\u003e\nresource if the video is an upcoming, live, or completed live broadcast."
        },
        "fileDetails": {
          "description": "The \u003ccode\u003efileDetails\u003c/code\u003e object encapsulates information about the\nvideo file that was uploaded to YouTube, including the file's resolution,\nduration, audio and video codecs, stream bitrates, and more. This data can\nonly be retrieved by the video owner.",
          "$ref": "VideoFileDetails"
        },
        "projectDetails": {
          "$ref": "VideoProjectDetails",
          "description": "The \u003ccode\u003eprojectDetails\u003c/code\u003e object contains information about the\nproject specific video metadata."
        },
        "ageGating": {
          "$ref": "VideoAgeGating",
          "description": "Age restriction details related to a video. This data can only be retrieved\nby the video owner."
        },
        "suggestions": {
          "description": "The \u003ccode\u003esuggestions\u003c/code\u003e object encapsulates suggestions that identify\nopportunities to improve the video quality or the metadata for the uploaded\nvideo. This data can only be retrieved by the video owner.",
          "$ref": "VideoSuggestions"
        }
      },
      "type": "object"
    },
    "ChannelSectionSnippet": {
      "properties": {
        "position": {
          "description": "The position of the channel section in the channel.",
          "format": "uint32",
          "type": "integer"
        },
        "channelId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the channel that published\nthe channel section."
        },
        "style": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "channelsectionStyleUnspecified",
            "horizontalRow",
            "verticalList"
          ],
          "description": "The style of the channel section."
        },
        "defaultLanguage": {
          "description": "The language of the channel section's default title and description.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "channelsectionTypeUnspecified",
            "singlePlaylist",
            "multiplePlaylists",
            "popularUploads",
            "recentUploads",
            "likes",
            "allPlaylists",
            "likedPlaylists",
            "recentPosts",
            "recentActivity",
            "liveEvents",
            "upcomingEvents",
            "completedEvents",
            "multipleChannels",
            "postedVideos",
            "postedPlaylists",
            "subscriptions"
          ],
          "description": "The type of the channel section.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "title": {
          "type": "string",
          "description": "The channel section's title for multiple_playlists and multiple_channels."
        },
        "localized": {
          "$ref": "ChannelSectionLocalization",
          "description": "Localized title, read-only."
        }
      },
      "type": "object",
      "id": "ChannelSectionSnippet",
      "description": "Basic details about a channel section, including title, style and position."
    },
    "ActivityContentDetailsUpload": {
      "description": "Information about the uploaded video.",
      "type": "object",
      "properties": {
        "videoId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the uploaded video."
        }
      },
      "id": "ActivityContentDetailsUpload"
    },
    "LocalizedProperty": {
      "id": "LocalizedProperty",
      "type": "object",
      "properties": {
        "defaultLanguage": {
          "$ref": "LanguageTag",
          "description": "The language of the default property."
        },
        "localized": {
          "type": "array",
          "items": {
            "$ref": "LocalizedString"
          }
        },
        "default": {
          "type": "string"
        }
      }
    },
    "VideoContentDetails": {
      "type": "object",
      "description": "Details about the content of a YouTube Video.",
      "properties": {
        "definition": {
          "description": "The value of \u003ccode\u003edefinition\u003c/code\u003e indicates whether the video is\navailable in high definition or only in standard definition.",
          "enum": [
            "sd",
            "hd"
          ],
          "type": "string",
          "enumDescriptions": [
            "sd",
            "hd"
          ]
        },
        "contentRating": {
          "$ref": "ContentRating",
          "description": "Specifies the ratings that the video received under various rating schemes."
        },
        "dimension": {
          "description": "The value of \u003ccode\u003edimension\u003c/code\u003e indicates whether the video is\navailable in 3D or in 2D.",
          "type": "string"
        },
        "hasCustomThumbnail": {
          "type": "boolean",
          "description": "Indicates whether the video uploader has provided a custom\nthumbnail image for the video.\nThis property is only visible to the video uploader."
        },
        "duration": {
          "description": "The length of the video. The tag value is an \u003ca\nhref=\"//en.wikipedia.org/wiki/ISO_8601#Durations\"\u003eISO 8601\u003c/a\u003e duration in\nthe format \u003ccode\u003ePT#M#S\u003c/code\u003e, in which the letters \u003ccode\u003ePT\u003c/code\u003e\nindicate that the value specifies a period of time, and the letters\n\u003ccode\u003eM\u003c/code\u003e and \u003ccode\u003eS\u003c/code\u003e refer to length in minutes and seconds,\nrespectively. The \u003ccode\u003e#\u003c/code\u003e characters preceding the \u003ccode\u003eM\u003c/code\u003e\nand \u003ccode\u003eS\u003c/code\u003e letters are both integers that specify the number of\nminutes (or seconds) of the video. For example, a value of\n\u003ccode\u003ePT15M51S\u003c/code\u003e indicates that the video is 15 minutes and 51 seconds\nlong.",
          "type": "string"
        },
        "caption": {
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "The value of \u003ccode\u003ecaptions\u003c/code\u003e indicates whether the video\nhas captions or not.",
          "enum": [
            "true",
            "false"
          ],
          "type": "string"
        },
        "regionRestriction": {
          "$ref": "VideoContentDetailsRegionRestriction",
          "description": "The \u003ccode\u003eregionRestriction\u003c/code\u003e object contains information about the\ncountries where a video is (or is not) viewable. The object will contain\neither the \u003ccode\u003econtentDetails.regionRestriction.allowed\u003c/code\u003e property\nor the \u003ccode\u003econtentDetails.regionRestriction.blocked\u003c/code\u003e property."
        },
        "projection": {
          "description": "Specifies the projection format of the video.",
          "enum": [
            "rectangular",
            "360"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            ""
          ]
        },
        "licensedContent": {
          "type": "boolean",
          "description": "The value of \u003ccode\u003eis_license_content\u003c/code\u003e indicates whether the video is\nlicensed content."
        },
        "countryRestriction": {
          "$ref": "AccessPolicy",
          "description": "The \u003ccode\u003ecountryRestriction\u003c/code\u003e object contains information about the\ncountries where a video is (or is not) viewable."
        }
      },
      "id": "VideoContentDetails"
    },
    "LiveBroadcastSnippet": {
      "type": "object",
      "description": "Basic broadcast information.",
      "properties": {
        "publishedAt": {
          "description": "The date and time that the broadcast was added to YouTube's live broadcast\nschedule. The value is specified in\n\u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        },
        "isDefaultBroadcast": {
          "type": "boolean",
          "description": "Indicates whether this broadcast is the default broadcast.\nInternal only."
        },
        "actualEndTime": {
          "type": "string",
          "description": "The date and time that the broadcast actually ended. This information is\nonly available once the broadcast's state is \u003ccode\u003ecomplete\u003c/code\u003e. The\nvalue is specified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "channelId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the channel that\nis publishing the broadcast."
        },
        "thumbnails": {
          "$ref": "ThumbnailDetails",
          "description": "A map of thumbnail images associated with the broadcast. For each nested\nobject in this object, the key is the name of the thumbnail image, and\nthe value is an object that contains other information about the\nthumbnail."
        },
        "scheduledStartTime": {
          "type": "string",
          "description": "The date and time that the broadcast is scheduled to start. The value\nis specified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "liveChatId": {
          "description": "The id of the live chat for this broadcast.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The broadcast's description. As with the \u003ccode\u003etitle\u003c/code\u003e, you can set\nthis field by modifying the broadcast resource or by setting the\n\u003ccode\u003e\u003ca\nhref=\"/youtube/v3/docs/videos#snippet.description\"\u003edescription\u003c/a\u003e\u003c/code\u003e\nfield of the corresponding video resource."
        },
        "actualStartTime": {
          "type": "string",
          "description": "The date and time that the broadcast actually started. This information is\nonly available once the broadcast's state is \u003ccode\u003elive\u003c/code\u003e. The\nvalue is specified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "title": {
          "description": "The broadcast's title. Note that the broadcast represents exactly one\nYouTube video. You can set this field by modifying the broadcast resource\nor by setting the\n\u003ccode\u003e\u003ca href=\"/youtube/v3/docs/videos#snippet.title\"\u003etitle\u003c/a\u003e\u003c/code\u003e\nfield of the corresponding video resource.",
          "type": "string"
        },
        "scheduledEndTime": {
          "description": "The date and time that the broadcast is scheduled to end. The value\nis specified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        }
      },
      "id": "LiveBroadcastSnippet"
    },
    "PlaylistItemContentDetails": {
      "id": "PlaylistItemContentDetails",
      "properties": {
        "videoId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify a video. To \u003ca\nhref=\"/youtube/v3/docs/video/list.html\"\u003eretrieve the \u003ccode\u003evideo\u003c/code\u003e\nresource\u003c/a\u003e, set the \u003ccode\u003eid\u003c/code\u003e query parameter to this value in your\nAPI request."
        },
        "endAt": {
          "description": "The time, measured in seconds from the start of the video, when the video\nshould stop playing. (The playlist owner can specify the times when the\nvideo should start and stop playing when the video is played in the context\nof the playlist.) By default, assume that the \u003ccode\u003evideo.endTime\u003c/code\u003e is\nthe end of the video.",
          "type": "string"
        },
        "note": {
          "type": "string",
          "description": "A user-generated note for this item."
        },
        "videoPublishedAt": {
          "type": "string",
          "description": "The date and time that the video was published to YouTube. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "startAt": {
          "type": "string",
          "description": "The time, measured in seconds from the start of the video, when the video\nshould start playing. (The playlist owner can specify the times when the\nvideo should start and stop playing when the video is played in the context\nof the playlist.) The default value is \u003ccode\u003e0\u003c/code\u003e."
        }
      },
      "type": "object"
    },
    "ActivityListResponse": {
      "type": "object",
      "id": "ActivityListResponse",
      "properties": {
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set."
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "prevPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set."
        },
        "items": {
          "items": {
            "$ref": "Activity"
          },
          "type": "array"
        },
        "kind": {
          "default": "youtube#activityListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#activityListResponse\"\u003c/code\u003e.",
          "type": "string"
        }
      }
    },
    "ActivityContentDetailsLike": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "ResourceId",
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object contains information that identifies\nthe rated resource."
        }
      },
      "description": "Information about a resource that received a positive (like) rating.",
      "id": "ActivityContentDetailsLike"
    },
    "SubscriptionListResponse": {
      "id": "SubscriptionListResponse",
      "type": "object",
      "properties": {
        "pageInfo": {
          "$ref": "PageInfo"
        },
        "kind": {
          "type": "string",
          "default": "youtube#subscriptionListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#subscriptionListResponse\"\u003c/code\u003e."
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "items": {
          "description": "A list of subscriptions that match the request criteria.",
          "items": {
            "$ref": "Subscription"
          },
          "type": "array"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        },
        "prevPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set."
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        }
      }
    },
    "ChannelConversionPing": {
      "description": "Pings that the app shall fire (authenticated by biscotti cookie). Each ping\nhas a context, in which the app must fire the ping, and a url identifying the\nping.",
      "properties": {
        "conversionUrl": {
          "description": "The url (without the schema) that the player shall send the ping to.\nIt's at caller's descretion to decide which schema to use (http vs https)\nExample of a returned url: //googleads.g.doubleclick.net/pagead/\nviewthroughconversion/962985656/?data=path%3DtHe_path%3Btype%3D\ncview%3Butuid%3DGISQtTNGYqaYl4sKxoVvKA&labe=default\nThe caller must append biscotti authentication (ms param in case of\nmobile, for example) to this ping.",
          "type": "string"
        },
        "context": {
          "description": "Defines the context of the ping.",
          "enum": [
            "subscribe",
            "unsubscribe",
            "cview"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "id": "ChannelConversionPing",
      "type": "object"
    },
    "Comment": {
      "id": "Comment",
      "description": "A \u003ccode\u003e\u003cstrong\u003ecomment\u003c/strong\u003e\u003c/code\u003e represents a single YouTube comment.",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the comment.",
          "$ref": "CommentSnippet"
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the comment.",
          "type": "string"
        },
        "kind": {
          "default": "youtube#comment",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#comment\"\u003c/code\u003e."
        }
      }
    },
    "VideoStatistics": {
      "properties": {
        "favoriteCount": {
          "description": "The number of users who currently have the video marked as a favorite\nvideo.",
          "type": "string",
          "format": "uint64"
        },
        "commentCount": {
          "format": "uint64",
          "type": "string",
          "description": "The number of comments for the video."
        },
        "dislikeCount": {
          "type": "string",
          "description": "The number of users who have indicated that they disliked the video by\ngiving it a negative rating.",
          "format": "uint64"
        },
        "likeCount": {
          "type": "string",
          "description": "The number of users who have indicated that they liked the video by\ngiving it a positive rating.",
          "format": "uint64"
        },
        "viewCount": {
          "type": "string",
          "description": "The number of times the video has been viewed.",
          "format": "uint64"
        }
      },
      "id": "VideoStatistics",
      "description": "Statistics about the video, such as the number of times the video was viewed\nor liked.",
      "type": "object"
    },
    "ChannelSnippet": {
      "description": "Basic details about a channel, including title, description and thumbnails.",
      "id": "ChannelSnippet",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description of the channel.",
          "type": "string"
        },
        "defaultLanguage": {
          "type": "string",
          "description": "The language of the channel's default title and description."
        },
        "title": {
          "type": "string",
          "description": "The channel's title."
        },
        "localized": {
          "$ref": "ChannelLocalization",
          "description": "Localized title and description, read-only."
        },
        "publishedAt": {
          "description": "The date and time that the channel was created. The value is specified in\n\u003c a href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        },
        "customUrl": {
          "type": "string",
          "description": "The custom url of the channel."
        },
        "country": {
          "type": "string",
          "description": "The country of the channel."
        },
        "thumbnails": {
          "$ref": "ThumbnailDetails",
          "description": "A map of thumbnail images associated with the channel. For each object in\nthe map, the key is the name of the thumbnail image, and the value is an\nobject that contains other information about the thumbnail.\u003cbr\u003e\u003cbr\u003e When\ndisplaying thumbnails in your application, make sure that your code uses\nthe image URLs exactly as they are returned in API responses. For example,\nyour application should not use the \u003ccode\u003ehttp\u003c/code\u003e domain instead of the\n\u003ccode\u003ehttps\u003c/code\u003e domain in a URL returned in an API response.\u003cbr\u003e\u003cbr\u003e\nBeginning in July 2018, channel thumbnail URLs will only be available in\nthe \u003ccode\u003ehttps\u003c/code\u003e domain, which is how the URLs appear in API\nresponses. After that time, you might see broken images in your application\nif it tries to load YouTube images from the \u003ccode\u003ehttp\u003c/code\u003e domain."
        }
      }
    },
    "Member": {
      "id": "Member",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "kind": {
          "default": "youtube#member",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#member\"\u003c/code\u003e."
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the member.",
          "$ref": "MemberSnippet"
        }
      },
      "description": "A \u003ccode\u003e\u003cstrong\u003emember\u003c/strong\u003e\u003c/code\u003e resource represents a member for a\nYouTube channel. A member provides recurring monetary support to a creator\nand receives special benefits.",
      "type": "object"
    },
    "ActivityContentDetailsComment": {
      "type": "object",
      "id": "ActivityContentDetailsComment",
      "description": "Information about a resource that received a comment.",
      "properties": {
        "resourceId": {
          "$ref": "ResourceId",
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object contains information that\nidentifies the resource associated with the comment."
        }
      }
    },
    "LiveChatModeratorSnippet": {
      "id": "LiveChatModeratorSnippet",
      "type": "object",
      "properties": {
        "liveChatId": {
          "description": "The ID of the live chat this moderator can act on.",
          "type": "string"
        },
        "moderatorDetails": {
          "description": "Details about the moderator.",
          "$ref": "ChannelProfileDetails"
        }
      }
    },
    "LiveBroadcastListResponse": {
      "id": "LiveBroadcastListResponse",
      "properties": {
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "General pagination information."
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set."
        },
        "items": {
          "description": "A list of broadcasts that match the request criteria.",
          "type": "array",
          "items": {
            "$ref": "LiveBroadcast"
          }
        },
        "kind": {
          "type": "string",
          "default": "youtube#liveBroadcastListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#liveBroadcastListResponse\"\u003c/code\u003e."
        },
        "prevPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set."
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChannelSectionListResponse": {
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of ChannelSections that match the request criteria.",
          "items": {
            "$ref": "ChannelSection"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#channelSectionListResponse\"\u003c/code\u003e.",
          "default": "youtube#channelSectionListResponse"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ChannelSectionListResponse"
    },
    "LiveChatMessageListResponse": {
      "type": "object",
      "properties": {
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "kind": {
          "default": "youtube#liveChatMessageListResponse",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#liveChatMessageListResponse\"\u003c/code\u003e."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "nextPageToken": {
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "LiveChatMessage"
          },
          "type": "array"
        },
        "pollingIntervalMillis": {
          "description": "The amount of time the client should wait before polling again.",
          "format": "uint32",
          "type": "integer"
        },
        "offlineAt": {
          "type": "string",
          "description": "The date and time when the underlying stream went offline. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        }
      },
      "id": "LiveChatMessageListResponse"
    },
    "CommentThreadListResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set."
        },
        "items": {
          "items": {
            "$ref": "CommentThread"
          },
          "description": "A list of comment threads that match the request criteria.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "default": "youtube#commentThreadListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#commentThreadListResponse\"\u003c/code\u003e."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "General pagination information."
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        }
      },
      "id": "CommentThreadListResponse"
    },
    "Caption": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#caption\"\u003c/code\u003e.",
          "default": "youtube#caption",
          "type": "string"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the caption.",
          "$ref": "CaptionSnippet"
        },
        "id": {
          "annotations": {
            "required": [
              "youtube.captions.update"
            ]
          },
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the caption track."
        }
      },
      "type": "object",
      "id": "Caption",
      "description": "A \u003ccode\u003e\u003cstrong\u003ecaption\u003c/strong\u003e\u003c/code\u003e resource represents a YouTube\ncaption track. A caption track is associated with exactly one YouTube\nvideo."
    },
    "VideoSnippet": {
      "type": "object",
      "properties": {
        "categoryId": {
          "description": "The YouTube \u003ca href=\"/youtube/v3/docs/videoCategories/list\"\u003evideo\ncategory\u003c/a\u003e associated with the video.",
          "type": "string"
        },
        "liveBroadcastContent": {
          "description": "Indicates if the video is an upcoming/active live broadcast.\nOr it's \"none\" if the video is not an upcoming/active live broadcast.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "none",
            "upcoming",
            "live",
            "completed"
          ]
        },
        "thumbnails": {
          "$ref": "ThumbnailDetails",
          "description": "A map of thumbnail images associated with the video. For each object in the\nmap, the key is the name of the thumbnail image, and the value is an object\nthat contains other information about the thumbnail."
        },
        "description": {
          "description": "The video's description.\n@mutable youtube.videos.insert youtube.videos.update",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "The video's title.\n@mutable youtube.videos.insert youtube.videos.update"
        },
        "defaultAudioLanguage": {
          "description": "The \u003ccode\u003edefault_audio_language\u003c/code\u003e property specifies the language\nspoken in the video's default audio track.",
          "type": "string"
        },
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the channel that the\nvideo was uploaded to.",
          "type": "string"
        },
        "publishedAt": {
          "description": "The date and time that the video was uploaded. The value is specified\nin \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        },
        "defaultLanguage": {
          "description": "The language of the videos's default snippet.",
          "type": "string"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "description": "A list of keyword tags associated with the video. Tags may contain spaces.",
          "type": "array"
        },
        "channelTitle": {
          "description": "Channel title for the channel that the video belongs to.",
          "type": "string"
        },
        "localized": {
          "description": "Localized snippet selected with the hl parameter. If no such localization\nexists, this field is populated with the default snippet. (Read-only)",
          "$ref": "VideoLocalization"
        }
      },
      "id": "VideoSnippet",
      "description": "Basic details about a video, including title, description, uploader,\nthumbnails and category."
    },
    "SearchListResponse": {
      "id": "SearchListResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set."
        },
        "items": {
          "items": {
            "$ref": "SearchResult"
          },
          "description": "Pagination information for token pagination.",
          "type": "array"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "kind": {
          "default": "youtube#searchListResponse",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#searchListResponse\"\u003c/code\u003e."
        },
        "regionCode": {
          "type": "string"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set.",
          "type": "string"
        }
      }
    },
    "VideoAbuseReportSecondaryReason": {
      "type": "object",
      "id": "VideoAbuseReportSecondaryReason",
      "properties": {
        "label": {
          "type": "string",
          "description": "The localized label for this abuse report secondary reason."
        },
        "id": {
          "description": "The ID of this abuse report secondary reason.",
          "type": "string"
        }
      }
    },
    "GuideCategorySnippet": {
      "description": "Basic details about a guide category.",
      "type": "object",
      "id": "GuideCategorySnippet",
      "properties": {
        "title": {
          "description": "Description of the guide category.",
          "type": "string"
        },
        "channelId": {
          "type": "string"
        }
      }
    },
    "VideoSuggestions": {
      "description": "Specifies suggestions on how to improve video content,\nincluding encoding hints, tag suggestions, and editor suggestions.",
      "type": "object",
      "properties": {
        "tagSuggestions": {
          "description": "A list of keyword tags that could be added to the video's metadata to\nincrease the likelihood that users will locate your video when searching\nor browsing on YouTube.",
          "type": "array",
          "items": {
            "$ref": "VideoSuggestionsTagSuggestion"
          }
        },
        "processingWarnings": {
          "items": {
            "enum": [
              "unknownContainer",
              "unknownVideoCodec",
              "unknownAudioCodec",
              "inconsistentResolution",
              "hasEditlist",
              "problematicVideoCodec",
              "problematicAudioCodec",
              "unsupportedVrStereoMode",
              "unsupportedSphericalProjectionType",
              "unsupportedHdrPixelFormat",
              "unsupportedHdrColorMetadata",
              "problematicHdrLookupTable"
            ],
            "type": "string"
          },
          "enumDescriptions": [
            "Unrecognized file format, transcoding is likely to fail.",
            "Unrecognized video codec, transcoding is likely to fail.",
            "Unrecognized audio codec, transcoding is likely to fail.",
            "Conflicting container and stream resolutions.",
            "Edit lists are not currently supported.",
            "Video codec that is known to cause problems was used.",
            "Audio codec that is known to cause problems was used.",
            "Unsupported VR video stereo mode.",
            "Unsupported spherical video projection type.",
            "Unsupported HDR pixel format.",
            "Unspecified HDR color metadata.",
            "Problematic HDR lookup table attached."
          ],
          "description": "A list of reasons why YouTube may have difficulty transcoding the\nuploaded video or that might result in an erroneous transcoding.\nThese warnings are generated before YouTube actually processes the\nuploaded video file. In addition, they identify issues that are unlikely\nto cause the video processing to fail but that might cause problems\nsuch as sync issues, video artifacts, or a missing audio track.",
          "type": "array"
        },
        "editorSuggestions": {
          "enumDescriptions": [
            "Picture brightness levels seem off and could be corrected.",
            "The video appears shaky and could be stabilized.",
            "Margins (mattes) detected around the picture could be cropped.",
            "The audio track appears silent and could be swapped with a\nbetter quality one."
          ],
          "items": {
            "type": "string",
            "enum": [
              "videoAutoLevels",
              "videoStabilize",
              "videoCrop",
              "audioQuietAudioSwap"
            ]
          },
          "type": "array",
          "description": "A list of video editing operations that might improve the video quality\nor playback experience of the uploaded video."
        },
        "processingHints": {
          "items": {
            "enum": [
              "nonStreamableMov",
              "sendBestQualityVideo",
              "sphericalVideo",
              "spatialAudio",
              "vrVideo",
              "hdrVideo"
            ],
            "type": "string"
          },
          "description": "A list of suggestions that may improve YouTube's ability to process the\nvideo.",
          "type": "array",
          "enumDescriptions": [
            "The MP4 file is not streamable, this will slow down the processing.\n MOOV atom was not found at the beginning of the file.",
            "Probably a better quality version of the video exists.\n The video has wide screen aspect ratio, but is not an HD video.",
            "Uploaded video is spherical video.",
            "Uploaded video has spatial audio.",
            "Uploaded video is VR video.",
            "Uploaded video is HDR video."
          ]
        },
        "processingErrors": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "audioFile",
              "imageFile",
              "projectFile",
              "notAVideoFile",
              "docFile",
              "archiveFile",
              "unsupportedSpatialAudioLayout"
            ]
          },
          "description": "A list of errors that will prevent YouTube from successfully processing\nthe uploaded video video. These errors indicate that, regardless of the\nvideo's current \u003ca href=\"#processingProgress.processingStatus\"\u003eprocessing\nstatus\u003c/a\u003e, eventually, that status will almost certainly be\n\u003ccode\u003efailed\u003c/code\u003e.",
          "enumDescriptions": [
            "File contains audio only (e.g., an MP3 file).",
            "Image file (e.g., a JPEG image).",
            "Movie project file (e.g., Microsoft Windows Movie Maker project).",
            "Other non-video file.",
            "Document or text file (e.g., MS Word document).",
            "An archive file (e.g., a ZIP archive).",
            "Unsupported spatial audio layout type."
          ]
        }
      },
      "id": "VideoSuggestions"
    },
    "LiveStreamConfigurationIssue": {
      "properties": {
        "severity": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "How severe this issue is to the stream.",
          "enum": [
            "info",
            "warning",
            "error"
          ]
        },
        "description": {
          "type": "string",
          "description": "The long-form description of the issue and how to resolve it."
        },
        "type": {
          "enum": [
            "gopSizeOver",
            "gopSizeLong",
            "gopSizeShort",
            "openGop",
            "badContainer",
            "audioBitrateHigh",
            "audioBitrateLow",
            "audioSampleRate",
            "bitrateHigh",
            "bitrateLow",
            "audioCodec",
            "videoCodec",
            "noAudioStream",
            "noVideoStream",
            "multipleVideoStreams",
            "multipleAudioStreams",
            "audioTooManyChannels",
            "interlacedVideo",
            "frameRateHigh",
            "resolutionMismatch",
            "videoCodecMismatch",
            "videoInterlaceMismatch",
            "videoProfileMismatch",
            "videoBitrateMismatch",
            "framerateMismatch",
            "gopMismatch",
            "audioSampleRateMismatch",
            "audioStereoMismatch",
            "audioCodecMismatch",
            "audioBitrateMismatch",
            "videoResolutionSuboptimal",
            "videoResolutionUnsupported",
            "videoIngestionStarved",
            "videoIngestionFasterThanRealtime"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "The kind of error happening.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "The short-form reason for this issue."
        }
      },
      "type": "object",
      "id": "LiveStreamConfigurationIssue"
    },
    "PlaylistContentDetails": {
      "id": "PlaylistContentDetails",
      "type": "object",
      "properties": {
        "itemCount": {
          "format": "uint32",
          "description": "The number of videos in the playlist.",
          "type": "integer"
        }
      }
    },
    "I18nRegionListResponse": {
      "id": "I18nRegionListResponse",
      "properties": {
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#i18nRegionListResponse\"\u003c/code\u003e.",
          "type": "string",
          "default": "youtube#i18nRegionListResponse"
        },
        "items": {
          "items": {
            "$ref": "I18nRegion"
          },
          "type": "array",
          "description": "A list of regions where YouTube is available. In this map, the i18n region\nID is the map key, and its value is the corresponding\n\u003ccode\u003ei18nRegion\u003c/code\u003e resource."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        }
      },
      "type": "object"
    },
    "InvideoPosition": {
      "id": "InvideoPosition",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "corner"
          ],
          "description": "Defines the position type.",
          "enumDescriptions": [
            ""
          ]
        },
        "cornerPosition": {
          "description": "Describes in which corner of the video the visual widget will appear.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "topLeft",
            "topRight",
            "bottomLeft",
            "bottomRight"
          ]
        }
      },
      "description": "Describes the spatial position of a visual widget inside a video. It is a\nunion of various position types, out of which only will be set one."
    },
    "PropertyValue": {
      "id": "PropertyValue",
      "properties": {
        "value": {
          "description": "The property's value.",
          "type": "string"
        },
        "property": {
          "type": "string",
          "description": "A property."
        }
      },
      "description": "A pair Property / Value.",
      "type": "object"
    },
    "PlaylistLocalization": {
      "properties": {
        "title": {
          "description": "The localized strings for playlist's title.",
          "type": "string"
        },
        "description": {
          "description": "The localized strings for playlist's description.",
          "type": "string"
        }
      },
      "description": "Playlist localization setting",
      "id": "PlaylistLocalization",
      "type": "object"
    },
    "InvideoBranding": {
      "id": "InvideoBranding",
      "description": "LINT.IfChange\nDescribes an invideo branding.",
      "properties": {
        "imageBytes": {
          "format": "byte",
          "description": "The bytes the uploaded image. Only used in api to youtube communication.",
          "type": "string"
        },
        "targetChannelId": {
          "type": "string",
          "description": "The channel to which this branding links. If not present it defaults to\nthe current channel."
        },
        "position": {
          "$ref": "InvideoPosition",
          "description": "The spatial position within the video where the branding watermark will be\ndisplayed."
        },
        "timing": {
          "description": "The temporal position within the video where watermark will be displayed.",
          "$ref": "InvideoTiming"
        },
        "imageUrl": {
          "description": "The url of the uploaded image. Only used in apiary to api communication.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ActivityContentDetailsBulletin": {
      "properties": {
        "resourceId": {
          "$ref": "ResourceId",
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object contains information that\nidentifies the resource associated with a bulletin post.\n@mutable youtube.activities.insert"
        }
      },
      "type": "object",
      "id": "ActivityContentDetailsBulletin",
      "description": "Details about a channel bulletin post."
    },
    "ChannelStatus": {
      "type": "object",
      "properties": {
        "selfDeclaredMadeForKids": {
          "type": "boolean"
        },
        "isLinked": {
          "description": "If true, then the user is linked to either a YouTube username or G+\naccount. Otherwise, the user doesn't have a public YouTube identity.",
          "type": "boolean"
        },
        "madeForKids": {
          "type": "boolean"
        },
        "longUploadsStatus": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "longUploadsUnspecified",
            "allowed",
            "eligible",
            "disallowed"
          ],
          "type": "string",
          "description": "The long uploads status of this channel. See\nhttps://support.google.com/youtube/answer/71673 for more information."
        },
        "privacyStatus": {
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "description": "Privacy status of the channel.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "description": "JSON template for the status part of a channel.",
      "id": "ChannelStatus"
    },
    "LiveBroadcastContentDetails": {
      "type": "object",
      "description": "Detailed settings of a broadcast.",
      "properties": {
        "mesh": {
          "format": "byte",
          "description": "The mesh for projecting the video if \u003ccode\u003eprojection\u003c/code\u003e is\n\u003ccode\u003emesh\u003c/code\u003e. The mesh value must be a UTF-8 string containing the\nbase-64 encoding of 3D mesh data that follows the \u003ca\nhref=\"https://github.com/google/spatial-media/blob/master/docs/spherical-video-v2-rfc.md\"\u003e\nSpherical Video V2 RFC specification\u003c/a\u003e for an mshp box, excluding the box\nsize and type but including the following four reserved zero bytes for the\nversion and flags.",
          "type": "string"
        },
        "enableAutoStop": {
          "description": "This setting indicates whether auto stop is enabled for this broadcast.\nThe default value for this property is \u003ccode\u003efalse\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003e\nThis setting can only be used by Events.",
          "type": "boolean"
        },
        "enableEmbed": {
          "description": "This setting indicates whether the broadcast video can be played in an\nembedded player. If you choose to archive the video (using the\n\u003ccode\u003eenableArchive\u003c/code\u003e property), this setting will also apply to\nthe archived video.",
          "annotations": {
            "required": [
              "youtube.liveBroadcasts.update"
            ]
          },
          "type": "boolean"
        },
        "recordFromStart": {
          "type": "boolean",
          "description": "Automatically start recording after the event goes live.\nThe default value for this property is \u003ccode\u003etrue\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003e\n\n\u003cstrong\u003eImportant:\u003c/strong\u003e You must also set the \u003ccode\u003eenableDvr\u003c/code\u003e\nproperty's value to\n\u003ccode\u003etrue\u003c/code\u003e if you want the playback to be available immediately\nafter the broadcast ends. If you set this property's value to\n\u003ccode\u003etrue\u003c/code\u003e but do not also set the \u003ccode\u003eenableDvr\u003c/code\u003e property\nto \u003ccode\u003etrue\u003c/code\u003e, there may be a delay of around one day before the\narchived video will be available for playback.",
          "annotations": {
            "required": [
              "youtube.liveBroadcasts.update"
            ]
          }
        },
        "enableDvr": {
          "type": "boolean",
          "description": "This setting determines whether viewers can access DVR controls while\nwatching the video. DVR controls enable the viewer to control the video\nplayback experience by pausing, rewinding, or fast forwarding content.\nThe default value for this property is \u003ccode\u003etrue\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003e\n\n\u003cstrong\u003eImportant:\u003c/strong\u003e You must set the value to \u003ccode\u003etrue\u003c/code\u003e\nand also set the \u003ccode\u003eenableArchive\u003c/code\u003e property's value to\n\u003ccode\u003etrue\u003c/code\u003e if you want to make playback available immediately\nafter the broadcast ends.",
          "annotations": {
            "required": [
              "youtube.liveBroadcasts.update"
            ]
          }
        },
        "boundStreamId": {
          "type": "string",
          "description": "This value uniquely identifies the\n\u003ccode\u003e\u003ca href=\"/youtube/v3/live/docs/liveStreams\"\u003elive stream\u003c/a\u003e\u003c/code\u003e\nbound to the broadcast."
        },
        "startWithSlate": {
          "annotations": {
            "required": [
              "youtube.liveBroadcasts.update"
            ]
          },
          "description": "This setting indicates whether the broadcast should automatically begin\nwith an \u003ca\nhref=\"/youtube/v3/live/getting-started#Displaying_Slates\"\u003ein-stream\nslate\u003c/a\u003e when you update the broadcast's status to \u003ccode\u003elive\u003c/code\u003e.\nAfter updating the status, you then need to send a\n\u003ccode\u003e\u003ca\nhref=\"/youtube/v3/live/docs/liveCuepoints/insert\"\u003eliveCuepoints.insert\u003c/a\u003e\u003c/code\u003e\nrequest that sets the cuepoint's \u003ccode\u003eeventState\u003c/code\u003e to\n\u003ccode\u003eend\u003c/code\u003e to remove the in-stream slate and make your broadcast\nstream visible to viewers.",
          "type": "boolean"
        },
        "monitorStream": {
          "description": "The \u003ccode\u003emonitorStream\u003c/code\u003e object contains information about the\nmonitor stream, which the broadcaster can use to review the event\ncontent before the broadcast stream is shown publicly.",
          "$ref": "MonitorStreamInfo"
        },
        "enableClosedCaptions": {
          "type": "boolean",
          "description": "This setting indicates whether HTTP POST closed captioning is enabled for\nthis broadcast. The ingestion URL of the closed captions is returned\nthrough the liveStreams API.  This is mutually exclusive with using the\n\u003ccode\u003eclosed_captions_type\u003c/code\u003e property, and is equivalent to setting\n\u003ccode\u003eclosed_captions_type\u003c/code\u003e to CLOSED_CAPTIONS_HTTP_POST."
        },
        "projection": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The projection format of this broadcast. This defaults to\n\u003ccode\u003erectangular\u003c/code\u003e.",
          "type": "string",
          "enum": [
            "projectionUnspecified",
            "rectangular",
            "360",
            "mesh"
          ]
        },
        "enableContentEncryption": {
          "description": "This setting indicates whether YouTube should enable content encryption\nfor the broadcast.",
          "annotations": {
            "required": [
              "youtube.liveBroadcasts.update"
            ]
          },
          "type": "boolean"
        },
        "latencyPreference": {
          "description": "If both this and enable_low_latency are set, they must match.\nLATENCY_NORMAL should match enable_low_latency=false\nLATENCY_LOW should match enable_low_latency=true\nLATENCY_ULTRA_LOW should have enable_low_latency omitted.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Best for: highest quality viewer playbacks and higher resolutions.",
            "Best for: near real-time interaction, with minimal playback buffering.",
            "Best for: real-time interaction\nDoes not support: Closed captions, 1440p, and 4k resolutions"
          ],
          "enum": [
            "latencyPreferenceUnspecified",
            "normal",
            "low",
            "ultraLow"
          ]
        },
        "closedCaptionsType": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "closedCaptionsTypeUnspecified",
            "closedCaptionsDisabled",
            "closedCaptionsHttpPost",
            "closedCaptionsEmbedded"
          ],
          "type": "string"
        },
        "boundStreamLastUpdateTimeMs": {
          "type": "string",
          "description": "The date and time that the live stream referenced by\n\u003ccode\u003eboundStreamId\u003c/code\u003e was last updated."
        },
        "enableAutoStart": {
          "type": "boolean",
          "description": "This setting indicates whether auto start is enabled for this broadcast.\n The default value for this property is \u003ccode\u003efalse\u003c/code\u003e.\u003cbr\u003e\u003cbr\u003e\n This setting can only be used by Events."
        },
        "enableLowLatency": {
          "description": "Indicates whether this broadcast has low latency enabled.",
          "type": "boolean"
        }
      },
      "id": "LiveBroadcastContentDetails"
    },
    "ActivityContentDetails": {
      "properties": {
        "favorite": {
          "description": "The \u003ccode\u003efavorite\u003c/code\u003e object contains information about a video that\nwas marked as a favorite video. This property is only present if the\n\u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003efavorite\u003c/code\u003e.",
          "$ref": "ActivityContentDetailsFavorite"
        },
        "channelItem": {
          "description": "The \u003ccode\u003echannelItem\u003c/code\u003e object contains details about a resource\nwhich was added to a channel. This property is only present if the\n\u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003echannelItem\u003c/code\u003e.",
          "$ref": "ActivityContentDetailsChannelItem"
        },
        "like": {
          "description": "The \u003ccode\u003elike\u003c/code\u003e object contains information about a resource that\nreceived a positive (like) rating. This property is only present if\nthe \u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003elike\u003c/code\u003e.",
          "$ref": "ActivityContentDetailsLike"
        },
        "bulletin": {
          "$ref": "ActivityContentDetailsBulletin",
          "description": "The \u003ccode\u003ebulletin\u003c/code\u003e object contains details about a channel\nbulletin post. This object is only present if the\n\u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003ebulletin\u003c/code\u003e."
        },
        "upload": {
          "description": "The \u003ccode\u003eupload\u003c/code\u003e object contains information about the uploaded\nvideo. This property is only present if the \u003ccode\u003esnippet.type\u003c/code\u003e\nis \u003ccode\u003eupload\u003c/code\u003e.",
          "$ref": "ActivityContentDetailsUpload"
        },
        "comment": {
          "description": "The \u003ccode\u003ecomment\u003c/code\u003e object contains information about a resource\nthat received a comment. This property is only present if the\n\u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003ecomment\u003c/code\u003e.",
          "$ref": "ActivityContentDetailsComment"
        },
        "recommendation": {
          "$ref": "ActivityContentDetailsRecommendation",
          "description": "The \u003ccode\u003erecommendation\u003c/code\u003e object contains information about a\nrecommended resource. This property is only present if the\n\u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003erecommendation\u003c/code\u003e."
        },
        "playlistItem": {
          "description": "The \u003ccode\u003eplaylistItem\u003c/code\u003e object contains information about a\nnew playlist item. This property is only present if the\n\u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003eplaylistItem\u003c/code\u003e.",
          "$ref": "ActivityContentDetailsPlaylistItem"
        },
        "social": {
          "$ref": "ActivityContentDetailsSocial",
          "description": "The \u003ccode\u003esocial\u003c/code\u003e object contains details about a social network\npost. This property is only present if the \u003ccode\u003esnippet.type\u003c/code\u003e\nis \u003ccode\u003esocial\u003c/code\u003e."
        },
        "subscription": {
          "description": "The \u003ccode\u003esubscription\u003c/code\u003e object contains information about a\nchannel that a user subscribed to. This property is only\npresent if the \u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003esubscription\u003c/code\u003e.",
          "$ref": "ActivityContentDetailsSubscription"
        },
        "promotedItem": {
          "$ref": "ActivityContentDetailsPromotedItem",
          "description": "The \u003ccode\u003epromotedItem\u003c/code\u003e object contains details about a resource\nwhich is being promoted. This property is only present if the\n\u003ccode\u003esnippet.type\u003c/code\u003e is \u003ccode\u003epromotedItem\u003c/code\u003e."
        }
      },
      "id": "ActivityContentDetails",
      "type": "object",
      "description": "Details about the content of an activity: the video that was shared, the\nchannel that was subscribed to, etc."
    },
    "LiveChatMessage": {
      "id": "LiveChatMessage",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "default": "youtube#liveChatMessage",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#liveChatMessage\"\u003c/code\u003e."
        },
        "authorDetails": {
          "$ref": "LiveChatMessageAuthorDetails",
          "description": "The \u003ccode\u003eauthorDetails\u003c/code\u003e object contains basic details about the\nuser that posted this message."
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the message.",
          "$ref": "LiveChatMessageSnippet"
        },
        "id": {
          "type": "string",
          "description": "The ID that YouTube assigns to uniquely identify the message."
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        }
      },
      "description": "A \u003ccode\u003e\u003cstrong\u003eliveChatMessage\u003c/strong\u003e\u003c/code\u003e resource represents a chat\nmessage in a YouTube Live Chat."
    },
    "LiveChatUserBannedMessageDetails": {
      "type": "object",
      "id": "LiveChatUserBannedMessageDetails",
      "properties": {
        "bannedUserDetails": {
          "description": "The details of the user that was banned.",
          "$ref": "ChannelProfileDetails"
        },
        "banType": {
          "enumDescriptions": [
            "",
            ""
          ],
          "description": "The type of ban.",
          "type": "string",
          "enum": [
            "permanent",
            "temporary"
          ]
        },
        "banDurationSeconds": {
          "description": "The duration of the ban. This property is only present if the\n\u003ccode\u003ebanType\u003c/code\u003e is \u003ccode\u003etemporary\u003c/code\u003e.",
          "format": "uint64",
          "type": "string"
        }
      }
    },
    "LiveStreamStatus": {
      "type": "object",
      "id": "LiveStreamStatus",
      "properties": {
        "streamStatus": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "created",
            "ready",
            "active",
            "inactive",
            "error"
          ]
        },
        "healthStatus": {
          "description": "The health status of the stream.",
          "$ref": "LiveStreamHealthStatus"
        }
      },
      "description": "Brief description of the live stream status."
    },
    "Thumbnail": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The thumbnail image's URL."
        },
        "width": {
          "format": "uint32",
          "description": "(Optional) Width of the thumbnail image.",
          "type": "integer"
        },
        "height": {
          "type": "integer",
          "description": "(Optional) Height of the thumbnail image.",
          "format": "uint32"
        }
      },
      "description": "A thumbnail is an image representing a YouTube resource.",
      "id": "Thumbnail"
    },
    "PlaylistItemSnippet": {
      "properties": {
        "publishedAt": {
          "type": "string",
          "description": "The date and time that the item was added to the playlist. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "title": {
          "type": "string",
          "description": "The item's title."
        },
        "thumbnails": {
          "$ref": "ThumbnailDetails",
          "description": "A map of thumbnail images associated with the playlist item. For each\nobject in the map, the key is the name of the thumbnail image, and the\nvalue is an object that contains other information about the thumbnail."
        },
        "channelId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the user that added\nthe item to the playlist."
        },
        "resourceId": {
          "description": "The \u003ccode\u003eid\u003c/code\u003e object contains information that can be used to\nuniquely identify the resource that is included in the playlist as\nthe playlist item.",
          "$ref": "ResourceId"
        },
        "position": {
          "description": "The order in which the item appears in the playlist. The value uses a\nzero-based index, so the first item has a position of \u003ccode\u003e0\u003c/code\u003e,\nthe second item has a position of \u003ccode\u003e1\u003c/code\u003e, and so forth.",
          "format": "uint32",
          "type": "integer"
        },
        "description": {
          "description": "The item's description.",
          "type": "string"
        },
        "playlistId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify thGe playlist that the\nplaylist item is in."
        },
        "channelTitle": {
          "description": "Channel title for the channel that the playlist item belongs to.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Basic details about a playlist, including title, description and thumbnails.\nBasic details of a YouTube Playlist item provided by the author.\nNext ID: 13",
      "id": "PlaylistItemSnippet"
    },
    "Playlist": {
      "description": "A \u003ccode\u003e\u003cstrong\u003eplaylist\u003c/strong\u003e\u003c/code\u003e resource represents a YouTube\nplaylist. A playlist is a collection of videos that can be viewed\nsequentially and shared with other users. A playlist can contain up to\n200 videos, and YouTube does not limit the number of playlists that\neach user creates. By default, playlists are publicly visible to other\nusers, but playlists can be public or private.  \u003cbr/\u003e\u003cbr/\u003e YouTube\nalso uses playlists to identify special collections of videos for a\nchannel, such as:\n  \u003cul\u003e\n    \u003cli\u003euploaded videos\u003c/li\u003e\n    \u003cli\u003efavorite videos\u003c/li\u003e\n    \u003cli\u003epositively rated (liked) videos\u003c/li\u003e\n    \u003cli\u003ewatch history\u003c/li\u003e\n    \u003cli\u003ewatch later\u003c/li\u003e\n  \u003c/ul\u003e\nTo be more specific, these lists are associated with a channel, which\nis a collection of a person, group, or company's videos, playlists,\nand other YouTube information.  You can retrieve the playlist IDs for\neach of these lists from the \u003ccode\u003e\u003ca\nhref=\\\"/youtube/v3/docs/channels\\\"\u003e channel resource\u003c/a\u003e\u003c/code\u003e for a\ngiven channel.\u003cbr/\u003e\u003cbr/\u003e You can then use the \u003ccode\u003e \u003ca\nhref=\\\"/youtube/v3/docs/playlistItems/list\\\"\u003e\nplaylistItems.list\u003c/a\u003e\u003c/code\u003e method to retrieve any of those\nlists. You can also add or remove items from those lists by calling\nthe \u003ccode\u003e \u003ca href=\\\"/youtube/v3/docs/playlistItems/insert\\\"\u003e\nplaylistItems.insert\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e \u003ca\nhref=\\\"/youtube/v3/docs/playlistItems/delete\\\"\u003e\nplaylistItems.delete\u003c/a\u003e\u003c/code\u003e methods.",
      "type": "object",
      "properties": {
        "contentDetails": {
          "$ref": "PlaylistContentDetails",
          "description": "The \u003ccode\u003econtentDetails\u003c/code\u003e object contains information like\nvideo count."
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "status": {
          "$ref": "PlaylistStatus",
          "description": "The \u003ccode\u003estatus\u003c/code\u003e object contains status information for the\nplaylist."
        },
        "localizations": {
          "type": "object",
          "additionalProperties": {
            "$ref": "PlaylistLocalization"
          },
          "description": "Localizations for different languages"
        },
        "player": {
          "$ref": "PlaylistPlayer",
          "description": "The \u003ccode\u003eplayer\u003c/code\u003e object contains information that you would use\nto play the playlist in an embedded player."
        },
        "id": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the playlist."
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the\nplaylist, such as its title and description.",
          "$ref": "PlaylistSnippet"
        },
        "kind": {
          "type": "string",
          "default": "youtube#playlist",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#playlist\"\u003c/code\u003e."
        }
      },
      "id": "Playlist"
    },
    "LiveChatMessageRetractedDetails": {
      "id": "LiveChatMessageRetractedDetails",
      "type": "object",
      "properties": {
        "retractedMessageId": {
          "type": "string"
        }
      }
    },
    "SuperStickerMetadata": {
      "id": "SuperStickerMetadata",
      "properties": {
        "stickerId": {
          "type": "string",
          "description": "Unique identifier of the Super Sticker. This is a shorter form of the\nalt_text that includes pack name and a recognizable characteristic of the\nsticker."
        },
        "altText": {
          "type": "string",
          "description": "Internationalized alt text that describes the sticker image and any\nanimation associated with it."
        },
        "altTextLanguage": {
          "type": "string",
          "description": "Specifies the localization language in which the alt text is returned."
        }
      },
      "type": "object"
    },
    "GeoPoint": {
      "type": "object",
      "description": "Geographical coordinates of a point, in WGS84.",
      "properties": {
        "longitude": {
          "description": "Longitude in degrees.",
          "format": "double",
          "type": "number"
        },
        "altitude": {
          "format": "double",
          "description": "Altitude above the reference ellipsoid, in meters.",
          "type": "number"
        },
        "latitude": {
          "description": "Latitude in degrees.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "GeoPoint"
    },
    "VideoLocalization": {
      "type": "object",
      "description": "Localized versions of certain video properties (e.g. title).",
      "id": "VideoLocalization",
      "properties": {
        "title": {
          "type": "string",
          "description": "Localized version of the video's title."
        },
        "description": {
          "description": "Localized version of the video's description.",
          "type": "string"
        }
      }
    },
    "ChannelContentDetails": {
      "id": "ChannelContentDetails",
      "properties": {
        "relatedPlaylists": {
          "type": "object",
          "properties": {
            "favorites": {
              "type": "string",
              "description": "The ID of the playlist that contains the channel\"s favorite videos. Use\nthe \u003ccode\u003e \u003ca\nhref=\"/youtube/v3/docs/playlistItems/insert\"\u003eplaylistItems.insert\u003c/a\u003e\u003c/code\u003e\nand \u003ccode\u003e \u003ca\nhref=\"/youtube/v3/docs/playlistItems/delete\"\u003eplaylistItems.delete\u003c/a\u003e\u003c/code\u003e\nto add or remove items from that list."
            },
            "watchHistory": {
              "type": "string",
              "description": "The ID of the playlist that contains the channel\"s watch history. Use the\n\u003ccode\u003e \u003ca\nhref=\"/youtube/v3/docs/playlistItems/insert\"\u003eplaylistItems.insert\u003c/a\u003e\u003c/code\u003e\nand \u003ccode\u003e \u003ca\nhref=\"/youtube/v3/docs/playlistItems/delete\"\u003eplaylistItems.delete\u003c/a\u003e\u003c/code\u003e\nto add or remove items from that list."
            },
            "likes": {
              "type": "string",
              "description": "The ID of the playlist that contains the channel\"s liked videos. Use the\n\u003ccode\u003e \u003ca href=\"/youtube/v3/docs/playlistItems/insert\"\u003e\nplaylistItems.insert\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e \u003ca\nhref=\"/youtube/v3/docs/playlistItems/delete\"\u003eplaylistItems.delete\u003c/a\u003e\u003c/code\u003e\nto add or remove items from that list."
            },
            "uploads": {
              "description": "The ID of the playlist that contains the channel\"s uploaded videos. Use\nthe \u003ccode\u003e \u003ca\nhref=\"/youtube/v3/docs/videos/insert\"\u003evideos.insert\u003c/a\u003e\u003c/code\u003e method to\nupload new videos and the \u003ccode\u003e\u003ca\nhref=\"/youtube/v3/docs/videos/delete\"\u003evideos.delete\u003c/a\u003e\u003c/code\u003e method to\ndelete previously uploaded videos.",
              "type": "string"
            },
            "watchLater": {
              "description": "The ID of the playlist that contains the channel\"s watch later playlist.\nUse the \u003ccode\u003e\u003ca\nhref=\"/youtube/v3/docs/playlistItems/insert\"\u003eplaylistItems.insert\u003c/a\u003e\u003c/code\u003e\nand \u003ccode\u003e \u003ca\nhref=\"/youtube/v3/docs/playlistItems/delete\"\u003eplaylistItems.delete\u003c/a\u003e\u003c/code\u003e\nto add or remove items from that list.",
              "type": "string"
            }
          }
        }
      },
      "description": "Details about the content of a channel.",
      "type": "object"
    },
    "ResourceId": {
      "id": "ResourceId",
      "type": "object",
      "properties": {
        "playlistId": {
          "description": "The ID that YouTube uses to uniquely identify the referred resource, if\nthat resource is a playlist. This property is only present if the\n\u003ccode\u003eresourceId.kind\u003c/code\u003e value is \u003ccode\u003eyoutube#playlist\u003c/code\u003e.",
          "type": "string"
        },
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the referred resource, if\nthat resource is a channel. This property is only present if the\n\u003ccode\u003eresourceId.kind\u003c/code\u003e value is \u003ccode\u003eyoutube#channel\u003c/code\u003e.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "The type of the API resource."
        },
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify the referred resource, if\nthat resource is a video. This property is only present if the\n\u003ccode\u003eresourceId.kind\u003c/code\u003e value is \u003ccode\u003eyoutube#video\u003c/code\u003e.",
          "type": "string"
        }
      },
      "description": "A resource id is a generic reference that points to another YouTube resource."
    },
    "Activity": {
      "id": "Activity",
      "description": "An \u003ccode\u003e\u003cstrong\u003eactivity\u003c/strong\u003e\u003c/code\u003e resource contains\ninformation about an action that a particular channel, or user, has\ntaken on YouTube.The actions reported in activity feeds include rating\na video, sharing a video, marking a video as a favorite, commenting on\na video, uploading a video, and so forth. Each \u003ccode\u003eactivity\u003c/code\u003e\nresource identifies the type of action, the channel associated with\nthe action, and the resource(s) associated with the action, such as\nthe video that was rated or uploaded.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of this resource"
        },
        "kind": {
          "type": "string",
          "default": "youtube#activity",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#activity\"\u003c/code\u003e."
        },
        "id": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the activity."
        },
        "contentDetails": {
          "$ref": "ActivityContentDetails",
          "description": "The \u003ccode\u003econtentDetails\u003c/code\u003e object contains information about the\ncontent associated with the activity. For example, if the\n\u003ccode\u003esnippet.type\u003c/code\u003e value is \u003ccode\u003evideoRated\u003c/code\u003e, then the\n\u003ccode\u003econtentDetails\u003c/code\u003e object's content identifies the rated video."
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the\nactivity, including the activity's type and group ID.",
          "$ref": "ActivitySnippet"
        }
      },
      "type": "object"
    },
    "VideoCategory": {
      "type": "object",
      "id": "VideoCategory",
      "description": "A \u003ccode\u003e\u003cstrong\u003evideoCategory\u003c/strong\u003e\u003c/code\u003e resource identifies a\ncategory that has been or could be associated with uploaded videos.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the video category."
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the video\ncategory, including its title.",
          "$ref": "VideoCategorySnippet"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#videoCategory\"\u003c/code\u003e.",
          "default": "youtube#videoCategory",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        }
      }
    },
    "PlaylistListResponse": {
      "properties": {
        "prevPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "A list of playlists that match the request criteria",
          "items": {
            "$ref": "Playlist"
          }
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#playlistListResponse\"\u003c/code\u003e.",
          "default": "youtube#playlistListResponse",
          "type": "string"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        }
      },
      "id": "PlaylistListResponse",
      "type": "object"
    },
    "ChannelListResponse": {
      "properties": {
        "prevPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#channelListResponse\"\u003c/code\u003e.",
          "type": "string",
          "default": "youtube#channelListResponse"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "General pagination information."
        },
        "items": {
          "items": {
            "$ref": "Channel"
          },
          "type": "array"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ChannelListResponse"
    },
    "ChannelSectionContentDetails": {
      "description": "Details about a channelsection, including playlists and channels.",
      "properties": {
        "playlists": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The playlist ids for type single_playlist and multiple_playlists. For\nsinglePlaylist, only one playlistId is allowed."
        },
        "channels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The channel ids for type multiple_channels."
        }
      },
      "id": "ChannelSectionContentDetails",
      "type": "object"
    },
    "VideoRecordingDetails": {
      "properties": {
        "recordingDate": {
          "description": "The date and time when the video was recorded. The value is specified in \u003ca\nhref=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\n(\u003ccode\u003eYYYY-MM-DDThh:mm:ss.sssZ\u003c/code\u003e) format.",
          "type": "string"
        },
        "locationDescription": {
          "type": "string",
          "description": "The text description of the location where the video was recorded."
        },
        "location": {
          "description": "The geolocation information associated with the video.",
          "$ref": "GeoPoint"
        }
      },
      "id": "VideoRecordingDetails",
      "description": "Recording information associated with the video.",
      "type": "object"
    },
    "ActivityContentDetailsPromotedItem": {
      "type": "object",
      "description": "Details about a resource which is being promoted.",
      "properties": {
        "clickTrackingUrl": {
          "type": "string",
          "description": "The URL the client should ping to indicate that the user clicked through\non this promoted item."
        },
        "adTag": {
          "description": "The URL the client should fetch to request a promoted item.",
          "type": "string"
        },
        "destinationUrl": {
          "description": "The URL the client should direct the user to, if the user chooses to\nvisit the advertiser's website.",
          "type": "string"
        },
        "customCtaButtonText": {
          "type": "string",
          "description": "The custom call-to-action button text. If specified, it will override\nthe default button text for the cta_type."
        },
        "creativeViewUrl": {
          "description": "The URL the client should ping to indicate that the user was shown this\npromoted item.",
          "type": "string"
        },
        "descriptionText": {
          "description": "The text description to accompany the promoted item.",
          "type": "string"
        },
        "impressionUrl": {
          "type": "array",
          "description": "The list of impression URLs. The client should ping all of these URLs to\nindicate that the user was shown this promoted item.",
          "items": {
            "type": "string"
          }
        },
        "forecastingUrl": {
          "items": {
            "type": "string"
          },
          "description": "The list of forecasting URLs. The client should ping all of these URLs\nwhen a promoted item is not available, to indicate that a promoted item\ncould have been shown.",
          "type": "array"
        },
        "ctaType": {
          "enum": [
            "ctaTypeUnspecified",
            "visitAdvertiserSite"
          ],
          "description": "The type of call-to-action, a message to the user indicating action that\ncan be taken.",
          "enumDescriptions": [
            "",
            ""
          ],
          "type": "string"
        },
        "videoId": {
          "description": "The ID that YouTube uses to uniquely identify the promoted video.",
          "type": "string"
        }
      },
      "id": "ActivityContentDetailsPromotedItem"
    },
    "I18nRegionSnippet": {
      "type": "object",
      "properties": {
        "gl": {
          "description": "The region code as a 2-letter ISO country code.",
          "type": "string"
        },
        "name": {
          "description": "The human-readable name of the region.",
          "type": "string"
        }
      },
      "id": "I18nRegionSnippet",
      "description": "Basic details about an i18n region, such as region code and human-readable\nname."
    },
    "SuperChatEventListResponse": {
      "id": "SuperChatEventListResponse",
      "type": "object",
      "properties": {
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "items": {
          "description": "A list of Super Chat purchases that match the request criteria.",
          "items": {
            "$ref": "SuperChatEvent"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#superChatEventListResponse\"\u003c/code\u003e.",
          "default": "youtube#superChatEventListResponse"
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "pageInfo": {
          "$ref": "PageInfo"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        }
      }
    },
    "ActivityContentDetailsChannelItem": {
      "id": "ActivityContentDetailsChannelItem",
      "properties": {
        "resourceId": {
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object contains information that\nidentifies the resource that was added to the channel.",
          "$ref": "ResourceId"
        }
      },
      "description": "Details about a resource which was added to a channel.",
      "type": "object"
    },
    "I18nLanguageListResponse": {
      "id": "I18nLanguageListResponse",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        },
        "kind": {
          "default": "youtube#i18nLanguageListResponse",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#i18nLanguageListResponse\"\u003c/code\u003e."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "I18nLanguage"
          },
          "description": "A list of supported i18n languages. In this map, the i18n language ID is\nthe map key, and its value is the corresponding \u003ccode\u003ei18nLanguage\u003c/code\u003e\nresource."
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        }
      },
      "type": "object"
    },
    "ThumbnailSetResponse": {
      "type": "object",
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        },
        "items": {
          "items": {
            "$ref": "ThumbnailDetails"
          },
          "type": "array",
          "description": "A list of thumbnails."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#thumbnailSetResponse\"\u003c/code\u003e.",
          "default": "youtube#thumbnailSetResponse",
          "type": "string"
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        }
      },
      "id": "ThumbnailSetResponse"
    },
    "LiveChatSuperChatDetails": {
      "id": "LiveChatSuperChatDetails",
      "properties": {
        "amountDisplayString": {
          "description": "A rendered string that displays the fund amount and currency to the user.",
          "type": "string"
        },
        "userComment": {
          "description": "The comment added by the user to this Super Chat event.",
          "type": "string"
        },
        "tier": {
          "description": "The tier in which the amount belongs. Lower amounts belong to lower\ntiers. The lowest tier is \u003ccode\u003e1\u003c/code\u003e.",
          "type": "integer",
          "format": "uint32"
        },
        "amountMicros": {
          "type": "string",
          "description": "The amount purchased by the user, in micros (1,750,000 micros = 1.75).",
          "format": "uint64"
        },
        "currency": {
          "description": "The currency in which the purchase was made.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ChannelSettings": {
      "description": "Branding properties for the channel view.",
      "properties": {
        "unsubscribedTrailer": {
          "description": "The trailer of the channel, for users that are not subscribers.",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "The country of the channel."
        },
        "title": {
          "type": "string",
          "description": "Specifies the channel title."
        },
        "trackingAnalyticsAccountId": {
          "description": "The ID for a Google Analytics account to track and measure traffic to the\nchannels.",
          "type": "string"
        },
        "profileColor": {
          "type": "string",
          "description": "A prominent color that can be rendered on this channel page."
        },
        "featuredChannelsUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of featured channels."
        },
        "showBrowseView": {
          "type": "boolean",
          "description": "Whether the tab to browse the videos should be displayed."
        },
        "description": {
          "description": "Specifies the channel description.",
          "type": "string"
        },
        "showRelatedChannels": {
          "type": "boolean",
          "description": "Whether related channels should be proposed."
        },
        "keywords": {
          "type": "string",
          "description": "Lists keywords associated with the channel, comma-separated."
        },
        "defaultLanguage": {
          "type": "string"
        },
        "moderateComments": {
          "description": "Whether user-submitted comments left on the channel page need to be\napproved by the channel owner to be publicly visible.",
          "type": "boolean"
        },
        "featuredChannelsTitle": {
          "description": "Title for the featured channels tab.",
          "type": "string"
        },
        "defaultTab": {
          "type": "string",
          "description": "Which content tab users should see when viewing the channel."
        }
      },
      "id": "ChannelSettings",
      "type": "object"
    },
    "LiveStreamHealthStatus": {
      "properties": {
        "lastUpdateTimeSeconds": {
          "format": "uint64",
          "type": "string",
          "description": "The last time this status was updated (in seconds)"
        },
        "configurationIssues": {
          "description": "The configurations issues on this stream",
          "type": "array",
          "items": {
            "$ref": "LiveStreamConfigurationIssue"
          }
        },
        "status": {
          "enum": [
            "good",
            "ok",
            "bad",
            "noData",
            "revoked"
          ],
          "type": "string",
          "description": "The status code of this stream",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ]
        }
      },
      "type": "object",
      "id": "LiveStreamHealthStatus"
    },
    "ImageSettings": {
      "description": "Branding properties for images associated with the channel.",
      "type": "object",
      "id": "ImageSettings",
      "properties": {
        "bannerMobileExtraHdImageUrl": {
          "type": "string",
          "description": "Banner image. Mobile size high resolution (1440x395)."
        },
        "bannerMobileMediumHdImageUrl": {
          "type": "string",
          "description": "Banner image. Mobile size medium/high resolution (960x263)."
        },
        "bannerMobileLowImageUrl": {
          "type": "string",
          "description": "Banner image. Mobile size low resolution (320x88)."
        },
        "watchIconImageUrl": {
          "type": "string"
        },
        "bannerTvImageUrl": {
          "type": "string",
          "description": "Banner image. TV size extra high resolution (2120x1192)."
        },
        "bannerMobileHdImageUrl": {
          "type": "string",
          "description": "Banner image. Mobile size high resolution (1280x360)."
        },
        "largeBrandedBannerImageImapScript": {
          "description": "The image map script for the large banner image.",
          "$ref": "LocalizedProperty"
        },
        "backgroundImageUrl": {
          "description": "The URL for the background image shown on the video watch page. The image\nshould be 1200px by 615px, with a maximum file size of 128k.",
          "$ref": "LocalizedProperty"
        },
        "smallBrandedBannerImageUrl": {
          "$ref": "LocalizedProperty",
          "description": "The URL for the 640px by 70px banner image that appears below the video\nplayer in the default view of the video watch page.\nThe URL for the image that appears above the top-left corner of the video\nplayer. This is a 25-pixel-high image with a flexible width that cannot\nexceed 170 pixels."
        },
        "trackingImageUrl": {
          "description": "The URL for a 1px by 1px tracking pixel that can be used to collect\nstatistics for views of the channel or video pages.",
          "type": "string"
        },
        "largeBrandedBannerImageUrl": {
          "$ref": "LocalizedProperty",
          "description": "The URL for the 854px by 70px image that appears below the video player in\nthe expanded video view of the video watch page."
        },
        "bannerTabletLowImageUrl": {
          "type": "string",
          "description": "Banner image. Tablet size low resolution (1138x188)."
        },
        "bannerMobileImageUrl": {
          "description": "Banner image. Mobile size (640x175).",
          "type": "string"
        },
        "bannerTabletExtraHdImageUrl": {
          "description": "Banner image. Tablet size extra high resolution (2560x424).",
          "type": "string"
        },
        "bannerTvMediumImageUrl": {
          "type": "string",
          "description": "Banner image. TV size medium resolution (1280x720)."
        },
        "bannerTvHighImageUrl": {
          "type": "string",
          "description": "Banner image. TV size high resolution (1920x1080)."
        },
        "bannerTvLowImageUrl": {
          "description": "Banner image. TV size low resolution (854x480).",
          "type": "string"
        },
        "smallBrandedBannerImageImapScript": {
          "description": "The image map script for the small banner image.",
          "$ref": "LocalizedProperty"
        },
        "bannerExternalUrl": {
          "description": "This is used only in update requests; if it's set, we use this URL to\ngenerate all of the above banner URLs.",
          "type": "string"
        },
        "bannerTabletImageUrl": {
          "type": "string",
          "description": "Banner image. Tablet size (1707x283)."
        },
        "bannerImageUrl": {
          "description": "Banner image. Desktop size (1060x175).",
          "type": "string"
        },
        "bannerTabletHdImageUrl": {
          "type": "string",
          "description": "Banner image. Tablet size high resolution (2276x377)."
        }
      }
    },
    "PromotedItem": {
      "type": "object",
      "id": "PromotedItem",
      "properties": {
        "customMessage": {
          "description": "A custom message to display for this promotion. This field is currently\nignored unless the promoted item is a website.",
          "type": "string"
        },
        "id": {
          "$ref": "PromotedItemId",
          "description": "Identifies the promoted item."
        },
        "promotedByContentOwner": {
          "description": "If true, the content owner's name will be used when displaying the\npromotion. This field can only be set when the update is made on behalf of\nthe content owner.",
          "type": "boolean"
        },
        "timing": {
          "$ref": "InvideoTiming",
          "description": "The temporal position within the video where the promoted item will be\ndisplayed. If present, it overrides the default timing."
        }
      },
      "description": "Describes a single promoted item."
    },
    "ChannelBannerResource": {
      "type": "object",
      "id": "ChannelBannerResource",
      "description": "A channel banner returned as the response to a channel_banner.insert call.",
      "properties": {
        "etag": {
          "type": "string"
        },
        "url": {
          "description": "The URL of this banner image.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#channelBannerResource\"\u003c/code\u003e.",
          "default": "youtube#channelBannerResource"
        }
      }
    },
    "SuperChatEventSnippet": {
      "type": "object",
      "properties": {
        "supporterDetails": {
          "description": "Details about the supporter.",
          "$ref": "ChannelProfileDetails"
        },
        "isSuperStickerEvent": {
          "type": "boolean",
          "description": "True if this event is a Super Sticker event."
        },
        "createdAt": {
          "type": "string",
          "description": "The date and time when the event occurred. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "channelId": {
          "type": "string",
          "description": "Channel id where the event occurred."
        },
        "messageType": {
          "description": "The tier for the paid message, which is based on the amount of money spent\nto purchase the message.",
          "type": "integer",
          "format": "uint32"
        },
        "amountMicros": {
          "type": "string",
          "format": "uint64",
          "description": "The purchase amount, in micros of the purchase currency.  e.g., 1 is\nrepresented as 1000000."
        },
        "superStickerMetadata": {
          "description": "If this event is a Super Sticker event, this field will contain metadata\nabout the Super Sticker.",
          "$ref": "SuperStickerMetadata"
        },
        "commentText": {
          "description": "The text contents of the comment left by the user.",
          "type": "string"
        },
        "currency": {
          "type": "string",
          "description": "The currency in which the purchase was made.  ISO 4217."
        },
        "displayString": {
          "description": "A rendered string that displays the purchase amount and currency\n(e.g., \"$1.00\").  The string is rendered for the given language.",
          "type": "string"
        }
      },
      "id": "SuperChatEventSnippet"
    },
    "ActivityContentDetailsFavorite": {
      "type": "object",
      "properties": {
        "resourceId": {
          "$ref": "ResourceId",
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object contains information that\nidentifies the resource that was marked as a favorite."
        }
      },
      "description": "Information about a video that was marked as a favorite video.",
      "id": "ActivityContentDetailsFavorite"
    },
    "VideoMonetizationDetails": {
      "id": "VideoMonetizationDetails",
      "type": "object",
      "description": "Details about monetization of a YouTube Video.",
      "properties": {
        "access": {
          "description": "The value of \u003ccode\u003eaccess\u003c/code\u003e indicates whether the video can be\nmonetized or not.",
          "$ref": "AccessPolicy"
        }
      }
    },
    "LanguageTag": {
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "id": "LanguageTag",
      "type": "object"
    },
    "CommentThread": {
      "description": "A \u003ccode\u003e\u003cstrong\u003ecomment thread\u003c/strong\u003e\u003c/code\u003e represents information that\napplies to a top level comment and all its replies. It can also include the\ntop level comment itself and some of the replies.",
      "id": "CommentThread",
      "type": "object",
      "properties": {
        "replies": {
          "$ref": "CommentThreadReplies",
          "description": "The \u003ccode\u003ereplies\u003c/code\u003e object contains a limited number of replies (if\nany) to the top level comment found in the snippet."
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "youtube#commentThread",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#commentThread\"\u003c/code\u003e."
        },
        "id": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the comment thread."
        },
        "snippet": {
          "$ref": "CommentThreadSnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the comment\nthread and also the top level comment."
        }
      }
    },
    "IngestionInfo": {
      "properties": {
        "rtmpsIngestionAddress": {
          "description": "This ingestion url may be used instead of\n\u003ccode\u003eingestionAddress\u003c/code\u003e in order to stream via RTMPS. Not applicable\nto non-RTMP streams.",
          "type": "string"
        },
        "streamName": {
          "type": "string",
          "description": "The HTTP or RTMP stream name that YouTube assigns to the video stream."
        },
        "rtmpsBackupIngestionAddress": {
          "description": "This ingestion url may be used instead of\n\u003ccode\u003ebackupIngestionAddress\u003c/code\u003e in order to stream via RTMPS. Not\napplicable to non-RTMP streams.",
          "type": "string"
        },
        "ingestionAddress": {
          "description": "The primary ingestion URL that you should use to stream video to\nYouTube. You must stream video to this URL.\u003cbr\u003e\u003cbr\u003e\nDepending on which application or tool you use to encode\nyour video stream, you may need to enter the stream URL and stream\nname separately or you may need to concatenate them in the following\nformat:\u003cbr\u003e\u003cpre\u003e\u003cstrong\u003eSTREAM_URL/STREAM_NAME\u003c/strong\u003e\u003c/pre\u003e",
          "type": "string"
        },
        "backupIngestionAddress": {
          "type": "string",
          "description": "The backup ingestion URL that you should use to stream video to\nYouTube. You have the option of simultaneously streaming the content\nthat you are sending to the \u003ccode\u003eingestionAddress\u003c/code\u003e to this URL."
        }
      },
      "type": "object",
      "description": "Describes information necessary for ingesting an RTMP or an HTTP stream.",
      "id": "IngestionInfo"
    },
    "SubscriptionContentDetails": {
      "properties": {
        "activityType": {
          "type": "string",
          "enum": [
            "subscriptionActivityTypeUnspecified",
            "all",
            "uploads"
          ],
          "description": "The type of activity this subscription is for\n(only uploads, everything).",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "newItemCount": {
          "type": "integer",
          "description": "The number of new items in the subscription since its content was last\nread.",
          "format": "uint32"
        },
        "totalItemCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The approximate number of items that the subscription points to."
        }
      },
      "type": "object",
      "description": "Details about the content to witch a subscription refers.",
      "id": "SubscriptionContentDetails"
    },
    "VideoAbuseReportReason": {
      "id": "VideoAbuseReportReason",
      "description": "A `__videoAbuseReportReason__` resource identifies a reason that a video\ncould be reported as abusive. Video abuse report reasons are used with\n`video.ReportAbuse`.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The ID of this abuse report reason.",
          "type": "string"
        },
        "snippet": {
          "$ref": "VideoAbuseReportReasonSnippet",
          "description": "The `snippet` object contains basic details about the abuse report reason."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#videoAbuseReportReason\"`.",
          "type": "string",
          "default": "youtube#videoAbuseReportReason"
        }
      }
    },
    "SubscriptionSubscriberSnippet": {
      "id": "SubscriptionSubscriberSnippet",
      "description": "Basic details about a subscription's subscriber including title,\ndescription, channel ID and thumbnails.",
      "properties": {
        "channelId": {
          "type": "string",
          "description": "The channel ID of the subscriber."
        },
        "thumbnails": {
          "$ref": "ThumbnailDetails",
          "description": "Thumbnails for this subscriber."
        },
        "description": {
          "type": "string",
          "description": "The description of the subscriber."
        },
        "title": {
          "description": "The title of the subscriber.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Sponsor": {
      "description": "A `__sponsor__` resource represents a sponsor for a YouTube channel.  A\nsponsor provides recurring monetary support to a creator and receives special\nbenefits.",
      "id": "Sponsor",
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "kind": {
          "default": "youtube#sponsor",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#sponsor\"`.",
          "type": "string"
        },
        "snippet": {
          "$ref": "SponsorSnippet",
          "description": "The `snippet` object contains basic details about the sponsor."
        }
      },
      "type": "object"
    },
    "PlaylistPlayer": {
      "properties": {
        "embedHtml": {
          "type": "string",
          "description": "An \u003ccode\u003e&lt;iframe&gt;\u003c/code\u003e tag that embeds a player that will\nplay the playlist."
        }
      },
      "id": "PlaylistPlayer",
      "type": "object"
    },
    "ChannelAuditDetails": {
      "id": "ChannelAuditDetails",
      "description": "The \u003ccode\u003eauditDetails\u003c/code\u003e object encapsulates channel data that is\nrelevant for YouTube Partners during the audit process.",
      "properties": {
        "contentIdClaimsGoodStanding": {
          "description": "Whether or not the channel has any unresolved claims.",
          "type": "boolean"
        },
        "communityGuidelinesGoodStanding": {
          "description": "Whether or not the channel respects the community guidelines.",
          "type": "boolean"
        },
        "copyrightStrikesGoodStanding": {
          "type": "boolean",
          "description": "Whether or not the channel has any copyright strikes."
        }
      },
      "type": "object"
    },
    "LiveChatModeratorListResponse": {
      "type": "object",
      "properties": {
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "pageInfo": {
          "$ref": "PageInfo",
          "description": "General pagination information."
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "A list of moderators that match the request criteria.",
          "items": {
            "$ref": "LiveChatModerator"
          }
        },
        "kind": {
          "default": "youtube#liveChatModeratorListResponse",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#liveChatModeratorListResponse\"\u003c/code\u003e."
        }
      },
      "id": "LiveChatModeratorListResponse"
    },
    "VideoFileDetailsVideoStream": {
      "id": "VideoFileDetailsVideoStream",
      "type": "object",
      "properties": {
        "frameRateFps": {
          "type": "number",
          "format": "double",
          "description": "The video stream's frame rate, in frames per second."
        },
        "widthPixels": {
          "format": "uint32",
          "description": "The encoded video content's width in pixels. You can calculate the\nvideo's encoding aspect ratio as\n\u003ccode\u003ewidth_pixels\u003c/code\u003e&nbsp;/&nbsp;\u003ccode\u003eheight_pixels\u003c/code\u003e.",
          "type": "integer"
        },
        "aspectRatio": {
          "format": "double",
          "description": "The video content's display aspect ratio, which specifies the aspect\nratio in which the video should be displayed.",
          "type": "number"
        },
        "codec": {
          "type": "string",
          "description": "The video codec that the stream uses."
        },
        "heightPixels": {
          "description": "The encoded video content's height in pixels.",
          "type": "integer",
          "format": "uint32"
        },
        "bitrateBps": {
          "format": "uint64",
          "description": "The video stream's bitrate, in bits per second.",
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "description": "A value that uniquely identifies a video vendor. Typically, the value is\na four-letter vendor code."
        },
        "rotation": {
          "description": "The amount that YouTube needs to rotate the original source content\nto properly display the video.",
          "type": "string",
          "enum": [
            "none",
            "clockwise",
            "upsideDown",
            "counterClockwise",
            "other"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ]
        }
      },
      "description": "Information about a video stream."
    },
    "LiveStreamSnippet": {
      "type": "object",
      "id": "LiveStreamSnippet",
      "properties": {
        "channelId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the channel that\nis transmitting the stream."
        },
        "description": {
          "type": "string",
          "description": "The stream's description. The value cannot be longer than 10000\ncharacters."
        },
        "publishedAt": {
          "type": "string",
          "description": "The date and time that the stream was created. The value is specified in\n\u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "title": {
          "description": "The stream's title. The value must be between 1 and 128 characters long.",
          "type": "string"
        },
        "isDefaultStream": {
          "type": "boolean"
        }
      }
    },
    "ChannelSectionTargeting": {
      "type": "object",
      "description": "ChannelSection targeting setting.",
      "properties": {
        "regions": {
          "items": {
            "type": "string"
          },
          "description": "The region the channel section is targeting.",
          "type": "array"
        },
        "countries": {
          "description": "The country the channel section is targeting.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "languages": {
          "items": {
            "type": "string"
          },
          "description": "The language the channel section is targeting.",
          "type": "array"
        }
      },
      "id": "ChannelSectionTargeting"
    },
    "LiveChatTextMessageDetails": {
      "id": "LiveChatTextMessageDetails",
      "properties": {
        "messageText": {
          "type": "string",
          "description": "The user's message."
        }
      },
      "type": "object"
    },
    "CommentThreadReplies": {
      "description": "Comments written in (direct or indirect) reply to the top level comment.",
      "type": "object",
      "id": "CommentThreadReplies",
      "properties": {
        "comments": {
          "items": {
            "$ref": "Comment"
          },
          "description": "A limited number of replies. Unless the number of replies returned equals\ntotal_reply_count in the snippet the returned replies are only a subset\nof the total number of replies.",
          "type": "array"
        }
      }
    },
    "ChannelConversionPings": {
      "properties": {
        "pings": {
          "type": "array",
          "description": "Pings that the app shall fire (authenticated by biscotti cookie). Each ping\nhas a context, in which the app must fire the ping, and a url identifying\nthe ping.",
          "items": {
            "$ref": "ChannelConversionPing"
          }
        }
      },
      "description": "The \u003ccode\u003econversionPings\u003c/code\u003e object encapsulates information about\nconversion pings that need to be respected by the channel.",
      "id": "ChannelConversionPings",
      "type": "object"
    },
    "ThumbnailDetails": {
      "type": "object",
      "properties": {
        "standard": {
          "description": "The standard quality image for this resource.",
          "$ref": "Thumbnail"
        },
        "medium": {
          "$ref": "Thumbnail",
          "description": "The medium quality image for this resource."
        },
        "maxres": {
          "description": "The maximum resolution quality image for this resource.",
          "$ref": "Thumbnail"
        },
        "default": {
          "description": "The default image for this resource.",
          "$ref": "Thumbnail"
        },
        "high": {
          "$ref": "Thumbnail",
          "description": "The high quality image for this resource."
        }
      },
      "id": "ThumbnailDetails",
      "description": "Internal representation of thumbnails for a YouTube resource."
    },
    "PlaylistItemStatus": {
      "description": "Information about the playlist item's privacy status.",
      "type": "object",
      "id": "PlaylistItemStatus",
      "properties": {
        "privacyStatus": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "This resource's privacy status.",
          "enum": [
            "public",
            "unlisted",
            "private"
          ]
        }
      }
    },
    "VideoRatingListResponse": {
      "properties": {
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "items": {
          "description": "A list of ratings that match the request criteria.",
          "type": "array",
          "items": {
            "$ref": "VideoRating"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#videoGetRatingResponse\"\u003c/code\u003e.",
          "default": "youtube#videoGetRatingResponse",
          "type": "string"
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        }
      },
      "id": "VideoRatingListResponse",
      "type": "object"
    },
    "LiveBroadcastStatus": {
      "type": "object",
      "properties": {
        "recordingStatus": {
          "enumDescriptions": [
            "No value or the value is unknown.",
            "The recording has not yet been started.",
            "The recording is currently on.",
            "The recording is completed, and cannot be started again."
          ],
          "type": "string",
          "enum": [
            "liveBroadcastRecordingStatusUnspecified",
            "notRecording",
            "recording",
            "recorded"
          ],
          "description": "The broadcast's recording status."
        },
        "privacyStatus": {
          "type": "string",
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "The broadcast's privacy status. Note that the broadcast represents\nexactly one YouTube video, so the privacy settings are identical to\nthose supported for videos. In addition, you can set this field by\nmodifying the broadcast resource or by setting the\n\u003ccode\u003e\u003ca\nhref=\"/youtube/v3/docs/videos#status.privacyStatus\"\n\u003eprivacyStatus\u003c/a\u003e\u003c/code\u003e\nfield of the corresponding video resource."
        },
        "selfDeclaredMadeForKids": {
          "description": "This field will be set to True if the creator declares the broadcast to be\nkids only: go/live-cw-work.",
          "type": "boolean"
        },
        "madeForKids": {
          "description": "Whether the broadcast is made for kids or not, decided by YouTube instead\nof the creator. This field is read only.",
          "type": "boolean"
        },
        "lifeCycleStatus": {
          "description": "The broadcast's status. The status can be updated using the API's\n\u003ccode\u003e\u003ca\nhref=\"/youtube/v3/live/docs/liveBroadcasts/transition\"\n\u003eliveBroadcasts.transition\u003c/a\u003e\u003c/code\u003e method.",
          "type": "string",
          "enum": [
            "lifeCycleStatusUnspecified",
            "created",
            "ready",
            "testing",
            "live",
            "complete",
            "revoked",
            "testStarting",
            "liveStarting"
          ],
          "enumDescriptions": [
            "No value or the value is unknown.",
            "Incomplete settings, but otherwise valid",
            "Complete settings",
            "Visible only to partner, may need special UI treatment",
            "Viper is recording; this means the \"clock\" is running",
            "The broadcast is finished.",
            "This broadcast was removed by admin action",
            "Transition into TESTING has been requested",
            "Transition into LIVE has been requested"
          ]
        },
        "liveBroadcastPriority": {
          "enumDescriptions": [
            "",
            "Low priority broadcast: for low view count HoAs or other\nlow priority broadcasts.",
            "Normal priority broadcast: for regular HoAs and broadcasts.",
            "High priority broadcast: for high profile HoAs, like PixelCorp ones."
          ],
          "description": "Priority of the live broadcast event (internal state).",
          "type": "string",
          "enum": [
            "liveBroadcastPriorityUnspecified",
            "low",
            "normal",
            "high"
          ]
        }
      },
      "id": "LiveBroadcastStatus",
      "description": "Live broadcast state."
    },
    "SearchResult": {
      "type": "object",
      "id": "SearchResult",
      "description": "A search result contains information about a YouTube video, channel, or\nplaylist that matches the search parameters specified in an API request.\nWhile a search result points to a uniquely identifiable resource, like a\nvideo, it does not have its own persistent data.",
      "properties": {
        "id": {
          "description": "The \u003ccode\u003eid\u003c/code\u003e object contains information that can be used to\nuniquely identify the resource that matches the search request.",
          "$ref": "ResourceId"
        },
        "kind": {
          "default": "youtube#searchResult",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#searchResult\"\u003c/code\u003e.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "snippet": {
          "$ref": "SearchResultSnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about a search\nresult, such as its title or description. For example, if the search result\nis a video, then the title will be the\nvideo's title and the description will be the video's description."
        }
      }
    },
    "MemberListResponse": {
      "type": "object",
      "id": "MemberListResponse",
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "pageInfo": {
          "$ref": "PageInfo"
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "kind": {
          "type": "string",
          "default": "youtube#memberListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#memberListResponse\"\u003c/code\u003e."
        },
        "items": {
          "type": "array",
          "description": "A list of members that match the request criteria.",
          "items": {
            "$ref": "Member"
          }
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        }
      }
    },
    "PlaylistItemListResponse": {
      "id": "PlaylistItemListResponse",
      "properties": {
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#playlistItemListResponse\"\u003c/code\u003e.\nEtag of this resource.",
          "default": "youtube#playlistItemListResponse",
          "type": "string"
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "items": {
          "type": "array",
          "description": "A list of playlist items that match the request criteria.",
          "items": {
            "$ref": "PlaylistItem"
          }
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set.",
          "type": "string"
        },
        "etag": {
          "type": "string"
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocalizedString": {
      "properties": {
        "value": {
          "type": "string"
        },
        "language": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "LocalizedString"
    },
    "LiveStreamListResponse": {
      "type": "object",
      "id": "LiveStreamListResponse",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "LiveStream"
          },
          "description": "A list of live streams that match the request criteria."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "pageInfo": {
          "$ref": "PageInfo"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set."
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set.",
          "type": "string"
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "kind": {
          "default": "youtube#liveStreamListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#liveStreamListResponse\"\u003c/code\u003e.",
          "type": "string"
        }
      }
    },
    "ChannelProfileDetails": {
      "type": "object",
      "properties": {
        "profileImageUrl": {
          "type": "string",
          "description": "The channels's avatar URL."
        },
        "displayName": {
          "description": "The channel's display name.",
          "type": "string"
        },
        "channelUrl": {
          "type": "string",
          "description": "The channel's URL."
        },
        "channelId": {
          "description": "The YouTube channel ID.",
          "type": "string"
        }
      },
      "id": "ChannelProfileDetails"
    },
    "ActivityContentDetailsRecommendation": {
      "properties": {
        "seedResourceId": {
          "$ref": "ResourceId",
          "description": "The \u003ccode\u003eseedResourceId\u003c/code\u003e object contains information about\nthe resource that caused the recommendation."
        },
        "resourceId": {
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object contains information that\nidentifies the recommended resource.",
          "$ref": "ResourceId"
        },
        "reason": {
          "type": "string",
          "description": "The reason that the resource is recommended to the user.",
          "enum": [
            "reasonUnspecified",
            "videoFavorited",
            "videoLiked",
            "videoWatched"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        }
      },
      "description": "Information that identifies the recommended resource.",
      "id": "ActivityContentDetailsRecommendation",
      "type": "object"
    },
    "VideoAgeGating": {
      "id": "VideoAgeGating",
      "properties": {
        "restricted": {
          "type": "boolean",
          "description": "Age-restricted trailers. For redband trailers and adult-rated video-games.\nOnly users aged 18+ can view the content. The the field is\n\u003ccode\u003etrue\u003c/code\u003e the content is restricted to viewers aged 18+. Otherwise\nThe field won't be present."
        },
        "videoGameRating": {
          "description": "Video game rating, if any.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "anyone",
            "m15Plus",
            "m16Plus",
            "m17Plus"
          ]
        },
        "alcoholContent": {
          "type": "boolean",
          "description": "Indicates whether or not the video has alcoholic beverage content. Only\nusers of legal purchasing age in a particular country, as identified by\nICAP, can view the content."
        }
      },
      "type": "object"
    },
    "CommentListResponse": {
      "id": "CommentListResponse",
      "type": "object",
      "properties": {
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        },
        "kind": {
          "default": "youtube#commentListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#commentListResponse\"\u003c/code\u003e.",
          "type": "string"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Comment"
          },
          "type": "array",
          "description": "A list of comments that match the request criteria."
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        }
      }
    },
    "I18nRegion": {
      "id": "I18nRegion",
      "properties": {
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the i18n\nregion, such as region code and human-readable name.",
          "$ref": "I18nRegionSnippet"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#i18nRegion\"\u003c/code\u003e.",
          "default": "youtube#i18nRegion"
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the i18n region.",
          "type": "string"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A \u003ccode\u003e\u003cstrong\u003ei18nRegion\u003c/strong\u003e\u003c/code\u003e resource identifies a region where\nYouTube is available."
    },
    "LiveChatBanSnippet": {
      "id": "LiveChatBanSnippet",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enumDescriptions": [
            "An invalid ban type.",
            "A permanent ban.",
            "A temporary ban."
          ],
          "description": "The type of ban.",
          "enum": [
            "liveChatBanTypeUnspecified",
            "permanent",
            "temporary"
          ]
        },
        "liveChatId": {
          "description": "The chat this ban is pertinent to.",
          "type": "string"
        },
        "banDurationSeconds": {
          "description": "The duration of a ban, only filled if the ban has type TEMPORARY.",
          "format": "uint64",
          "type": "string"
        },
        "bannedUserDetails": {
          "$ref": "ChannelProfileDetails"
        }
      }
    },
    "PromotedItemId": {
      "id": "PromotedItemId",
      "description": "Describes a single promoted item id. It is a union of various possible types.",
      "properties": {
        "recentlyUploadedBy": {
          "type": "string",
          "description": "If type is recentUpload, this field identifies the channel from which to\ntake the recent upload. If missing, the channel is assumed to be the same\nchannel for which the invideoPromotion is set."
        },
        "videoId": {
          "description": "If the promoted item represents a video, this field represents the unique\nYouTube ID identifying it. This field will be present only if\n\u003ccode\u003etype\u003c/code\u003e has the value \u003ccode\u003evideo\u003c/code\u003e.",
          "type": "string"
        },
        "websiteUrl": {
          "description": "If the promoted item represents a website, this field represents the url\npointing to the website. This field will be present only if\n\u003ccode\u003etype\u003c/code\u003e has the value \u003ccode\u003ewebsite\u003c/code\u003e.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Describes the type of the promoted item.",
          "enum": [
            "video",
            "website",
            "recentUpload"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "type": "object"
    },
    "VideoStatus": {
      "description": "Basic details about a video category, such as its localized title.\nNext Id: 16",
      "id": "VideoStatus",
      "type": "object",
      "properties": {
        "failureReason": {
          "enum": [
            "conversion",
            "invalidFile",
            "emptyFile",
            "tooSmall",
            "codec",
            "uploadAborted"
          ],
          "description": "This value explains why a video failed to upload. This property is\nonly present if the \u003ccode\u003euploadStatus\u003c/code\u003e property indicates that\nthe upload failed.",
          "type": "string",
          "enumDescriptions": [
            "Unable to convert video content.",
            "Invalid file format.",
            "Empty file.",
            "File was too small.",
            "Unsupported codec.",
            "Upload wasn't finished."
          ]
        },
        "rejectionReason": {
          "enumDescriptions": [
            "Copyright infringement.",
            "Inappropriate video content.",
            "Duplicate upload in the same channel.",
            "Terms of use violation.",
            "Uploader account was suspended.",
            "Video duration was too long.",
            "Blocked by content owner.",
            "Uploader closed his/her account.",
            "Trademark infringement.",
            "An unspecified legal reason."
          ],
          "type": "string",
          "description": "This value explains why YouTube rejected an uploaded video. This\nproperty is only present if the \u003ccode\u003euploadStatus\u003c/code\u003e property\nindicates that the upload was rejected.",
          "enum": [
            "copyright",
            "inappropriate",
            "duplicate",
            "termsOfUse",
            "uploaderAccountSuspended",
            "length",
            "claim",
            "uploaderAccountClosed",
            "trademark",
            "legal"
          ]
        },
        "privacyStatus": {
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "The video's privacy status."
        },
        "madeForKids": {
          "type": "boolean"
        },
        "publishAt": {
          "description": "The date and time when the video is scheduled to publish. It can be set\nonly if the privacy status of the video is private. The value is specified\nin \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        },
        "embeddable": {
          "description": "This value indicates if the video can be embedded on another website.\n@mutable youtube.videos.insert youtube.videos.update",
          "type": "boolean"
        },
        "publicStatsViewable": {
          "description": "This value indicates if the extended video statistics on the watch page\ncan be viewed by everyone. Note that the view count, likes, etc will still\nbe visible if this is disabled.\n@mutable youtube.videos.insert youtube.videos.update",
          "type": "boolean"
        },
        "selfDeclaredMadeForKids": {
          "type": "boolean"
        },
        "uploadStatus": {
          "description": "The status of the uploaded video.",
          "enum": [
            "uploaded",
            "processed",
            "failed",
            "rejected",
            "deleted"
          ],
          "enumDescriptions": [
            "Video has been uploaded but not processed yet.",
            "Video has been successfully processed.",
            "Processing has failed. See FailureReason.",
            "Video has been rejected. See RejectionReason.",
            "Video has been deleted."
          ],
          "type": "string"
        },
        "license": {
          "enumDescriptions": [
            "",
            ""
          ],
          "enum": [
            "youtube",
            "creativeCommon"
          ],
          "type": "string",
          "description": "The video's license.\n@mutable youtube.videos.insert youtube.videos.update"
        }
      }
    },
    "LiveChatFanFundingEventDetails": {
      "type": "object",
      "properties": {
        "amountDisplayString": {
          "type": "string",
          "description": "A rendered string that displays the fund amount and currency to the user."
        },
        "amountMicros": {
          "description": "The amount of the fund.",
          "type": "string",
          "format": "uint64"
        },
        "userComment": {
          "description": "The comment added by the user to this fan funding event.",
          "type": "string"
        },
        "currency": {
          "description": "The currency in which the fund was made.",
          "type": "string"
        }
      },
      "id": "LiveChatFanFundingEventDetails"
    },
    "VideoSuggestionsTagSuggestion": {
      "type": "object",
      "properties": {
        "tag": {
          "type": "string",
          "description": "The keyword tag suggested for the video."
        },
        "categoryRestricts": {
          "items": {
            "type": "string"
          },
          "description": "A set of video categories for which the tag is relevant. You can use this\ninformation to display appropriate tag suggestions based on the video\ncategory that the video uploader associates with the video. By default,\ntag suggestions are relevant for all categories if there are no restricts\ndefined for the keyword.",
          "type": "array"
        }
      },
      "description": "A single tag suggestion with it's relevance information.",
      "id": "VideoSuggestionsTagSuggestion"
    },
    "TokenPagination": {
      "properties": {},
      "type": "object",
      "id": "TokenPagination",
      "description": "Stub token pagination template to suppress results."
    },
    "VideoAbuseReport": {
      "id": "VideoAbuseReport",
      "properties": {
        "secondaryReasonId": {
          "description": "The specific, or secondary, reason that this content is abusive (if\navailable). The value is an abuse report reason ID that is a valid\nsecondary reason for the primary reason.",
          "type": "string"
        },
        "videoId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the video."
        },
        "language": {
          "type": "string",
          "description": "The language that the content was viewed in."
        },
        "reasonId": {
          "type": "string",
          "description": "The high-level, or primary, reason that the content is abusive. The value\nis an abuse report reason ID."
        },
        "comments": {
          "description": "Additional comments regarding the abuse report.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VideoTopicDetails": {
      "description": "Freebase topic information related to the video.",
      "type": "object",
      "properties": {
        "relevantTopicIds": {
          "description": "Similar to topic_id, except that these topics are merely relevant to the\nvideo. These are topics that may be mentioned in, or appear in the video.\nYou can retrieve information about each topic using \u003ca\nhref=\"http://wiki.freebase.com/wiki/Topic_API\"\u003eFreebase Topic API\u003c/a\u003e.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "topicIds": {
          "items": {
            "type": "string"
          },
          "description": "A list of Freebase topic IDs that are centrally associated with the video.\nThese are topics that are centrally featured in the video, and it can be\nsaid that the video is mainly about each of these. You can retrieve\ninformation about each topic using the \u003c a\nhref=\"http://wiki.freebase.com/wiki/Topic_API\"\u003eFreebase Topic API\u003c/a\u003e.",
          "type": "array"
        },
        "topicCategories": {
          "type": "array",
          "description": "A list of Wikipedia URLs that provide a high-level description of the\nvideo's content.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "VideoTopicDetails"
    },
    "VideoFileDetailsAudioStream": {
      "properties": {
        "channelCount": {
          "type": "integer",
          "format": "uint32",
          "description": "The number of audio channels that the stream contains."
        },
        "codec": {
          "type": "string",
          "description": "The audio codec that the stream uses."
        },
        "vendor": {
          "type": "string",
          "description": "A value that uniquely identifies a video vendor. Typically, the value\nis a four-letter vendor code."
        },
        "bitrateBps": {
          "description": "The audio stream's bitrate, in bits per second.",
          "format": "uint64",
          "type": "string"
        }
      },
      "id": "VideoFileDetailsAudioStream",
      "description": "Information about an audio stream.",
      "type": "object"
    },
    "MembershipsDetails": {
      "properties": {
        "membershipsDurationAtLevels": {
          "items": {
            "$ref": "MembershipsDurationAtLevel"
          },
          "type": "array",
          "description": "Data about memberships duration on particular pricing levels."
        },
        "highestAccessibleLevelDisplayName": {
          "description": "Display name for the highest level that the user has access to at the\nmoment.",
          "type": "string"
        },
        "highestAccessibleLevel": {
          "description": "Id of the highest level that the user has access to at the moment.",
          "type": "string"
        },
        "accessibleLevels": {
          "description": "Ids of all levels that the user has access to. This includes the currently\nactive level and all other levels that are included because of a higher\npurchase.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "membershipsDuration": {
          "$ref": "MembershipsDuration",
          "description": "Data about memberships duration without taking into consideration pricing\nlevels."
        }
      },
      "type": "object",
      "id": "MembershipsDetails"
    },
    "VideoFileDetails": {
      "type": "object",
      "description": "Describes original video file properties, including technical details about\naudio and video streams, but also metadata information like content length,\ndigitization time, or geotagging information.",
      "id": "VideoFileDetails",
      "properties": {
        "fileName": {
          "type": "string",
          "description": "The uploaded file's name. This field is present whether a video file or\nanother type of file was uploaded."
        },
        "container": {
          "type": "string",
          "description": "The uploaded video file's container format."
        },
        "creationTime": {
          "description": "The date and time when the uploaded video file was created. The value is\nspecified in \u003ca href=\"http://www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat. Currently, the following ISO 8601 formats are supported:\n\u003cul\u003e\n\u003cli\u003eDate only: \u003ccode\u003eYYYY-MM-DD\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eNaive time: \u003ccode\u003eYYYY-MM-DDTHH:MM:SS\u003c/code\u003e\u003c/li\u003e\n\u003cli\u003eTime with timezone: \u003ccode\u003eYYYY-MM-DDTHH:MM:SS+HH:MM\u003c/code\u003e\u003c/li\u003e\n\u003c/ul\u003e",
          "type": "string"
        },
        "bitrateBps": {
          "type": "string",
          "format": "uint64",
          "description": "The uploaded video file's combined (video and audio) bitrate in bits\nper second."
        },
        "durationMs": {
          "format": "uint64",
          "type": "string",
          "description": "The length of the uploaded video in milliseconds."
        },
        "fileSize": {
          "format": "uint64",
          "type": "string",
          "description": "The uploaded file's size in bytes. This field is present whether\na video file or another type of file was uploaded."
        },
        "audioStreams": {
          "description": "A list of audio streams contained in the uploaded video file. Each item\nin the list contains detailed metadata about an audio stream.",
          "items": {
            "$ref": "VideoFileDetailsAudioStream"
          },
          "type": "array"
        },
        "videoStreams": {
          "type": "array",
          "description": "A list of video streams contained in the uploaded video file. Each item\nin the list contains detailed metadata about a video stream.",
          "items": {
            "$ref": "VideoFileDetailsVideoStream"
          }
        },
        "fileType": {
          "enumDescriptions": [
            "Known video file (e.g., an MP4 file).",
            "Audio only file (e.g., an MP3 file).",
            "Image file (e.g., a JPEG image).",
            "Archive file (e.g., a ZIP archive).",
            "Document or text file (e.g., MS Word document).",
            "Movie project file (e.g., Microsoft Windows Movie Maker project).",
            "Other non-video file type."
          ],
          "type": "string",
          "enum": [
            "video",
            "audio",
            "image",
            "archive",
            "document",
            "project",
            "other"
          ],
          "description": "The uploaded file's type as detected by YouTube's video processing\nengine. Currently, YouTube only processes video files, but this field\nis present whether a video file or another type of file was uploaded."
        }
      }
    },
    "MemberSnippet": {
      "type": "object",
      "properties": {
        "membershipsDetails": {
          "$ref": "MembershipsDetails",
          "description": "Details about the user's membership."
        },
        "creatorChannelId": {
          "description": "The id of the channel that's offering memberships.",
          "type": "string"
        },
        "memberDetails": {
          "description": "Details about the member.",
          "$ref": "ChannelProfileDetails"
        }
      },
      "id": "MemberSnippet"
    },
    "VideoAbuseReportReasonListResponse": {
      "id": "VideoAbuseReportReasonListResponse",
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "kind": {
          "default": "youtube#videoAbuseReportReasonListResponse",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#videoAbuseReportReasonListResponse\"`."
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "VideoAbuseReportReason"
          },
          "description": "A list of valid abuse reasons that are used with `video.ReportAbuse`."
        },
        "visitorId": {
          "type": "string",
          "description": "The `visitorId` identifies the visitor."
        }
      },
      "type": "object"
    },
    "MembershipsDuration": {
      "type": "object",
      "properties": {
        "memberSince": {
          "description": "The date and time when the user became a continuous member across all\nlevels.",
          "type": "string"
        },
        "memberTotalDurationMonths": {
          "type": "integer",
          "format": "int32",
          "description": "The cumulative time the user has been a member across all levels in\ncomplete months (the time is rounded down to the nearest integer)."
        }
      },
      "id": "MembershipsDuration"
    },
    "ChannelLocalization": {
      "properties": {
        "title": {
          "type": "string",
          "description": "The localized strings for channel's title."
        },
        "description": {
          "type": "string",
          "description": "The localized strings for channel's description."
        }
      },
      "id": "ChannelLocalization",
      "description": "Channel localization setting",
      "type": "object"
    },
    "ChannelBrandingSettings": {
      "description": "Branding properties of a YouTube channel.",
      "type": "object",
      "properties": {
        "watch": {
          "description": "Branding properties for the watch page.",
          "$ref": "WatchSettings"
        },
        "channel": {
          "description": "Branding properties for the channel view.",
          "$ref": "ChannelSettings"
        },
        "image": {
          "description": "Branding properties for branding images.",
          "$ref": "ImageSettings"
        },
        "hints": {
          "type": "array",
          "items": {
            "$ref": "PropertyValue"
          },
          "description": "Additional experimental branding properties."
        }
      },
      "id": "ChannelBrandingSettings"
    },
    "SponsorListResponse": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        },
        "visitorId": {
          "type": "string",
          "description": "The `visitorId` identifies the visitor."
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the `pageToken` parameter to\nretrieve the next page in the result set."
        },
        "kind": {
          "type": "string",
          "default": "youtube#sponsorListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#sponsorListResponse\"."
        },
        "pageInfo": {
          "$ref": "PageInfo"
        },
        "items": {
          "type": "array",
          "description": "A list of sponsors that match the request criteria.",
          "items": {
            "$ref": "Sponsor"
          }
        }
      },
      "id": "SponsorListResponse",
      "type": "object"
    },
    "VideoLiveStreamingDetails": {
      "id": "VideoLiveStreamingDetails",
      "properties": {
        "concurrentViewers": {
          "description": "The number of viewers currently watching the broadcast. The property and\nits value will be present if the broadcast has current viewers and the\nbroadcast owner has not hidden the viewcount for the video. Note that\nYouTube stops tracking the number of concurrent viewers for a broadcast\nwhen the broadcast ends. So, this property would not identify the number\nof viewers watching an archived video of a live broadcast that already\nended.",
          "format": "uint64",
          "type": "string"
        },
        "actualStartTime": {
          "type": "string",
          "description": "The time that the broadcast actually started. The value is specified\nin \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat. This value will not be\navailable until the broadcast begins."
        },
        "actualEndTime": {
          "type": "string",
          "description": "The time that the broadcast actually ended. The value is specified\nin \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat. This value will not be\navailable until the broadcast is over."
        },
        "activeLiveChatId": {
          "description": "The ID of the currently active live chat attached to this video. This\nfield is filled only if the video is a currently live broadcast that has\nlive chat. Once the broadcast transitions to complete this field will be\nremoved and the live chat closed down. For persistent broadcasts that live\nchat id will no longer be tied to this video but rather to the new video\nbeing displayed at the persistent page.",
          "type": "string"
        },
        "scheduledStartTime": {
          "description": "The time that the broadcast is scheduled to begin. The value is specified\nin \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        },
        "scheduledEndTime": {
          "description": "The time that the broadcast is scheduled to end. The value is specified\nin \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat. If the value is empty or\nthe property is not present, then the broadcast is scheduled to continue\nindefinitely.",
          "type": "string"
        }
      },
      "description": "Details about the live streaming metadata.",
      "type": "object"
    },
    "PlaylistSnippet": {
      "description": "Basic details about a playlist, including title, description and thumbnails.",
      "type": "object",
      "id": "PlaylistSnippet",
      "properties": {
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the channel that\npublished the playlist.",
          "type": "string"
        },
        "defaultLanguage": {
          "description": "The language of the playlist's default title and description.",
          "type": "string"
        },
        "localized": {
          "$ref": "PlaylistLocalization",
          "description": "Localized title and description, read-only."
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "description": "Keyword tags associated with the playlist.",
          "type": "array"
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the playlist. For each object\nin the map, the key is the name of the thumbnail image, and the value\nis an object that contains other information about the thumbnail.",
          "$ref": "ThumbnailDetails"
        },
        "description": {
          "type": "string",
          "description": "The playlist's description."
        },
        "title": {
          "description": "The playlist's title.",
          "type": "string"
        },
        "publishedAt": {
          "type": "string",
          "description": "The date and time that the playlist was created. The value is specified\nin \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "channelTitle": {
          "description": "The channel title of the channel that the video belongs to.",
          "type": "string"
        }
      }
    },
    "CaptionListResponse": {
      "id": "CaptionListResponse",
      "properties": {
        "items": {
          "description": "A list of captions that match the request criteria.",
          "type": "array",
          "items": {
            "$ref": "Caption"
          }
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#captionListResponse\"\u003c/code\u003e.",
          "default": "youtube#captionListResponse"
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiveChatSuperStickerDetails": {
      "id": "LiveChatSuperStickerDetails",
      "type": "object",
      "properties": {
        "tier": {
          "type": "integer",
          "description": "The tier in which the amount belongs. Lower amounts belong to lower\ntiers. The lowest tier is \u003ccode\u003e1\u003c/code\u003e.",
          "format": "uint32"
        },
        "currency": {
          "description": "The currency in which the purchase was made.",
          "type": "string"
        },
        "amountMicros": {
          "format": "uint64",
          "description": "The amount purchased by the user, in micros (1,750,000 micros = 1.75).",
          "type": "string"
        },
        "superStickerMetadata": {
          "description": "Information about the Super Sticker.",
          "$ref": "SuperStickerMetadata"
        },
        "amountDisplayString": {
          "type": "string",
          "description": "A rendered string that displays the fund amount and currency to the user."
        }
      }
    },
    "CommentSnippetAuthorChannelId": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "id": "CommentSnippetAuthorChannelId",
      "description": "The id of the author's YouTube channel, if any."
    },
    "SuperChatEvent": {
      "description": "A `__superChatEvent__` resource represents a Super Chat purchase on a YouTube\nchannel.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID that YouTube assigns to uniquely identify the Super Chat event."
        },
        "kind": {
          "default": "youtube#superChatEvent",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#superChatEvent\"`.",
          "type": "string"
        },
        "snippet": {
          "$ref": "SuperChatEventSnippet",
          "description": "The `snippet` object contains basic details about the Super Chat event."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        }
      },
      "id": "SuperChatEvent",
      "type": "object"
    },
    "VideoListResponse": {
      "properties": {
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Video"
          }
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        },
        "visitorId": {
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "youtube#videoListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#videoListResponse\"\u003c/code\u003e."
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "prevPageToken": {
          "type": "string",
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set."
        }
      },
      "id": "VideoListResponse",
      "type": "object"
    },
    "LiveChatBan": {
      "id": "LiveChatBan",
      "description": "A `__liveChatBan__` resource represents a ban for a YouTube live chat.",
      "properties": {
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the ban.",
          "type": "string"
        },
        "kind": {
          "default": "youtube#liveChatBan",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n`\"youtube#liveChatBan\"`."
        },
        "snippet": {
          "$ref": "LiveChatBanSnippet",
          "description": "The `snippet` object contains basic details about the ban."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        }
      },
      "type": "object"
    },
    "VideoCategorySnippet": {
      "id": "VideoCategorySnippet",
      "type": "object",
      "description": "Basic details about a video category, such as its localized title.",
      "properties": {
        "assignable": {
          "type": "boolean"
        },
        "channelId": {
          "type": "string",
          "description": "The YouTube channel that created the video category."
        },
        "title": {
          "description": "The video category's title.",
          "type": "string"
        }
      }
    },
    "ChannelSectionLocalization": {
      "id": "ChannelSectionLocalization",
      "description": "ChannelSection localization setting",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "The localized strings for channel section's title."
        }
      }
    },
    "WatchSettings": {
      "properties": {
        "textColor": {
          "type": "string",
          "description": "The background color for the video watch page's branded area."
        },
        "backgroundColor": {
          "type": "string",
          "description": "The text color for the video watch page's branded area."
        },
        "featuredPlaylistId": {
          "description": "An ID that uniquely identifies a playlist that displays next to the video\nplayer.",
          "type": "string"
        }
      },
      "description": "Branding properties for the watch. All deprecated.",
      "type": "object",
      "id": "WatchSettings"
    },
    "MonitorStreamInfo": {
      "id": "MonitorStreamInfo",
      "description": "Settings and Info of the monitor stream",
      "properties": {
        "enableMonitorStream": {
          "type": "boolean",
          "description": "This value determines whether the monitor stream is enabled for the\nbroadcast. If the monitor stream is enabled, then YouTube will\nbroadcast the event content on a special stream intended only for\nthe broadcaster's consumption. The broadcaster can use the stream\nto review the event content and also to identify the optimal times\nto insert cuepoints.\u003cbr\u003e\u003cbr\u003e\nYou need to set this value to \u003ccode\u003etrue\u003c/code\u003e if you intend to have\na broadcast delay for your event.\u003cbr\u003e\u003cbr\u003e\n\u003cstrong\u003eNote:\u003c/strong\u003e This property cannot be updated once the\nbroadcast is in the \u003ccode\u003etesting\u003c/code\u003e or \u003ccode\u003elive\u003c/code\u003e state.",
          "annotations": {
            "required": [
              "youtube.liveBroadcasts.update"
            ]
          }
        },
        "embedHtml": {
          "type": "string",
          "description": "HTML code that embeds a player that plays the monitor stream."
        },
        "broadcastStreamDelayMs": {
          "annotations": {
            "required": [
              "youtube.liveBroadcasts.update"
            ]
          },
          "format": "uint32",
          "description": "If you have set the\n\u003ccode\u003e\u003ca href=\"#enableMonitorStream\"\u003eenableMonitorStream\u003c/a\u003e\u003c/code\u003e\nproperty to \u003ccode\u003etrue\u003c/code\u003e, then this property determines the\nlength of the live broadcast delay.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "MembershipsLevelSnippet": {
      "id": "MembershipsLevelSnippet",
      "type": "object",
      "properties": {
        "levelDetails": {
          "$ref": "LevelDetails",
          "description": "Details about the pricing level."
        },
        "creatorChannelId": {
          "description": "The id of the channel that's offering channel memberships.",
          "type": "string"
        }
      }
    },
    "VideoProcessingDetails": {
      "properties": {
        "thumbnailsAvailability": {
          "type": "string",
          "description": "This value indicates whether thumbnail images have been generated for\nthe video."
        },
        "fileDetailsAvailability": {
          "description": "This value indicates whether file details are available for the uploaded\nvideo. You can retrieve a video's file details by requesting the\n\u003ccode\u003efileDetails\u003c/code\u003e part in your \u003ccode\u003evideos.list()\u003c/code\u003e request.",
          "type": "string"
        },
        "processingFailureReason": {
          "description": "The reason that YouTube failed to process the video. This property will\nonly have a value if the \u003ccode\u003eprocessingStatus\u003c/code\u003e\nproperty's value is \u003ccode\u003efailed\u003c/code\u003e.",
          "type": "string",
          "enum": [
            "uploadFailed",
            "transcodeFailed",
            "streamingFailed",
            "other"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "processingIssuesAvailability": {
          "description": "This value indicates whether the video processing engine has generated\nsuggestions that might improve YouTube's ability to process the\nthe video, warnings that explain video processing problems, or\nerrors that cause video processing problems. You can retrieve these\nsuggestions by requesting the \u003ccode\u003esuggestions\u003c/code\u003e part in your\n\u003ccode\u003evideos.list()\u003c/code\u003e request.",
          "type": "string"
        },
        "editorSuggestionsAvailability": {
          "type": "string",
          "description": "This value indicates whether video editing suggestions, which might\nimprove video quality or the playback experience, are available for\nthe video. You can retrieve these suggestions by requesting the\n\u003ccode\u003esuggestions\u003c/code\u003e part in your \u003ccode\u003evideos.list()\u003c/code\u003e request."
        },
        "processingStatus": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "processing",
            "succeeded",
            "failed",
            "terminated"
          ],
          "description": "The video's processing status. This value indicates whether YouTube was\nable to process the video or if the video is still being processed."
        },
        "tagSuggestionsAvailability": {
          "description": "This value indicates whether keyword (tag) suggestions are available for\nthe video. Tags can be added to a video's metadata to make it easier for\nother users to find the video. You can retrieve these suggestions by\nrequesting the \u003ccode\u003esuggestions\u003c/code\u003e part in your\n\u003ccode\u003evideos.list()\u003c/code\u003e request.",
          "type": "string"
        },
        "processingProgress": {
          "description": "The \u003ccode\u003eprocessingProgress\u003c/code\u003e object contains information about the\nprogress YouTube has made in processing the video. The values are really\nonly relevant if the video's processing status is \u003ccode\u003eprocessing\u003c/code\u003e.",
          "$ref": "VideoProcessingDetailsProcessingProgress"
        }
      },
      "description": "Describes processing status and progress and availability of some other Video\nresource parts.",
      "type": "object",
      "id": "VideoProcessingDetails"
    },
    "PageInfo": {
      "id": "PageInfo",
      "description": "Paging details for lists of resources, including total number of items\navailable and number of resources returned in a single page.",
      "properties": {
        "resultsPerPage": {
          "format": "int32",
          "type": "integer",
          "description": "The number of results included in the API response."
        },
        "totalResults": {
          "format": "int32",
          "description": "The total number of results in the result set.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "CommentThreadSnippet": {
      "id": "CommentThreadSnippet",
      "properties": {
        "channelId": {
          "type": "string",
          "description": "The YouTube channel the comments in the thread refer to or the channel\nwith the video the comments refer to. If video_id isn't set the comments\nrefer to the channel itself."
        },
        "totalReplyCount": {
          "description": "The total number of replies (not including the top level comment).",
          "format": "uint32",
          "type": "integer"
        },
        "videoId": {
          "description": "The ID of the video the comments refer to, if any. No video_id implies a\nchannel discussion comment.",
          "type": "string"
        },
        "canReply": {
          "type": "boolean",
          "description": "Whether the current viewer of the thread can reply to it. This is viewer\nspecific - other viewers may see a different value for this field."
        },
        "isPublic": {
          "type": "boolean",
          "description": "Whether the thread (and therefore all its comments) is visible to all\nYouTube users."
        },
        "topLevelComment": {
          "$ref": "Comment",
          "description": "The top level comment of this thread."
        }
      },
      "description": "Basic details about a comment thread.",
      "type": "object"
    },
    "VideoAbuseReportReasonSnippet": {
      "description": "Basic details about a video category, such as its localized title.",
      "properties": {
        "label": {
          "description": "The localized label belonging to this abuse report reason.",
          "type": "string"
        },
        "secondaryReasons": {
          "description": "The secondary reasons associated with this reason, if any are available.\n(There might be 0 or more.)",
          "items": {
            "$ref": "VideoAbuseReportSecondaryReason"
          },
          "type": "array"
        }
      },
      "id": "VideoAbuseReportReasonSnippet",
      "type": "object"
    },
    "GuideCategory": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "kind": {
          "type": "string",
          "default": "youtube#guideCategory",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#guideCategory\"\u003c/code\u003e."
        },
        "snippet": {
          "$ref": "GuideCategorySnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the category,\nsuch as its title."
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the guide category.",
          "type": "string"
        }
      },
      "id": "GuideCategory",
      "description": "A \u003ccode\u003e\u003cstrong\u003eguideCategory\u003c/strong\u003e\u003c/code\u003e resource identifies a category\nthat YouTube algorithmically assigns based on a\nchannel's content or other indicators, such as the channel's popularity. The\nlist is similar to \u003ca\nhref=\\\"/youtube/v3/docs/videocategory.html\\\"\u003evideo categories\u003c/a\u003e, with the\ndifference being that a video's uploader can assign a video category but only\nYouTube can assign a channel category.",
      "type": "object"
    },
    "ChannelSection": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the channel section.",
          "type": "string"
        },
        "localizations": {
          "additionalProperties": {
            "$ref": "ChannelSectionLocalization"
          },
          "description": "Localizations for different languages",
          "type": "object"
        },
        "snippet": {
          "$ref": "ChannelSectionSnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the channel\nsection, such as its type, style and title."
        },
        "targeting": {
          "$ref": "ChannelSectionTargeting",
          "description": "The \u003ccode\u003etargeting\u003c/code\u003e object contains basic targeting settings about\nthe channel section."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#channelSection\"\u003c/code\u003e.",
          "default": "youtube#channelSection",
          "type": "string"
        },
        "contentDetails": {
          "description": "The \u003ccode\u003econtentDetails\u003c/code\u003e object contains details about the channel\nsection content, such as a list of playlists or channels featured in the\nsection.",
          "$ref": "ChannelSectionContentDetails"
        }
      },
      "id": "ChannelSection"
    },
    "ActivityContentDetailsSubscription": {
      "type": "object",
      "description": "Information about a channel that a user subscribed to.",
      "properties": {
        "resourceId": {
          "$ref": "ResourceId",
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object contains information that\nidentifies the resource that the user subscribed to."
        }
      },
      "id": "ActivityContentDetailsSubscription"
    },
    "ChannelContentOwnerDetails": {
      "description": "The \u003ccode\u003econtentOwnerDetails\u003c/code\u003e object encapsulates channel data that\nis relevant for YouTube Partners linked with the channel.",
      "id": "ChannelContentOwnerDetails",
      "properties": {
        "timeLinked": {
          "type": "string",
          "description": "The date and time of when the channel was linked to the content owner.\nThe value is specified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO\n8601\u003c/a\u003e\nformat."
        },
        "contentOwner": {
          "description": "The ID of the content owner linked to the channel.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "VideoContentDetailsRegionRestriction": {
      "type": "object",
      "properties": {
        "blocked": {
          "description": "A list of region codes that identify countries where the video is\nblocked. If this property is present and a country is not listed in\nits value, then the video is viewable in that country. If this\nproperty is present and contains an empty list, the video is\nviewable in all countries.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowed": {
          "description": "A list of region codes that identify countries where the video is\nviewable. If this property is present and a country is not listed\nin its value, then the video is blocked from appearing in that\ncountry. If this property is present and contains an empty list,\nthe video is blocked in all countries.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "DEPRECATED Region restriction of the video.",
      "id": "VideoContentDetailsRegionRestriction"
    },
    "PlaylistStatus": {
      "type": "object",
      "id": "PlaylistStatus",
      "properties": {
        "privacyStatus": {
          "enum": [
            "public",
            "unlisted",
            "private"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "The playlist's privacy status.",
          "type": "string"
        }
      }
    },
    "SubscriptionSnippet": {
      "id": "SubscriptionSnippet",
      "description": "Basic details about a subscription, including title, description and\nthumbnails of the subscribed item.",
      "properties": {
        "resourceId": {
          "description": "The \u003ccode\u003eid\u003c/code\u003e object contains information about the channel that\nthe user subscribed to.",
          "annotations": {
            "required": [
              "youtube.subscriptions.insert"
            ]
          },
          "$ref": "ResourceId"
        },
        "thumbnails": {
          "$ref": "ThumbnailDetails",
          "description": "A map of thumbnail images associated with the video. For each object\nin the map, the key is the name of the thumbnail image, and the value\nis an object that contains other information about the thumbnail."
        },
        "publishedAt": {
          "type": "string",
          "description": "The date and time that the subscription was created. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "channelTitle": {
          "description": "Channel title for the channel that the subscription belongs to.",
          "type": "string"
        },
        "title": {
          "description": "The subscription's title.",
          "type": "string"
        },
        "description": {
          "description": "The subscription's details.",
          "type": "string"
        },
        "channelId": {
          "description": "The ID that YouTube uses to uniquely identify the subscriber's channel.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SponsorSnippet": {
      "type": "object",
      "id": "SponsorSnippet",
      "properties": {
        "channelId": {
          "type": "string",
          "description": "The id of the channel being sponsored."
        },
        "cumulativeDurationMonths": {
          "type": "integer",
          "description": "The cumulative time a user has been a sponsor in months.",
          "format": "int32"
        },
        "sponsorSince": {
          "type": "string",
          "description": "The date and time when the user became a sponsor. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\n(`YYYY-MM-DDThh:mm:ss.sZ`) format."
        },
        "sponsorDetails": {
          "description": "Details about the sponsor.",
          "$ref": "ChannelProfileDetails"
        }
      }
    },
    "Channel": {
      "id": "Channel",
      "type": "object",
      "description": "A \u003ccode\u003e\u003cstrong\u003echannel\u003c/strong\u003e\u003c/code\u003e resource contains\ninformation about a YouTube channel.",
      "properties": {
        "topicDetails": {
          "description": "The \u003ccode\u003etopicDetails\u003c/code\u003e object encapsulates information about\n\u003ca href=\"http://www.freebase.com\"\u003eFreebase\u003c/a\u003e topics associated with the\nchannel.",
          "$ref": "ChannelTopicDetails"
        },
        "conversionPings": {
          "description": "The \u003ccode\u003econversionPings\u003c/code\u003e object encapsulates information about\nconversion pings that need to be respected by the channel.",
          "$ref": "ChannelConversionPings"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "status": {
          "description": "The \u003ccode\u003estatus\u003c/code\u003e object encapsulates information about the privacy\nstatus of the channel.",
          "$ref": "ChannelStatus"
        },
        "snippet": {
          "$ref": "ChannelSnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the channel,\nsuch as its title, description, and thumbnail images."
        },
        "id": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the channel."
        },
        "statistics": {
          "$ref": "ChannelStatistics",
          "description": "The \u003ccode\u003estatistics\u003c/code\u003e object encapsulates statistics for the channel."
        },
        "invideoPromotion": {
          "$ref": "InvideoPromotion",
          "description": "The \u003ccode\u003einvideoPromotion\u003c/code\u003e object encapsulates information about\npromotion campaign associated with the channel."
        },
        "brandingSettings": {
          "description": "The \u003ccode\u003ebrandingSettings\u003c/code\u003e object encapsulates information about\nthe branding of the channel.",
          "$ref": "ChannelBrandingSettings"
        },
        "localizations": {
          "type": "object",
          "description": "Localizations for different languages",
          "additionalProperties": {
            "$ref": "ChannelLocalization"
          }
        },
        "auditDetails": {
          "$ref": "ChannelAuditDetails",
          "description": "The \u003ccode\u003eauditionDetails\u003c/code\u003e object encapsulates channel data\nthat is relevant for YouTube Partners during the audition process."
        },
        "contentOwnerDetails": {
          "description": "The \u003ccode\u003econtentOwnerDetails\u003c/code\u003e object encapsulates channel data\nthat is relevant for YouTube Partners linked with the channel.",
          "$ref": "ChannelContentOwnerDetails"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#channel\"\u003c/code\u003e.",
          "type": "string",
          "default": "youtube#channel"
        },
        "contentDetails": {
          "description": "The \u003ccode\u003econtentDetails\u003c/code\u003e object encapsulates information about the\nchannel's content.",
          "$ref": "ChannelContentDetails"
        }
      }
    },
    "LiveChatModerator": {
      "type": "object",
      "id": "LiveChatModerator",
      "description": "A \u003ccode\u003e\u003cstrong\u003eliveChatModerator\u003c/strong\u003e\u003c/code\u003e resource represents a\nmoderator for a YouTube live chat. A chat moderator has the ability to\nban/unban users from a chat, remove message, etc.",
      "properties": {
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the\nmoderator.",
          "$ref": "LiveChatModeratorSnippet"
        },
        "id": {
          "type": "string",
          "description": "The ID that YouTube assigns to uniquely identify the moderator."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#liveChatModerator\"\u003c/code\u003e.",
          "type": "string",
          "default": "youtube#liveChatModerator"
        }
      }
    },
    "ChannelTopicDetails": {
      "type": "object",
      "properties": {
        "topicIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of Freebase topic IDs associated with the channel. You can retrieve\ninformation about each topic using the \u003ca\nhref=\"http://wiki.freebase.com/wiki/Topic_API\"\u003eFreebase Topic API\u003c/a\u003e."
        },
        "topicCategories": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of Wikipedia URLs that describe the channel's content."
        }
      },
      "id": "ChannelTopicDetails",
      "description": "Freebase topic information related to the channel."
    },
    "VideoCategoryListResponse": {
      "id": "VideoCategoryListResponse",
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of video categories that can be associated with YouTube videos. In\nthis map, the video category ID is the map key, and its value is the\ncorresponding \u003ccode\u003evideoCategory\u003c/code\u003e resource.",
          "items": {
            "$ref": "VideoCategory"
          }
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "kind": {
          "type": "string",
          "default": "youtube#videoCategoryListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#videoCategoryListResponse\"\u003c/code\u003e."
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set.",
          "type": "string"
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "pageInfo": {
          "description": "General pagination information.",
          "$ref": "PageInfo"
        }
      },
      "type": "object"
    },
    "PlaylistItem": {
      "properties": {
        "kind": {
          "default": "youtube#playlistItem",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#playlistItem\"\u003c/code\u003e."
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the\nplaylist item, such as its title and position in the playlist.",
          "$ref": "PlaylistItemSnippet"
        },
        "status": {
          "$ref": "PlaylistItemStatus",
          "description": "The \u003ccode\u003estatus\u003c/code\u003e object contains information about the playlist\nitem's privacy status."
        },
        "id": {
          "description": "The ID that YouTube uses to uniquely identify the playlist item.",
          "type": "string"
        },
        "contentDetails": {
          "$ref": "PlaylistItemContentDetails",
          "description": "The \u003ccode\u003econtentDetails\u003c/code\u003e object is included in the resource if\nthe included item is a YouTube video. The object contains additional\ninformation about the video."
        }
      },
      "type": "object",
      "description": "A \u003ccode\u003e\u003cstrong\u003eplaylistItem\u003c/strong\u003e\u003c/code\u003e resource identifies\nanother resource, such as a video, that is included in a playlist. In\naddition, the \u003ccode\u003eplaylistItem \u003c/code\u003e resource contains details\nabout the included resource that pertain specifically to how that\nresource is used in that playlist.\u003cbr/\u003e\u003cbr/\u003e YouTube uses playlists to\nidentify special collections of videos for a channel, such as:\n  \u003cul\u003e\n    \u003cli\u003euploaded videos\u003c/li\u003e\n    \u003cli\u003efavorite videos\u003c/li\u003e\n    \u003cli\u003epositively rated (liked) videos\u003c/li\u003e\n    \u003cli\u003ewatch history\u003c/li\u003e\n    \u003cli\u003ewatch later\u003c/li\u003e\n  \u003c/ul\u003e\n To be more specific, these lists are associated with a channel, which\nis a collection of a person, group, or company's videos, playlists,\nand other YouTube information.\n\u003cbr/\u003e\u003cbr/\u003e\n You can retrieve the playlist IDs for each of these lists from the\n\u003ccode\u003e \u003ca href=\\\"/youtube/v3/docs/channels\\\"\u003echannel resource\u003c/a\u003e\n\u003c/code\u003e for a given channel. You can then use the \u003ccode\u003e \u003ca\nhref=\\\"/youtube/v3/docs/playlistItems/list\\\"\u003e\nplaylistItems.list\u003c/a\u003e\u003c/code\u003e method to retrieve any of those\nlists. You can also add or remove items from those lists by calling\nthe \u003ccode\u003e \u003ca href=\\\"/youtube/v3/docs/playlistItems/insert\\\"\u003e\nplaylistItems.insert\u003c/a\u003e\u003c/code\u003e and \u003ccode\u003e \u003ca\nhref=\\\"/youtube/v3/docs/playlistItems/delete\\\"\u003e\nplaylistItems.delete\u003c/a\u003e\u003c/code\u003e methods. For example, if a user gives\na positive rating to a video, you would insert that video into the\nliked videos playlist for that user's channel.",
      "id": "PlaylistItem"
    },
    "CaptionSnippet": {
      "type": "object",
      "description": "Basic details about a caption track, such as its language and name.",
      "properties": {
        "audioTrackType": {
          "enum": [
            "unknown",
            "primary",
            "commentary",
            "descriptive"
          ],
          "type": "string",
          "description": "The type of audio track associated with the caption track.",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "language": {
          "description": "The language of the caption track. The property value is a\n\u003ca href=\"http://www.rfc-editor.org/rfc/bcp/bcp47.txt\"\u003eBCP-47\u003c/a\u003e\n language tag.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the caption track. The name is intended to be visible\nto the user as an option during playback."
        },
        "isEasyReader": {
          "type": "boolean",
          "description": "Indicates whether caption track is formatted for \"easy reader,\"\nmeaning it is at a third-grade level for language learners.\nThe default value is \u003ccode\u003efalse\u003c/code\u003e."
        },
        "status": {
          "enum": [
            "serving",
            "syncing",
            "failed"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "The caption track's status."
        },
        "videoId": {
          "annotations": {
            "required": [
              "youtube.captions.insert"
            ]
          },
          "description": "The ID that YouTube uses to uniquely identify the video associated\nwith the caption track.\n@mutable youtube.captions.insert",
          "type": "string"
        },
        "isLarge": {
          "type": "boolean",
          "description": "Indicates whether the caption track uses large text for the\nvision-impaired. The default value is \u003ccode\u003efalse\u003c/code\u003e."
        },
        "trackKind": {
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "standard",
            "ASR",
            "forced"
          ],
          "description": "The caption track's type.",
          "type": "string"
        },
        "isCC": {
          "description": "Indicates whether the track contains closed captions for the deaf\nand hard of hearing. The default value is \u003ccode\u003efalse\u003c/code\u003e.",
          "type": "boolean"
        },
        "lastUpdated": {
          "description": "The date and time when the caption track was last updated. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        },
        "failureReason": {
          "enum": [
            "unknownFormat",
            "unsupportedFormat",
            "processingFailed"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "The reason that YouTube failed to process the caption track. This\nproperty is only present if the \u003ccode\u003e\u003ca href=\"#state\"\u003estate\u003c/a\u003e\u003c/code\u003e\nproperty's value is \u003ccode\u003efailed\u003c/code\u003e."
        },
        "isAutoSynced": {
          "description": "Indicates whether YouTube synchronized the caption track to the audio\ntrack in the video. The value will be \u003ccode\u003etrue\u003c/code\u003e if a sync was\nexplicitly requested when the caption track was uploaded. For example,\nwhen calling the \u003ccode\u003ecaptions.insert\u003c/code\u003e or\n\u003ccode\u003ecaptions.update\u003c/code\u003e methods, you can set the \u003ccode\u003esync\u003c/code\u003e\nparameter to \u003ccode\u003etrue\u003c/code\u003e to instruct YouTube to sync the uploaded\ntrack to the video. If the value is \u003ccode\u003efalse\u003c/code\u003e, YouTube uses\nthe time codes in the uploaded caption track to determine when to display\ncaptions.",
          "type": "boolean"
        },
        "isDraft": {
          "type": "boolean",
          "description": "Indicates whether the caption track is a draft. If the value is\n\u003ccode\u003etrue\u003c/code\u003e, then the track is not publicly visible.\nThe default value is \u003ccode\u003efalse\u003c/code\u003e.\n@mutable youtube.captions.insert youtube.captions.update"
        }
      },
      "id": "CaptionSnippet"
    },
    "MembershipsDurationAtLevel": {
      "id": "MembershipsDurationAtLevel",
      "type": "object",
      "properties": {
        "memberTotalDurationMonths": {
          "type": "integer",
          "description": "The cumulative time the user has been a member for the given level in\ncomplete months (the time is rounded down to the nearest integer).",
          "format": "int32"
        },
        "memberSince": {
          "description": "The date and time when the user became a continuous member for the given\nlevel.",
          "type": "string"
        },
        "level": {
          "type": "string",
          "description": "Pricing level ID."
        }
      }
    },
    "LiveStream": {
      "type": "object",
      "description": "A live stream describes a live ingestion point.",
      "properties": {
        "cdn": {
          "description": "The \u003ccode\u003ecdn\u003c/code\u003e object defines the live stream's content delivery\nnetwork (CDN) settings. These settings provide details about the manner\nin which you stream your content to YouTube.",
          "$ref": "CdnSettings"
        },
        "snippet": {
          "$ref": "LiveStreamSnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the\nstream, including its channel, title, and description."
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the stream.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "contentDetails": {
          "description": "The \u003ccode\u003econtent_details\u003c/code\u003e object contains information about the\nstream, including the closed captions ingestion URL.",
          "$ref": "LiveStreamContentDetails"
        },
        "status": {
          "$ref": "LiveStreamStatus",
          "description": "The \u003ccode\u003estatus\u003c/code\u003e object contains information about\nlive stream's status."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#liveStream\"\u003c/code\u003e.",
          "type": "string",
          "default": "youtube#liveStream"
        }
      },
      "id": "LiveStream"
    },
    "MembershipsLevel": {
      "type": "object",
      "id": "MembershipsLevel",
      "properties": {
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the memberships level.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "kind": {
          "default": "youtube#membershipsLevel",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#membershipsLevelListResponse\"\u003c/code\u003e.",
          "type": "string"
        },
        "snippet": {
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the level.",
          "$ref": "MembershipsLevelSnippet"
        }
      },
      "description": "A \u003ccode\u003e\u003cstrong\u003emembershipsLevel\u003c/strong\u003e\u003c/code\u003e resource represents an offer\nmade by YouTube creators for their fans. Users can become members of the\nchannel by joining one of the available levels. They will provide recurring\nmonetary support and receives special benefits."
    },
    "LiveChatMessageSnippet": {
      "id": "LiveChatMessageSnippet",
      "properties": {
        "displayMessage": {
          "description": "Contains a string that can be displayed to the user.\nIf this field is not present the message is silent, at the moment only\nmessages of type TOMBSTONE and CHAT_ENDED_EVENT are silent.",
          "type": "string"
        },
        "messageRetractedDetails": {
          "$ref": "LiveChatMessageRetractedDetails"
        },
        "messageDeletedDetails": {
          "$ref": "LiveChatMessageDeletedDetails"
        },
        "fanFundingEventDetails": {
          "description": "Details about the funding event, this is only set if the type is\n'fanFundingEvent'.",
          "$ref": "LiveChatFanFundingEventDetails"
        },
        "superChatDetails": {
          "description": "Details about the Super Chat event, this is only set if the type is\n'superChatEvent'.",
          "$ref": "LiveChatSuperChatDetails"
        },
        "type": {
          "type": "string",
          "description": "The type of message, this will always be present, it determines the\ncontents of the message as well as which fields will be present.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "invalidType",
            "textMessageEvent",
            "tombstone",
            "fanFundingEvent",
            "chatEndedEvent",
            "sponsorOnlyModeStartedEvent",
            "sponsorOnlyModeEndedEvent",
            "newSponsorEvent",
            "messageDeletedEvent",
            "messageRetractedEvent",
            "userBannedEvent",
            "superChatEvent",
            "superStickerEvent"
          ]
        },
        "superStickerDetails": {
          "$ref": "LiveChatSuperStickerDetails",
          "description": "Details about the Super Sticker event, this is only set if the type is\n'superStickerEvent'."
        },
        "publishedAt": {
          "type": "string",
          "description": "The date and time when the message was orignally published. The value is\nspecified in \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "hasDisplayContent": {
          "description": "Whether the message has display content that should be displayed to users.",
          "type": "boolean"
        },
        "userBannedDetails": {
          "$ref": "LiveChatUserBannedMessageDetails"
        },
        "liveChatId": {
          "type": "string"
        },
        "textMessageDetails": {
          "description": "Details about the text message, this is only set if the type is\n'textMessageEvent'.",
          "$ref": "LiveChatTextMessageDetails"
        },
        "authorChannelId": {
          "type": "string",
          "description": "The ID of the user that authored this message, this field is not always\nfilled.\ntextMessageEvent - the user that wrote the message\nfanFundingEvent - the user that funded the broadcast\nnewSponsorEvent - the user that just became a sponsor\nmessageDeletedEvent - the moderator that took the action\nmessageRetractedEvent - the author that retracted their message\nuserBannedEvent - the moderator that took the action\nsuperChatEvent - the user that made the purchase"
        }
      },
      "type": "object"
    },
    "Subscription": {
      "properties": {
        "contentDetails": {
          "$ref": "SubscriptionContentDetails",
          "description": "The \u003ccode\u003econtentDetails\u003c/code\u003e object contains basic statistics about the\nsubscription."
        },
        "subscriberSnippet": {
          "description": "The \u003ccode\u003esubscriberSnippet\u003c/code\u003e object contains basic details about the\nsubscriber.",
          "$ref": "SubscriptionSubscriberSnippet"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#subscription\"\u003c/code\u003e.",
          "default": "youtube#subscription"
        },
        "id": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the subscription."
        },
        "snippet": {
          "$ref": "SubscriptionSnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the\nsubscription, including its title and the channel that the user subscribed\nto."
        }
      },
      "type": "object",
      "id": "Subscription",
      "description": "A \u003ccode\u003e\u003cstrong\u003esubscription\u003c/strong\u003e\u003c/code\u003e resource contains information\nabout a YouTube user subscription.  A subscription notifies a user when new\nvideos are added to a channel or when another user takes one of several\nactions on YouTube, such as uploading a video, rating a video, or commenting\non a video."
    },
    "LiveBroadcastStatistics": {
      "properties": {
        "totalChatCount": {
          "format": "uint64",
          "description": "The total number of live chat messages currently on the broadcast. The\nproperty and its value will be present if the broadcast is public, has\nthe live chat feature enabled, and has at least one message. Note that\nthis field will not be filled after the broadcast ends. So this property\nwould not identify the number of chat messages for an archived video of a\ncompleted live broadcast.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Statistics about the live broadcast. These represent a snapshot of the values\nat the time of the request. Statistics are only returned for live broadcasts.",
      "id": "LiveBroadcastStatistics"
    },
    "LiveStreamContentDetails": {
      "properties": {
        "closedCaptionsIngestionUrl": {
          "type": "string",
          "description": "The ingestion URL where the closed captions of this stream are sent."
        },
        "isReusable": {
          "type": "boolean",
          "description": "Indicates whether the stream is reusable, which means that it\ncan be bound to multiple broadcasts. It is common for\nbroadcasters to reuse the same stream for many different\nbroadcasts if those broadcasts occur at different times.\u003cbr\u003e\u003cbr\u003e\nIf you set this value to \u003ccode\u003efalse\u003c/code\u003e, then the stream\nwill not be reusable, which means that it can only be bound to\none broadcast. Non-reusable streams differ from reusable streams in the\nfollowing ways:\n\u003cul\u003e\n  \u003cli\u003eA non-reusable stream can only be bound to one broadcast.\u003c/li\u003e\n  \u003cli\u003eA non-reusable stream might be deleted by an automated process\n    after the broadcast ends.\u003c/li\u003e\n  \u003cli\u003eThe \u003ccode\u003e\u003ca href=\"/youtube/v3/live/docs/liveStreams/list\"\u003e\n    liveStreams.list\u003c/a\u003e\u003c/code\u003e method does not list non-reusable streams\n    if you call the method and set the \u003ccode\u003emine\u003c/code\u003e parameter to\n    \u003ccode\u003etrue\u003c/code\u003e. The only way to use that method to retrieve the\n    resource for a non-reusable stream is to use the \u003ccode\u003eid\u003c/code\u003e\n    parameter to identify the stream.\u003c/li\u003e\n\u003c/ul\u003e"
        }
      },
      "description": "Detailed settings of a stream.",
      "type": "object",
      "id": "LiveStreamContentDetails"
    },
    "LiveBroadcast": {
      "id": "LiveBroadcast",
      "description": "A \u003ccode\u003e\u003cstrong\u003eliveBroadcast\u003c/strong\u003e\u003c/code\u003e resource represents an event\nthat will be streamed, via live video, on YouTube.",
      "properties": {
        "status": {
          "$ref": "LiveBroadcastStatus",
          "description": "The \u003ccode\u003estatus\u003c/code\u003e object contains information about the event's\nstatus."
        },
        "snippet": {
          "$ref": "LiveBroadcastSnippet",
          "description": "The \u003ccode\u003esnippet\u003c/code\u003e object contains basic details about the event,\nincluding its title, description, start time, and end time."
        },
        "id": {
          "description": "The ID that YouTube assigns to uniquely identify the broadcast.",
          "type": "string"
        },
        "contentDetails": {
          "$ref": "LiveBroadcastContentDetails",
          "description": "The \u003ccode\u003econtentDetails\u003c/code\u003e object contains information about the\nevent's video content, such as whether the content can be shown in an\nembedded video player or if it will be archived and therefore available\nfor viewing after the event has concluded."
        },
        "statistics": {
          "description": "The \u003ccode\u003estatistics\u003c/code\u003e object contains info about the event's current\nstats. These include concurrent viewers and total chat count. Statistics\ncan change (in either direction) during the lifetime of an event.\nStatistics are only returned while the event is live.",
          "$ref": "LiveBroadcastStatistics"
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#liveBroadcast\"\u003c/code\u003e.",
          "default": "youtube#liveBroadcast"
        }
      },
      "type": "object"
    },
    "ActivityContentDetailsSocial": {
      "type": "object",
      "id": "ActivityContentDetailsSocial",
      "description": "Details about a social network post.",
      "properties": {
        "referenceUrl": {
          "description": "The URL of the social network post.",
          "type": "string"
        },
        "resourceId": {
          "$ref": "ResourceId",
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object encapsulates information that\nidentifies the resource associated with a social network post."
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The name of the social network.",
          "type": "string",
          "enum": [
            "typeUnspecified",
            "googlePlus",
            "facebook",
            "twitter"
          ]
        },
        "author": {
          "description": "The author of the social network post.",
          "type": "string"
        },
        "imageUrl": {
          "type": "string",
          "description": "An image of the post's author."
        }
      }
    },
    "VideoPlayer": {
      "type": "object",
      "description": "Player to be used for a video playback.",
      "id": "VideoPlayer",
      "properties": {
        "embedWidth": {
          "type": "string",
          "format": "int64",
          "description": "The embed width"
        },
        "embedHtml": {
          "description": "An \u003ccode\u003e&lt;iframe&gt;\u003c/code\u003e tag that embeds a player that will\nplay the video.",
          "type": "string"
        },
        "embedHeight": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "MembershipsLevelListResponse": {
      "id": "MembershipsLevelListResponse",
      "type": "object",
      "properties": {
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "etag": {
          "description": "Etag of this resource.",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "MembershipsLevel"
          },
          "description": "A list of pricing levels offered by a creator to the fans.",
          "type": "array"
        },
        "eventId": {
          "description": "Serialized EventId of the request which produced this response.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "default": "youtube#membershipsLevelListResponse",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#membershipsLevelListResponse\"\u003c/code\u003e."
        }
      }
    },
    "LiveChatMessageAuthorDetails": {
      "type": "object",
      "properties": {
        "channelId": {
          "description": "The YouTube channel ID.",
          "type": "string"
        },
        "isChatOwner": {
          "description": "Whether the author is the owner of the live chat.",
          "type": "boolean"
        },
        "isVerified": {
          "type": "boolean",
          "description": "Whether the author's identity has been verified by YouTube."
        },
        "profileImageUrl": {
          "description": "The channels's avatar URL.",
          "type": "string"
        },
        "channelUrl": {
          "description": "The channel's URL.",
          "type": "string"
        },
        "isChatModerator": {
          "type": "boolean",
          "description": "Whether the author is a moderator of the live chat."
        },
        "isChatSponsor": {
          "description": "Whether the author is a sponsor of the live chat.",
          "type": "boolean"
        },
        "displayName": {
          "description": "The channel's display name.",
          "type": "string"
        }
      },
      "id": "LiveChatMessageAuthorDetails"
    },
    "CdnSettings": {
      "id": "CdnSettings",
      "type": "object",
      "description": "Brief description of the live stream cdn settings.",
      "properties": {
        "ingestionInfo": {
          "description": "The \u003ccode\u003eingestionInfo\u003c/code\u003e object contains information that YouTube\nprovides that you need to transmit your RTMP or HTTP stream to YouTube.",
          "$ref": "IngestionInfo"
        },
        "frameRate": {
          "enum": [
            "30fps",
            "60fps",
            "variable"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "The frame rate of the inbound video data.",
          "type": "string"
        },
        "ingestionType": {
          "enum": [
            "rtmp",
            "dash",
            "webrtc",
            "hls"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": " The method or protocol used to transmit the video stream."
        },
        "format": {
          "type": "string",
          "description": "The format of the video stream that you are sending to Youtube. \u003cbr\u003e\u003cbr\u003e"
        },
        "resolution": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "The resolution of the inbound video data.",
          "enum": [
            "240p",
            "360p",
            "480p",
            "720p",
            "1080p",
            "1440p",
            "2160p",
            "variable"
          ]
        }
      }
    },
    "VideoProcessingDetailsProcessingProgress": {
      "properties": {
        "partsTotal": {
          "format": "uint64",
          "description": "An estimate of the total number of parts that need to be processed\nfor the video. The number may be updated with more precise estimates\nwhile YouTube processes the video.",
          "type": "string"
        },
        "partsProcessed": {
          "description": "The number of parts of the video that YouTube has already processed.\nYou can estimate the percentage of the video that YouTube has already\nprocessed by calculating:\u003cbr\u003e\n\u003ccode\u003e100 * parts_processed / parts_total\u003c/code\u003e\u003cbr\u003e\u003cbr\u003e\nNote that since the estimated number of parts could increase without\na corresponding increase in the number of parts that have already been\nprocessed, it is possible that the calculated progress could\nperiodically decrease while YouTube processes a video.",
          "format": "uint64",
          "type": "string"
        },
        "timeLeftMs": {
          "format": "uint64",
          "description": "An estimate of the amount of time, in millseconds, that YouTube needs\nto finish processing the video.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "VideoProcessingDetailsProcessingProgress",
      "description": "Video processing progress and completion time estimate."
    },
    "ActivitySnippet": {
      "type": "object",
      "properties": {
        "channelTitle": {
          "description": "Channel title for the channel responsible for this activity",
          "type": "string"
        },
        "channelId": {
          "type": "string",
          "description": "The ID that YouTube uses to uniquely identify the channel associated\nwith the activity."
        },
        "description": {
          "description": "The description of the resource primarily associated with the activity.\n@mutable youtube.activities.insert",
          "type": "string"
        },
        "groupId": {
          "type": "string",
          "description": "The group ID associated with the activity. A group ID identifies user\nevents that are associated with the same user and resource. For example,\nif a user rates a video and marks the same video as a favorite, the\nentries for those events would have the same group ID in the user's\nactivity feed. In your user interface, you can avoid repetition by\ngrouping events with the same \u003ccode\u003egroupId\u003c/code\u003e value."
        },
        "type": {
          "description": "The type of activity that the resource describes.",
          "type": "string",
          "enum": [
            "typeUnspecified",
            "upload",
            "like",
            "favorite",
            "comment",
            "subscription",
            "playlistItem",
            "recommendation",
            "bulletin",
            "social",
            "channelItem",
            "promotedItem"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "publishedAt": {
          "type": "string",
          "description": "The date and time that the video was uploaded. The value is specified\nin \u003ca href=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat."
        },
        "title": {
          "description": "The title of the resource primarily associated with the activity.",
          "type": "string"
        },
        "thumbnails": {
          "description": "A map of thumbnail images associated with the resource that is primarily\nassociated with the activity. For each object in the map, the key is the\nname of the thumbnail image, and the value is an object that contains\nother information about the thumbnail.",
          "$ref": "ThumbnailDetails"
        }
      },
      "description": "Basic details about an activity, including title, description, thumbnails,\nactivity type and group.\nNext ID: 12",
      "id": "ActivitySnippet"
    },
    "I18nLanguageSnippet": {
      "description": "Basic details about an i18n language, such as language code and\nhuman-readable name.",
      "properties": {
        "name": {
          "description": "The human-readable name of the language in the language itself.",
          "type": "string"
        },
        "hl": {
          "description": "A short BCP-47 code that uniquely identifies a language.",
          "type": "string"
        }
      },
      "id": "I18nLanguageSnippet",
      "type": "object"
    },
    "VideoProjectDetails": {
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of project tags associated with the video during the upload."
        }
      },
      "id": "VideoProjectDetails",
      "type": "object",
      "description": "Project specific details about the content of a YouTube Video."
    },
    "GuideCategoryListResponse": {
      "type": "object",
      "id": "GuideCategoryListResponse",
      "properties": {
        "eventId": {
          "type": "string",
          "description": "Serialized EventId of the request which produced this response."
        },
        "tokenPagination": {
          "$ref": "TokenPagination"
        },
        "kind": {
          "default": "youtube#guideCategoryListResponse",
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string\n\u003ccode\u003e\"youtube#guideCategoryListResponse\"\u003c/code\u003e."
        },
        "items": {
          "items": {
            "$ref": "GuideCategory"
          },
          "type": "array",
          "description": "A list of categories that can be associated with YouTube channels. In this\nmap, the category ID is the map key, and its value is the corresponding\n\u003ccode\u003eguideCategory\u003c/code\u003e resource."
        },
        "etag": {
          "type": "string",
          "description": "Etag of this resource."
        },
        "nextPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the next page in the result set.",
          "type": "string"
        },
        "prevPageToken": {
          "description": "The token that can be used as the value of the \u003ccode\u003epageToken\u003c/code\u003e\nparameter to retrieve the previous page in the result set.",
          "type": "string"
        },
        "visitorId": {
          "type": "string",
          "description": "The \u003ccode\u003evisitorId\u003c/code\u003e identifies the visitor."
        },
        "pageInfo": {
          "$ref": "PageInfo"
        }
      }
    },
    "InvideoPromotion": {
      "properties": {
        "defaultTiming": {
          "description": "The default temporal position within the video where the promoted item will\nbe displayed. Can be overridden by more specific timing in the item.",
          "$ref": "InvideoTiming"
        },
        "useSmartTiming": {
          "type": "boolean",
          "description": "Indicates whether the channel's promotional campaign uses \"smart timing.\"\nThis feature attempts to show promotions at a point in the video when they\nare more likely to be clicked and less likely to disrupt the viewing\nexperience. This feature also picks up a single promotion to show on each\nvideo."
        },
        "position": {
          "description": "The spatial position within the video where the promoted item will be\ndisplayed.",
          "$ref": "InvideoPosition"
        },
        "items": {
          "type": "array",
          "description": "List of promoted items in decreasing priority.",
          "items": {
            "$ref": "PromotedItem"
          }
        }
      },
      "id": "InvideoPromotion",
      "type": "object",
      "description": "Describes an invideo promotion campaign consisting of multiple promoted\nitems. A campaign belongs to a single channel_id."
    },
    "ActivityContentDetailsPlaylistItem": {
      "id": "ActivityContentDetailsPlaylistItem",
      "type": "object",
      "properties": {
        "resourceId": {
          "description": "The \u003ccode\u003eresourceId\u003c/code\u003e object contains information about the\nresource that was added to the playlist.",
          "$ref": "ResourceId"
        },
        "playlistId": {
          "description": "The value that YouTube uses to uniquely identify the playlist.",
          "type": "string"
        },
        "playlistItemId": {
          "type": "string",
          "description": "ID of the item within the playlist."
        }
      },
      "description": "Information about a new playlist item."
    },
    "AccessPolicy": {
      "id": "AccessPolicy",
      "type": "object",
      "properties": {
        "exception": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of region codes that identify countries where the default policy do\nnot apply."
        },
        "allowed": {
          "description": "The value of \u003ccode\u003eallowed\u003c/code\u003e indicates whether the access to the\npolicy is allowed or denied by default.",
          "type": "boolean"
        }
      },
      "description": "Rights management policy for YouTube resources."
    },
    "SearchResultSnippet": {
      "description": "Basic details about a search result, including title, description and\nthumbnails of the item referenced by the search result.",
      "type": "object",
      "properties": {
        "thumbnails": {
          "$ref": "ThumbnailDetails",
          "description": "A map of thumbnail images associated with the search result. For each\nobject in the map, the key is the name of the thumbnail image, and the\nvalue is an object that contains other information about the thumbnail."
        },
        "liveBroadcastContent": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "none",
            "upcoming",
            "live",
            "completed"
          ],
          "description": "It indicates if the resource (video or channel) has upcoming/active live\nbroadcast content. Or it's \"none\" if there is not any upcoming/active\nlive broadcasts."
        },
        "title": {
          "description": "The title of the search result.",
          "type": "string"
        },
        "channelId": {
          "type": "string",
          "description": "The value that YouTube uses to uniquely identify the channel that\npublished the resource that the search result identifies."
        },
        "description": {
          "type": "string",
          "description": "A description of the search result."
        },
        "publishedAt": {
          "description": "The creation date and time of the resource that the search result\nidentifies. The value is specified in \u003ca\nhref=\"//www.w3.org/TR/NOTE-datetime\"\u003eISO 8601\u003c/a\u003e\nformat.",
          "type": "string"
        },
        "channelTitle": {
          "type": "string",
          "description": "The title of the channel that published the resource that the search result\nidentifies."
        }
      },
      "id": "SearchResultSnippet"
    }
  },
  "ownerDomain": "google.com",
  "canonicalName": "YouTube",
  "documentationLink": "https://developers.google.com/youtube/",
  "description": "The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "servicePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "youtube:v3",
  "kind": "discovery#restDescription",
  "revision": "20200522",
  "batchPath": "batch/youtube/v3"
}
