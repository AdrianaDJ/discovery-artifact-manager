{
  "revision": "20201010",
  "rootUrl": "https://www.googleapis.com/",
  "parameters": {
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    }
  },
  "documentationLink": "https://developers.google.com/admin-sdk/licensing/",
  "resources": {
    "licenseAssignments": {
      "methods": {
        "patch": {
          "request": {
            "$ref": "LicenseAssignment"
          },
          "parameters": {
            "userId": {
              "location": "path",
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a userId is subject to change, do not use a userId value as a key for persistent data. This key could break if the current user's email address changes. If the userId is suspended, the license status changes.",
              "type": "string",
              "required": true
            },
            "skuId": {
              "type": "string",
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "required": true,
              "location": "path"
            },
            "productId": {
              "type": "string",
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "PATCH",
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "response": {
            "$ref": "LicenseAssignment"
          },
          "parameterOrder": [
            "productId",
            "skuId",
            "userId"
          ],
          "description": "Patch a Licensing info via Apiary Patch Orchestration",
          "id": "licensing.licenseAssignments.patch",
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}"
        },
        "listForProduct": {
          "parameterOrder": [
            "productId",
            "customerId"
          ],
          "httpMethod": "GET",
          "path": "apps/licensing/v1/product/{productId}/users",
          "description": "List all users assigned licenses for a specific product SKU.",
          "id": "licensing.licenseAssignments.listForProduct",
          "flatPath": "apps/licensing/v1/product/{productId}/users",
          "response": {
            "$ref": "LicenseAssignmentList"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "parameters": {
            "pageToken": {
              "default": "",
              "description": "Token to fetch the next page of data. The maxResults query string is related to the pageToken since maxResults determines how many entries are returned on each page. This is an optional query string. If not specified, the server returns the first page.",
              "type": "string",
              "location": "query"
            },
            "customerId": {
              "required": true,
              "type": "string",
              "description": "Customer's customerId. A previous version of this API accepted the primary domain name as a value for this field. If the customer is suspended, the server returns an error.",
              "location": "query"
            },
            "maxResults": {
              "type": "integer",
              "maximum": "1000",
              "location": "query",
              "format": "uint32",
              "description": "The maxResults query string determines how many entries are returned on each page of a large response. This is an optional parameter. The value must be a positive number.",
              "minimum": "1",
              "default": "100"
            },
            "productId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs."
            }
          }
        },
        "listForProductAndSku": {
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/users",
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/users",
          "parameters": {
            "productId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs."
            },
            "maxResults": {
              "maximum": "1000",
              "description": "The maxResults query string determines how many entries are returned on each page of a large response. This is an optional parameter. The value must be a positive number.",
              "format": "uint32",
              "minimum": "1",
              "location": "query",
              "default": "100",
              "type": "integer"
            },
            "skuId": {
              "type": "string",
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "location": "path",
              "required": true
            },
            "customerId": {
              "location": "query",
              "description": "Customer's customerId. A previous version of this API accepted the primary domain name as a value for this field. If the customer is suspended, the server returns an error.",
              "type": "string",
              "required": true
            },
            "pageToken": {
              "description": "Token to fetch the next page of data. The maxResults query string is related to the pageToken since maxResults determines how many entries are returned on each page. This is an optional query string. If not specified, the server returns the first page.",
              "default": "",
              "type": "string",
              "location": "query"
            }
          },
          "description": "List all users assigned licenses for a specific product SKU.",
          "parameterOrder": [
            "productId",
            "skuId",
            "customerId"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "LicenseAssignmentList"
          },
          "id": "licensing.licenseAssignments.listForProductAndSku"
        },
        "update": {
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "response": {
            "$ref": "LicenseAssignment"
          },
          "parameterOrder": [
            "productId",
            "skuId",
            "userId"
          ],
          "id": "licensing.licenseAssignments.update",
          "httpMethod": "PUT",
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "description": "Reassign a user's product SKU with a different SKU in the same product.",
          "request": {
            "$ref": "LicenseAssignment"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "parameters": {
            "skuId": {
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "userId": {
              "required": true,
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a userId is subject to change, do not use a userId value as a key for persistent data. This key could break if the current user's email address changes. If the userId is suspended, the license status changes.",
              "type": "string",
              "location": "path"
            },
            "productId": {
              "location": "path",
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "type": "string",
              "required": true
            }
          }
        },
        "insert": {
          "request": {
            "$ref": "LicenseAssignmentInsert"
          },
          "description": "Assign a license.",
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "parameters": {
            "skuId": {
              "type": "string",
              "required": true,
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
              "location": "path"
            },
            "productId": {
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user",
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user",
          "parameterOrder": [
            "productId",
            "skuId"
          ],
          "response": {
            "$ref": "LicenseAssignment"
          },
          "httpMethod": "POST",
          "id": "licensing.licenseAssignments.insert"
        },
        "get": {
          "response": {
            "$ref": "LicenseAssignment"
          },
          "id": "licensing.licenseAssignments.get",
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "httpMethod": "GET",
          "description": "Get a specific user's license by product SKU.",
          "parameterOrder": [
            "productId",
            "skuId",
            "userId"
          ],
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "parameters": {
            "productId": {
              "required": true,
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "location": "path",
              "type": "string"
            },
            "userId": {
              "required": true,
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a userId is subject to change, do not use a userId value as a key for persistent data. This key could break if the current user's email address changes. If the userId is suspended, the license status changes.",
              "type": "string",
              "location": "path"
            },
            "skuId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
            }
          },
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}"
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/apps.licensing"
          ],
          "description": "Revoke a license.",
          "id": "licensing.licenseAssignments.delete",
          "parameterOrder": [
            "productId",
            "skuId",
            "userId"
          ],
          "flatPath": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "path": "apps/licensing/v1/product/{productId}/sku/{skuId}/user/{userId}",
          "httpMethod": "DELETE",
          "parameters": {
            "productId": {
              "description": "A product's unique identifier. For more information about products in this version of the API, see Products and SKUs.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "userId": {
              "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a userId is subject to change, do not use a userId value as a key for persistent data. This key could break if the current user's email address changes. If the userId is suspended, the license status changes.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "skuId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
            }
          }
        }
      }
    }
  },
  "id": "licensing:v1",
  "title": "Enterprise License Manager API",
  "description": "The Google Enterprise License Manager API's allows you to license apps for all the users of a domain managed by you.",
  "schemas": {
    "LicenseAssignment": {
      "description": "Representation of a license assignment.",
      "properties": {
        "skuName": {
          "description": "Display Name of the sku of the product.",
          "type": "string"
        },
        "productName": {
          "description": "Display Name of the product.",
          "type": "string"
        },
        "etags": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "Link to this page."
        },
        "productId": {
          "description": "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
          "type": "string",
          "annotations": {
            "required": [
              "licensing.licenseAssignments.update"
            ]
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies the resource as a LicenseAssignment.",
          "default": "licensing#licenseAssignment"
        },
        "userId": {
          "description": "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a userId is subject to change, do not use a userId value as a key for persistent data. This key could break if the current user's email address changes. If the userId is suspended, the license status changes.",
          "annotations": {
            "required": [
              "licensing.licenseAssignments.update"
            ]
          },
          "type": "string"
        },
        "skuId": {
          "annotations": {
            "required": [
              "licensing.licenseAssignments.update"
            ]
          },
          "type": "string",
          "description": "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs."
        }
      },
      "id": "LicenseAssignment",
      "type": "object"
    },
    "LicenseAssignmentList": {
      "id": "LicenseAssignmentList",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies the resource as a collection of LicenseAssignments.",
          "default": "licensing#licenseAssignmentList"
        },
        "items": {
          "type": "array",
          "description": "The LicenseAssignments in this page of results.",
          "items": {
            "$ref": "LicenseAssignment"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The maxResults query string is related to the nextPageToken since maxResults determines how many entries are returned on each next page."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        }
      },
      "type": "object"
    },
    "LicenseAssignmentInsert": {
      "id": "LicenseAssignmentInsert",
      "description": "Representation of a license assignment.",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Email id of the user",
          "annotations": {
            "required": [
              "licensing.licenseAssignments.insert"
            ]
          }
        }
      },
      "type": "object"
    }
  },
  "ownerDomain": "google.com",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/apps.licensing": {
          "description": "View and manage G Suite licenses for your domain"
        }
      }
    }
  },
  "name": "licensing",
  "servicePath": "",
  "kind": "discovery#restDescription",
  "ownerName": "Google",
  "baseUrl": "https://www.googleapis.com/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "basePath": "",
  "batchPath": "batch/licensing/v1",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "version": "v1"
}
