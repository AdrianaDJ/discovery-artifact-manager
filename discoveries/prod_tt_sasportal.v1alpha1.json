{
  "revision": "20200801",
  "fullyEncodeReservedExpansion": true,
  "schemas": {
    "SasPortalFrequencyRange": {
      "id": "SasPortalFrequencyRange",
      "description": "Frequency range from `low_frequency` to `high_frequency`.",
      "type": "object",
      "properties": {
        "highFrequencyMhz": {
          "description": "The highest frequency of the frequency range in MHz.",
          "type": "number",
          "format": "double"
        },
        "lowFrequencyMhz": {
          "format": "double",
          "type": "number",
          "description": "The lowest frequency of the frequency range in MHz."
        }
      }
    },
    "SasPortalListDevicesResponse": {
      "id": "SasPortalListDevicesResponse",
      "description": "Response for ListDevices method.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDevices method that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices.",
          "type": "string"
        },
        "devices": {
          "type": "array",
          "description": "The devices that match the request.",
          "items": {
            "$ref": "SasPortalDevice"
          }
        }
      }
    },
    "SasPortalGenerateSecretRequest": {
      "description": "Request for GenerateSecret method] [spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret].",
      "properties": {},
      "type": "object",
      "id": "SasPortalGenerateSecretRequest"
    },
    "SasPortalMoveDeviceRequest": {
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource (Node or Customer) to reparent the device under."
        }
      },
      "type": "object",
      "description": "Request for MoveDevice method.",
      "id": "SasPortalMoveDeviceRequest"
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "type": "object",
      "id": "SasPortalUpdateSignedDeviceRequest",
      "description": "Request for UpdateSignedDevice method.",
      "properties": {
        "installerId": {
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.",
          "type": "string"
        },
        "encodedDevice": {
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "SasPortalDpaMoveList": {
      "description": "An entry in a DPA's move list.",
      "id": "SasPortalDpaMoveList",
      "type": "object",
      "properties": {
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The frequency range that the move list affects."
        },
        "dpaId": {
          "type": "string",
          "description": "The ID of the DPA."
        }
      }
    },
    "SasPortalDeviceAirInterface": {
      "description": "Information about the device's air interface.",
      "properties": {
        "supportedSpec": {
          "type": "string",
          "description": "This field is related to the radioTechnology field and provides the air interface specification that the CBSD is compliant with at the time of registration. Optional"
        },
        "radioTechnology": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "This field specifies the radio access technology that is used for the CBSD. Conditional",
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ]
        }
      },
      "type": "object",
      "id": "SasPortalDeviceAirInterface"
    },
    "SasPortalListCustomersResponse": {
      "properties": {
        "customers": {
          "type": "array",
          "description": "The list of customers that match the request.",
          "items": {
            "$ref": "SasPortalCustomer"
          }
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListCustomers method that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers.",
          "type": "string"
        }
      },
      "description": "Response for `ListCustomers`.",
      "type": "object",
      "id": "SasPortalListCustomersResponse"
    },
    "SasPortalStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "SasPortalStatus",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      },
      "type": "object"
    },
    "SasPortalDeviceConfig": {
      "properties": {
        "userId": {
          "description": "The identifier of a device user.",
          "type": "string"
        },
        "airInterface": {
          "$ref": "SasPortalDeviceAirInterface",
          "description": "Information about this device's air interface."
        },
        "callSign": {
          "description": "The call sign of the device operator.",
          "type": "string"
        },
        "measurementCapabilities": {
          "type": "array",
          "description": "Measurement reporting capabilities of the device.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "items": {
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ]
          }
        },
        "isSigned": {
          "type": "boolean",
          "description": "Output-only. Whether the configuration has been signed by a CPI."
        },
        "installationParams": {
          "description": "Installation parameters for the device.",
          "$ref": "SasPortalInstallationParams"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output-only. The last time the device configuration was edited."
        },
        "state": {
          "description": "State of the configuration.",
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "model": {
          "description": "Information about this device model.",
          "$ref": "SasPortalDeviceModel"
        },
        "category": {
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "description": "FCC category of the device."
        }
      },
      "description": "Information about the device configuration.",
      "id": "SasPortalDeviceConfig",
      "type": "object"
    },
    "SasPortalCreateSignedDeviceRequest": {
      "id": "SasPortalCreateSignedDeviceRequest",
      "properties": {
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database."
        },
        "encodedDevice": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the [Device]. The user_id field must be set.",
          "format": "byte"
        }
      },
      "description": "Request for CreateSignedDevice method.",
      "type": "object"
    },
    "SasPortalMoveNodeRequest": {
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or Customer) to reparent the node under.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalMoveNodeRequest",
      "description": "Request for MoveNode method."
    },
    "SasPortalAssignment": {
      "description": "Associates `members` with a `role`.",
      "properties": {
        "members": {
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "role": {
          "description": "Required. Role that is assigned to `members`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalAssignment"
    },
    "SasPortalListNodesResponse": {
      "type": "object",
      "description": "Response for ListNodes method.",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes method that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        },
        "nodes": {
          "description": "The nodes that match the request.",
          "items": {
            "$ref": "SasPortalNode"
          },
          "type": "array"
        }
      },
      "id": "SasPortalListNodesResponse"
    },
    "SasPortalTestPermissionsRequest": {
      "id": "SasPortalTestPermissionsRequest",
      "type": "object",
      "description": "Request message for `TestPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`."
        },
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        }
      }
    },
    "SasPortalInstallationParams": {
      "description": "Information about the device installation parameters.",
      "type": "object",
      "properties": {
        "antennaModel": {
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets.",
          "type": "string"
        },
        "heightType": {
          "description": "Specifies how the height is measured.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ]
        },
        "antennaDowntilt": {
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "longitude": {
          "format": "double",
          "type": "number",
          "description": "Longitude of the device antenna location. in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian."
        },
        "verticalAccuracy": {
          "format": "double",
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator."
        },
        "antennaAzimuth": {
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "cpeCbsdIndication": {
          "type": "boolean",
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not."
        },
        "horizontalAccuracy": {
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters.",
          "type": "number"
        },
        "indoorDeployment": {
          "description": "Whether the device antenna is indoor or not. True: indoor. False: outdoor.",
          "type": "boolean"
        },
        "antennaGain": {
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "eirpCapability": {
          "format": "int32",
          "type": "integer",
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category."
        },
        "height": {
          "type": "number",
          "description": "Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum.",
          "format": "double"
        },
        "antennaBeamwidth": {
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        }
      },
      "id": "SasPortalInstallationParams"
    },
    "SasPortalPolicy": {
      "type": "object",
      "id": "SasPortalPolicy",
      "properties": {
        "assignments": {
          "items": {
            "$ref": "SasPortalAssignment"
          },
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "description": "The [etag] is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the [etag] in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An [etag] is returned in the response to [GetPolicy], and systems are expected to put that etag in the request to [SetPolicy] to ensure that their change will be applied to the same version of the policy. If no [etag] is provided in the call to [SetPolicy], then the existing policy is overwritten blindly.",
          "type": "string"
        }
      },
      "description": "Defines an access control policy to the resources."
    },
    "SasPortalBulkCreateDeviceRequest": {
      "properties": {
        "csv": {
          "description": "Required. A csv with each row representing a [device]. Each row must conform to the regulations described on CreateDeviceRequest's device field.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request for BulkCreateDevice method.",
      "id": "SasPortalBulkCreateDeviceRequest"
    },
    "SasPortalOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      },
      "id": "SasPortalOperation"
    },
    "SasPortalSetPolicyRequest": {
      "type": "object",
      "description": "Request message for `SetPolicy` method.",
      "properties": {
        "policy": {
          "$ref": "SasPortalPolicy",
          "description": "Required. The policy to be applied to the `resource`."
        },
        "resource": {
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy.",
          "type": "string"
        }
      },
      "id": "SasPortalSetPolicyRequest"
    },
    "SasPortalCustomer": {
      "description": "Entity representing a SAS customer.",
      "type": "object",
      "id": "SasPortalCustomer",
      "properties": {
        "sasUserIds": {
          "type": "array",
          "description": "User IDs used by the devices belonging to this customer.",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Required. Name of the organization that the customer entity represents.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the customer.",
          "type": "string"
        }
      }
    },
    "SasPortalNode": {
      "description": "The Node.",
      "type": "object",
      "id": "SasPortalNode",
      "properties": {
        "displayName": {
          "description": "The node's display name.",
          "type": "string"
        },
        "sasUserIds": {
          "description": "User ids used by the devices belonging to this node.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Output only. Resource name.",
          "type": "string"
        }
      }
    },
    "SasPortalSignDeviceRequest": {
      "type": "object",
      "id": "SasPortalSignDeviceRequest",
      "properties": {
        "device": {
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set.",
          "$ref": "SasPortalDevice"
        }
      },
      "description": "Request for SignDevice method."
    },
    "SasPortalDeviceMetadata": {
      "properties": {},
      "description": "Device data overridable by both SAS Portal and registration requests.",
      "id": "SasPortalDeviceMetadata",
      "type": "object"
    },
    "SasPortalBulkCreateDeviceResponse": {
      "description": "Response for BulkCreateDevice method.",
      "id": "SasPortalBulkCreateDeviceResponse",
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "SasPortalDevice"
          },
          "description": "Required. The devices that were imported."
        }
      }
    },
    "SasPortalDevice": {
      "id": "SasPortalDevice",
      "properties": {
        "deviceMetadata": {
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests.",
          "$ref": "SasPortalDeviceMetadata"
        },
        "displayName": {
          "type": "string",
          "description": "Device display name."
        },
        "name": {
          "description": "Output only. The resource path name.",
          "type": "string"
        },
        "activeConfig": {
          "description": "Output only. Current configuration of the device as registered to the SAS.",
          "$ref": "SasPortalDeviceConfig"
        },
        "serialNumber": {
          "type": "string",
          "description": "A serial number assigned to the device by the device manufacturer."
        },
        "state": {
          "description": "Output only. Device state.",
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "type": "string",
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ]
        },
        "grants": {
          "type": "array",
          "items": {
            "$ref": "SasPortalDeviceGrant"
          },
          "description": "Output only. Grants held by the device."
        },
        "fccId": {
          "description": "The FCC identifier of the device.",
          "type": "string"
        },
        "preloadedConfig": {
          "description": "Configuration of the device, as specified via SAS Portal API.",
          "$ref": "SasPortalDeviceConfig"
        }
      },
      "type": "object"
    },
    "SasPortalDeviceGrant": {
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.",
      "properties": {
        "channelType": {
          "description": "Type of channel used.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ]
        },
        "frequencyRange": {
          "description": "The transmission frequency range.",
          "$ref": "SasPortalFrequencyRange"
        },
        "expireTime": {
          "description": "The expiration time of the grant.",
          "format": "google-datetime",
          "type": "string"
        },
        "state": {
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ],
          "description": "State of the grant."
        },
        "suspensionReason": {
          "description": "If the grant is suspended, the reason(s) for suspension.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "moveList": {
          "items": {
            "$ref": "SasPortalDpaMoveList"
          },
          "type": "array",
          "description": "The DPA move lists on which this grant appears."
        },
        "maxEirp": {
          "type": "number",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of maxEirp represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
          "format": "double"
        }
      },
      "id": "SasPortalDeviceGrant",
      "type": "object"
    },
    "SasPortalGenerateSecretResponse": {
      "properties": {
        "secret": {
          "description": "The secret generated by the string and used by [ValidateInstaller] method.",
          "type": "string"
        }
      },
      "id": "SasPortalGenerateSecretResponse",
      "type": "object",
      "description": "Response for GenerateSecret method."
    },
    "SasPortalValidateInstallerRequest": {
      "properties": {
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database."
        },
        "secret": {
          "description": "Required. Secret returned by the GenerateSecret method.",
          "type": "string"
        },
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret."
        }
      },
      "id": "SasPortalValidateInstallerRequest",
      "type": "object",
      "description": "Request for ValidateInstaller method."
    },
    "SasPortalGetPolicyRequest": {
      "properties": {
        "resource": {
          "description": "Required. The resource for which the policy is being requested.",
          "type": "string"
        }
      },
      "description": "Request message for `GetPolicy` method.",
      "type": "object",
      "id": "SasPortalGetPolicyRequest"
    },
    "SasPortalDeviceModel": {
      "properties": {
        "hardwareVersion": {
          "type": "string",
          "description": "The hardware version of the device."
        },
        "softwareVersion": {
          "description": "The software version of the device.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the device model."
        },
        "vendor": {
          "description": "The name of the device vendor.",
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version of the device."
        }
      },
      "description": "Information about the model of the device.",
      "type": "object",
      "id": "SasPortalDeviceModel"
    },
    "SasPortalValidateInstallerResponse": {
      "description": "Response for ValidateInstaller method] [spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller].",
      "properties": {},
      "id": "SasPortalValidateInstallerResponse",
      "type": "object"
    },
    "SasPortalTestPermissionsResponse": {
      "description": "Response message for `TestPermissions` method.",
      "id": "SasPortalTestPermissionsResponse",
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A set of permissions that the caller is allowed.",
          "type": "array"
        }
      }
    },
    "SasPortalEmpty": {
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "SasPortalEmpty"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        }
      }
    }
  },
  "basePath": "",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "canonicalName": "SAS Portal Testing",
  "id": "prod_tt_sasportal:v1alpha1",
  "version": "v1alpha1",
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/",
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "batchPath": "batch",
  "description": "",
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "servicePath": "",
  "version_module": true,
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "title": "SAS Portal API (Testing)",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "name": "prod_tt_sasportal",
  "ownerDomain": "google.com",
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    }
  },
  "resources": {
    "policies": {
      "methods": {
        "set": {
          "id": "prod_tt_sasportal.policies.set",
          "parameterOrder": [],
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
          "flatPath": "v1alpha1/policies:set",
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "path": "v1alpha1/policies:set",
          "parameters": {},
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          }
        },
        "test": {
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "parameters": {},
          "description": "Returns permissions that a caller has on the specified resource.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/policies:test",
          "id": "prod_tt_sasportal.policies.test",
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "flatPath": "v1alpha1/policies:test",
          "httpMethod": "POST"
        },
        "get": {
          "path": "v1alpha1/policies:get",
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "parameters": {},
          "flatPath": "v1alpha1/policies:get",
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [],
          "id": "prod_tt_sasportal.policies.get",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        }
      }
    },
    "nodes": {
      "methods": {
        "get": {
          "response": {
            "$ref": "SasPortalNode"
          },
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "description": "Required. The name of the node.",
              "location": "path",
              "pattern": "^nodes/[^/]+$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Returns a requested node.",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "id": "prod_tt_sasportal.nodes.get"
        }
      },
      "resources": {
        "nodes": {
          "resources": {
            "devices": {
              "methods": {
                "createSigned": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a signed device under a node or customer.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  }
                },
                "list": {
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "required": true
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "type": "integer"
                    }
                  },
                  "description": "Lists devices under a node or customer.",
                  "path": "v1alpha1/{+parent}/devices",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list"
                },
                "bulk": {
                  "id": "prod_tt_sasportal.nodes.nodes.devices.bulk",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:bulk",
                  "path": "v1alpha1/{+parent}/devices:bulk",
                  "request": {
                    "$ref": "SasPortalBulkCreateDeviceRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a device under a node or customer. Returned devices are unordered.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalBulkCreateDeviceResponse"
                  },
                  "httpMethod": "POST"
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "description": "Creates a device under a node or customer.",
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/devices",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                }
              }
            },
            "nodes": {
              "methods": {
                "create": {
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/nodes",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "description": "Creates a new node.",
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create"
                },
                "list": {
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists nodes.",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\"."
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of nodes to return in the response.",
                      "format": "int32"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list"
                }
              }
            }
          },
          "methods": {
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a node.",
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the node.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.delete"
            },
            "create": {
              "response": {
                "$ref": "SasPortalNode"
              },
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.nodes.nodes.create",
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/nodes",
              "description": "Creates a new node.",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name where the node is to be created.",
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/nodes",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "pageSize": {
                  "description": "The maximum number of nodes to return in the response.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from."
                }
              },
              "description": "Lists nodes.",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "id": "prod_tt_sasportal.nodes.nodes.list"
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated."
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "description": "Output only. Resource name."
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}",
              "description": "Updates an existing node.",
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "move": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "description": "Moves a node under another node or customer.",
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the node to move.",
                  "required": true,
                  "location": "path",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "GET",
              "description": "Returns a requested node.",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the node.",
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "id": "prod_tt_sasportal.nodes.nodes.get"
            }
          }
        },
        "devices": {
          "methods": {
            "get": {
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device.",
                  "type": "string"
                }
              },
              "description": "Gets details about a device.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.devices.get"
            },
            "updateSigned": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "httpMethod": "PATCH",
              "id": "prod_tt_sasportal.nodes.devices.updateSigned",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the device to update.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "description": "Updates a signed device.",
              "path": "v1alpha1/{+name}:updateSigned"
            },
            "createSigned": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "id": "prod_tt_sasportal.nodes.devices.createSigned",
              "httpMethod": "POST",
              "description": "Creates a signed device under a node or customer.",
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "bulk": {
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the parent resource."
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.bulk",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:bulk",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices:bulk",
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              }
            },
            "move": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.nodes.devices.move",
              "description": "Moves a device under another node or customer.",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the device to move.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              }
            },
            "delete": {
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "description": "Deletes a device.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "id": "prod_tt_sasportal.nodes.devices.delete",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device."
                }
              },
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ]
            },
            "signDevice": {
              "path": "v1alpha1/{+name}:signDevice",
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "parameterOrder": [
                "name"
              ],
              "description": "Signs a device.",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "type": "string"
                }
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "list": {
              "parameters": {
                "filter": {
                  "type": "string",
                  "location": "query",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive."
                },
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "location": "query",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                }
              },
              "path": "v1alpha1/{+parent}/devices",
              "id": "prod_tt_sasportal.nodes.devices.list",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "description": "Lists devices under a node or customer.",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET"
            },
            "patch": {
              "request": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "description": "Updates a device.",
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string"
                },
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated.",
                  "type": "string"
                }
              }
            },
            "create": {
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/devices",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "type": "string",
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a device under a node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "id": "prod_tt_sasportal.nodes.devices.create"
            }
          }
        }
      }
    },
    "customers": {
      "resources": {
        "devices": {
          "methods": {
            "bulk": {
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the parent resource."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "path": "v1alpha1/{+parent}/devices:bulk",
              "httpMethod": "POST",
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "flatPath": "v1alpha1/customers/{customersId}/devices:bulk",
              "id": "prod_tt_sasportal.customers.devices.bulk",
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              }
            },
            "patch": {
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Output only. The resource path name."
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string",
                  "description": "Fields to be updated."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a device.",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.devices.patch"
            },
            "createSigned": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Creates a signed device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.createSigned"
            },
            "get": {
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.customers.devices.get",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Gets details about a device."
            },
            "updateSigned": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:updateSigned",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the device to update.",
                  "required": true
                }
              },
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "httpMethod": "PATCH",
              "description": "Updates a signed device."
            },
            "signDevice": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:signDevice",
              "id": "prod_tt_sasportal.customers.devices.signDevice",
              "description": "Signs a device.",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              }
            },
            "move": {
              "description": "Moves a device under another node or customer.",
              "id": "prod_tt_sasportal.customers.devices.move",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "description": "Required. The name of the device to move.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "description": "Lists devices under a node or customer.",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "format": "int32",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.devices.list",
              "path": "v1alpha1/{+parent}/devices"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.create",
              "path": "v1alpha1/{+parent}/devices",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a device under a node or customer.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "SasPortalDevice"
              }
            },
            "delete": {
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.customers.devices.delete",
              "description": "Deletes a device.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              }
            }
          }
        },
        "nodes": {
          "methods": {
            "delete": {
              "id": "prod_tt_sasportal.customers.nodes.delete",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "description": "Deletes a node.",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the node.",
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "httpMethod": "DELETE"
            },
            "move": {
              "description": "Moves a node under another node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:move",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the node to move.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "id": "prod_tt_sasportal.customers.nodes.move"
            },
            "get": {
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the node.",
                  "type": "string",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true
                }
              },
              "id": "prod_tt_sasportal.customers.nodes.get",
              "description": "Returns a requested node.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "list": {
              "id": "prod_tt_sasportal.customers.nodes.list",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "location": "path",
                  "pattern": "^customers/[^/]+$"
                },
                "pageSize": {
                  "description": "The maximum number of nodes to return in the response.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+parent}/nodes",
              "description": "Lists nodes.",
              "httpMethod": "GET"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.nodes.create",
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "description": "Creates a new node.",
              "request": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalNode"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "patch": {
              "description": "Updates an existing node.",
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "required": true,
                  "location": "path"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalNode"
              },
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalNode"
              }
            }
          },
          "resources": {
            "nodes": {
              "methods": {
                "create": {
                  "description": "Creates a new node.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "httpMethod": "POST"
                },
                "list": {
                  "description": "Lists nodes.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "description": "The maximum number of nodes to return in the response.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from."
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/nodes"
                }
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "pattern": "^customers/[^/]+$",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Required. The name of the customer."
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/customers/{customersId}",
          "httpMethod": "GET",
          "id": "prod_tt_sasportal.customers.get",
          "description": "Returns a requested customer."
        },
        "patch": {
          "path": "v1alpha1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/customers/{customersId}",
          "description": "Updates an existing customer.",
          "parameters": {
            "name": {
              "type": "string",
              "description": "Output only. Resource name of the customer.",
              "pattern": "^customers/[^/]+$",
              "required": true,
              "location": "path"
            },
            "updateMask": {
              "location": "query",
              "format": "google-fieldmask",
              "description": "Fields to be updated.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "parameterOrder": [
            "name"
          ],
          "id": "prod_tt_sasportal.customers.patch",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "httpMethod": "PATCH"
        },
        "list": {
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "id": "prod_tt_sasportal.customers.list",
          "parameters": {
            "pageToken": {
              "type": "string",
              "description": "A pagination token returned from a previous call to ListCustomers method that indicates where this listing should continue from.",
              "location": "query"
            },
            "pageSize": {
              "description": "The maximum number of customers to return in the response.",
              "location": "query",
              "format": "int32",
              "type": "integer"
            }
          },
          "parameterOrder": [],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/customers",
          "path": "v1alpha1/customers",
          "description": "Returns a list of requested customers."
        }
      }
    },
    "installer": {
      "methods": {
        "validate": {
          "flatPath": "v1alpha1/installer:validate",
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "parameters": {},
          "path": "v1alpha1/installer:validate",
          "parameterOrder": [],
          "id": "prod_tt_sasportal.installer.validate",
          "httpMethod": "POST",
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          }
        },
        "generateSecret": {
          "flatPath": "v1alpha1/installer:generateSecret",
          "id": "prod_tt_sasportal.installer.generateSecret",
          "parameterOrder": [],
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "httpMethod": "POST",
          "path": "v1alpha1/installer:generateSecret",
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "description": "Generates a secret to be used with the ValidateInstaller method"
        }
      }
    }
  },
  "protocol": "rest"
}
