{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "parameters": {
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    }
  },
  "canonicalName": "Shopping Content",
  "resources": {
    "orders": {
      "methods": {
        "shiplineitems": {
          "request": {
            "$ref": "OrdersShipLineItemsRequest"
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/shipLineItems",
          "description": "Marks line item(s) as shipped.",
          "parameters": {
            "orderId": {
              "location": "path",
              "description": "The ID of the order.",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "path": "content/v2/{merchantId}/orders/{orderId}/shipLineItems",
          "response": {
            "$ref": "OrdersShipLineItemsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.shiplineitems",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST"
        },
        "updatemerchantorderid": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/orders/{orderId}/updateMerchantOrderId",
          "description": "Updates the merchant order ID for a given order.",
          "response": {
            "$ref": "OrdersUpdateMerchantOrderIdResponse"
          },
          "parameters": {
            "orderId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the order.",
              "required": true
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersUpdateMerchantOrderIdRequest"
          },
          "id": "content.orders.updatemerchantorderid",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/updateMerchantOrderId"
        },
        "returnlineitem": {
          "path": "content/v2/{merchantId}/orders/{orderId}/returnLineItem",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Returns a line item.",
          "id": "content.orders.returnlineitem",
          "request": {
            "$ref": "OrdersReturnLineItemRequest"
          },
          "httpMethod": "POST",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/returnLineItem",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            }
          },
          "response": {
            "$ref": "OrdersReturnLineItemResponse"
          }
        },
        "custombatch": {
          "httpMethod": "POST",
          "parameters": {},
          "flatPath": "content/v2/orders/batch",
          "path": "content/v2/orders/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "request": {
            "$ref": "OrdersCustomBatchRequest"
          },
          "description": "Retrieves or modifies multiple orders in a single request.",
          "id": "content.orders.custombatch",
          "response": {
            "$ref": "OrdersCustomBatchResponse"
          }
        },
        "updatelineitemshippingdetails": {
          "path": "content/v2/{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Updates ship by and delivery by dates for a line item.",
          "response": {
            "$ref": "OrdersUpdateLineItemShippingDetailsResponse"
          },
          "id": "content.orders.updatelineitemshippingdetails",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "orderId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the order."
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "required": true
            }
          },
          "httpMethod": "POST",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/updateLineItemShippingDetails",
          "request": {
            "$ref": "OrdersUpdateLineItemShippingDetailsRequest"
          }
        },
        "canceltestorderbycustomer": {
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.canceltestorderbycustomer",
          "request": {
            "$ref": "OrdersCancelTestOrderByCustomerRequest"
          },
          "path": "content/v2/{merchantId}/testorders/{orderId}/cancelByCustomer",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "orderId": {
              "description": "The ID of the test order to cancel.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path"
            }
          },
          "flatPath": "content/v2/{merchantId}/testorders/{orderId}/cancelByCustomer",
          "description": "Sandbox only. Cancels a test order for customer-initiated cancellation.",
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersCancelTestOrderByCustomerResponse"
          }
        },
        "instorerefundlineitem": {
          "request": {
            "$ref": "OrdersInStoreRefundLineItemRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return.",
          "id": "content.orders.instorerefundlineitem",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/inStoreRefundLineItem",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersInStoreRefundLineItemResponse"
          },
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "required": true,
              "type": "string",
              "format": "uint64"
            },
            "orderId": {
              "type": "string",
              "description": "The ID of the order.",
              "location": "path",
              "required": true
            }
          },
          "path": "content/v2/{merchantId}/orders/{orderId}/inStoreRefundLineItem"
        },
        "acknowledge": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "OrdersAcknowledgeRequest"
          },
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64"
            }
          },
          "description": "Marks an order as acknowledged.",
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersAcknowledgeResponse"
          },
          "path": "content/v2/{merchantId}/orders/{orderId}/acknowledge",
          "id": "content.orders.acknowledge",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/acknowledge",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "gettestordertemplate": {
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/testordertemplates/{templateName}",
          "description": "Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.",
          "parameterOrder": [
            "merchantId",
            "templateName"
          ],
          "response": {
            "$ref": "OrdersGetTestOrderTemplateResponse"
          },
          "parameters": {
            "country": {
              "location": "query",
              "type": "string",
              "description": "The country of the template to retrieve. Defaults to `US`."
            },
            "templateName": {
              "description": "The name of the template to retrieve.",
              "required": true,
              "location": "path",
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                ""
              ],
              "type": "string",
              "enum": [
                "TEMPLATE1",
                "TEMPLATE2",
                "TEMPLATE1A",
                "TEMPLATE1B",
                "TEMPLATE3"
              ]
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account.",
              "format": "uint64"
            }
          },
          "path": "content/v2/{merchantId}/testordertemplates/{templateName}",
          "id": "content.orders.gettestordertemplate",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "cancel": {
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "orderId": {
              "location": "path",
              "description": "The ID of the order to cancel.",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "OrdersCancelResponse"
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/cancel",
          "path": "content/v2/{merchantId}/orders/{orderId}/cancel",
          "request": {
            "$ref": "OrdersCancelRequest"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.cancel",
          "description": "Cancels all line items in an order, making a full refund."
        },
        "refund": {
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "type": "string"
            },
            "orderId": {
              "location": "path",
              "description": "The ID of the order to refund.",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/refund",
          "response": {
            "$ref": "OrdersRefundResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "OrdersRefundRequest"
          },
          "path": "content/v2/{merchantId}/orders/{orderId}/refund",
          "description": "Deprecated, please use returnRefundLineItem instead.",
          "id": "content.orders.refund"
        },
        "updateshipment": {
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.updateshipment",
          "description": "Updates a shipment's status, carrier, and/or tracking ID.",
          "httpMethod": "POST",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/updateShipment",
          "path": "content/v2/{merchantId}/orders/{orderId}/updateShipment",
          "response": {
            "$ref": "OrdersUpdateShipmentResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "OrdersUpdateShipmentRequest"
          }
        },
        "rejectreturnlineitem": {
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "response": {
            "$ref": "OrdersRejectReturnLineItemResponse"
          },
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The ID of the order."
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            }
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersRejectReturnLineItemRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "id": "content.orders.rejectreturnlineitem",
          "path": "content/v2/{merchantId}/orders/{orderId}/rejectReturnLineItem",
          "description": "Rejects return on an line item."
        },
        "getbymerchantorderid": {
          "flatPath": "content/v2/{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "httpMethod": "GET",
          "response": {
            "$ref": "OrdersGetByMerchantOrderIdResponse"
          },
          "description": "Retrieves an order using merchant order ID.",
          "path": "content/v2/{merchantId}/ordersbymerchantid/{merchantOrderId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.getbymerchantorderid",
          "parameterOrder": [
            "merchantId",
            "merchantOrderId"
          ],
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "merchantOrderId": {
              "description": "The merchant order ID to be looked for.",
              "location": "path",
              "type": "string",
              "required": true
            }
          }
        },
        "createtestorder": {
          "description": "Sandbox only. Creates a test order.",
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the account that should manage the order. This cannot be a multi-client account."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2/{merchantId}/testorders",
          "path": "content/v2/{merchantId}/testorders",
          "httpMethod": "POST",
          "response": {
            "$ref": "OrdersCreateTestOrderResponse"
          },
          "request": {
            "$ref": "OrdersCreateTestOrderRequest"
          },
          "id": "content.orders.createtestorder"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.get",
          "response": {
            "$ref": "Order"
          },
          "flatPath": "content/v2/{merchantId}/orders/{orderId}",
          "httpMethod": "GET",
          "description": "Retrieves an order from your Merchant Center account.",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "path": "content/v2/{merchantId}/orders/{orderId}",
          "parameters": {
            "orderId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the order."
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            }
          }
        },
        "cancellineitem": {
          "parameters": {
            "orderId": {
              "required": true,
              "type": "string",
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "path": "content/v2/{merchantId}/orders/{orderId}/cancelLineItem",
          "response": {
            "$ref": "OrdersCancelLineItemResponse"
          },
          "id": "content.orders.cancellineitem",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/cancelLineItem",
          "request": {
            "$ref": "OrdersCancelLineItemRequest"
          },
          "description": "Cancels a line item, making a full refund."
        },
        "advancetestorder": {
          "id": "content.orders.advancetestorder",
          "path": "content/v2/{merchantId}/testorders/{orderId}/advance",
          "response": {
            "$ref": "OrdersAdvanceTestOrderResponse"
          },
          "flatPath": "content/v2/{merchantId}/testorders/{orderId}/advance",
          "httpMethod": "POST",
          "parameters": {
            "merchantId": {
              "required": true,
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "location": "path"
            },
            "orderId": {
              "description": "The ID of the test order to modify.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Sandbox only. Moves a test order from state \"`inProgress`\" to state \"`pendingShipment`\".",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "list": {
          "response": {
            "$ref": "OrdersListResponse"
          },
          "flatPath": "content/v2/{merchantId}/orders",
          "id": "content.orders.list",
          "path": "content/v2/{merchantId}/orders",
          "description": "Lists the orders in your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "parameters": {
            "placedDateEnd": {
              "description": "Obtains orders placed before this date (exclusively), in ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "format": "uint32",
              "type": "integer",
              "description": "The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page."
            },
            "placedDateStart": {
              "description": "Obtains orders placed after this date (inclusively), in ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "orderBy": {
              "type": "string",
              "location": "query",
              "description": "Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc "
            },
            "acknowledged": {
              "location": "query",
              "type": "boolean",
              "description": "Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged orders are returned. "
            },
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string"
            },
            "statuses": {
              "enum": [
                "ACTIVE",
                "COMPLETED",
                "CANCELED",
                "IN_PROGRESS",
                "PENDING_SHIPMENT",
                "PARTIALLY_SHIPPED",
                "SHIPPED",
                "PARTIALLY_DELIVERED",
                "DELIVERED",
                "PARTIALLY_RETURNED",
                "RETURNED"
              ],
              "enumDescriptions": [
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                "",
                ""
              ],
              "location": "query",
              "type": "string",
              "repeated": true,
              "description": "Obtains orders that match any of the specified statuses. Please note that `active` is a shortcut for `pendingShipment` and `partiallyShipped`, and `completed` is a shortcut for `shipped`, `partiallyDelivered`, `delivered`, `partiallyReturned`, `returned`, and `canceled`."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The token returned by the previous request."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "returnrefundlineitem": {
          "request": {
            "$ref": "OrdersReturnRefundLineItemRequest"
          },
          "id": "content.orders.returnrefundlineitem",
          "description": "Returns and refunds a line item. Note that this method can only be called on fully shipped orders. Please also note that the Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.",
          "response": {
            "$ref": "OrdersReturnRefundLineItemResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/orders/{orderId}/returnRefundLineItem",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/returnRefundLineItem",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string"
            },
            "orderId": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the order."
            }
          }
        },
        "createtestreturn": {
          "parameters": {
            "orderId": {
              "type": "string",
              "required": true,
              "description": "The ID of the order.",
              "location": "path"
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "format": "uint64"
            }
          },
          "path": "content/v2/{merchantId}/orders/{orderId}/testreturn",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "description": "Sandbox only. Creates a test return.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orders.createtestreturn",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/testreturn",
          "response": {
            "$ref": "OrdersCreateTestReturnResponse"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "OrdersCreateTestReturnRequest"
          }
        },
        "setlineitemmetadata": {
          "id": "content.orders.setlineitemmetadata",
          "response": {
            "$ref": "OrdersSetLineItemMetadataResponse"
          },
          "path": "content/v2/{merchantId}/orders/{orderId}/setLineItemMetadata",
          "parameters": {
            "orderId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the order."
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "httpMethod": "POST",
          "description": "Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided via other methods. Submitted key-value pairs can be retrieved as part of the orders resource.",
          "flatPath": "content/v2/{merchantId}/orders/{orderId}/setLineItemMetadata",
          "request": {
            "$ref": "OrdersSetLineItemMetadataRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "shippingsettings": {
      "methods": {
        "custombatch": {
          "httpMethod": "POST",
          "flatPath": "content/v2/shippingsettings/batch",
          "response": {
            "$ref": "ShippingsettingsCustomBatchResponse"
          },
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            }
          },
          "id": "content.shippingsettings.custombatch",
          "path": "content/v2/shippingsettings/batch",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves and updates the shipping settings of multiple accounts in a single request.",
          "request": {
            "$ref": "ShippingsettingsCustomBatchRequest"
          }
        },
        "getsupportedcarriers": {
          "response": {
            "$ref": "ShippingsettingsGetSupportedCarriersResponse"
          },
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/supportedCarriers",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the account for which to retrieve the supported carriers.",
              "format": "uint64",
              "required": true
            }
          },
          "path": "content/v2/{merchantId}/supportedCarriers",
          "id": "content.shippingsettings.getsupportedcarriers",
          "description": "Retrieves supported carriers and carrier services for an account."
        },
        "list": {
          "flatPath": "content/v2/{merchantId}/shippingsettings",
          "path": "content/v2/{merchantId}/shippingsettings",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "maxResults": {
              "description": "The maximum number of shipping settings to return in the response, used for paging.",
              "location": "query",
              "format": "uint32",
              "type": "integer"
            },
            "pageToken": {
              "location": "query",
              "description": "The token returned by the previous request.",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account.",
              "format": "uint64",
              "type": "string"
            }
          },
          "response": {
            "$ref": "ShippingsettingsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.shippingsettings.list",
          "description": "Lists the shipping settings of the sub-accounts in your Merchant Center account.",
          "httpMethod": "GET"
        },
        "get": {
          "path": "content/v2/{merchantId}/shippingsettings/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "accountId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the account for which to get/update shipping settings."
            }
          },
          "flatPath": "content/v2/{merchantId}/shippingsettings/{accountId}",
          "description": "Retrieves the shipping settings of the account.",
          "response": {
            "$ref": "ShippingSettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "id": "content.shippingsettings.get"
        },
        "getsupportedpickupservices": {
          "id": "content.shippingsettings.getsupportedpickupservices",
          "httpMethod": "GET",
          "description": "Retrieves supported pickup services for an account.",
          "parameterOrder": [
            "merchantId"
          ],
          "path": "content/v2/{merchantId}/supportedPickupServices",
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the account for which to retrieve the supported pickup services.",
              "format": "uint64",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/supportedPickupServices",
          "response": {
            "$ref": "ShippingsettingsGetSupportedPickupServicesResponse"
          }
        },
        "getsupportedholidays": {
          "id": "content.shippingsettings.getsupportedholidays",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "GET",
          "description": "Retrieves supported holidays for an account.",
          "path": "content/v2/{merchantId}/supportedHolidays",
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2/{merchantId}/supportedHolidays",
          "response": {
            "$ref": "ShippingsettingsGetSupportedHolidaysResponse"
          },
          "parameters": {
            "merchantId": {
              "description": "The ID of the account for which to retrieve the supported holidays.",
              "required": true,
              "format": "uint64",
              "type": "string",
              "location": "path"
            }
          }
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource.",
          "httpMethod": "PUT",
          "parameters": {
            "accountId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path",
              "description": "The ID of the account for which to get/update shipping settings."
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string",
              "format": "uint64"
            }
          },
          "id": "content.shippingsettings.update",
          "flatPath": "content/v2/{merchantId}/shippingsettings/{accountId}",
          "request": {
            "$ref": "ShippingSettings"
          },
          "response": {
            "$ref": "ShippingSettings"
          },
          "path": "content/v2/{merchantId}/shippingsettings/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        }
      }
    },
    "datafeeds": {
      "methods": {
        "list": {
          "description": "Lists the configurations for datafeeds in your Merchant Center account.",
          "id": "content.datafeeds.list",
          "flatPath": "content/v2/{merchantId}/datafeeds",
          "path": "content/v2/{merchantId}/datafeeds",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of products to return in the response, used for paging.",
              "location": "query",
              "format": "uint32"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.",
              "type": "string"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "DatafeedsListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64"
            },
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "datafeedId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the datafeed.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "description": "Deletes a datafeed configuration from your Merchant Center account.",
          "id": "content.datafeeds.delete",
          "flatPath": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/datafeeds/{datafeedId}"
        },
        "insert": {
          "description": "Registers a datafeed configuration with your Merchant Center account.",
          "flatPath": "content/v2/{merchantId}/datafeeds",
          "httpMethod": "POST",
          "request": {
            "$ref": "Datafeed"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "path": "content/v2/{merchantId}/datafeeds",
          "response": {
            "$ref": "Datafeed"
          },
          "id": "content.datafeeds.insert",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "type": "string"
            }
          }
        },
        "fetchnow": {
          "flatPath": "content/v2/{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "response": {
            "$ref": "DatafeedsFetchNowResponse"
          },
          "description": "Invokes a fetch for the datafeed in your Merchant Center account.",
          "path": "content/v2/{merchantId}/datafeeds/{datafeedId}/fetchNow",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "httpMethod": "POST",
          "parameters": {
            "dryRun": {
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true,
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account."
            },
            "datafeedId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the datafeed to be fetched.",
              "type": "string"
            }
          },
          "id": "content.datafeeds.fetchnow",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "flatPath": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "id": "content.datafeeds.update",
          "description": "Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "request": {
            "$ref": "Datafeed"
          },
          "parameters": {
            "merchantId": {
              "type": "string",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            },
            "datafeedId": {
              "format": "uint64",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "The ID of the datafeed."
            }
          },
          "response": {
            "$ref": "Datafeed"
          },
          "path": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "httpMethod": "PUT"
        },
        "custombatch": {
          "parameterOrder": [],
          "description": "Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.",
          "id": "content.datafeeds.custombatch",
          "response": {
            "$ref": "DatafeedsCustomBatchResponse"
          },
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "flatPath": "content/v2/datafeeds/batch",
          "request": {
            "$ref": "DatafeedsCustomBatchRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "path": "content/v2/datafeeds/batch"
        },
        "get": {
          "flatPath": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "id": "content.datafeeds.get",
          "response": {
            "$ref": "Datafeed"
          },
          "httpMethod": "GET",
          "description": "Retrieves a datafeed configuration from your Merchant Center account.",
          "path": "content/v2/{merchantId}/datafeeds/{datafeedId}",
          "parameters": {
            "datafeedId": {
              "required": true,
              "description": "The ID of the datafeed.",
              "format": "uint64",
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "type": "string",
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ]
        }
      }
    },
    "pos": {
      "methods": {
        "get": {
          "response": {
            "$ref": "PosStore"
          },
          "parameters": {
            "targetMerchantId": {
              "required": true,
              "format": "uint64",
              "location": "path",
              "description": "The ID of the target merchant.",
              "type": "string"
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the POS or inventory data provider."
            },
            "storeCode": {
              "description": "A store code that is unique per merchant.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ],
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "description": "Retrieves information about the given store.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.pos.get",
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}"
        },
        "list": {
          "response": {
            "$ref": "PosListResponse"
          },
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/store",
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/store",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "parameters": {
            "targetMerchantId": {
              "type": "string",
              "description": "The ID of the target merchant.",
              "format": "uint64",
              "location": "path",
              "required": true
            },
            "merchantId": {
              "description": "The ID of the POS or inventory data provider.",
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "id": "content.pos.list",
          "httpMethod": "GET",
          "description": "Lists the stores of the target merchant.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "delete": {
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId",
            "storeCode"
          ],
          "id": "content.pos.delete",
          "parameters": {
            "storeCode": {
              "description": "A store code that is unique per merchant.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The ID of the POS or inventory data provider."
            },
            "targetMerchantId": {
              "format": "uint64",
              "description": "The ID of the target merchant.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Deletes a store for the given merchant.",
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/store/{storeCode}"
        },
        "custombatch": {
          "path": "content/v2/pos/batch",
          "response": {
            "$ref": "PosCustomBatchResponse"
          },
          "description": "Batches multiple POS-related calls in a single request.",
          "httpMethod": "POST",
          "id": "content.pos.custombatch",
          "parameterOrder": [],
          "request": {
            "$ref": "PosCustomBatchRequest"
          },
          "flatPath": "content/v2/pos/batch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          }
        },
        "insert": {
          "description": "Creates a store for the given merchant.",
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/store",
          "httpMethod": "POST",
          "id": "content.pos.insert",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "response": {
            "$ref": "PosStore"
          },
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/store",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "PosStore"
          },
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "targetMerchantId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the target merchant.",
              "type": "string",
              "location": "path"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "description": "The ID of the POS or inventory data provider.",
              "format": "uint64",
              "type": "string"
            }
          }
        },
        "sale": {
          "request": {
            "$ref": "PosSaleRequest"
          },
          "description": "Submit a sale event for the given merchant.",
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/sale",
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/sale",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "id": "content.pos.sale",
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            },
            "merchantId": {
              "description": "The ID of the POS or inventory data provider.",
              "type": "string",
              "location": "path",
              "required": true,
              "format": "uint64"
            },
            "targetMerchantId": {
              "type": "string",
              "description": "The ID of the target merchant.",
              "location": "path",
              "required": true,
              "format": "uint64"
            }
          },
          "response": {
            "$ref": "PosSaleResponse"
          }
        },
        "inventory": {
          "path": "content/v2/{merchantId}/pos/{targetMerchantId}/inventory",
          "httpMethod": "POST",
          "flatPath": "content/v2/{merchantId}/pos/{targetMerchantId}/inventory",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.pos.inventory",
          "parameterOrder": [
            "merchantId",
            "targetMerchantId"
          ],
          "request": {
            "$ref": "PosInventoryRequest"
          },
          "description": "Submit inventory for the given merchant.",
          "parameters": {
            "targetMerchantId": {
              "type": "string",
              "format": "uint64",
              "location": "path",
              "description": "The ID of the target merchant.",
              "required": true
            },
            "dryRun": {
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean"
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the POS or inventory data provider.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "PosInventoryResponse"
          }
        }
      }
    },
    "accounttax": {
      "methods": {
        "custombatch": {
          "parameterOrder": [],
          "httpMethod": "POST",
          "response": {
            "$ref": "AccounttaxCustomBatchResponse"
          },
          "id": "content.accounttax.custombatch",
          "flatPath": "content/v2/accounttax/batch",
          "request": {
            "$ref": "AccounttaxCustomBatchRequest"
          },
          "description": "Retrieves and updates tax settings of multiple accounts in a single request.",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/accounttax/batch"
        },
        "list": {
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "maxResults": {
              "format": "uint32",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of tax settings to return in the response, used for paging."
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            }
          },
          "path": "content/v2/{merchantId}/accounttax",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2/{merchantId}/accounttax",
          "id": "content.accounttax.list",
          "httpMethod": "GET",
          "description": "Lists the tax settings of the sub-accounts in your Merchant Center account.",
          "response": {
            "$ref": "AccounttaxListResponse"
          }
        },
        "get": {
          "parameters": {
            "accountId": {
              "location": "path",
              "description": "The ID of the account for which to get/update account tax settings.",
              "required": true,
              "format": "uint64",
              "type": "string"
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64"
            }
          },
          "id": "content.accounttax.get",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "AccountTax"
          },
          "path": "content/v2/{merchantId}/accounttax/{accountId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "content/v2/{merchantId}/accounttax/{accountId}",
          "description": "Retrieves the tax settings of the account."
        },
        "update": {
          "flatPath": "content/v2/{merchantId}/accounttax/{accountId}",
          "path": "content/v2/{merchantId}/accounttax/{accountId}",
          "parameters": {
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "merchantId": {
              "required": true,
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string"
            },
            "accountId": {
              "type": "string",
              "required": true,
              "description": "The ID of the account for which to get/update account tax settings.",
              "location": "path",
              "format": "uint64"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "httpMethod": "PUT",
          "request": {
            "$ref": "AccountTax"
          },
          "description": "Updates the tax settings of the account. Any fields that are not provided are deleted from the resource.",
          "id": "content.accounttax.update",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "response": {
            "$ref": "AccountTax"
          }
        }
      }
    },
    "orderreturns": {
      "methods": {
        "list": {
          "flatPath": "content/v2/{merchantId}/orderreturns",
          "parameterOrder": [
            "merchantId"
          ],
          "httpMethod": "GET",
          "description": "Lists order returns in your Merchant Center account.",
          "path": "content/v2/{merchantId}/orderreturns",
          "response": {
            "$ref": "OrderreturnsListResponse"
          },
          "parameters": {
            "orderBy": {
              "enumDescriptions": [
                "",
                ""
              ],
              "type": "string",
              "location": "query",
              "enum": [
                "RETURN_CREATION_TIME_DESC",
                "RETURN_CREATION_TIME_ASC"
              ],
              "description": "Return the results in the specified order."
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "required": true,
              "location": "path"
            },
            "createdEndDate": {
              "location": "query",
              "description": "Obtains order returns created before this date (inclusively), in ISO 8601 format.",
              "type": "string"
            },
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "format": "uint32",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page."
            },
            "createdStartDate": {
              "description": "Obtains order returns created after this date (inclusively), in ISO 8601 format.",
              "type": "string",
              "location": "query"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.orderreturns.list"
        },
        "get": {
          "parameters": {
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            },
            "returnId": {
              "type": "string",
              "required": true,
              "description": "Merchant order return ID generated by Google.",
              "location": "path"
            }
          },
          "description": "Retrieves an order return from your Merchant Center account.",
          "response": {
            "$ref": "MerchantOrderReturn"
          },
          "flatPath": "content/v2/{merchantId}/orderreturns/{returnId}",
          "id": "content.orderreturns.get",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/{merchantId}/orderreturns/{returnId}",
          "parameterOrder": [
            "merchantId",
            "returnId"
          ]
        }
      }
    },
    "accounts": {
      "methods": {
        "authinfo": {
          "path": "content/v2/accounts/authinfo",
          "response": {
            "$ref": "AccountsAuthInfoResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {},
          "description": "Returns information about the authenticated user.",
          "parameterOrder": [],
          "id": "content.accounts.authinfo",
          "flatPath": "content/v2/accounts/authinfo",
          "httpMethod": "GET"
        },
        "delete": {
          "parameters": {
            "force": {
              "type": "boolean",
              "description": "Flag to delete sub-accounts with products. The default value is false.",
              "location": "query",
              "default": "false"
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.",
              "format": "uint64",
              "type": "string"
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            },
            "accountId": {
              "description": "The ID of the account.",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "uint64"
            }
          },
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}",
          "path": "content/v2/{merchantId}/accounts/{accountId}",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Deletes a Merchant Center sub-account.",
          "id": "content.accounts.delete",
          "httpMethod": "DELETE"
        },
        "update": {
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.",
          "id": "content.accounts.update",
          "httpMethod": "PUT",
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "Account"
          },
          "response": {
            "$ref": "Account"
          },
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path",
              "type": "string"
            },
            "accountId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account.",
              "required": true
            },
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "path": "content/v2/{merchantId}/accounts/{accountId}"
        },
        "claimwebsite": {
          "description": "Claims the website of a Merchant Center sub-account.",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "response": {
            "$ref": "AccountsClaimWebsiteResponse"
          },
          "id": "content.accounts.claimwebsite",
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}/claimwebsite",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "overwrite": {
              "description": "Only available to selected merchants. When set to `True`, this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account.",
              "type": "boolean",
              "location": "query"
            },
            "accountId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the account whose website is claimed.",
              "type": "string"
            }
          },
          "path": "content/v2/{merchantId}/accounts/{accountId}/claimwebsite"
        },
        "insert": {
          "response": {
            "$ref": "Account"
          },
          "path": "content/v2/{merchantId}/accounts",
          "flatPath": "content/v2/{merchantId}/accounts",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            },
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "Account"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Creates a Merchant Center sub-account.",
          "httpMethod": "POST",
          "id": "content.accounts.insert"
        },
        "list": {
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "format": "uint32",
              "description": "The maximum number of accounts to return in the response, used for paging."
            },
            "merchantId": {
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account.",
              "type": "string",
              "location": "path"
            }
          },
          "id": "content.accounts.list",
          "path": "content/v2/{merchantId}/accounts",
          "description": "Lists the sub-accounts in your Merchant Center account.",
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "AccountsListResponse"
          },
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/accounts"
        },
        "custombatch": {
          "httpMethod": "POST",
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "id": "content.accounts.custombatch",
          "response": {
            "$ref": "AccountsCustomBatchResponse"
          },
          "parameterOrder": [],
          "flatPath": "content/v2/accounts/batch",
          "description": "Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.",
          "path": "content/v2/accounts/batch",
          "request": {
            "$ref": "AccountsCustomBatchRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "link": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.",
          "request": {
            "$ref": "AccountsLinkRequest"
          },
          "id": "content.accounts.link",
          "response": {
            "$ref": "AccountsLinkResponse"
          },
          "httpMethod": "POST",
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}/link",
          "parameters": {
            "merchantId": {
              "required": true,
              "location": "path",
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string"
            },
            "accountId": {
              "location": "path",
              "description": "The ID of the account that should be linked.",
              "type": "string",
              "required": true,
              "format": "uint64"
            }
          },
          "path": "content/v2/{merchantId}/accounts/{accountId}/link"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "id": "content.accounts.get",
          "parameters": {
            "merchantId": {
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "required": true,
              "format": "uint64",
              "location": "path"
            },
            "accountId": {
              "location": "path",
              "format": "uint64",
              "type": "string",
              "description": "The ID of the account.",
              "required": true
            }
          },
          "httpMethod": "GET",
          "path": "content/v2/{merchantId}/accounts/{accountId}",
          "flatPath": "content/v2/{merchantId}/accounts/{accountId}",
          "description": "Retrieves a Merchant Center account.",
          "response": {
            "$ref": "Account"
          }
        }
      }
    },
    "accountstatuses": {
      "methods": {
        "get": {
          "flatPath": "content/v2/{merchantId}/accountstatuses/{accountId}",
          "path": "content/v2/{merchantId}/accountstatuses/{accountId}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "type": "string",
              "format": "uint64"
            },
            "destinations": {
              "repeated": true,
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "type": "string",
              "location": "query"
            },
            "accountId": {
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account.",
              "required": true,
              "location": "path"
            }
          },
          "id": "content.accountstatuses.get",
          "response": {
            "$ref": "AccountStatus"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts."
        },
        "custombatch": {
          "flatPath": "content/v2/accountstatuses/batch",
          "id": "content.accountstatuses.custombatch",
          "parameters": {},
          "path": "content/v2/accountstatuses/batch",
          "response": {
            "$ref": "AccountstatusesCustomBatchResponse"
          },
          "request": {
            "$ref": "AccountstatusesCustomBatchRequest"
          },
          "httpMethod": "POST",
          "description": "Retrieves multiple Merchant Center account statuses in a single request.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": []
        },
        "list": {
          "id": "content.accountstatuses.list",
          "parameterOrder": [
            "merchantId"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "destinations": {
              "location": "query",
              "type": "string",
              "repeated": true,
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
            },
            "maxResults": {
              "type": "integer",
              "location": "query",
              "format": "uint32",
              "description": "The maximum number of account statuses to return in the response, used for paging."
            },
            "merchantId": {
              "format": "uint64",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the managing account. This must be a multi-client account."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "AccountstatusesListResponse"
          },
          "flatPath": "content/v2/{merchantId}/accountstatuses",
          "httpMethod": "GET",
          "path": "content/v2/{merchantId}/accountstatuses",
          "description": "Lists the statuses of the sub-accounts in your Merchant Center account."
        }
      }
    },
    "productstatuses": {
      "methods": {
        "custombatch": {
          "response": {
            "$ref": "ProductstatusesCustomBatchResponse"
          },
          "request": {
            "$ref": "ProductstatusesCustomBatchRequest"
          },
          "id": "content.productstatuses.custombatch",
          "description": "Gets the statuses of multiple products in a single request.",
          "path": "content/v2/productstatuses/batch",
          "httpMethod": "POST",
          "flatPath": "content/v2/productstatuses/batch",
          "parameters": {
            "includeAttributes": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to include full product data in the results of this request. The default value is false."
            }
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "get": {
          "httpMethod": "GET",
          "flatPath": "content/v2/{merchantId}/productstatuses/{productId}",
          "path": "content/v2/{merchantId}/productstatuses/{productId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "required": true,
              "location": "path"
            },
            "destinations": {
              "repeated": true,
              "type": "string",
              "location": "query",
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination."
            },
            "includeAttributes": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to include full product data in the result of this get request. The default value is false."
            },
            "productId": {
              "type": "string",
              "description": "The REST ID of the product.",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "ProductStatus"
          },
          "description": "Gets the status of a product from your Merchant Center account.",
          "id": "content.productstatuses.get",
          "parameterOrder": [
            "merchantId",
            "productId"
          ]
        },
        "list": {
          "response": {
            "$ref": "ProductstatusesListResponse"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Lists the statuses of the products in your Merchant Center account.",
          "id": "content.productstatuses.list",
          "httpMethod": "GET",
          "path": "content/v2/{merchantId}/productstatuses",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "destinations": {
              "location": "query",
              "repeated": true,
              "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
              "type": "string"
            },
            "maxResults": {
              "description": "The maximum number of product statuses to return in the response, used for paging.",
              "type": "integer",
              "location": "query",
              "format": "uint32"
            },
            "includeAttributes": {
              "description": "Flag to include full product data in the results of the list request. The default value is false.",
              "type": "boolean",
              "location": "query"
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account.",
              "format": "uint64",
              "required": true
            },
            "includeInvalidInsertedItems": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false)."
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            }
          },
          "flatPath": "content/v2/{merchantId}/productstatuses"
        }
      }
    },
    "orderreports": {
      "methods": {
        "listtransactions": {
          "parameters": {
            "transactionEndDate": {
              "type": "string",
              "location": "query",
              "description": "The last date in which transaction occurred. In ISO 8601 format. Default: current date."
            },
            "transactionStartDate": {
              "description": "The first date in which transaction occurred. In ISO 8601 format.",
              "location": "query",
              "type": "string"
            },
            "maxResults": {
              "description": "The maximum number of disbursements to return in the response, used for paging.",
              "location": "query",
              "format": "uint32",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            },
            "merchantId": {
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "format": "uint64",
              "location": "path",
              "type": "string"
            },
            "disbursementId": {
              "description": "The Google-provided ID of the disbursement (found in Wallet).",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "content/v2/{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "response": {
            "$ref": "OrderreportsListTransactionsResponse"
          },
          "description": "Retrieves a list of transactions for a disbursement from your Merchant Center account.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/orderreports/disbursements/{disbursementId}/transactions",
          "parameterOrder": [
            "merchantId",
            "disbursementId"
          ],
          "id": "content.orderreports.listtransactions"
        },
        "listdisbursements": {
          "flatPath": "content/v2/{merchantId}/orderreports/disbursements",
          "path": "content/v2/{merchantId}/orderreports/disbursements",
          "id": "content.orderreports.listdisbursements",
          "parameters": {
            "maxResults": {
              "format": "uint32",
              "description": "The maximum number of disbursements to return in the response, used for paging.",
              "location": "query",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "The token returned by the previous request."
            },
            "disbursementStartDate": {
              "location": "query",
              "description": "The first date which disbursements occurred. In ISO 8601 format.",
              "type": "string"
            },
            "merchantId": {
              "type": "string",
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that manages the order. This cannot be a multi-client account."
            },
            "disbursementEndDate": {
              "type": "string",
              "description": "The last date which disbursements occurred. In ISO 8601 format. Default: current date.",
              "location": "query"
            }
          },
          "description": "Retrieves a report for disbursements from your Merchant Center account.",
          "httpMethod": "GET",
          "response": {
            "$ref": "OrderreportsListDisbursementsResponse"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        }
      }
    },
    "liasettings": {
      "methods": {
        "list": {
          "id": "content.liasettings.list",
          "parameters": {
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "The maximum number of LIA settings to return in the response, used for paging."
            },
            "merchantId": {
              "required": true,
              "location": "path",
              "description": "The ID of the managing account. This must be a multi-client account.",
              "format": "uint64",
              "type": "string"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "LiasettingsListResponse"
          },
          "description": "Lists the LIA settings of the sub-accounts in your Merchant Center account.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2/{merchantId}/liasettings",
          "httpMethod": "GET",
          "path": "content/v2/{merchantId}/liasettings"
        },
        "get": {
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "description": "Retrieves the LIA settings of the account.",
          "path": "content/v2/{merchantId}/liasettings/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.liasettings.get",
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "type": "string"
            },
            "accountId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the account for which to get or update LIA settings.",
              "format": "uint64"
            }
          },
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}",
          "response": {
            "$ref": "LiaSettings"
          },
          "httpMethod": "GET"
        },
        "custombatch": {
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "path": "content/v2/liasettings/batch",
          "description": "Retrieves and/or updates the LIA settings of multiple accounts in a single request.",
          "response": {
            "$ref": "LiasettingsCustomBatchResponse"
          },
          "id": "content.liasettings.custombatch",
          "parameters": {
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            }
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "LiasettingsCustomBatchRequest"
          },
          "parameterOrder": [],
          "flatPath": "content/v2/liasettings/batch"
        },
        "listposdataproviders": {
          "response": {
            "$ref": "LiasettingsListPosDataProvidersResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Retrieves the list of POS data providers that have active settings for the all eiligible countries.",
          "parameters": {},
          "httpMethod": "GET",
          "path": "content/v2/liasettings/posdataproviders",
          "flatPath": "content/v2/liasettings/posdataproviders",
          "parameterOrder": [],
          "id": "content.liasettings.listposdataproviders"
        },
        "setposdataprovider": {
          "description": "Sets the POS data provider for the specified country.",
          "id": "content.liasettings.setposdataprovider",
          "httpMethod": "POST",
          "response": {
            "$ref": "LiasettingsSetPosDataProviderResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "posExternalAccountId": {
              "description": "The account ID by which this merchant is known to the POS data provider.",
              "location": "query",
              "type": "string"
            },
            "accountId": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "The ID of the account for which to retrieve accessible Google My Business accounts.",
              "format": "uint64"
            },
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "posDataProviderId": {
              "type": "string",
              "description": "The ID of POS data provider.",
              "location": "query",
              "format": "uint64"
            },
            "country": {
              "type": "string",
              "description": "The country for which the POS data provider is selected.",
              "location": "query"
            }
          },
          "path": "content/v2/{merchantId}/liasettings/{accountId}/setposdataprovider",
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/setposdataprovider",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ]
        },
        "requestgmbaccess": {
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "response": {
            "$ref": "LiasettingsRequestGmbAccessResponse"
          },
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "path": "content/v2/{merchantId}/liasettings/{accountId}/requestgmbaccess",
          "description": "Requests access to a specified Google My Business account.",
          "parameters": {
            "gmbEmail": {
              "type": "string",
              "location": "query",
              "description": "The email of the Google My Business account."
            },
            "merchantId": {
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "location": "path"
            },
            "accountId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "description": "The ID of the account for which GMB access is requested.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "id": "content.liasettings.requestgmbaccess",
          "httpMethod": "POST"
        },
        "getaccessiblegmbaccounts": {
          "response": {
            "$ref": "LiasettingsGetAccessibleGmbAccountsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "merchantId": {
              "location": "path",
              "type": "string",
              "format": "uint64",
              "required": true,
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "accountId": {
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true,
              "description": "The ID of the account for which to retrieve accessible Google My Business accounts."
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts",
          "description": "Retrieves the list of accessible Google My Business accounts.",
          "id": "content.liasettings.getaccessiblegmbaccounts",
          "path": "content/v2/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts"
        },
        "requestinventoryverification": {
          "id": "content.liasettings.requestinventoryverification",
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "path": "content/v2/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}",
          "description": "Requests inventory validation for the specified country.",
          "httpMethod": "POST",
          "parameterOrder": [
            "merchantId",
            "accountId",
            "country"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LiasettingsRequestInventoryVerificationResponse"
          },
          "parameters": {
            "country": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The country for which inventory validation is requested."
            },
            "merchantId": {
              "location": "path",
              "required": true,
              "format": "uint64",
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account."
            },
            "accountId": {
              "location": "path",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "format": "uint64",
              "required": true
            }
          }
        },
        "update": {
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "request": {
            "$ref": "LiaSettings"
          },
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            },
            "accountId": {
              "format": "uint64",
              "location": "path",
              "type": "string",
              "description": "The ID of the account for which to get or update LIA settings.",
              "required": true
            },
            "merchantId": {
              "location": "path",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "type": "string",
              "format": "uint64",
              "required": true
            }
          },
          "path": "content/v2/{merchantId}/liasettings/{accountId}",
          "id": "content.liasettings.update",
          "description": "Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource.",
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "LiaSettings"
          },
          "httpMethod": "PUT"
        },
        "setinventoryverificationcontact": {
          "parameterOrder": [
            "merchantId",
            "accountId"
          ],
          "flatPath": "content/v2/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "path": "content/v2/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "description": "Sets the inventory verification contract for the specified country.",
          "id": "content.liasettings.setinventoryverificationcontact",
          "parameters": {
            "contactName": {
              "type": "string",
              "description": "The name of the inventory verification contact.",
              "location": "query"
            },
            "country": {
              "description": "The country for which inventory verification is requested.",
              "location": "query",
              "type": "string"
            },
            "accountId": {
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path",
              "format": "uint64",
              "type": "string",
              "required": true
            },
            "language": {
              "description": "The language for which inventory verification is requested.",
              "location": "query",
              "type": "string"
            },
            "contactEmail": {
              "location": "query",
              "description": "The email of the inventory verification contact.",
              "type": "string"
            },
            "merchantId": {
              "required": true,
              "type": "string",
              "description": "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.",
              "format": "uint64",
              "location": "path"
            }
          },
          "response": {
            "$ref": "LiasettingsSetInventoryVerificationContactResponse"
          },
          "httpMethod": "POST"
        }
      }
    },
    "datafeedstatuses": {
      "methods": {
        "get": {
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that manages the datafeed. This account cannot be a multi-client account.",
              "format": "uint64",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "datafeedId": {
              "description": "The ID of the datafeed.",
              "format": "uint64",
              "location": "path",
              "type": "string",
              "required": true
            },
            "country": {
              "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.",
              "location": "query",
              "type": "string"
            },
            "language": {
              "location": "query",
              "type": "string",
              "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target."
            }
          },
          "description": "Retrieves the status of a datafeed from your Merchant Center account.",
          "id": "content.datafeedstatuses.get",
          "flatPath": "content/v2/{merchantId}/datafeedstatuses/{datafeedId}",
          "parameterOrder": [
            "merchantId",
            "datafeedId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "DatafeedStatus"
          },
          "path": "content/v2/{merchantId}/datafeedstatuses/{datafeedId}",
          "httpMethod": "GET"
        },
        "list": {
          "id": "content.datafeedstatuses.list",
          "description": "Lists the statuses of the datafeeds in your Merchant Center account.",
          "httpMethod": "GET",
          "path": "content/v2/{merchantId}/datafeedstatuses",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "DatafeedstatusesListResponse"
          },
          "parameterOrder": [
            "merchantId"
          ],
          "flatPath": "content/v2/{merchantId}/datafeedstatuses",
          "parameters": {
            "pageToken": {
              "description": "The token returned by the previous request.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "location": "query",
              "description": "The maximum number of products to return in the response, used for paging.",
              "type": "integer",
              "format": "uint32"
            },
            "merchantId": {
              "description": "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.",
              "required": true,
              "type": "string",
              "format": "uint64",
              "location": "path"
            }
          }
        },
        "custombatch": {
          "request": {
            "$ref": "DatafeedstatusesCustomBatchRequest"
          },
          "description": "Gets multiple Merchant Center datafeed statuses in a single request.",
          "id": "content.datafeedstatuses.custombatch",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "path": "content/v2/datafeedstatuses/batch",
          "flatPath": "content/v2/datafeedstatuses/batch",
          "parameters": {},
          "httpMethod": "POST",
          "response": {
            "$ref": "DatafeedstatusesCustomBatchResponse"
          }
        }
      }
    },
    "products": {
      "methods": {
        "get": {
          "id": "content.products.get",
          "httpMethod": "GET",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/products/{productId}",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "required": true,
              "location": "path",
              "format": "uint64",
              "type": "string"
            },
            "productId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The REST ID of the product."
            }
          },
          "response": {
            "$ref": "Product"
          },
          "description": "Retrieves a product from your Merchant Center account.",
          "path": "content/v2/{merchantId}/products/{productId}"
        },
        "list": {
          "flatPath": "content/v2/{merchantId}/products",
          "id": "content.products.list",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [
            "merchantId"
          ],
          "description": "Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested.",
          "response": {
            "$ref": "ProductsListResponse"
          },
          "parameters": {
            "includeInvalidInsertedItems": {
              "type": "boolean",
              "description": "Flag to include the invalid inserted items in the result of the list request. By default the invalid items are not shown (the default value is false).",
              "location": "query"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "required": true,
              "description": "The ID of the account that contains the products. This account cannot be a multi-client account.",
              "type": "string"
            },
            "maxResults": {
              "location": "query",
              "format": "uint32",
              "description": "The maximum number of products to return in the response, used for paging.",
              "type": "integer"
            },
            "pageToken": {
              "type": "string",
              "description": "The token returned by the previous request.",
              "location": "query"
            }
          },
          "path": "content/v2/{merchantId}/products",
          "httpMethod": "GET"
        },
        "delete": {
          "httpMethod": "DELETE",
          "description": "Deletes a product from your Merchant Center account.",
          "parameters": {
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "required": true,
              "location": "path",
              "type": "string",
              "format": "uint64"
            },
            "productId": {
              "type": "string",
              "location": "path",
              "description": "The REST ID of the product.",
              "required": true
            },
            "dryRun": {
              "type": "boolean",
              "location": "query",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "flatPath": "content/v2/{merchantId}/products/{productId}",
          "id": "content.products.delete",
          "parameterOrder": [
            "merchantId",
            "productId"
          ],
          "path": "content/v2/{merchantId}/products/{productId}",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ]
        },
        "custombatch": {
          "response": {
            "$ref": "ProductsCustomBatchResponse"
          },
          "path": "content/v2/products/batch",
          "id": "content.products.custombatch",
          "request": {
            "$ref": "ProductsCustomBatchRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameterOrder": [],
          "description": "Retrieves, inserts, and deletes multiple products in a single request.",
          "flatPath": "content/v2/products/batch",
          "parameters": {
            "dryRun": {
              "location": "query",
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any)."
            }
          },
          "httpMethod": "POST"
        },
        "insert": {
          "request": {
            "$ref": "Product"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "response": {
            "$ref": "Product"
          },
          "parameters": {
            "merchantId": {
              "format": "uint64",
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "type": "boolean",
              "location": "query"
            }
          },
          "description": "Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.",
          "flatPath": "content/v2/{merchantId}/products",
          "parameterOrder": [
            "merchantId"
          ],
          "path": "content/v2/{merchantId}/products",
          "id": "content.products.insert"
        }
      }
    },
    "inventory": {
      "methods": {
        "set": {
          "parameterOrder": [
            "merchantId",
            "storeCode",
            "productId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "InventorySetRequest"
          },
          "description": "Updates price and availability of a product in your Merchant Center account.",
          "parameters": {
            "storeCode": {
              "description": "The code of the store for which to update price and availability. Use `online` to update price and availability of an online product.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "productId": {
              "description": "The REST ID of the product for which to update price and availability.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "merchantId": {
              "description": "The ID of the account that contains the product. This account cannot be a multi-client account.",
              "format": "uint64",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "dryRun": {
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query",
              "type": "boolean"
            }
          },
          "id": "content.inventory.set",
          "path": "content/v2/{merchantId}/inventory/{storeCode}/products/{productId}",
          "flatPath": "content/v2/{merchantId}/inventory/{storeCode}/products/{productId}",
          "response": {
            "$ref": "InventorySetResponse"
          },
          "httpMethod": "POST"
        },
        "custombatch": {
          "flatPath": "content/v2/inventory/batch",
          "id": "content.inventory.custombatch",
          "request": {
            "$ref": "InventoryCustomBatchRequest"
          },
          "path": "content/v2/inventory/batch",
          "parameterOrder": [],
          "description": "Updates price and availability for multiple products or stores in a single request. This operation does not update the expiration date of the products.",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "parameters": {
            "dryRun": {
              "type": "boolean",
              "description": "Flag to simulate a request like in a live environment. If set to true, dry-run mode checks the validity of the request and returns errors (if any).",
              "location": "query"
            }
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "InventoryCustomBatchResponse"
          }
        }
      }
    },
    "orderinvoices": {
      "methods": {
        "createrefundinvoice": {
          "httpMethod": "POST",
          "request": {
            "$ref": "OrderinvoicesCreateRefundInvoiceRequest"
          },
          "response": {
            "$ref": "OrderinvoicesCreateRefundInvoiceResponse"
          },
          "id": "content.orderinvoices.createrefundinvoice",
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "flatPath": "content/v2/{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "description": "Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using `createChargeInvoice`. All amounts (except for the summary) are incremental with respect to the previous invoice.",
          "parameters": {
            "orderId": {
              "required": true,
              "location": "path",
              "description": "The ID of the order.",
              "type": "string"
            },
            "merchantId": {
              "location": "path",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "type": "string",
              "required": true
            }
          },
          "path": "content/v2/{merchantId}/orderinvoices/{orderId}/createRefundInvoice",
          "parameterOrder": [
            "merchantId",
            "orderId"
          ]
        },
        "createchargeinvoice": {
          "parameters": {
            "merchantId": {
              "required": true,
              "type": "string",
              "format": "uint64",
              "description": "The ID of the account that manages the order. This cannot be a multi-client account.",
              "location": "path"
            },
            "orderId": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "The ID of the order."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/content"
          ],
          "request": {
            "$ref": "OrderinvoicesCreateChargeInvoiceRequest"
          },
          "parameterOrder": [
            "merchantId",
            "orderId"
          ],
          "flatPath": "content/v2/{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "id": "content.orderinvoices.createchargeinvoice",
          "path": "content/v2/{merchantId}/orderinvoices/{orderId}/createChargeInvoice",
          "description": "Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders.",
          "response": {
            "$ref": "OrderinvoicesCreateChargeInvoiceResponse"
          },
          "httpMethod": "POST"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "name": "content",
  "batchPath": "batch",
  "mtlsRootUrl": "https://shoppingcontent.mtls.googleapis.com/",
  "id": "content:v2",
  "documentationLink": "https://developers.google.com/shopping-content/v2/",
  "schemas": {
    "PosCustomBatchResponse": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "PosCustomBatchResponseEntry"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posCustomBatchResponse\".",
          "type": "string"
        }
      },
      "id": "PosCustomBatchResponse"
    },
    "OrdersListResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of orders.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersListResponse\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Order"
          }
        }
      },
      "id": "OrdersListResponse"
    },
    "AccountsClaimWebsiteResponse": {
      "id": "AccountsClaimWebsiteResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsClaimWebsiteResponse\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PosCustomBatchRequestEntry": {
      "type": "object",
      "properties": {
        "targetMerchantId": {
          "description": "The ID of the account for which to get/submit data.",
          "format": "uint64",
          "type": "string"
        },
        "store": {
          "$ref": "PosStore",
          "description": "The store information to submit. Set this only if the method is `insert`."
        },
        "merchantId": {
          "description": "The ID of the POS data provider.",
          "format": "uint64",
          "type": "string"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`inventory`\" - \"`sale`\" ",
          "type": "string"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "inventory": {
          "description": "The inventory to submit. Set this only if the method is `inventory`.",
          "$ref": "PosInventory"
        },
        "storeCode": {
          "type": "string",
          "description": "The store code. Set this only if the method is `delete` or `get`."
        },
        "sale": {
          "$ref": "PosSale",
          "description": "The sale information to submit. Set this only if the method is `sale`."
        }
      },
      "id": "PosCustomBatchRequestEntry"
    },
    "DatafeedstatusesCustomBatchRequest": {
      "id": "DatafeedstatusesCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "DatafeedstatusesCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch."
        }
      }
    },
    "OrdersCreateTestReturnResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestReturnResponse\"."
        },
        "returnId": {
          "type": "string",
          "description": "The ID of the newly created test order return."
        }
      },
      "type": "object",
      "id": "OrdersCreateTestReturnResponse"
    },
    "OrdersCustomBatchRequestEntryCancelLineItem": {
      "properties": {
        "amountTax": {
          "description": "Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided.",
          "$ref": "Price"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity to cancel."
        },
        "amountPretax": {
          "description": "Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.",
          "$ref": "Price"
        },
        "lineItemId": {
          "description": "The ID of the line item to cancel. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "amount": {
          "description": "Deprecated. Please use amountPretax and amountTax instead.",
          "$ref": "Price"
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryCancelLineItem"
    },
    "ProductsListResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of products.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productsListResponse\"."
        },
        "resources": {
          "items": {
            "$ref": "Product"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ProductsListResponse"
    },
    "AccountTax": {
      "type": "object",
      "description": "The tax settings of a merchant account. All methods require the admin role.",
      "id": "AccountTax",
      "properties": {
        "rules": {
          "items": {
            "$ref": "AccountTaxTaxRule"
          },
          "description": "Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\"."
        },
        "accountId": {
          "type": "string",
          "format": "uint64",
          "description": "Required. The ID of the account to which these account tax settings belong."
        }
      }
    },
    "AccountIdentifier": {
      "id": "AccountIdentifier",
      "properties": {
        "aggregatorId": {
          "format": "uint64",
          "description": "The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).",
          "type": "string"
        },
        "merchantId": {
          "description": "The merchant account ID, set for individual accounts and subaccounts.",
          "format": "uint64",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountStatusExampleItem": {
      "properties": {
        "valueOnLandingPage": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "submittedValue": {
          "type": "string"
        },
        "itemId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      },
      "id": "AccountStatusExampleItem",
      "type": "object"
    },
    "OrdersReturnLineItemResponse": {
      "type": "object",
      "id": "OrdersReturnLineItemResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersReturnLineItemResponse\"."
        }
      }
    },
    "OrdersUpdateLineItemShippingDetailsResponse": {
      "id": "OrdersUpdateLineItemShippingDetailsResponse",
      "type": "object",
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateLineItemShippingDetailsResponse\".",
          "type": "string"
        }
      }
    },
    "InventoryCustomBatchRequestEntry": {
      "properties": {
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "storeCode": {
          "type": "string",
          "description": "The code of the store for which to update price and availability. Use `online` to update price and availability of an online product."
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        },
        "inventory": {
          "$ref": "Inventory",
          "description": "Price and availability of the product."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which to update price and availability."
        }
      },
      "description": "A batch entry encoding a single non-batch inventory request.",
      "id": "InventoryCustomBatchRequestEntry",
      "type": "object"
    },
    "RefundReason": {
      "id": "RefundReason",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the reason."
        },
        "reasonCode": {
          "type": "string",
          "description": "Code of the refund reason. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        }
      }
    },
    "OrdersSetLineItemMetadataResponse": {
      "id": "OrdersSetLineItemMetadataResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersSetLineItemMetadataResponse\"."
        }
      },
      "type": "object"
    },
    "LiaCountrySettings": {
      "id": "LiaCountrySettings",
      "type": "object",
      "properties": {
        "hostedLocalStorefrontActive": {
          "description": "The status of the \"Merchant hosted local storefront\" feature.",
          "type": "boolean"
        },
        "onDisplayToOrder": {
          "description": "LIA \"On Display To Order\" settings.",
          "$ref": "LiaOnDisplayToOrderSettings"
        },
        "about": {
          "$ref": "LiaAboutPageSettings",
          "description": "The settings for the About page."
        },
        "country": {
          "type": "string",
          "description": "Required. CLDR country code (e.g. \"US\")."
        },
        "storePickupActive": {
          "type": "boolean",
          "description": "The status of the \"Store pickup\" feature."
        },
        "posDataProvider": {
          "$ref": "LiaPosDataProvider",
          "description": "The POS data provider linked with this country."
        },
        "inventory": {
          "$ref": "LiaInventorySettings",
          "description": "LIA inventory verification settings."
        }
      }
    },
    "Product": {
      "type": "object",
      "description": " Required product attributes are primarily defined by the products data specification. See the Products Data Specification Help Center article for information. Some attributes are country-specific, so make sure you select the appropriate country in the drop-down selector at the top of the page. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.",
      "id": "Product",
      "properties": {
        "gtin": {
          "description": "Global Trade Item Number (GTIN) of the item.",
          "type": "string"
        },
        "customLabel1": {
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign.",
          "type": "string"
        },
        "promotionIds": {
          "type": "array",
          "description": "The unique ID of a promotion.",
          "items": {
            "type": "string"
          }
        },
        "salePrice": {
          "description": "Advertised sale price of the item.",
          "$ref": "Price"
        },
        "itemGroupId": {
          "description": "Shared identifier for all variants of the same product.",
          "type": "string"
        },
        "adwordsLabels": {
          "items": {
            "type": "string"
          },
          "description": "Similar to adwords_grouping, but only works on CPC.",
          "type": "array"
        },
        "expirationDate": {
          "description": "Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.",
          "type": "string"
        },
        "shippingWeight": {
          "description": "Weight of the item for shipping.",
          "$ref": "ProductShippingWeight"
        },
        "sizeType": {
          "type": "string",
          "description": "The cut of the item. Recommended for apparel items. Acceptable values are: - \"`big and tall`\" - \"`maternity`\" - \"`oversize`\" - \"`petite`\" - \"`plus`\" - \"`regular`\" "
        },
        "customAttributes": {
          "items": {
            "$ref": "CustomAttribute"
          },
          "description": "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., `{ \"name\": \"size type\", \"value\": \"regular\" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Shopping Actions.",
          "type": "array"
        },
        "salePriceEffectiveDate": {
          "description": "Date range during which the item is on sale (see products data specification ).",
          "type": "string"
        },
        "minHandlingTime": {
          "type": "string",
          "description": "Minimal product handling time (in business days).",
          "format": "int64"
        },
        "imageLink": {
          "description": "URL of an image of the item.",
          "type": "string"
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        },
        "additionalProductTypes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional categories of the item (formatted as in products data specification)."
        },
        "isBundle": {
          "type": "boolean",
          "description": "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price."
        },
        "additionalImageLinks": {
          "description": "Additional URLs of images of the item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gender": {
          "description": "Target gender of the item. Acceptable values are: - \"`female`\" - \"`male`\" - \"`unisex`\" ",
          "type": "string"
        },
        "shippingLength": {
          "description": "Length of the item for shipping.",
          "$ref": "ProductShippingDimension"
        },
        "adwordsGrouping": {
          "description": "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.",
          "type": "string"
        },
        "unitPricingBaseMeasure": {
          "$ref": "ProductUnitPricingBaseMeasure",
          "description": "The preference of the denominator of the unit price."
        },
        "customLabel2": {
          "type": "string",
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign."
        },
        "adult": {
          "description": "Set to true if the item is targeted towards adults.",
          "type": "boolean"
        },
        "unitPricingMeasure": {
          "$ref": "ProductUnitPricingMeasure",
          "description": "The measure and dimension of an item."
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "description": {
          "description": "Description of the item.",
          "type": "string"
        },
        "customLabel0": {
          "type": "string",
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign."
        },
        "title": {
          "description": "Title of the item.",
          "type": "string"
        },
        "offerId": {
          "description": "Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.",
          "type": "string"
        },
        "maxHandlingTime": {
          "type": "string",
          "description": "Maximal product handling time (in business days).",
          "format": "int64"
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "customLabel3": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign."
        },
        "sellOnGoogleQuantity": {
          "format": "int64",
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "type": "string"
        },
        "displayAdsTitle": {
          "description": "Title of an item for dynamic remarketing campaigns.",
          "type": "string"
        },
        "sizeSystem": {
          "description": "System in which the size is specified. Recommended for apparel items. Acceptable values are: - \"`AU`\" - \"`BR`\" - \"`CN`\" - \"`DE`\" - \"`EU`\" - \"`FR`\" - \"`IT`\" - \"`JP`\" - \"`MEX`\" - \"`UK`\" - \"`US`\" ",
          "type": "string"
        },
        "costOfGoodsSold": {
          "description": "Cost of goods sold. Used for gross profit reporting.",
          "$ref": "Price"
        },
        "displayAdsId": {
          "type": "string",
          "description": "An identifier for an item for dynamic remarketing campaigns."
        },
        "id": {
          "description": "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product is of the form channel:contentLanguage: targetCountry: offerId.",
          "type": "string"
        },
        "destinations": {
          "description": "Specifies the intended destinations for the product.",
          "type": "array",
          "items": {
            "$ref": "ProductDestination"
          }
        },
        "color": {
          "description": "Color of the item.",
          "type": "string"
        },
        "displayAdsLink": {
          "type": "string",
          "description": "URL directly to your item's landing page for dynamic remarketing campaigns."
        },
        "condition": {
          "type": "string",
          "description": "Condition or state of the item. Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "shipping": {
          "description": "Shipping rules.",
          "type": "array",
          "items": {
            "$ref": "ProductShipping"
          }
        },
        "adwordsRedirect": {
          "description": "Allows advertisers to override the item URL when the product is shown within the context of Product Ads.",
          "type": "string"
        },
        "identifierExists": {
          "type": "boolean",
          "description": "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada."
        },
        "price": {
          "description": "Price of the item.",
          "$ref": "Price"
        },
        "displayAdsValue": {
          "description": "Offer margin for dynamic remarketing campaigns.",
          "format": "double",
          "type": "number"
        },
        "productType": {
          "description": "Your category of the item (formatted as in products data specification).",
          "type": "string"
        },
        "availability": {
          "description": "Availability status of the item. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" ",
          "type": "string"
        },
        "brand": {
          "description": "Brand of the item.",
          "type": "string"
        },
        "customLabel4": {
          "type": "string",
          "description": "Custom label 4 for custom grouping of items in a Shopping campaign."
        },
        "displayAdsSimilarIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Advertiser-specified recommendations."
        },
        "maxEnergyEfficiencyClass": {
          "type": "string",
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" "
        },
        "minEnergyEfficiencyClass": {
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" ",
          "type": "string"
        },
        "channel": {
          "type": "string",
          "description": "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "shippingLabel": {
          "type": "string",
          "description": "The shipping label of the product, used to group product in account-level shipping rules."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#product`\"",
          "type": "string"
        },
        "warnings": {
          "items": {
            "$ref": "Error"
          },
          "description": "Read-only warnings.",
          "type": "array"
        },
        "link": {
          "description": "URL directly linking to your item's page on your website.",
          "type": "string"
        },
        "ageGroup": {
          "description": "Target age group of the item. Acceptable values are: - \"`adult`\" - \"`infant`\" - \"`kids`\" - \"`newborn`\" - \"`toddler`\" - \"`youngAdult`\" ",
          "type": "string"
        },
        "shippingWidth": {
          "description": "Width of the item for shipping.",
          "$ref": "ProductShippingDimension"
        },
        "availabilityDate": {
          "type": "string",
          "description": "The day a pre-ordered product becomes available for delivery, in ISO 8601 format."
        },
        "taxes": {
          "description": "Tax information.",
          "type": "array",
          "items": {
            "$ref": "ProductTax"
          }
        },
        "multipack": {
          "format": "int64",
          "description": "The number of identical products in a merchant-defined multipack.",
          "type": "string"
        },
        "googleProductCategory": {
          "type": "string",
          "description": "Google's category of the item (see Google product taxonomy)."
        },
        "canonicalLink": {
          "type": "string",
          "description": "URL for the canonical version of your item's landing page."
        },
        "source": {
          "description": "The source of the offer, i.e., how the offer was created. Acceptable values are: - \"`api`\" - \"`crawl`\" - \"`feed`\" ",
          "type": "string"
        },
        "validatedDestinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Deprecated. The read-only list of intended destinations which passed validation."
        },
        "installment": {
          "$ref": "Installment",
          "description": "Number and amount of installments to pay for an item."
        },
        "energyEfficiencyClass": {
          "type": "string",
          "description": "The energy efficiency class as defined in EU directive 2010/30/EU. Acceptable values are: - \"`A`\" - \"`A+`\" - \"`A++`\" - \"`A+++`\" - \"`B`\" - \"`C`\" - \"`D`\" - \"`E`\" - \"`F`\" - \"`G`\" "
        },
        "sizes": {
          "type": "array",
          "description": "Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).",
          "items": {
            "type": "string"
          }
        },
        "aspects": {
          "description": "Deprecated. Do not use.",
          "items": {
            "$ref": "ProductAspect"
          },
          "type": "array"
        },
        "customGroups": {
          "type": "array",
          "description": "A list of custom (merchant-provided) custom attribute groups.",
          "items": {
            "$ref": "CustomGroup"
          }
        },
        "pattern": {
          "description": "The item's pattern (e.g. polka dots).",
          "type": "string"
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item.",
          "type": "string"
        },
        "shippingHeight": {
          "description": "Height of the item for shipping.",
          "$ref": "ProductShippingDimension"
        },
        "onlineOnly": {
          "type": "boolean",
          "description": "Deprecated."
        },
        "material": {
          "type": "string",
          "description": "The material of which the item is made."
        },
        "mobileLink": {
          "type": "string",
          "description": "URL for the mobile-optimized version of your item's landing page."
        }
      }
    },
    "OrdersGetTestOrderTemplateResponse": {
      "id": "OrdersGetTestOrderTemplateResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetTestOrderTemplateResponse\".",
          "type": "string"
        },
        "template": {
          "$ref": "TestOrder",
          "description": "The requested test order template."
        }
      },
      "type": "object"
    },
    "ProductShippingWeight": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of value."
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The weight of the product used to calculate the shipping cost of the item."
        }
      },
      "id": "ProductShippingWeight"
    },
    "LiasettingsCustomBatchResponseEntry": {
      "type": "object",
      "id": "LiasettingsCustomBatchResponseEntry",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liasettingsCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry to which this entry responds.",
          "format": "uint32"
        },
        "posDataProviders": {
          "type": "array",
          "items": {
            "$ref": "PosDataProviders"
          },
          "description": "The list of POS data providers."
        },
        "gmbAccounts": {
          "$ref": "GmbAccounts",
          "description": "The the list of accessible GMB accounts."
        },
        "liaSettings": {
          "$ref": "LiaSettings",
          "description": "The retrieved or updated Lia settings."
        }
      }
    },
    "UnitInvoiceAdditionalCharge": {
      "properties": {
        "additionalChargePromotions": {
          "type": "array",
          "description": "Deprecated.",
          "items": {
            "$ref": "Promotion"
          }
        },
        "additionalChargeAmount": {
          "$ref": "Amount",
          "description": "[required] Amount of the additional charge."
        },
        "type": {
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "UnitInvoiceAdditionalCharge"
    },
    "UnitInvoice": {
      "type": "object",
      "id": "UnitInvoice",
      "properties": {
        "promotions": {
          "items": {
            "$ref": "Promotion"
          },
          "description": "Deprecated.",
          "type": "array"
        },
        "additionalCharges": {
          "items": {
            "$ref": "UnitInvoiceAdditionalCharge"
          },
          "type": "array",
          "description": "Additional charges for a unit, e.g. shipping costs."
        },
        "unitPriceTaxes": {
          "description": "Tax amounts to apply to the unit price.",
          "type": "array",
          "items": {
            "$ref": "UnitInvoiceTaxLine"
          }
        },
        "unitPricePretax": {
          "$ref": "Price",
          "description": "[required] Price of the unit, before applying taxes."
        }
      }
    },
    "ShippingsettingsCustomBatchRequestEntry": {
      "id": "ShippingsettingsCustomBatchRequestEntry",
      "type": "object",
      "properties": {
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the account for which to get/update account shipping settings."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" ",
          "type": "string"
        },
        "shippingSettings": {
          "$ref": "ShippingSettings",
          "description": "The account shipping settings to update. Only defined if the method is `update`."
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        }
      },
      "description": "A batch entry encoding a single non-batch shippingsettings request."
    },
    "InventorySetRequest": {
      "properties": {
        "pickup": {
          "$ref": "InventoryPickup",
          "description": "Store pickup information. Only supported for local inventory. Not setting `pickup` means \"don't update\" while setting it to the empty value (`{}` in JSON) means \"delete\". Otherwise, `pickupMethod` and `pickupSla` must be set together, unless `pickupMethod` is \"not supported\"."
        },
        "salePrice": {
          "$ref": "Price",
          "description": "The sale price of the product. Mandatory if `sale_price_effective_date` is defined."
        },
        "sellOnGoogleQuantity": {
          "format": "uint32",
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "type": "integer"
        },
        "availability": {
          "type": "string",
          "description": "The availability of the product. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" "
        },
        "customLabel2": {
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "customLabel1": {
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "installment": {
          "description": "Number and amount of installments to pay for an item. Brazil only.",
          "$ref": "Installment"
        },
        "instoreProductLocation": {
          "description": "The instore product location. Supported only for local products.",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "format": "uint32",
          "description": "The quantity of the product. Must be equal to or greater than zero. Supported only for local products."
        },
        "customLabel3": {
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "customLabel0": {
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "The price of the product."
        },
        "customLabel4": {
          "type": "string",
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "salePriceEffectiveDate": {
          "type": "string",
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided."
        },
        "loyaltyPoints": {
          "$ref": "LoyaltyPoints",
          "description": "Loyalty points that users receive after purchasing the item. Japan only."
        }
      },
      "type": "object",
      "id": "InventorySetRequest"
    },
    "ProductstatusesCustomBatchResponse": {
      "type": "object",
      "id": "ProductstatusesCustomBatchResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesCustomBatchResponse\"."
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "ProductstatusesCustomBatchResponseEntry"
          }
        }
      }
    },
    "ProductsCustomBatchResponse": {
      "id": "ProductsCustomBatchResponse",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "ProductsCustomBatchResponseEntry"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productsCustomBatchResponse\"."
        }
      }
    },
    "AccounttaxCustomBatchRequest": {
      "type": "object",
      "id": "AccounttaxCustomBatchRequest",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "AccounttaxCustomBatchRequestEntry"
          },
          "type": "array"
        }
      }
    },
    "ProductShippingDimension": {
      "id": "ProductShippingDimension",
      "type": "object",
      "properties": {
        "value": {
          "description": "The dimension of the product used to calculate the shipping cost of the item.",
          "format": "double",
          "type": "number"
        },
        "unit": {
          "type": "string",
          "description": "The unit of value."
        }
      }
    },
    "OrderReturn": {
      "type": "object",
      "properties": {
        "actor": {
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "quantity": {
          "type": "integer",
          "description": "Quantity that is returned.",
          "format": "uint32"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      },
      "id": "OrderReturn"
    },
    "AccountAddress": {
      "properties": {
        "region": {
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").",
          "type": "string"
        },
        "country": {
          "description": "CLDR country code (e.g. \"US\"). This value cannot be set for a sub-account of an MCA. All MCA sub-accounts inherit the country of their parent MCA.",
          "type": "string"
        },
        "streetAddress": {
          "type": "string",
          "description": "Street-level part of the address."
        },
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).",
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "description": "Postal code or ZIP (e.g. \"94043\")."
        }
      },
      "id": "AccountAddress",
      "type": "object"
    },
    "ShipmentTrackingInfo": {
      "id": "ShipmentTrackingInfo",
      "type": "object",
      "properties": {
        "trackingNumber": {
          "type": "string",
          "description": "The tracking number for the package."
        },
        "carrier": {
          "type": "string",
          "description": "The shipping carrier that handles the package. Acceptable values are: - \"`boxtal`\" - \"`bpost`\" - \"`chronopost`\" - \"`colisPrive`\" - \"`colissimo`\" - \"`cxt`\" - \"`deliv`\" - \"`dhl`\" - \"`dpd`\" - \"`dynamex`\" - \"`eCourier`\" - \"`easypost`\" - \"`efw`\" - \"`fedex`\" - \"`fedexSmartpost`\" - \"`geodis`\" - \"`gls`\" - \"`googleCourier`\" - \"`gsx`\" - \"`jdLogistics`\" - \"`laPoste`\" - \"`lasership`\" - \"`manual`\" - \"`mpx`\" - \"`onTrac`\" - \"`other`\" - \"`tnt`\" - \"`uds`\" - \"`ups`\" - \"`usps`\" "
        }
      }
    },
    "AccountsLinkResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsLinkResponse\"."
        }
      },
      "id": "AccountsLinkResponse"
    },
    "TestOrder": {
      "properties": {
        "enableOrderinvoices": {
          "description": "Whether the orderinvoices service should support this order.",
          "type": "boolean"
        },
        "predefinedDeliveryAddress": {
          "description": "Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" ",
          "type": "string"
        },
        "customer": {
          "description": "Required. The details of the customer who placed the order.",
          "$ref": "TestOrderCustomer"
        },
        "promotions": {
          "type": "array",
          "items": {
            "$ref": "OrderLegacyPromotion"
          },
          "description": "Deprecated. Ignored if provided."
        },
        "predefinedPickupDetails": {
          "type": "string",
          "description": "Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "shippingCostTax": {
          "$ref": "Price",
          "description": "Deprecated. Ignored if provided."
        },
        "shippingCost": {
          "description": "Required. The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states.",
          "$ref": "Price"
        },
        "paymentMethod": {
          "$ref": "TestOrderPaymentMethod",
          "description": "The details of the payment method."
        },
        "lineItems": {
          "items": {
            "$ref": "TestOrderLineItem"
          },
          "type": "array",
          "description": "Required. Line items that are ordered. At least one line item must be provided."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#testOrder`\"",
          "type": "string"
        },
        "shippingOption": {
          "description": "Required. The requested shipping option. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" ",
          "type": "string"
        },
        "notificationMode": {
          "description": "Restricted. Do not use.",
          "type": "string"
        }
      },
      "id": "TestOrder",
      "type": "object"
    },
    "InventoryCustomBatchRequest": {
      "type": "object",
      "id": "InventoryCustomBatchRequest",
      "properties": {
        "entries": {
          "items": {
            "$ref": "InventoryCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch.",
          "type": "array"
        }
      }
    },
    "OrdersAcknowledgeRequest": {
      "type": "object",
      "id": "OrdersAcknowledgeRequest",
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        }
      }
    },
    "AccountAdwordsLink": {
      "properties": {
        "adwordsId": {
          "type": "string",
          "description": "Customer ID of the AdWords account.",
          "format": "uint64"
        },
        "status": {
          "description": "Status of the link between this Merchant Center account and the AdWords account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google AdWords or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountAdwordsLink"
    },
    "OrderPaymentMethod": {
      "properties": {
        "expirationYear": {
          "type": "integer",
          "description": "The card expiration year (4-digit, e.g. 2015).",
          "format": "int32"
        },
        "expirationMonth": {
          "type": "integer",
          "description": "The card expiration month (January = 1, February = 2 etc.).",
          "format": "int32"
        },
        "phoneNumber": {
          "description": "The billing phone number.",
          "type": "string"
        },
        "lastFourDigits": {
          "type": "string",
          "description": "The last four digits of the card number."
        },
        "type": {
          "description": "The type of instrument. Acceptable values are: - \"`AMEX`\" - \"`DISCOVER`\" - \"`JCB`\" - \"`MASTERCARD`\" - \"`UNIONPAY`\" - \"`VISA`\" - \"``\" ",
          "type": "string"
        },
        "billingAddress": {
          "description": "The billing address.",
          "$ref": "OrderAddress"
        }
      },
      "id": "OrderPaymentMethod",
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryShipLineItems": {
      "type": "object",
      "properties": {
        "shipmentGroupId": {
          "description": "ID of the shipment group. Required for orders that use the orderinvoices service.",
          "type": "string"
        },
        "shipmentId": {
          "description": "Deprecated. Please use shipmentInfo instead. The ID of the shipment.",
          "type": "string"
        },
        "carrier": {
          "description": "Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "lineItems": {
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "type": "array",
          "description": "Line items to ship."
        },
        "trackingId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment."
        },
        "shipmentInfos": {
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          },
          "description": "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs)."
        }
      },
      "id": "OrdersCustomBatchRequestEntryShipLineItems"
    },
    "OrderPickupDetailsCollector": {
      "type": "object",
      "id": "OrderPickupDetailsCollector",
      "properties": {
        "phoneNumber": {
          "description": "Phone number of the person picking up the shipment.",
          "type": "string"
        },
        "name": {
          "description": "Name of the person picking up the shipment.",
          "type": "string"
        }
      }
    },
    "AccounttaxCustomBatchResponse": {
      "type": "object",
      "id": "AccounttaxCustomBatchResponse",
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "AccounttaxCustomBatchResponseEntry"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxCustomBatchResponse\".",
          "type": "string"
        }
      }
    },
    "DatafeedsCustomBatchRequestEntry": {
      "properties": {
        "datafeed": {
          "$ref": "Datafeed",
          "description": "The data feed to insert."
        },
        "datafeedId": {
          "description": "The ID of the data feed to get, delete or fetch.",
          "format": "uint64",
          "type": "string"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`fetchNow`\" - \"`get`\" - \"`insert`\" - \"`update`\" ",
          "type": "string"
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        }
      },
      "id": "DatafeedsCustomBatchRequestEntry",
      "type": "object",
      "description": "A batch entry encoding a single non-batch datafeeds request."
    },
    "OrderreturnsListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreturnsListResponse\"."
        },
        "resources": {
          "items": {
            "$ref": "MerchantOrderReturn"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of returns."
        }
      },
      "type": "object",
      "id": "OrderreturnsListResponse"
    },
    "AccountsLinkRequest": {
      "id": "AccountsLinkRequest",
      "properties": {
        "action": {
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" ",
          "type": "string"
        },
        "linkType": {
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" ",
          "type": "string"
        },
        "linkedAccountId": {
          "description": "The ID of the linked account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Service": {
      "type": "object",
      "properties": {
        "eligibility": {
          "type": "string",
          "description": "Eligibility for this service. Acceptable values are: - \"`All scenarios`\" - \"`All scenarios except Shopping Actions`\" - \"`Shopping Actions`\" "
        },
        "deliveryCountry": {
          "type": "string",
          "description": "The CLDR territory code of the country to which the service applies. Required."
        },
        "minimumOrderValueTable": {
          "description": "Table of per store minimum order values for the pickup fulfillment type. Cannot be set together with minimum_order_value.",
          "$ref": "MinimumOrderValueTable"
        },
        "pickupService": {
          "description": "The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved via the `getSupportedPickupServices` method. Required if and only if the service delivery type is `pickup`.",
          "$ref": "PickupCarrierService"
        },
        "currency": {
          "description": "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.",
          "type": "string"
        },
        "deliveryTime": {
          "description": "Time spent in various aspects from order to the delivery of the product. Required.",
          "$ref": "DeliveryTime"
        },
        "name": {
          "description": "Free-form name of the service. Must be unique within target account. Required.",
          "type": "string"
        },
        "active": {
          "description": "A boolean exposing the active status of the shipping service. Required.",
          "type": "boolean"
        },
        "minimumOrderValue": {
          "description": "Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency. Cannot be set together with minimum_order_value_table.",
          "$ref": "Price"
        },
        "shipmentType": {
          "description": "Type of locations this service ships orders to. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        },
        "rateGroups": {
          "description": "Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means \"everything else\". The other `applicableShippingLabels` must not overlap.",
          "items": {
            "$ref": "RateGroup"
          },
          "type": "array"
        }
      },
      "id": "Service"
    },
    "OrdersInStoreRefundLineItemResponse": {
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersInStoreRefundLineItemResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersInStoreRefundLineItemResponse"
    },
    "OrdersAcknowledgeResponse": {
      "type": "object",
      "id": "OrdersAcknowledgeResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAcknowledgeResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      }
    },
    "OrdersRejectReturnLineItemResponse": {
      "id": "OrdersRejectReturnLineItemResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRejectReturnLineItemResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        }
      }
    },
    "PosStore": {
      "type": "object",
      "properties": {
        "storeCode": {
          "type": "string",
          "description": "Required. A store identifier that is unique for the given merchant."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posStore`\"",
          "type": "string"
        },
        "storeAddress": {
          "type": "string",
          "description": "Required. The street address of the store."
        }
      },
      "description": "Store resource.",
      "id": "PosStore"
    },
    "ProductStatusDataQualityIssue": {
      "properties": {
        "valueOnLandingPage": {
          "type": "string"
        },
        "valueProvided": {
          "type": "string"
        },
        "destination": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "fetchStatus": {
          "type": "string"
        },
        "severity": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProductStatusDataQualityIssue"
    },
    "OrdersUpdateShipmentRequest": {
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "deliveryDate": {
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "New status for the shipment. Not updated if missing. Acceptable values are: - \"`delivered`\" - \"`undeliverable`\" - \"`readyForPickup`\" "
        },
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment. Not updated if missing."
        },
        "carrier": {
          "description": "The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "shipmentId": {
          "description": "The ID of the shipment.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersUpdateShipmentRequest"
    },
    "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails": {
      "id": "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails",
      "type": "object",
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        },
        "deliverByDate": {
          "description": "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.",
          "type": "string"
        },
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "shipByDate": {
          "type": "string",
          "description": "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past."
        }
      }
    },
    "UnitInvoiceTaxLine": {
      "type": "object",
      "id": "UnitInvoiceTaxLine",
      "properties": {
        "taxName": {
          "type": "string",
          "description": "Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`."
        },
        "taxType": {
          "description": "[required] Type of the tax. Acceptable values are: - \"`otherFee`\" - \"`otherFeeTax`\" - \"`sales`\" ",
          "type": "string"
        },
        "taxAmount": {
          "description": "[required] Tax amount for the tax type.",
          "$ref": "Price"
        }
      }
    },
    "ProductstatusesListResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of products statuses.",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "ProductStatus"
          }
        }
      },
      "type": "object",
      "id": "ProductstatusesListResponse"
    },
    "OrdersCustomBatchRequestEntrySetLineItemMetadata": {
      "properties": {
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          }
        },
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "lineItemId": {
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required.",
          "type": "string"
        }
      },
      "id": "OrdersCustomBatchRequestEntrySetLineItemMetadata",
      "type": "object"
    },
    "AccountstatusesCustomBatchRequest": {
      "type": "object",
      "id": "AccountstatusesCustomBatchRequest",
      "properties": {
        "entries": {
          "items": {
            "$ref": "AccountstatusesCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch.",
          "type": "array"
        }
      }
    },
    "DatafeedStatusError": {
      "type": "object",
      "properties": {
        "message": {
          "description": "The error message, e.g., \"Invalid price\".",
          "type": "string"
        },
        "code": {
          "description": "The code of the error, e.g., \"validation/invalid_value\".",
          "type": "string"
        },
        "examples": {
          "type": "array",
          "items": {
            "$ref": "DatafeedStatusExample"
          },
          "description": "A list of example occurrences of the error, grouped by product."
        },
        "count": {
          "type": "string",
          "format": "uint64",
          "description": "The number of occurrences of the error in the feed."
        }
      },
      "id": "DatafeedStatusError",
      "description": "An error occurring in the feed, like \"invalid price\"."
    },
    "OrderinvoicesCreateRefundInvoiceRequest": {
      "type": "object",
      "id": "OrderinvoicesCreateRefundInvoiceRequest",
      "properties": {
        "returnOption": {
          "description": "Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of `refundOnlyOption` or `returnOption` must be provided.",
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption"
        },
        "invoiceId": {
          "type": "string",
          "description": "[required] The ID of the invoice."
        },
        "refundOnlyOption": {
          "$ref": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption",
          "description": "Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or `returnOption` must be provided."
        },
        "shipmentInvoices": {
          "items": {
            "$ref": "ShipmentInvoice"
          },
          "description": "Invoice details for different shipment groups.",
          "type": "array"
        },
        "operationId": {
          "type": "string",
          "description": "[required] The ID of the operation, unique across all operations for a given order."
        }
      }
    },
    "InventoryCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch inventory response.",
      "id": "InventoryCustomBatchResponseEntry",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#inventoryCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        }
      }
    },
    "Table": {
      "type": "object",
      "id": "Table",
      "properties": {
        "rowHeaders": {
          "description": "Headers of the table's rows. Required.",
          "$ref": "Headers"
        },
        "rows": {
          "items": {
            "$ref": "Row"
          },
          "type": "array",
          "description": "The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required."
        },
        "name": {
          "description": "Name of the table. Required for subtables, ignored for the main table.",
          "type": "string"
        },
        "columnHeaders": {
          "description": "Headers of the table's columns. Optional: if not set then the table has only one dimension.",
          "$ref": "Headers"
        }
      }
    },
    "OrderMerchantProvidedAnnotation": {
      "type": "object",
      "id": "OrderMerchantProvidedAnnotation",
      "properties": {
        "key": {
          "type": "string",
          "description": "Key for additional merchant provided (as key-value pairs) annotation about the line item."
        },
        "value": {
          "description": "Value for additional merchant provided (as key-value pairs) annotation about the line item.",
          "type": "string"
        }
      }
    },
    "CustomAttribute": {
      "id": "CustomAttribute",
      "properties": {
        "value": {
          "description": "The value of the attribute.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the attribute. Underscores will be replaced by spaces upon insertion."
        },
        "type": {
          "type": "string",
          "description": "The type of the attribute. Acceptable values are: - \"`boolean`\" - \"`datetimerange`\" - \"`float`\" - \"`group`\" - \"`int`\" - \"`price`\" - \"`text`\" - \"`time`\" - \"`url`\" "
        },
        "unit": {
          "description": "Free-form unit of the attribute. Unit can only be used for values of type int, float, or price.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatafeedFetchSchedule": {
      "type": "object",
      "properties": {
        "dayOfMonth": {
          "type": "integer",
          "description": "The day of the month the feed file should be fetched (1-31).",
          "format": "uint32"
        },
        "timeZone": {
          "description": "Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\".",
          "type": "string"
        },
        "paused": {
          "type": "boolean",
          "description": "Whether the scheduled fetch is paused or not."
        },
        "minuteOfHour": {
          "type": "integer",
          "description": "The minute of the hour the feed file should be fetched (0-59). Read-only.",
          "format": "uint32"
        },
        "password": {
          "type": "string",
          "description": "An optional password for fetch_url."
        },
        "fetchUrl": {
          "description": "The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.",
          "type": "string"
        },
        "weekday": {
          "type": "string",
          "description": "The day of the week the feed file should be fetched. Acceptable values are: - \"`monday`\" - \"`tuesday`\" - \"`wednesday`\" - \"`thursday`\" - \"`friday`\" - \"`saturday`\" - \"`sunday`\" "
        },
        "username": {
          "type": "string",
          "description": "An optional user name for fetch_url."
        },
        "hour": {
          "format": "uint32",
          "description": "The hour of the day the feed file should be fetched (0-23).",
          "type": "integer"
        }
      },
      "id": "DatafeedFetchSchedule",
      "description": "The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required."
    },
    "HolidayCutoff": {
      "type": "object",
      "properties": {
        "deadlineHour": {
          "format": "uint32",
          "type": "integer",
          "description": "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required."
        },
        "visibleFromDate": {
          "type": "string",
          "description": "Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. \"2016-10-31\" for 31st October 2016. Required."
        },
        "deadlineTimezone": {
          "type": "string",
          "description": "Timezone identifier for the deadline hour. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required."
        },
        "deadlineDate": {
          "type": "string",
          "description": "Date of the order deadline, in ISO 8601 format. E.g. \"2016-11-29\" for 29th November 2016. Required."
        },
        "holidayId": {
          "description": "Unique identifier for the holiday. Required.",
          "type": "string"
        }
      },
      "id": "HolidayCutoff"
    },
    "OrdersRefundRequest": {
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "amount": {
          "$ref": "Price",
          "description": "Deprecated. Please use amountPretax and amountTax instead."
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. Either amount or amountPretax should be filled."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`deliveredLateByCarrier`\" - \"`feeAdjustment`\" - \"`lateShipmentCredit`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`shippingCostAdjustment`\" - \"`taxAdjustment`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" "
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided."
        }
      },
      "type": "object",
      "id": "OrdersRefundRequest"
    },
    "OrdersReturnRefundLineItemResponse": {
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersReturnRefundLineItemResponse\"."
        }
      },
      "id": "OrdersReturnRefundLineItemResponse",
      "type": "object"
    },
    "OrdersShipLineItemsResponse": {
      "type": "object",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersShipLineItemsResponse\".",
          "type": "string"
        }
      },
      "id": "OrdersShipLineItemsResponse"
    },
    "ShippingsettingsGetSupportedHolidaysResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedHolidaysResponse\".",
          "type": "string"
        },
        "holidays": {
          "items": {
            "$ref": "HolidaysHoliday"
          },
          "description": "A list of holidays applicable for delivery guarantees. May be empty.",
          "type": "array"
        }
      },
      "id": "ShippingsettingsGetSupportedHolidaysResponse",
      "type": "object"
    },
    "ProductstatusesCustomBatchRequestEntry": {
      "type": "object",
      "id": "ProductstatusesCustomBatchRequestEntry",
      "properties": {
        "includeAttributes": {
          "type": "boolean"
        },
        "productId": {
          "description": "The ID of the product whose status to get.",
          "type": "string"
        },
        "destinations": {
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the managing account."
        }
      },
      "description": "A batch entry encoding a single non-batch productstatuses request."
    },
    "PosCustomBatchResponseEntry": {
      "properties": {
        "errors": {
          "description": "A list of errors defined if, and only if, the request failed.",
          "$ref": "Errors"
        },
        "store": {
          "description": "The retrieved or updated store information.",
          "$ref": "PosStore"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry to which this entry responds."
        },
        "sale": {
          "description": "The updated sale information.",
          "$ref": "PosSale"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "inventory": {
          "$ref": "PosInventory",
          "description": "The updated inventory information."
        }
      },
      "type": "object",
      "id": "PosCustomBatchResponseEntry"
    },
    "PickupServicesPickupService": {
      "properties": {
        "country": {
          "type": "string",
          "description": "The CLDR country code of the carrier (e.g., \"US\"). Always present."
        },
        "serviceName": {
          "type": "string",
          "description": "The name of the pickup service (e.g., `\"Access point\"`). Always present."
        },
        "carrierName": {
          "description": "The name of the carrier (e.g., `\"UPS\"`). Always present.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "PickupServicesPickupService"
    },
    "GmbAccountsGmbAccount": {
      "properties": {
        "listingCount": {
          "format": "uint64",
          "description": "Number of listings under this account.",
          "type": "string"
        },
        "name": {
          "description": "The name of the GMB account.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "The email which identifies the GMB account."
        },
        "type": {
          "description": "The type of the GMB account (User or Business).",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GmbAccountsGmbAccount"
    },
    "OrderLineItemShippingDetails": {
      "properties": {
        "shipByDate": {
          "description": "Required. The ship by date, in ISO 8601 format.",
          "type": "string"
        },
        "deliverByDate": {
          "type": "string",
          "description": "Required. The delivery by date, in ISO 8601 format."
        },
        "type": {
          "description": "Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - \"`delivery`\" - \"`pickup`\" ",
          "type": "string"
        },
        "method": {
          "description": "Required. Details of the shipping method.",
          "$ref": "OrderLineItemShippingDetailsMethod"
        }
      },
      "type": "object",
      "id": "OrderLineItemShippingDetails"
    },
    "DatafeedsListResponse": {
      "id": "DatafeedsListResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsListResponse\"."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "Datafeed"
          }
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of datafeeds.",
          "type": "string"
        }
      }
    },
    "ProductAspect": {
      "properties": {
        "intention": {
          "description": "Deprecated.",
          "type": "string"
        },
        "destinationName": {
          "description": "Deprecated.",
          "type": "string"
        },
        "aspectName": {
          "description": "Deprecated.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProductAspect"
    },
    "PostalCodeRange": {
      "id": "PostalCodeRange",
      "type": "object",
      "properties": {
        "postalCodeRangeEnd": {
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`.",
          "type": "string"
        },
        "postalCodeRangeBegin": {
          "type": "string",
          "description": "A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `\"94108\"`, `\"9410*\"`, `\"9*\"`. Required."
        }
      }
    },
    "AccountsCustomBatchResponse": {
      "id": "AccountsCustomBatchResponse",
      "type": "object",
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "type": "array",
          "items": {
            "$ref": "AccountsCustomBatchResponseEntry"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsCustomBatchResponse\".",
          "type": "string"
        }
      }
    },
    "OrderLineItemProductVariantAttribute": {
      "id": "OrderLineItemProductVariantAttribute",
      "type": "object",
      "properties": {
        "dimension": {
          "type": "string",
          "description": "The dimension of the variant."
        },
        "value": {
          "description": "The value for the dimension.",
          "type": "string"
        }
      }
    },
    "OrderLegacyPromotion": {
      "properties": {
        "productApplicability": {
          "description": "Whether the promotion is applicable to all products or only specific products. Acceptable values are: - \"`allProducts`\" - \"`specificProducts`\" ",
          "type": "string"
        },
        "genericRedemptionCode": {
          "type": "string",
          "description": "Optional. The text code that corresponds to the promotion when applied on the retailer?s website."
        },
        "longTitle": {
          "description": "The full title of the promotion.",
          "type": "string"
        },
        "redemptionChannel": {
          "description": "Indicates that the promotion is valid online. Acceptable values are: - \"`online`\" ",
          "type": "string"
        },
        "benefits": {
          "type": "array",
          "items": {
            "$ref": "OrderLegacyPromotionBenefit"
          }
        },
        "id": {
          "description": "The unique ID of the promotion.",
          "type": "string"
        },
        "effectiveDates": {
          "type": "string",
          "description": "The date and time frame when the promotion is active and ready for validation review. Note that the promotion live time may be delayed for a few hours due to the validation review. Start date and end date are separated by a forward slash (/). The start date is specified by the format (YYYY-MM-DD), followed by the letter ?T?, the time of the day when the sale starts (in Greenwich Mean Time, GMT), followed by an expression of the time zone for the sale. The end date is in the same format."
        }
      },
      "type": "object",
      "id": "OrderLegacyPromotion"
    },
    "ShipmentInvoice": {
      "id": "ShipmentInvoice",
      "type": "object",
      "properties": {
        "shipmentGroupId": {
          "type": "string",
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
        },
        "lineItemInvoices": {
          "description": "[required] Invoice details per line item.",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          },
          "type": "array"
        },
        "invoiceSummary": {
          "description": "[required] Invoice summary.",
          "$ref": "InvoiceSummary"
        }
      }
    },
    "InventorySetResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#inventorySetResponse\"."
        }
      },
      "type": "object",
      "id": "InventorySetResponse"
    },
    "OrdersCancelRequest": {
      "properties": {
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      },
      "id": "OrdersCancelRequest",
      "type": "object"
    },
    "AccountStatusDataQualityIssue": {
      "id": "AccountStatusDataQualityIssue",
      "properties": {
        "location": {
          "type": "string"
        },
        "numItems": {
          "format": "uint32",
          "type": "integer"
        },
        "lastChecked": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "detail": {
          "type": "string"
        },
        "submittedValue": {
          "type": "string"
        },
        "exampleItems": {
          "items": {
            "$ref": "AccountStatusExampleItem"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        },
        "displayedValue": {
          "type": "string"
        },
        "severity": {
          "description": " Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" ",
          "type": "string"
        },
        "destination": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountBusinessInformation": {
      "properties": {
        "phoneNumber": {
          "description": "The phone number of the business.",
          "type": "string"
        },
        "customerService": {
          "$ref": "AccountCustomerService",
          "description": "The customer service information of the business."
        },
        "address": {
          "description": "The address of the business.",
          "$ref": "AccountAddress"
        }
      },
      "id": "AccountBusinessInformation",
      "type": "object"
    },
    "ProductstatusesCustomBatchRequest": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "ProductstatusesCustomBatchRequestEntry"
          }
        }
      },
      "type": "object",
      "id": "ProductstatusesCustomBatchRequest"
    },
    "CarrierRate": {
      "id": "CarrierRate",
      "type": "object",
      "properties": {
        "flatAdjustment": {
          "$ref": "Price",
          "description": "Additive shipping rate modifier. Can be negative. For example `{ \"value\": \"1\", \"currency\" : \"USD\" }` adds $1 to the rate, `{ \"value\": \"-3\", \"currency\" : \"USD\" }` removes $3 from the rate. Optional."
        },
        "percentageAdjustment": {
          "description": "Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `\"5.4\"` increases the rate by 5.4%, `\"-3\"` decreases the rate by 3%. Optional.",
          "type": "string"
        },
        "name": {
          "description": "Name of the carrier rate. Must be unique per rate group. Required.",
          "type": "string"
        },
        "originPostalCode": {
          "type": "string",
          "description": "Shipping origin for this carrier rate. Required."
        },
        "carrierName": {
          "type": "string",
          "description": "Carrier service, such as `\"UPS\"` or `\"Fedex\"`. The list of supported carriers can be retrieved via the `getSupportedCarriers` method. Required."
        },
        "carrierService": {
          "description": "Carrier service, such as `\"ground\"` or `\"2 days\"`. The list of supported services for a carrier can be retrieved via the `getSupportedCarriers` method. Required.",
          "type": "string"
        }
      }
    },
    "PosInventoryResponse": {
      "type": "object",
      "id": "PosInventoryResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posInventoryResponse\"."
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "Required. The available quantity of the item."
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The current price of the item."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        }
      }
    },
    "OrdersRefundResponse": {
      "id": "OrdersRefundResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRefundResponse\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatafeedstatusesCustomBatchRequestEntry": {
      "description": "A batch entry encoding a single non-batch datafeedstatuses request.",
      "properties": {
        "country": {
          "type": "string",
          "description": "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target datafeeds this parameter is required."
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" "
        },
        "language": {
          "type": "string",
          "description": "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target datafeeds this parameter is required."
        },
        "datafeedId": {
          "description": "The ID of the data feed to get.",
          "type": "string",
          "format": "uint64"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "type": "integer",
          "format": "uint32"
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DatafeedstatusesCustomBatchRequestEntry"
    },
    "OrdersCreateTestReturnRequest": {
      "type": "object",
      "properties": {
        "items": {
          "description": "Returned items.",
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
          }
        }
      },
      "id": "OrdersCreateTestReturnRequest"
    },
    "PosInventory": {
      "id": "PosInventory",
      "description": "The absolute quantity of an item available at the given store.",
      "properties": {
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posInventory`\""
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "quantity": {
          "format": "int64",
          "type": "string",
          "description": "Required. The available quantity of the item."
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "price": {
          "description": "Required. The current price of the item.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "OrderreportsListTransactionsResponse": {
      "type": "object",
      "id": "OrderreportsListTransactionsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of transactions.",
          "type": "string"
        },
        "transactions": {
          "items": {
            "$ref": "OrderReportTransaction"
          },
          "description": "The list of transactions.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListTransactionsResponse\"."
        }
      }
    },
    "LiasettingsListPosDataProvidersResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListPosDataProvidersResponse\"."
        },
        "posDataProviders": {
          "items": {
            "$ref": "PosDataProviders"
          },
          "description": "The list of POS data providers for each eligible country",
          "type": "array"
        }
      },
      "id": "LiasettingsListPosDataProvidersResponse"
    },
    "TestOrderLineItem": {
      "properties": {
        "product": {
          "description": "Required. Product data from the time of the order placement.",
          "$ref": "TestOrderLineItemProduct"
        },
        "unitTax": {
          "$ref": "Price",
          "description": "Deprecated. Ignored if provided."
        },
        "shippingDetails": {
          "$ref": "OrderLineItemShippingDetails",
          "description": "Required. Details of the requested shipping for the line item."
        },
        "returnInfo": {
          "$ref": "OrderLineItemReturnInfo",
          "description": "Required. Details of the return policy for the line item."
        },
        "quantityOrdered": {
          "type": "integer",
          "description": "Required. Number of items ordered.",
          "format": "uint32"
        }
      },
      "type": "object",
      "id": "TestOrderLineItem"
    },
    "LiasettingsCustomBatchResponse": {
      "id": "LiasettingsCustomBatchResponse",
      "type": "object",
      "properties": {
        "entries": {
          "items": {
            "$ref": "LiasettingsCustomBatchResponseEntry"
          },
          "type": "array",
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsCustomBatchResponse\"."
        }
      }
    },
    "InvoiceSummaryAdditionalChargeSummary": {
      "type": "object",
      "id": "InvoiceSummaryAdditionalChargeSummary",
      "properties": {
        "totalAmount": {
          "$ref": "Amount",
          "description": "[required] Total additional charge for this type."
        },
        "type": {
          "type": "string",
          "description": "[required] Type of the additional charge. Acceptable values are: - \"`shipping`\" "
        }
      }
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption": {
      "type": "object",
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption",
      "properties": {
        "reason": {
          "description": "[required] Reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional description of the return reason."
        }
      }
    },
    "DatafeedTarget": {
      "type": "object",
      "id": "DatafeedTarget",
      "properties": {
        "language": {
          "description": "The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`.",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "The country where the items in the feed will be included in the search index, represented as a CLDR territory code."
        },
        "includedDestinations": {
          "type": "array",
          "description": "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`. List of supported destinations (if available to the account): - DisplayAds - Shopping - ShoppingActions - SurfacesAcrossGoogle ",
          "items": {
            "type": "string"
          }
        },
        "excludedDestinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center)."
        }
      }
    },
    "CustomGroup": {
      "type": "object",
      "properties": {
        "attributes": {
          "description": "The sub-attributes.",
          "type": "array",
          "items": {
            "$ref": "CustomAttribute"
          }
        },
        "name": {
          "type": "string",
          "description": "The name of the group. Underscores will be replaced by spaces upon insertion."
        }
      },
      "id": "CustomGroup"
    },
    "OrderRefund": {
      "id": "OrderRefund",
      "properties": {
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "actor": {
          "description": "The actor that created the refund. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" ",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "amount": {
          "description": "The amount that is refunded.",
          "$ref": "Price"
        }
      },
      "type": "object"
    },
    "MinimumOrderValueTableStoreCodeSetWithMov": {
      "id": "MinimumOrderValueTableStoreCodeSetWithMov",
      "description": "A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.",
      "type": "object",
      "properties": {
        "value": {
          "description": "The minimum order value for the given stores.",
          "$ref": "Price"
        },
        "storeCodes": {
          "description": "A list of unique store codes or empty for the catch all.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "OrdersCreateTestOrderResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestOrderResponse\".",
          "type": "string"
        },
        "orderId": {
          "type": "string",
          "description": "The ID of the newly created test order."
        }
      },
      "type": "object",
      "id": "OrdersCreateTestOrderResponse"
    },
    "OrderCustomerMarketingRightsInfo": {
      "id": "OrderCustomerMarketingRightsInfo",
      "properties": {
        "marketingEmailAddress": {
          "type": "string",
          "description": "Email address that can be used for marketing purposes. The field may be empty even if `explicitMarketingPreference` is 'granted'. This happens when retrieving an old order from the customer who deleted their account."
        },
        "explicitMarketingPreference": {
          "type": "string",
          "description": "Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected `granted` in their most recent order, they can be subscribed to marketing emails. Customers who have chosen `denied` must not be subscribed, or must be unsubscribed if already opted-in. Acceptable values are: - \"`denied`\" - \"`granted`\" "
        },
        "lastUpdatedTimestamp": {
          "type": "string",
          "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet."
        }
      },
      "type": "object"
    },
    "Amount": {
      "type": "object",
      "properties": {
        "pretax": {
          "$ref": "Price",
          "description": "[required] Value before taxes."
        },
        "tax": {
          "$ref": "Price",
          "description": "[required] Tax value."
        }
      },
      "id": "Amount"
    },
    "LiasettingsSetInventoryVerificationContactResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetInventoryVerificationContactResponse\".",
          "type": "string"
        }
      },
      "id": "LiasettingsSetInventoryVerificationContactResponse"
    },
    "Installment": {
      "type": "object",
      "properties": {
        "months": {
          "description": "The number of installments the buyer has to pay.",
          "format": "int64",
          "type": "string"
        },
        "amount": {
          "$ref": "Price",
          "description": "The amount the buyer has to pay per month."
        }
      },
      "id": "Installment"
    },
    "ProductsCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch products response.",
      "properties": {
        "product": {
          "$ref": "Product",
          "description": "The inserted product. Only defined if the method is `insert` and if the request was successful."
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productsCustomBatchResponseEntry`\""
        }
      },
      "id": "ProductsCustomBatchResponseEntry",
      "type": "object"
    },
    "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption": {
      "properties": {
        "reason": {
          "description": "[required] Reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`customerSupportRequested`\" - \"`deliveredLateByCarrier`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`feeAdjustment`\" - \"`invalidCoupon`\" - \"`lateShipmentCredit`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceAdjustment`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`promoReallocation`\" - \"`qualityNotAsExpected`\" - \"`returnRefundAbuse`\" - \"`shippingCostAdjustment`\" - \"`shippingPriceError`\" - \"`taxAdjustment`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "description": {
          "description": "Optional description of the refund reason.",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption",
      "type": "object"
    },
    "ShippingsettingsListResponse": {
      "type": "object",
      "id": "ShippingsettingsListResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of shipping settings."
        },
        "resources": {
          "items": {
            "$ref": "ShippingSettings"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsListResponse\".",
          "type": "string"
        }
      }
    },
    "LocationIdSet": {
      "properties": {
        "locationIds": {
          "description": "A non-empty list of location IDs. They must all be of the same location type (e.g., state).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "LocationIdSet"
    },
    "OrderDeliveryDetails": {
      "id": "OrderDeliveryDetails",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "OrderAddress",
          "description": "The delivery address"
        },
        "phoneNumber": {
          "description": "The phone number of the person receiving the delivery.",
          "type": "string"
        }
      }
    },
    "TransitTable": {
      "properties": {
        "postalCodeGroupNames": {
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "rows": {
          "items": {
            "$ref": "TransitTableTransitTimeRow"
          },
          "type": "array"
        },
        "transitTimeLabels": {
          "type": "array",
          "description": "A list of transit time labels. The last value can be `\"all other labels\"`. Example: `[\"food\", \"electronics\", \"all other labels\"]`.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "TransitTable"
    },
    "AccountStatusItemLevelIssue": {
      "properties": {
        "documentation": {
          "type": "string",
          "description": "The URL of a web page to help with resolving this issue."
        },
        "attributeName": {
          "type": "string",
          "description": "The attribute's name, if the issue is caused by a single attribute."
        },
        "detail": {
          "type": "string",
          "description": "A detailed issue description in English."
        },
        "resolution": {
          "description": "Whether the issue can be resolved by the merchant.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "A short issue description in English."
        },
        "numItems": {
          "format": "int64",
          "description": "Number of items with this issue.",
          "type": "string"
        },
        "servability": {
          "description": "How this issue affects serving of the offer.",
          "type": "string"
        },
        "code": {
          "description": "The error code of the issue.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AccountStatusItemLevelIssue"
    },
    "OrdersInStoreRefundLineItemRequest": {
      "type": "object",
      "id": "OrdersInStoreRefundLineItemRequest",
      "properties": {
        "amountPretax": {
          "description": "The amount that is refunded. Required.",
          "$ref": "Price"
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "amountTax": {
          "description": "Tax amount that correspond to refund amount in amountPretax. Required.",
          "$ref": "Price"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity to return and refund.",
          "type": "integer"
        }
      }
    },
    "LiaSettings": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#liaSettings`\""
        },
        "accountId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses."
        },
        "countrySettings": {
          "type": "array",
          "description": "The LIA settings for each country.",
          "items": {
            "$ref": "LiaCountrySettings"
          }
        }
      },
      "type": "object",
      "description": "Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role.",
      "id": "LiaSettings"
    },
    "AccounttaxCustomBatchResponseEntry": {
      "properties": {
        "batchId": {
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer"
        },
        "accountTax": {
          "description": "The retrieved or updated account tax settings.",
          "$ref": "AccountTax"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accounttaxCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        }
      },
      "description": "A batch entry encoding a single non-batch accounttax response.",
      "type": "object",
      "id": "AccounttaxCustomBatchResponseEntry"
    },
    "Row": {
      "type": "object",
      "id": "Row",
      "properties": {
        "cells": {
          "description": "The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required.",
          "type": "array",
          "items": {
            "$ref": "Value"
          }
        }
      }
    },
    "OrdersAdvanceTestOrderResponse": {
      "type": "object",
      "id": "OrdersAdvanceTestOrderResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAdvanceTestOrderResponse\".",
          "type": "string"
        }
      }
    },
    "Error": {
      "properties": {
        "message": {
          "description": "A description of the error.",
          "type": "string"
        },
        "reason": {
          "description": "The error code.",
          "type": "string"
        },
        "domain": {
          "description": "The domain of the error.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "An error returned by the API.",
      "id": "Error"
    },
    "TestOrderCustomerMarketingRightsInfo": {
      "properties": {
        "lastUpdatedTimestamp": {
          "type": "string",
          "description": "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet."
        },
        "explicitMarketingPreference": {
          "type": "string",
          "description": "Last know user use selection regards marketing preferences. In certain cases selection might not be known, so this field would be empty. Acceptable values are: - \"`denied`\" - \"`granted`\" "
        }
      },
      "type": "object",
      "id": "TestOrderCustomerMarketingRightsInfo"
    },
    "AccountTaxTaxRule": {
      "type": "object",
      "properties": {
        "ratePercent": {
          "type": "string",
          "description": "Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative."
        },
        "shippingTaxed": {
          "description": "If true, shipping charges are also taxed.",
          "type": "boolean"
        },
        "useGlobalRate": {
          "type": "boolean",
          "description": "Whether the tax rate is taken from a global tax table or specified explicitly."
        },
        "country": {
          "type": "string",
          "description": "Country code in which tax is applicable."
        },
        "locationId": {
          "format": "uint64",
          "description": "Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).",
          "type": "string"
        }
      },
      "id": "AccountTaxTaxRule",
      "description": "Tax calculation rule to apply in a state or province (USA only)."
    },
    "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryCreateTestReturnReturnItem",
      "properties": {
        "lineItemId": {
          "description": "The ID of the line item to return.",
          "type": "string"
        },
        "quantity": {
          "description": "Quantity that is returned.",
          "format": "uint32",
          "type": "integer"
        }
      }
    },
    "AccountYouTubeChannelLink": {
      "type": "object",
      "id": "AccountYouTubeChannelLink",
      "properties": {
        "channelId": {
          "type": "string",
          "description": "Channel ID."
        },
        "status": {
          "description": "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in YT Creator Studio or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.",
          "type": "string"
        }
      }
    },
    "AccountGoogleMyBusinessLink": {
      "id": "AccountGoogleMyBusinessLink",
      "properties": {
        "gmbEmail": {
          "description": "The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account.",
          "type": "string"
        },
        "status": {
          "description": "Status of the link between this Merchant Center account and the GMB account. Acceptable values are: - \"`active`\" - \"`pending`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DatafeedsCustomBatchResponseEntry": {
      "id": "DatafeedsCustomBatchResponseEntry",
      "description": "A batch entry encoding a single non-batch datafeeds response.",
      "properties": {
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "batchId": {
          "type": "integer",
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32"
        },
        "datafeed": {
          "description": "The requested data feed. Defined if and only if the request was successful.",
          "$ref": "Datafeed"
        }
      },
      "type": "object"
    },
    "ProductStatusDestinationStatus": {
      "properties": {
        "approvalPending": {
          "type": "boolean",
          "description": "Whether the approval status might change due to further processing."
        },
        "approvalStatus": {
          "type": "string",
          "description": "The destination's approval status. Acceptable values are: - \"`approved`\" - \"`disapproved`\" "
        },
        "destination": {
          "description": "The name of the destination",
          "type": "string"
        },
        "intention": {
          "description": "Provided for backward compatibility only. Always set to \"required\". Acceptable values are: - \"`default`\" - \"`excluded`\" - \"`optional`\" - \"`required`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProductStatusDestinationStatus"
    },
    "OrdersCancelTestOrderByCustomerRequest": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`changedMind`\" - \"`orderedWrongItem`\" - \"`other`\" "
        }
      },
      "id": "OrdersCancelTestOrderByCustomerRequest",
      "type": "object"
    },
    "LiasettingsRequestInventoryVerificationResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestInventoryVerificationResponse\"."
        }
      },
      "type": "object",
      "id": "LiasettingsRequestInventoryVerificationResponse"
    },
    "OrdersShipLineItemsRequest": {
      "id": "OrdersShipLineItemsRequest",
      "type": "object",
      "properties": {
        "shipmentInfos": {
          "type": "array",
          "description": "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).",
          "items": {
            "$ref": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          }
        },
        "carrier": {
          "description": "Deprecated. Please use shipmentInfo instead. The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "trackingId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The tracking ID for the shipment."
        },
        "shipmentId": {
          "type": "string",
          "description": "Deprecated. Please use shipmentInfo instead. The ID of the shipment."
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "ID of the shipment group. Required for orders that use the orderinvoices service."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "lineItems": {
          "type": "array",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "description": "Line items to ship."
        }
      }
    },
    "ShippingSettings": {
      "description": "The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.",
      "id": "ShippingSettings",
      "type": "object",
      "properties": {
        "postalCodeGroups": {
          "items": {
            "$ref": "PostalCodeGroup"
          },
          "description": "A list of postal code groups that can be referred to in `services`. Optional.",
          "type": "array"
        },
        "services": {
          "items": {
            "$ref": "Service"
          },
          "description": "The target account's list of services. Optional.",
          "type": "array"
        },
        "accountId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses."
        }
      }
    },
    "OrdersCreateTestOrderRequest": {
      "properties": {
        "testOrder": {
          "description": "The test order to create.",
          "$ref": "TestOrder"
        },
        "templateName": {
          "description": "The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - \"`template1`\" - \"`template1a`\" - \"`template1b`\" - \"`template2`\" - \"`template3`\" ",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via `template_name`, or the addresses of orders created via `test_order`. Acceptable values are: - \"`US`\" - \"`FR`\" Defaults to `US`."
        }
      },
      "id": "OrdersCreateTestOrderRequest",
      "type": "object"
    },
    "OrdersRejectReturnLineItemRequest": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`damagedOrUsed`\" - \"`missingComponent`\" - \"`notEligible`\" - \"`other`\" - \"`outOfReturnWindow`\" "
        },
        "quantity": {
          "description": "The quantity to return and refund.",
          "format": "uint32",
          "type": "integer"
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        }
      },
      "id": "OrdersRejectReturnLineItemRequest"
    },
    "Inventory": {
      "properties": {
        "salePriceEffectiveDate": {
          "type": "string",
          "description": "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided."
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity of the product. Must be equal to or greater than zero. Supported only for local products."
        },
        "customLabel1": {
          "type": "string",
          "description": "Custom label 1 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#inventory`\"",
          "type": "string"
        },
        "customLabel4": {
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "loyaltyPoints": {
          "description": "Loyalty points that users receive after purchasing the item. Japan only.",
          "$ref": "LoyaltyPoints"
        },
        "customLabel3": {
          "description": "Custom label 3 for custom grouping of items in a Shopping campaign. Only supported for online products.",
          "type": "string"
        },
        "price": {
          "$ref": "Price",
          "description": "The price of the product."
        },
        "customLabel2": {
          "type": "string",
          "description": "Custom label 2 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "salePrice": {
          "description": "The sale price of the product. Mandatory if `sale_price_effective_date` is defined.",
          "$ref": "Price"
        },
        "availability": {
          "description": "The availability of the product. Acceptable values are: - \"`in stock`\" - \"`out of stock`\" - \"`preorder`\" ",
          "type": "string"
        },
        "instoreProductLocation": {
          "type": "string",
          "description": "The instore product location. Supported only for local products."
        },
        "pickup": {
          "$ref": "InventoryPickup",
          "description": "Store pickup information. Only supported for local inventory. Not setting `pickup` means \"don't update\" while setting it to the empty value (`{}` in JSON) means \"delete\". Otherwise, `pickupMethod` and `pickupSla` must be set together, unless `pickupMethod` is \"not supported\"."
        },
        "customLabel0": {
          "type": "string",
          "description": "Custom label 0 for custom grouping of items in a Shopping campaign. Only supported for online products."
        },
        "installment": {
          "$ref": "Installment",
          "description": "Number and amount of installments to pay for an item. Brazil only."
        },
        "sellOnGoogleQuantity": {
          "type": "integer",
          "description": "The quantity of the product that is available for selling on Google. Supported only for online products.",
          "format": "uint32"
        }
      },
      "id": "Inventory",
      "type": "object"
    },
    "OrderinvoicesCreateRefundInvoiceResponse": {
      "type": "object",
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateRefundInvoiceResponse\".",
          "type": "string"
        }
      },
      "id": "OrderinvoicesCreateRefundInvoiceResponse"
    },
    "OrderShipmentLineItemShipment": {
      "properties": {
        "quantity": {
          "description": "The quantity that is shipped.",
          "format": "uint32",
          "type": "integer"
        },
        "lineItemId": {
          "description": "The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required.",
          "type": "string"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required."
        }
      },
      "id": "OrderShipmentLineItemShipment",
      "type": "object"
    },
    "LiasettingsRequestGmbAccessResponse": {
      "type": "object",
      "id": "LiasettingsRequestGmbAccessResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestGmbAccessResponse\".",
          "type": "string"
        }
      }
    },
    "AccounttaxCustomBatchRequestEntry": {
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The ID of the account for which to get/update account tax settings.",
          "format": "uint64"
        },
        "accountTax": {
          "description": "The account tax settings to update. Only defined if the method is `update`.",
          "$ref": "AccountTax"
        },
        "batchId": {
          "description": "An entry ID, unique within the batch request.",
          "format": "uint32",
          "type": "integer"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`update`\" ",
          "type": "string"
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        }
      },
      "id": "AccounttaxCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch accounttax request.",
      "type": "object"
    },
    "DatafeedFormat": {
      "type": "object",
      "properties": {
        "columnDelimiter": {
          "description": "Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`pipe`\" - \"`tab`\" - \"`tilde`\" ",
          "type": "string"
        },
        "fileEncoding": {
          "type": "string",
          "description": "Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - \"`latin-1`\" - \"`utf-16be`\" - \"`utf-16le`\" - \"`utf-8`\" - \"`windows-1252`\" "
        },
        "quotingMode": {
          "type": "string",
          "description": "Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - \"`normal character`\" - \"`value quoting`\" "
        }
      },
      "id": "DatafeedFormat"
    },
    "ProductTax": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "description": "The country within which the item is taxed, specified as a CLDR territory code."
        },
        "locationId": {
          "type": "string",
          "description": "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.",
          "format": "int64"
        },
        "region": {
          "description": "The geographic region to which the tax rate applies.",
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*."
        },
        "taxShip": {
          "description": "Set to true if tax is charged on shipping.",
          "type": "boolean"
        },
        "rate": {
          "format": "double",
          "description": "The percentage of tax rate that applies to the item price.",
          "type": "number"
        }
      },
      "id": "ProductTax"
    },
    "TransitTableTransitTimeRow": {
      "type": "object",
      "id": "TransitTableTransitTimeRow",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "TransitTableTransitTimeRowTransitTimeValue"
          }
        }
      }
    },
    "AccountUser": {
      "properties": {
        "paymentsAnalyst": {
          "description": "Whether user can access payment statements.",
          "type": "boolean"
        },
        "orderManager": {
          "type": "boolean",
          "description": "Whether user is an order manager."
        },
        "admin": {
          "type": "boolean",
          "description": "Whether user is an admin."
        },
        "emailAddress": {
          "description": "User's email address.",
          "type": "string"
        },
        "paymentsManager": {
          "description": "Whether user can manage payment settings.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "AccountUser"
    },
    "Headers": {
      "description": "A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.",
      "type": "object",
      "id": "Headers",
      "properties": {
        "postalCodeGroupNames": {
          "items": {
            "type": "string"
          },
          "description": "A list of postal group names. The last value can be `\"all other locations\"`. Example: `[\"zone 1\", \"zone 2\", \"all other locations\"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array"
        },
        "locations": {
          "description": "A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.",
          "type": "array",
          "items": {
            "$ref": "LocationIdSet"
          }
        },
        "numberOfItems": {
          "description": "A list of inclusive number of items upper bounds. The last value can be `\"infinity\"`. For example `[\"10\", \"50\", \"infinity\"]` represents the headers \"\u003c= 10 items\", \"\u003c= 50 items\", and \"\u003e 50 items\". Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "weights": {
          "description": "A list of inclusive order weight upper bounds. The last weight's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}]` represents the headers \"\u003c= 10kg\", \"\u003c= 50kg\", and \"\u003e 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "$ref": "Weight"
          },
          "type": "array"
        },
        "prices": {
          "description": "A list of inclusive order price upper bounds. The last price's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}]` represents the headers \"\u003c= $10\", \"\u003c= $500\", and \"\u003e $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.",
          "items": {
            "$ref": "Price"
          },
          "type": "array"
        }
      }
    },
    "OrdersCustomBatchResponseEntry": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#ordersCustomBatchResponseEntry`\""
        },
        "executionStatus": {
          "description": "The status of the execution. Only defined if 1. the request was successful; and 2. the method is not `get`, `getByMerchantOrderId`, or one of the test methods. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "order": {
          "description": "The retrieved order. Only defined if the method is `get` and if the request was successful.",
          "$ref": "Order"
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "The ID of the request entry this entry responds to."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchResponseEntry"
    },
    "AccounttaxListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of account tax settings.",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "AccountTax"
          }
        }
      },
      "id": "AccounttaxListResponse"
    },
    "OrderinvoicesCreateChargeInvoiceRequest": {
      "type": "object",
      "properties": {
        "lineItemInvoices": {
          "description": "[required] Invoice details per line item.",
          "items": {
            "$ref": "ShipmentInvoiceLineItemInvoice"
          },
          "type": "array"
        },
        "shipmentGroupId": {
          "type": "string",
          "description": "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
        },
        "operationId": {
          "type": "string",
          "description": "[required] The ID of the operation, unique across all operations for a given order."
        },
        "invoiceSummary": {
          "description": "[required] Invoice summary.",
          "$ref": "InvoiceSummary"
        },
        "invoiceId": {
          "type": "string",
          "description": "[required] The ID of the invoice."
        }
      },
      "id": "OrderinvoicesCreateChargeInvoiceRequest"
    },
    "AccountsAuthInfoResponse": {
      "properties": {
        "accountIdentifiers": {
          "description": "The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined. ",
          "type": "array",
          "items": {
            "$ref": "AccountIdentifier"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsAuthInfoResponse\".",
          "type": "string"
        }
      },
      "id": "AccountsAuthInfoResponse",
      "type": "object"
    },
    "LoyaltyPoints": {
      "properties": {
        "ratio": {
          "format": "double",
          "type": "number",
          "description": "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0."
        },
        "pointsValue": {
          "format": "int64",
          "type": "string",
          "description": "The retailer's loyalty points in absolute value."
        },
        "name": {
          "type": "string",
          "description": "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters."
        }
      },
      "id": "LoyaltyPoints",
      "type": "object"
    },
    "OrderinvoicesCreateChargeInvoiceResponse": {
      "type": "object",
      "id": "OrderinvoicesCreateChargeInvoiceResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateChargeInvoiceResponse\".",
          "type": "string"
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      }
    },
    "ProductShipping": {
      "type": "object",
      "properties": {
        "country": {
          "description": "The CLDR territory code of the country to which an item will ship.",
          "type": "string"
        },
        "price": {
          "description": "Fixed shipping price, represented as a number.",
          "$ref": "Price"
        },
        "service": {
          "type": "string",
          "description": "A free-form description of the service class or delivery speed."
        },
        "postalCode": {
          "description": "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.",
          "type": "string"
        },
        "locationGroupName": {
          "type": "string",
          "description": "The location where the shipping is applicable, represented by a location group name."
        },
        "locationId": {
          "description": "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.",
          "type": "string",
          "format": "int64"
        },
        "region": {
          "type": "string",
          "description": "The geographic region to which a shipping rate applies."
        }
      },
      "id": "ProductShipping"
    },
    "OrdersCustomBatchRequestEntryRefund": {
      "id": "OrdersCustomBatchRequestEntryRefund",
      "properties": {
        "amountPretax": {
          "description": "The amount that is refunded. Either amount or amountPretax should be filled.",
          "$ref": "Price"
        },
        "amount": {
          "description": "Deprecated. Please use amountPretax and amountTax instead.",
          "$ref": "Price"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, amountPretax must be set. Calculated automatically if not provided."
        },
        "reason": {
          "description": "The reason for the refund. Acceptable values are: - \"`adjustment`\" - \"`courtesyAdjustment`\" - \"`customerCanceled`\" - \"`customerDiscretionaryReturn`\" - \"`deliveredLateByCarrier`\" - \"`feeAdjustment`\" - \"`lateShipmentCredit`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`shippingCostAdjustment`\" - \"`taxAdjustment`\" - \"`undeliverableShippingAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersReturnLineItemRequest": {
      "type": "object",
      "id": "OrdersReturnLineItemRequest",
      "properties": {
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity to return.",
          "type": "integer"
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" ",
          "type": "string"
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      }
    },
    "Price": {
      "id": "Price",
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "description": "The currency of the price."
        },
        "value": {
          "type": "string",
          "description": "The price represented as a number."
        }
      }
    },
    "OrderLineItemProductFee": {
      "id": "OrderLineItemProductFee",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount of the fee.",
          "$ref": "Price"
        },
        "name": {
          "type": "string",
          "description": "Name of the fee."
        }
      }
    },
    "LiasettingsCustomBatchRequest": {
      "type": "object",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "type": "array",
          "items": {
            "$ref": "LiasettingsCustomBatchRequestEntry"
          }
        }
      },
      "id": "LiasettingsCustomBatchRequest"
    },
    "MerchantOrderReturnItem": {
      "type": "object",
      "id": "MerchantOrderReturnItem",
      "properties": {
        "merchantReturnReason": {
          "$ref": "RefundReason",
          "description": "The reason that merchant chooses to accept a return item."
        },
        "customerReturnReason": {
          "description": "The reason that the customer chooses to return an item.",
          "$ref": "CustomerReturnReason"
        },
        "itemId": {
          "description": "Product level item ID. If the returned items are of the same product, they will have the same ID.",
          "type": "string"
        },
        "returnShipmentIds": {
          "items": {
            "type": "string"
          },
          "description": "IDs of the return shipments that this return item belongs to.",
          "type": "array"
        },
        "state": {
          "description": "State of the item. Acceptable values are: - \"`canceled`\" - \"`new`\" - \"`received`\" - \"`refunded`\" - \"`rejected`\" ",
          "type": "string"
        },
        "product": {
          "$ref": "OrderLineItemProduct",
          "description": "Product data from the time of the order placement."
        }
      }
    },
    "OrdersCustomBatchRequestEntryUpdateShipment": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryUpdateShipment",
      "properties": {
        "carrier": {
          "type": "string",
          "description": "The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values."
        },
        "status": {
          "type": "string",
          "description": "New status for the shipment. Not updated if missing. Acceptable values are: - \"`delivered`\" - \"`undeliverable`\" - \"`readyForPickup`\" "
        },
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment. Not updated if missing."
        },
        "deliveryDate": {
          "type": "string",
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`."
        },
        "shipmentId": {
          "description": "The ID of the shipment.",
          "type": "string"
        }
      }
    },
    "Datafeed": {
      "id": "Datafeed",
      "description": "Datafeed configuration data.",
      "properties": {
        "fetchSchedule": {
          "$ref": "DatafeedFetchSchedule",
          "description": "Fetch schedule for the feed file."
        },
        "targets": {
          "type": "array",
          "description": "The targets this feed should apply to (country, language, destinations).",
          "items": {
            "$ref": "DatafeedTarget"
          }
        },
        "id": {
          "type": "string",
          "format": "int64",
          "description": "Required for update. The ID of the data feed."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeed`\""
        },
        "fileName": {
          "description": "Required. The filename of the feed. All feeds must have a unique file name.",
          "type": "string"
        },
        "targetCountry": {
          "type": "string",
          "description": "[DEPRECATED] Please use targets[].country instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code."
        },
        "format": {
          "$ref": "DatafeedFormat",
          "description": "Format of the feed file."
        },
        "attributeLanguage": {
          "description": "The two-letter ISO 639-1 language in which the attributes are defined in the data feed.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "[DEPRECATED] Please use targets[].language instead. The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targetCountry`."
        },
        "name": {
          "type": "string",
          "description": "Required for insert. A descriptive name of the data feed."
        },
        "contentType": {
          "type": "string",
          "description": "Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - \"`local products`\" - \"`product inventory`\" - \"`products`\" "
        },
        "intendedDestinations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "[DEPRECATED] Please use targets[].includedDestinations instead. The list of intended destinations (corresponds to checked check boxes in Merchant Center)."
        }
      },
      "type": "object"
    },
    "AccountsCustomBatchResponseEntry": {
      "properties": {
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "format": "uint32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountsCustomBatchResponseEntry`\""
        },
        "errors": {
          "description": "A list of errors defined if and only if the request failed.",
          "$ref": "Errors"
        },
        "account": {
          "$ref": "Account",
          "description": "The retrieved, created, or updated account. Not defined if the method was `delete`, `claimwebsite` or `link`."
        },
        "linkStatus": {
          "type": "string",
          "description": "Deprecated. This field is never set. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        }
      },
      "description": "A batch entry encoding a single non-batch accounts response.",
      "type": "object",
      "id": "AccountsCustomBatchResponseEntry"
    },
    "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo",
      "properties": {
        "trackingId": {
          "description": "The tracking ID for the shipment.",
          "type": "string"
        },
        "carrier": {
          "description": "The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.",
          "type": "string"
        },
        "shipmentId": {
          "description": "Required. The ID of the shipment. This is assigned by the merchant and is unique to each shipment.",
          "type": "string"
        }
      }
    },
    "TestOrderPaymentMethod": {
      "properties": {
        "expirationYear": {
          "type": "integer",
          "description": "The card expiration year (4-digit, e.g. 2015).",
          "format": "int32"
        },
        "lastFourDigits": {
          "type": "string",
          "description": "The last four digits of the card number."
        },
        "type": {
          "description": "The type of instrument. Note that real orders might have different values than the four values accepted by `createTestOrder`. Acceptable values are: - \"`AMEX`\" - \"`DISCOVER`\" - \"`MASTERCARD`\" - \"`VISA`\" ",
          "type": "string"
        },
        "predefinedBillingAddress": {
          "type": "string",
          "description": "The billing address. Acceptable values are: - \"`dwight`\" - \"`jim`\" - \"`pam`\" "
        },
        "expirationMonth": {
          "type": "integer",
          "format": "int32",
          "description": "The card expiration month (January = 1, February = 2 etc.)."
        }
      },
      "id": "TestOrderPaymentMethod",
      "type": "object"
    },
    "OrdersCancelTestOrderByCustomerResponse": {
      "id": "OrdersCancelTestOrderByCustomerResponse",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelTestOrderByCustomerResponse\"."
        }
      }
    },
    "OrderreportsListDisbursementsResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListDisbursementsResponse\"."
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of disbursements.",
          "type": "string"
        },
        "disbursements": {
          "description": "The list of disbursements.",
          "items": {
            "$ref": "OrderReportDisbursement"
          },
          "type": "array"
        }
      },
      "id": "OrderreportsListDisbursementsResponse",
      "type": "object"
    },
    "MerchantOrderReturn": {
      "id": "MerchantOrderReturn",
      "description": "Order return. Production access (all methods) requires the order manager role. Sandbox access does not.",
      "properties": {
        "returnShipments": {
          "description": "Shipments of the return.",
          "type": "array",
          "items": {
            "$ref": "ReturnShipment"
          }
        },
        "returnItems": {
          "description": "Items of the return.",
          "items": {
            "$ref": "MerchantOrderReturnItem"
          },
          "type": "array"
        },
        "merchantOrderId": {
          "description": "Merchant defined order ID.",
          "type": "string"
        },
        "orderId": {
          "description": "Google order ID.",
          "type": "string"
        },
        "creationDate": {
          "description": "The date of creation of the return, in ISO 8601 format.",
          "type": "string"
        },
        "orderReturnId": {
          "description": "Order return ID generated by Google.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PosSaleRequest": {
      "id": "PosSaleRequest",
      "type": "object",
      "properties": {
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "saleId": {
          "type": "string",
          "description": "A unique ID to group items from the same sale event."
        },
        "targetCountry": {
          "description": "Required. The CLDR territory code for the item.",
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "quantity": {
          "format": "int64",
          "type": "string",
          "description": "Required. The relative change of the available quantity. Negative for items returned."
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        }
      }
    },
    "DatafeedsCustomBatchResponse": {
      "type": "object",
      "id": "DatafeedsCustomBatchResponse",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "DatafeedsCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsCustomBatchResponse\"."
        }
      }
    },
    "AccountstatusesCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch accountstatuses response.",
      "properties": {
        "accountStatus": {
          "$ref": "AccountStatus",
          "description": "The requested account status. Defined if and only if the request was successful."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "type": "object",
      "id": "AccountstatusesCustomBatchResponseEntry"
    },
    "PosListResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posListResponse\"."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "PosStore"
          }
        }
      },
      "id": "PosListResponse"
    },
    "DatafeedStatus": {
      "id": "DatafeedStatus",
      "properties": {
        "itemsValid": {
          "type": "string",
          "format": "uint64",
          "description": "The number of items in the feed that were valid."
        },
        "datafeedId": {
          "type": "string",
          "description": "The ID of the feed for which the status is reported.",
          "format": "uint64"
        },
        "processingStatus": {
          "type": "string",
          "description": "The processing status of the feed. Acceptable values are: - \"`\"`failure`\": The feed could not be processed or all items had errors.`\" - \"`in progress`\": The feed is being processed. - \"`none`\": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - \"`success`\": The feed was processed successfully, though some items might have had errors. "
        },
        "warnings": {
          "description": "The list of errors occurring in the feed.",
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "type": "array"
        },
        "country": {
          "type": "string",
          "description": "The country for which the status is reported, represented as a CLDR territory code."
        },
        "language": {
          "description": "The two-letter ISO 639-1 language for which the status is reported.",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "DatafeedStatusError"
          },
          "type": "array",
          "description": "The list of errors occurring in the feed."
        },
        "lastUploadDate": {
          "description": "The last date at which the feed was uploaded.",
          "type": "string"
        },
        "itemsTotal": {
          "type": "string",
          "description": "The number of items in the feed that were processed.",
          "format": "uint64"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#datafeedStatus`\"",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished."
    },
    "Promotion": {
      "properties": {
        "promotionAmount": {
          "description": "[required] Amount of the promotion. The values here are the promotion applied to the unit price pretax and to the total of the tax amounts.",
          "$ref": "Amount"
        },
        "promotionId": {
          "description": "[required] ID of the promotion.",
          "type": "string"
        }
      },
      "id": "Promotion",
      "type": "object"
    },
    "OrdersUpdateLineItemShippingDetailsRequest": {
      "properties": {
        "productId": {
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        },
        "deliverByDate": {
          "type": "string",
          "description": "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "shipByDate": {
          "description": "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can not be a date in the past.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersUpdateLineItemShippingDetailsRequest"
    },
    "OrdersCustomBatchRequestEntryReturnRefundLineItem": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryReturnRefundLineItem",
      "properties": {
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "amountPretax": {
          "description": "The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method).",
          "$ref": "Price"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity to return and refund."
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      }
    },
    "PosSale": {
      "id": "PosSale",
      "description": "The change of the available quantity of an item at the given store.",
      "type": "object",
      "properties": {
        "saleId": {
          "type": "string",
          "description": "A unique ID to group items from the same sale event."
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "storeCode": {
          "type": "string",
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business."
        },
        "timestamp": {
          "description": "Required. The inventory timestamp, in ISO 8601 format.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#posSale`\""
        },
        "quantity": {
          "type": "string",
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "format": "int64"
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        }
      }
    },
    "GmbAccounts": {
      "properties": {
        "accountId": {
          "format": "uint64",
          "description": "The ID of the Merchant Center account.",
          "type": "string"
        },
        "gmbAccounts": {
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          },
          "type": "array",
          "description": "A list of GMB accounts which are available to the merchant."
        }
      },
      "id": "GmbAccounts",
      "type": "object"
    },
    "AccountStatus": {
      "properties": {
        "dataQualityIssues": {
          "items": {
            "$ref": "AccountStatusDataQualityIssue"
          },
          "type": "array",
          "description": "DEPRECATED - never populated."
        },
        "accountId": {
          "type": "string",
          "description": "The ID of the account for which the status is reported."
        },
        "accountLevelIssues": {
          "items": {
            "$ref": "AccountStatusAccountLevelIssue"
          },
          "description": "A list of account level issues.",
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#accountStatus`\""
        },
        "products": {
          "items": {
            "$ref": "AccountStatusProducts"
          },
          "description": "List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.",
          "type": "array"
        },
        "websiteClaimed": {
          "type": "boolean",
          "description": "Whether the account's website is claimed or not."
        }
      },
      "type": "object",
      "id": "AccountStatus",
      "description": "The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time."
    },
    "OrdersReturnRefundLineItemRequest": {
      "properties": {
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "amountPretax": {
          "description": "The amount that is refunded. If omitted, refundless return is assumed (same as calling returnLineItem method).",
          "$ref": "Price"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to refund amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "operationId": {
          "description": "The ID of the operation. Unique across all operations for a given order.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity to return and refund.",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "OrdersReturnRefundLineItemRequest"
    },
    "DatafeedsFetchNowResponse": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsFetchNowResponse\"."
        }
      },
      "id": "DatafeedsFetchNowResponse"
    },
    "Account": {
      "type": "object",
      "id": "Account",
      "properties": {
        "users": {
          "description": "Users with access to the account. Every account (except for subaccounts) must have at least one admin user.",
          "items": {
            "$ref": "AccountUser"
          },
          "type": "array"
        },
        "reviewsUrl": {
          "type": "string",
          "description": "[DEPRECATED] This field is never returned and will be ignored if provided."
        },
        "youtubeChannelLinks": {
          "description": "List of linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.",
          "items": {
            "$ref": "AccountYouTubeChannelLink"
          },
          "type": "array"
        },
        "id": {
          "description": "Required for update. Merchant Center account ID.",
          "type": "string",
          "format": "uint64"
        },
        "googleMyBusinessLink": {
          "description": "The GMB account which is linked or in the process of being linked with the Merchant Center account.",
          "$ref": "AccountGoogleMyBusinessLink"
        },
        "adwordsLinks": {
          "description": "List of linked AdWords accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the AdWords interface or through the AdWords API. To delete an active link, or to cancel a link request, remove it from the list.",
          "items": {
            "$ref": "AccountAdwordsLink"
          },
          "type": "array"
        },
        "websiteUrl": {
          "description": "The merchant's website.",
          "type": "string"
        },
        "adultContent": {
          "description": "Indicates whether the merchant sells adult content.",
          "type": "boolean"
        },
        "sellerId": {
          "description": "Client-specific, locally-unique, internal ID for the child account.",
          "type": "string"
        },
        "businessInformation": {
          "$ref": "AccountBusinessInformation",
          "description": "The business information of the account."
        },
        "name": {
          "type": "string",
          "description": "Required. Display name for the account."
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#account`\"",
          "type": "string"
        }
      },
      "description": "Account data. After the creation of a new account it may take a few minutes before it is fully operational. The methods delete, insert, and update require the admin role."
    },
    "LiaPosDataProvider": {
      "type": "object",
      "properties": {
        "posExternalAccountId": {
          "type": "string",
          "description": "The account ID by which this merchant is known to the POS data provider."
        },
        "posDataProviderId": {
          "format": "uint64",
          "description": "The ID of the POS data provider.",
          "type": "string"
        }
      },
      "id": "LiaPosDataProvider"
    },
    "MinimumOrderValueTable": {
      "properties": {
        "storeCodeSetWithMovs": {
          "type": "array",
          "items": {
            "$ref": "MinimumOrderValueTableStoreCodeSetWithMov"
          }
        }
      },
      "type": "object",
      "id": "MinimumOrderValueTable"
    },
    "PickupCarrierService": {
      "properties": {
        "serviceName": {
          "description": "The name of the pickup service (e.g., `\"Access point\"`). Required.",
          "type": "string"
        },
        "carrierName": {
          "type": "string",
          "description": "The name of the pickup carrier (e.g., `\"UPS\"`). Required."
        }
      },
      "id": "PickupCarrierService",
      "type": "object"
    },
    "ShippingsettingsCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "ShippingsettingsCustomBatchRequestEntry"
          },
          "type": "array"
        }
      },
      "id": "ShippingsettingsCustomBatchRequest",
      "type": "object"
    },
    "OrdersCancelLineItemResponse": {
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelLineItemResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrdersCancelLineItemResponse"
    },
    "CutoffTime": {
      "type": "object",
      "properties": {
        "timezone": {
          "description": "Timezone identifier for the cutoff time. A list of identifiers can be found in the AdWords API documentation. E.g. \"Europe/Zurich\". Required.",
          "type": "string"
        },
        "minute": {
          "type": "integer",
          "description": "Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
          "format": "uint32"
        },
        "hour": {
          "description": "Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.",
          "type": "integer",
          "format": "uint32"
        }
      },
      "id": "CutoffTime"
    },
    "ReturnShipment": {
      "properties": {
        "returnMethodType": {
          "description": "Type of the return method. Acceptable values are: - \"`byMail`\" - \"`contactCustomerSupport`\" - \"`returnless`\" ",
          "type": "string"
        },
        "shipmentId": {
          "description": "Shipment ID generated by Google.",
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "description": "The date of creation of the shipment, in ISO 8601 format."
        },
        "shippingDate": {
          "type": "string",
          "description": "The date of shipping of the shipment, in ISO 8601 format."
        },
        "state": {
          "description": "State of the shipment. Acceptable values are: - \"`completed`\" - \"`new`\" - \"`shipped`\" - \"`undeliverable`\" - \"`pending`\" ",
          "type": "string"
        },
        "deliveryDate": {
          "type": "string",
          "description": "The date of delivery of the shipment, in ISO 8601 format."
        },
        "shipmentTrackingInfos": {
          "description": "Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially.",
          "type": "array",
          "items": {
            "$ref": "ShipmentTrackingInfo"
          }
        }
      },
      "type": "object",
      "id": "ReturnShipment"
    },
    "OrdersCustomBatchRequestEntryInStoreRefundLineItem": {
      "id": "OrdersCustomBatchRequestEntryInStoreRefundLineItem",
      "type": "object",
      "properties": {
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "amountTax": {
          "description": "Tax amount that correspond to refund amount in amountPretax. Required.",
          "$ref": "Price"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity to return and refund."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "amountPretax": {
          "$ref": "Price",
          "description": "The amount that is refunded. Required."
        },
        "lineItemId": {
          "description": "The ID of the line item to return. Either lineItemId or productId is required.",
          "type": "string"
        }
      }
    },
    "OrderLineItemReturnInfo": {
      "id": "OrderLineItemReturnInfo",
      "type": "object",
      "properties": {
        "isReturnable": {
          "description": "Required. Whether the item is returnable.",
          "type": "boolean"
        },
        "daysToReturn": {
          "description": "Required. How many days later the item can be returned.",
          "type": "integer",
          "format": "int32"
        },
        "policyUrl": {
          "description": "Required. URL of the item return policy.",
          "type": "string"
        }
      }
    },
    "ShipmentInvoiceLineItemInvoice": {
      "id": "ShipmentInvoiceLineItemInvoice",
      "properties": {
        "productId": {
          "description": "ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.",
          "type": "string"
        },
        "lineItemId": {
          "description": "ID of the line item. Either lineItemId or productId must be set.",
          "type": "string"
        },
        "shipmentUnitIds": {
          "type": "array",
          "description": "[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).",
          "items": {
            "type": "string"
          }
        },
        "unitInvoice": {
          "description": "[required] Invoice details for a single unit.",
          "$ref": "UnitInvoice"
        }
      },
      "type": "object"
    },
    "AccountstatusesCustomBatchRequestEntry": {
      "type": "object",
      "id": "AccountstatusesCustomBatchRequestEntry",
      "properties": {
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "accountId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the (sub-)account whose status to get."
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" ",
          "type": "string"
        },
        "destinations": {
          "items": {
            "type": "string"
          },
          "description": "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.",
          "type": "array"
        }
      },
      "description": "A batch entry encoding a single non-batch accountstatuses request."
    },
    "TestOrderCustomer": {
      "type": "object",
      "properties": {
        "explicitMarketingPreference": {
          "description": "Deprecated. Please use marketingRightsInfo instead.",
          "type": "boolean"
        },
        "fullName": {
          "description": "Full name of the customer.",
          "type": "string"
        },
        "email": {
          "type": "string",
          "description": "Required. Email address of the customer. Acceptable values are: - \"`pog.dwight.schrute@gmail.com`\" - \"`pog.jim.halpert@gmail.com`\" - \"`penpog.pam.beesly@gmail.comding`\" "
        },
        "marketingRightsInfo": {
          "description": "Customer's marketing preferences.",
          "$ref": "TestOrderCustomerMarketingRightsInfo"
        }
      },
      "id": "TestOrderCustomer"
    },
    "PosDataProviders": {
      "properties": {
        "posDataProviders": {
          "items": {
            "$ref": "PosDataProvidersPosDataProvider"
          },
          "type": "array",
          "description": "A list of POS data providers."
        },
        "country": {
          "type": "string",
          "description": "Country code."
        }
      },
      "type": "object",
      "id": "PosDataProviders"
    },
    "LiasettingsListResponse": {
      "id": "LiasettingsListResponse",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "LiaSettings"
          }
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListResponse\"."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of LIA settings."
        }
      },
      "type": "object"
    },
    "DatafeedsCustomBatchRequest": {
      "id": "DatafeedsCustomBatchRequest",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "DatafeedsCustomBatchRequestEntry"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LiasettingsSetPosDataProviderResponse": {
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetPosDataProviderResponse\".",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LiasettingsSetPosDataProviderResponse"
    },
    "OrderAddress": {
      "properties": {
        "country": {
          "type": "string",
          "description": "CLDR country code (e.g. \"US\")."
        },
        "streetAddress": {
          "type": "array",
          "description": "Street-level part of the address.",
          "items": {
            "type": "string"
          }
        },
        "fullAddress": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States "
        },
        "region": {
          "type": "string",
          "description": "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\")."
        },
        "locality": {
          "description": "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).",
          "type": "string"
        },
        "postalCode": {
          "type": "string",
          "description": "Postal Code or ZIP (e.g. \"94043\")."
        },
        "recipientName": {
          "description": "Name of the recipient.",
          "type": "string"
        },
        "isPostOfficeBox": {
          "type": "boolean",
          "description": "Whether the address is a post office box."
        }
      },
      "type": "object",
      "id": "OrderAddress"
    },
    "ShippingsettingsCustomBatchResponseEntry": {
      "description": "A batch entry encoding a single non-batch shipping settings response.",
      "type": "object",
      "properties": {
        "shippingSettings": {
          "description": "The retrieved or updated account shipping settings.",
          "$ref": "ShippingSettings"
        },
        "batchId": {
          "format": "uint32",
          "description": "The ID of the request entry to which this entry responds.",
          "type": "integer"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#shippingsettingsCustomBatchResponseEntry`\"",
          "type": "string"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if, and only if, the request failed."
        }
      },
      "id": "ShippingsettingsCustomBatchResponseEntry"
    },
    "OrderReportTransaction": {
      "id": "OrderReportTransaction",
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "description": "The ID of the order."
        },
        "productAmount": {
          "$ref": "Amount",
          "description": "Total amount for the items."
        },
        "transactionDate": {
          "type": "string",
          "description": "The date of the transaction, in ISO 8601 format."
        },
        "disbursementAmount": {
          "description": "The disbursement amount.",
          "$ref": "Price"
        },
        "disbursementCreationDate": {
          "description": "The date the disbursement was created, in ISO 8601 format.",
          "type": "string"
        },
        "disbursementId": {
          "description": "The ID of the disbursement.",
          "type": "string"
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "format": "uint64",
          "type": "string"
        },
        "disbursementDate": {
          "description": "The date the disbursement was initiated, in ISO 8601 format.",
          "type": "string"
        },
        "productAmountWithRemittedTax": {
          "$ref": "ProductAmount",
          "description": "Total amount with remitted tax for the items."
        },
        "merchantOrderId": {
          "description": "Merchant-provided ID of the order.",
          "type": "string"
        }
      }
    },
    "BusinessDayConfig": {
      "type": "object",
      "id": "BusinessDayConfig",
      "properties": {
        "businessDays": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Regular business days. May not be empty."
        }
      }
    },
    "OrdersCustomBatchResponse": {
      "id": "OrdersCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "OrdersCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests."
        }
      },
      "type": "object"
    },
    "DatafeedstatusesCustomBatchResponseEntry": {
      "type": "object",
      "properties": {
        "datafeedStatus": {
          "$ref": "DatafeedStatus",
          "description": "The requested data feed status. Defined if and only if the request was successful."
        },
        "batchId": {
          "type": "integer",
          "format": "uint32",
          "description": "The ID of the request entry this entry responds to."
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors defined if and only if the request failed."
        }
      },
      "description": "A batch entry encoding a single non-batch datafeedstatuses response.",
      "id": "DatafeedstatusesCustomBatchResponseEntry"
    },
    "DatafeedStatusExample": {
      "id": "DatafeedStatusExample",
      "type": "object",
      "description": "An example occurrence for a particular error.",
      "properties": {
        "value": {
          "description": "The problematic value.",
          "type": "string"
        },
        "itemId": {
          "type": "string",
          "description": "The ID of the example item."
        },
        "lineNumber": {
          "type": "string",
          "description": "Line number in the data feed where the example is found.",
          "format": "uint64"
        }
      }
    },
    "CarriersCarrier": {
      "type": "object",
      "id": "CarriersCarrier",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the carrier (e.g., `\"UPS\"`). Always present."
        },
        "services": {
          "description": "A list of supported services (e.g., `\"ground\"`) for that carrier. Contains at least one service.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "country": {
          "description": "The CLDR country code of the carrier (e.g., \"US\"). Always present.",
          "type": "string"
        }
      }
    },
    "PosDataProvidersPosDataProvider": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of Pos data Provider."
        },
        "providerId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the account."
        },
        "fullName": {
          "description": "The full name of this POS data Provider.",
          "type": "string"
        }
      },
      "id": "PosDataProvidersPosDataProvider",
      "type": "object"
    },
    "OrdersUpdateMerchantOrderIdRequest": {
      "type": "object",
      "properties": {
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "merchantOrderId": {
          "description": "The merchant order id to be assigned to the order. Must be unique per merchant.",
          "type": "string"
        }
      },
      "id": "OrdersUpdateMerchantOrderIdRequest"
    },
    "OrdersSetLineItemMetadataRequest": {
      "type": "object",
      "id": "OrdersSetLineItemMetadataRequest",
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to set metadata. Either lineItemId or productId is required."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "annotations": {
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          },
          "type": "array"
        }
      }
    },
    "DatafeedstatusesListResponse": {
      "properties": {
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of datafeed statuses.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesListResponse\".",
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "DatafeedStatus"
          }
        }
      },
      "id": "DatafeedstatusesListResponse",
      "type": "object"
    },
    "AccountsCustomBatchRequestEntryLinkRequest": {
      "type": "object",
      "properties": {
        "linkType": {
          "description": "Type of the link between the two accounts. Acceptable values are: - \"`channelPartner`\" - \"`eCommercePlatform`\" ",
          "type": "string"
        },
        "action": {
          "type": "string",
          "description": "Action to perform for this link. The `\"request\"` action is only available to select merchants. Acceptable values are: - \"`approve`\" - \"`remove`\" - \"`request`\" "
        },
        "linkedAccountId": {
          "description": "The ID of the linked account.",
          "type": "string"
        }
      },
      "id": "AccountsCustomBatchRequestEntryLinkRequest"
    },
    "OrdersUpdateShipmentResponse": {
      "type": "object",
      "id": "OrdersUpdateShipmentResponse",
      "properties": {
        "executionStatus": {
          "type": "string",
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" "
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateShipmentResponse\"."
        }
      }
    },
    "TestOrderLineItemProduct": {
      "id": "TestOrderLineItemProduct",
      "type": "object",
      "properties": {
        "fees": {
          "items": {
            "$ref": "OrderLineItemProductFee"
          },
          "description": "Fees for the item. Optional.",
          "type": "array"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number (GTIN) of the item. Optional."
        },
        "channel": {
          "type": "string",
          "description": "Deprecated. Acceptable values are: - \"`online`\" "
        },
        "condition": {
          "type": "string",
          "description": "Required. Condition or state of the item. Acceptable values are: - \"`new`\" "
        },
        "itemGroupId": {
          "description": "Shared identifier for all variants of the same product. Optional.",
          "type": "string"
        },
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - \"`en`\" - \"`fr`\" "
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the product."
        },
        "imageLink": {
          "description": "Required. URL of an image of the item.",
          "type": "string"
        },
        "offerId": {
          "type": "string",
          "description": "Required. An identifier of the item."
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item. Optional.",
          "type": "string"
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory // code of the target country of the product."
        },
        "price": {
          "$ref": "Price",
          "description": "Required. The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied."
        },
        "variantAttributes": {
          "type": "array",
          "description": "Variant attributes for the item. Optional.",
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          }
        },
        "brand": {
          "type": "string",
          "description": "Required. Brand of the item."
        }
      }
    },
    "HolidaysHoliday": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string",
          "description": "The CLDR territory code of the country in which the holiday is available. E.g. \"US\", \"DE\", \"GB\". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present."
        },
        "deliveryGuaranteeDate": {
          "description": "Date on which the order has to arrive at the customer's, in ISO 8601 format. E.g. \"2016-12-24\" for 24th December 2016. Always present.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "The holiday type. Always present. Acceptable values are: - \"`Christmas`\" - \"`Easter`\" - \"`Father's Day`\" - \"`Halloween`\" - \"`Independence Day (USA)`\" - \"`Mother's Day`\" - \"`Thanksgiving`\" - \"`Valentine's Day`\" "
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present."
        },
        "date": {
          "description": "Date of the holiday, in ISO 8601 format. E.g. \"2016-12-25\" for Christmas 2016. Always present.",
          "type": "string"
        },
        "deliveryGuaranteeHour": {
          "format": "uint64",
          "description": "Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.",
          "type": "string"
        }
      },
      "id": "HolidaysHoliday"
    },
    "OrdersCancelLineItemRequest": {
      "properties": {
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to cancel. Either lineItemId or productId is required."
        },
        "amountTax": {
          "$ref": "Price",
          "description": "Tax amount that corresponds to cancellation amount in amountPretax. Optional, but if filled, then amountPretax must be set. Calculated automatically if not provided."
        },
        "amount": {
          "$ref": "Price",
          "description": "Deprecated. Please use amountPretax and amountTax instead."
        },
        "quantity": {
          "description": "The quantity to cancel.",
          "format": "uint32",
          "type": "integer"
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order."
        },
        "amountPretax": {
          "description": "Amount to refund for the cancelation. Optional. If not set, Google will calculate the default based on the price and tax of the items involved. The amount must not be larger than the net amount left on the order.",
          "$ref": "Price"
        },
        "reason": {
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      },
      "id": "OrdersCancelLineItemRequest",
      "type": "object"
    },
    "LiaInventorySettings": {
      "id": "LiaInventorySettings",
      "type": "object",
      "properties": {
        "inventoryVerificationContactEmail": {
          "description": "The email of the contact for the inventory verification process.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "The status of the inventory verification process. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        },
        "inventoryVerificationContactName": {
          "description": "The name of the contact for the inventory verification process.",
          "type": "string"
        },
        "inventoryVerificationContactStatus": {
          "type": "string",
          "description": "The status of the verification contact. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        }
      }
    },
    "OrderPickupDetails": {
      "id": "OrderPickupDetails",
      "properties": {
        "collectors": {
          "items": {
            "$ref": "OrderPickupDetailsCollector"
          },
          "description": "Collectors authorized to pick up shipment from the pickup location.",
          "type": "array"
        },
        "address": {
          "$ref": "OrderAddress",
          "description": "Address of the pickup location where the shipment should be sent. Note that `recipientName` in the address is the name of the business at the pickup location."
        },
        "locationId": {
          "type": "string",
          "description": "ID of the pickup location."
        }
      },
      "type": "object"
    },
    "ProductsCustomBatchRequestEntry": {
      "properties": {
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`delete`\" - \"`get`\" - \"`insert`\" "
        },
        "productId": {
          "description": "The ID of the product to get or delete. Only defined if the method is `get` or `delete`.",
          "type": "string"
        },
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "product": {
          "description": "The product to insert. Only required if the method is `insert`.",
          "$ref": "Product"
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        }
      },
      "type": "object",
      "description": "A batch entry encoding a single non-batch products request.",
      "id": "ProductsCustomBatchRequestEntry"
    },
    "CustomerReturnReason": {
      "properties": {
        "description": {
          "description": "Description of the reason.",
          "type": "string"
        },
        "reasonCode": {
          "description": "Code of the return reason. Acceptable values are: - \"`betterPriceFound`\" - \"`changedMind`\" - \"`damagedOrDefectiveItem`\" - \"`didNotMatchDescription`\" - \"`doesNotFit`\" - \"`expiredItem`\" - \"`incorrectItemReceived`\" - \"`noLongerNeeded`\" - \"`notSpecified`\" - \"`orderedWrongItem`\" - \"`other`\" - \"`qualityNotExpected`\" - \"`receivedTooLate`\" - \"`undeliverable`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CustomerReturnReason"
    },
    "AccountStatusStatistics": {
      "id": "AccountStatusStatistics",
      "properties": {
        "expiring": {
          "type": "string",
          "format": "int64",
          "description": "Number of expiring offers."
        },
        "disapproved": {
          "type": "string",
          "format": "int64",
          "description": "Number of disapproved offers."
        },
        "pending": {
          "type": "string",
          "description": "Number of pending offers.",
          "format": "int64"
        },
        "active": {
          "format": "int64",
          "type": "string",
          "description": "Number of active offers."
        }
      },
      "type": "object"
    },
    "ProductStatus": {
      "properties": {
        "link": {
          "type": "string",
          "description": "The link to the product."
        },
        "dataQualityIssues": {
          "type": "array",
          "description": "DEPRECATED - never populated",
          "items": {
            "$ref": "ProductStatusDataQualityIssue"
          }
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product for which status is reported."
        },
        "product": {
          "description": "Product data after applying all the join inputs.",
          "$ref": "Product"
        },
        "lastUpdateDate": {
          "description": "Date on which the item has been last updated, in ISO 8601 format.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "The title of the product."
        },
        "googleExpirationDate": {
          "type": "string",
          "description": "Date on which the item expires in Google Shopping, in ISO 8601 format."
        },
        "creationDate": {
          "description": "Date on which the item has been created, in ISO 8601 format.",
          "type": "string"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productStatus`\"",
          "type": "string"
        },
        "itemLevelIssues": {
          "description": "A list of all issues associated with the product.",
          "items": {
            "$ref": "ProductStatusItemLevelIssue"
          },
          "type": "array"
        },
        "destinationStatuses": {
          "description": "The intended destinations for the product.",
          "type": "array",
          "items": {
            "$ref": "ProductStatusDestinationStatus"
          }
        }
      },
      "type": "object",
      "id": "ProductStatus",
      "description": "The status of a product, i.e., information about a product computed asynchronously."
    },
    "InventoryCustomBatchResponse": {
      "type": "object",
      "id": "InventoryCustomBatchResponse",
      "properties": {
        "entries": {
          "type": "array",
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "InventoryCustomBatchResponseEntry"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#inventoryCustomBatchResponse\".",
          "type": "string"
        }
      }
    },
    "ProductstatusesCustomBatchResponseEntry": {
      "type": "object",
      "description": "A batch entry encoding a single non-batch productstatuses response.",
      "id": "ProductstatusesCustomBatchResponseEntry",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#productstatusesCustomBatchResponseEntry`\""
        },
        "productStatus": {
          "$ref": "ProductStatus",
          "description": "The requested product status. Only defined if the request was successful."
        },
        "batchId": {
          "description": "The ID of the request entry this entry responds to.",
          "type": "integer",
          "format": "uint32"
        },
        "errors": {
          "$ref": "Errors",
          "description": "A list of errors, if the request failed."
        }
      }
    },
    "ShippingsettingsGetSupportedCarriersResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedCarriersResponse\"."
        },
        "carriers": {
          "items": {
            "$ref": "CarriersCarrier"
          },
          "description": "A list of supported carriers. May be empty.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "ShippingsettingsGetSupportedCarriersResponse"
    },
    "AccountsCustomBatchRequest": {
      "type": "object",
      "id": "AccountsCustomBatchRequest",
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "AccountsCustomBatchRequestEntry"
          },
          "type": "array"
        }
      }
    },
    "OrderLineItemShippingDetailsMethod": {
      "id": "OrderLineItemShippingDetailsMethod",
      "type": "object",
      "properties": {
        "maxDaysInTransit": {
          "type": "integer",
          "description": "Required. Maximum transit time.",
          "format": "uint32"
        },
        "carrier": {
          "description": "The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values.",
          "type": "string"
        },
        "methodName": {
          "description": "Required. The name of the shipping method.",
          "type": "string"
        },
        "minDaysInTransit": {
          "format": "uint32",
          "type": "integer",
          "description": "Required. Minimum transit time."
        }
      }
    },
    "OrdersGetByMerchantOrderIdResponse": {
      "id": "OrdersGetByMerchantOrderIdResponse",
      "type": "object",
      "properties": {
        "order": {
          "description": "The requested order.",
          "$ref": "Order"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetByMerchantOrderIdResponse\".",
          "type": "string"
        }
      }
    },
    "RateGroup": {
      "id": "RateGroup",
      "type": "object",
      "properties": {
        "applicableShippingLabels": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required."
        },
        "subtables": {
          "type": "array",
          "description": "A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set.",
          "items": {
            "$ref": "Table"
          }
        },
        "mainTable": {
          "$ref": "Table",
          "description": "A table defining the rate group, when `singleValue` is not expressive enough. Can only be set if `singleValue` is not set."
        },
        "carrierRates": {
          "type": "array",
          "description": "A list of carrier rates that can be referred to by `mainTable` or `singleValue`.",
          "items": {
            "$ref": "CarrierRate"
          }
        },
        "singleValue": {
          "$ref": "Value",
          "description": "The value of the rate group (e.g. flat rate $10). Can only be set if `mainTable` and `subtables` are not set."
        },
        "name": {
          "description": "Name of the rate group. Optional. If set has to be unique within shipping service.",
          "type": "string"
        }
      }
    },
    "AccountStatusAccountLevelIssue": {
      "properties": {
        "severity": {
          "description": "Severity of the issue. Acceptable values are: - \"`critical`\" - \"`error`\" - \"`suggestion`\" ",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Short description of the issue."
        },
        "id": {
          "description": "Issue identifier.",
          "type": "string"
        },
        "documentation": {
          "description": "The URL of a web page to help resolving this issue.",
          "type": "string"
        },
        "country": {
          "type": "string",
          "description": "Country for which this issue is reported."
        },
        "destination": {
          "description": "The destination the issue applies to. If this field is empty then the issue applies to all available destinations.",
          "type": "string"
        },
        "detail": {
          "type": "string",
          "description": "Additional details about the issue."
        }
      },
      "type": "object",
      "id": "AccountStatusAccountLevelIssue"
    },
    "DeliveryTime": {
      "type": "object",
      "id": "DeliveryTime",
      "properties": {
        "minHandlingTimeInDays": {
          "type": "integer",
          "format": "uint32",
          "description": "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped."
        },
        "minTransitTimeInDays": {
          "description": "Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.",
          "type": "integer",
          "format": "uint32"
        },
        "cutoffTime": {
          "description": "Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST.",
          "$ref": "CutoffTime"
        },
        "maxHandlingTimeInDays": {
          "type": "integer",
          "description": "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.",
          "format": "uint32"
        },
        "handlingBusinessDayConfig": {
          "description": "The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed.",
          "$ref": "BusinessDayConfig"
        },
        "holidayCutoffs": {
          "type": "array",
          "description": "Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.",
          "items": {
            "$ref": "HolidayCutoff"
          }
        },
        "transitTimeTable": {
          "$ref": "TransitTable",
          "description": "Transit time table, number of business days spent in transit based on row and column dimensions. Either `{min,max}TransitTimeInDays` or `transitTimeTable` can be set, but not both."
        },
        "maxTransitTimeInDays": {
          "format": "uint32",
          "type": "integer",
          "description": "Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`."
        },
        "transitBusinessDayConfig": {
          "$ref": "BusinessDayConfig",
          "description": "The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed."
        }
      }
    },
    "TransitTableTransitTimeRowTransitTimeValue": {
      "id": "TransitTableTransitTimeRowTransitTimeValue",
      "type": "object",
      "properties": {
        "minTransitTimeInDays": {
          "type": "integer",
          "description": "Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.",
          "format": "uint32"
        },
        "maxTransitTimeInDays": {
          "format": "uint32",
          "type": "integer",
          "description": "Must be greater than or equal to `minTransitTimeInDays`."
        }
      }
    },
    "OrdersUpdateMerchantOrderIdResponse": {
      "id": "OrdersUpdateMerchantOrderIdResponse",
      "properties": {
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateMerchantOrderIdResponse\"."
        }
      },
      "type": "object"
    },
    "AccountstatusesListResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "AccountStatus"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesListResponse\".",
          "type": "string"
        },
        "nextPageToken": {
          "description": "The token for the retrieval of the next page of account statuses.",
          "type": "string"
        }
      },
      "id": "AccountstatusesListResponse"
    },
    "OrderCustomer": {
      "type": "object",
      "id": "OrderCustomer",
      "properties": {
        "email": {
          "description": "Deprecated.",
          "type": "string"
        },
        "explicitMarketingPreference": {
          "type": "boolean",
          "description": "Deprecated. Please use marketingRightsInfo instead."
        },
        "marketingRightsInfo": {
          "description": "Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order.",
          "$ref": "OrderCustomerMarketingRightsInfo"
        },
        "invoiceReceivingEmail": {
          "description": "Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Shopping Actions.",
          "type": "string"
        },
        "fullName": {
          "description": "Full name of the customer.",
          "type": "string"
        }
      }
    },
    "LiaOnDisplayToOrderSettings": {
      "properties": {
        "shippingCostPolicyUrl": {
          "type": "string",
          "description": "Shipping cost and policy URL."
        },
        "status": {
          "type": "string",
          "description": "The status of the ?On display to order? feature. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        }
      },
      "type": "object",
      "id": "LiaOnDisplayToOrderSettings"
    },
    "ProductUnitPricingMeasure": {
      "type": "object",
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of the measure."
        },
        "value": {
          "format": "double",
          "description": "The measure of an item.",
          "type": "number"
        }
      },
      "id": "ProductUnitPricingMeasure"
    },
    "ShippingsettingsCustomBatchResponse": {
      "properties": {
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "ShippingsettingsCustomBatchResponseEntry"
          },
          "type": "array"
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsCustomBatchResponse\".",
          "type": "string"
        }
      },
      "id": "ShippingsettingsCustomBatchResponse",
      "type": "object"
    },
    "ProductUnitPricingBaseMeasure": {
      "properties": {
        "unit": {
          "type": "string",
          "description": "The unit of the denominator."
        },
        "value": {
          "type": "string",
          "description": "The denominator of the unit price.",
          "format": "int64"
        }
      },
      "type": "object",
      "id": "ProductUnitPricingBaseMeasure"
    },
    "OrdersCustomBatchRequestEntryCancel": {
      "id": "OrdersCustomBatchRequestEntryCancel",
      "properties": {
        "reason": {
          "type": "string",
          "description": "The reason for the cancellation. Acceptable values are: - \"`customerInitiatedCancel`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`noInventory`\" - \"`other`\" - \"`priceError`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" "
        },
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "PosInventoryRequest": {
      "properties": {
        "contentLanguage": {
          "type": "string",
          "description": "Required. The two-letter ISO 639-1 language code for the item."
        },
        "price": {
          "description": "Required. The current price of the item.",
          "$ref": "Price"
        },
        "gtin": {
          "description": "Global Trade Item Number.",
          "type": "string"
        },
        "quantity": {
          "type": "string",
          "format": "int64",
          "description": "Required. The available quantity of the item."
        },
        "itemId": {
          "description": "Required. A unique identifier for the item.",
          "type": "string"
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        },
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        }
      },
      "type": "object",
      "id": "PosInventoryRequest"
    },
    "ShippingsettingsGetSupportedPickupServicesResponse": {
      "properties": {
        "pickupServices": {
          "type": "array",
          "description": "A list of supported pickup services. May be empty.",
          "items": {
            "$ref": "PickupServicesPickupService"
          }
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedPickupServicesResponse\".",
          "type": "string"
        }
      },
      "id": "ShippingsettingsGetSupportedPickupServicesResponse",
      "type": "object"
    },
    "PosCustomBatchRequest": {
      "id": "PosCustomBatchRequest",
      "type": "object",
      "properties": {
        "entries": {
          "type": "array",
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "PosCustomBatchRequestEntry"
          }
        }
      }
    },
    "OrdersCustomBatchRequestEntry": {
      "properties": {
        "inStoreRefundLineItem": {
          "description": "Required for `inStoreReturnLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryInStoreRefundLineItem"
        },
        "updateShipment": {
          "description": "Required for `updateShipment` method.",
          "$ref": "OrdersCustomBatchRequestEntryUpdateShipment"
        },
        "merchantOrderId": {
          "description": "The merchant order ID. Required for `updateMerchantOrderId` and `getByMerchantOrderId` methods.",
          "type": "string"
        },
        "rejectReturnLineItem": {
          "$ref": "OrdersCustomBatchRequestEntryRejectReturnLineItem",
          "description": "Required for `rejectReturnLineItem` method."
        },
        "updateLineItemShippingDetails": {
          "$ref": "OrdersCustomBatchRequestEntryUpdateLineItemShippingDetails",
          "description": "Required for `updateLineItemShippingDate` method."
        },
        "operationId": {
          "type": "string",
          "description": "The ID of the operation. Unique across all operations for a given order. Required for all methods beside `get` and `getByMerchantOrderId`."
        },
        "returnLineItem": {
          "description": "Required for `returnLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryReturnLineItem"
        },
        "merchantId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the managing account."
        },
        "cancel": {
          "description": "Required for `cancel` method.",
          "$ref": "OrdersCustomBatchRequestEntryCancel"
        },
        "method": {
          "description": "The method of the batch entry. Acceptable values are: - \"`acknowledge`\" - \"`cancel`\" - \"`cancelLineItem`\" - \"`get`\" - \"`getByMerchantOrderId`\" - \"`inStoreRefundLineItem`\" - \"`refund`\" - \"`rejectReturnLineItem`\" - \"`returnLineItem`\" - \"`returnRefundLineItem`\" - \"`setLineItemMetadata`\" - \"`shipLineItems`\" - \"`updateLineItemShippingDetails`\" - \"`updateMerchantOrderId`\" - \"`updateShipment`\" ",
          "type": "string"
        },
        "setLineItemMetadata": {
          "$ref": "OrdersCustomBatchRequestEntrySetLineItemMetadata",
          "description": "Required for `setLineItemMetadata` method."
        },
        "shipLineItems": {
          "description": "Required for `shipLineItems` method.",
          "$ref": "OrdersCustomBatchRequestEntryShipLineItems"
        },
        "refund": {
          "description": "Required for `refund` method.",
          "$ref": "OrdersCustomBatchRequestEntryRefund"
        },
        "cancelLineItem": {
          "$ref": "OrdersCustomBatchRequestEntryCancelLineItem",
          "description": "Required for `cancelLineItem` method."
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        },
        "returnRefundLineItem": {
          "description": "Required for `returnRefundLineItem` method.",
          "$ref": "OrdersCustomBatchRequestEntryReturnRefundLineItem"
        },
        "orderId": {
          "type": "string",
          "description": "The ID of the order. Required for all methods beside `getByMerchantOrderId`."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntry"
    },
    "AccountCustomerService": {
      "id": "AccountCustomerService",
      "properties": {
        "url": {
          "description": "Customer service URL.",
          "type": "string"
        },
        "email": {
          "description": "Customer service email.",
          "type": "string"
        },
        "phoneNumber": {
          "description": "Customer service phone number.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ProductStatusItemLevelIssue": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string",
          "description": "A detailed issue description in English."
        },
        "description": {
          "description": "A short issue description in English.",
          "type": "string"
        },
        "attributeName": {
          "type": "string",
          "description": "The attribute's name, if the issue is caused by a single attribute."
        },
        "destination": {
          "description": "The destination the issue applies to.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "description": "The error code of the issue."
        },
        "servability": {
          "description": "How this issue affects serving of the offer.",
          "type": "string"
        },
        "documentation": {
          "description": "The URL of a web page to help with resolving this issue.",
          "type": "string"
        },
        "resolution": {
          "type": "string",
          "description": "Whether the issue can be resolved by the merchant."
        }
      },
      "id": "ProductStatusItemLevelIssue"
    },
    "ProductsCustomBatchRequest": {
      "properties": {
        "entries": {
          "description": "The request entries to be processed in the batch.",
          "items": {
            "$ref": "ProductsCustomBatchRequestEntry"
          },
          "type": "array"
        }
      },
      "id": "ProductsCustomBatchRequest",
      "type": "object"
    },
    "LiasettingsGetAccessibleGmbAccountsResponse": {
      "id": "LiasettingsGetAccessibleGmbAccountsResponse",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "The ID of the Merchant Center account.",
          "type": "string",
          "format": "uint64"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsGetAccessibleGmbAccountsResponse\"."
        },
        "gmbAccounts": {
          "items": {
            "$ref": "GmbAccountsGmbAccount"
          },
          "type": "array",
          "description": "A list of GMB accounts which are available to the merchant."
        }
      }
    },
    "OrderReportDisbursement": {
      "type": "object",
      "properties": {
        "merchantId": {
          "format": "uint64",
          "description": "The ID of the managing account.",
          "type": "string"
        },
        "disbursementId": {
          "type": "string",
          "description": "The ID of the disbursement."
        },
        "disbursementCreationDate": {
          "type": "string",
          "description": "The disbursement date, in ISO 8601 format."
        },
        "disbursementDate": {
          "type": "string",
          "description": "The date the disbursement was initiated, in ISO 8601 format."
        },
        "disbursementAmount": {
          "$ref": "Price",
          "description": "The disbursement amount."
        }
      },
      "id": "OrderReportDisbursement",
      "description": "Order disbursement. All methods require the payment analyst role."
    },
    "LiasettingsCustomBatchRequestEntry": {
      "type": "object",
      "id": "LiasettingsCustomBatchRequestEntry",
      "properties": {
        "contactName": {
          "description": "Inventory validation contact name. Required only for SetInventoryValidationContact.",
          "type": "string"
        },
        "accountId": {
          "format": "uint64",
          "type": "string",
          "description": "The ID of the account for which to get/update account LIA settings."
        },
        "posExternalAccountId": {
          "type": "string",
          "description": "The account ID by which this merchant is known to the POS provider."
        },
        "merchantId": {
          "description": "The ID of the managing account.",
          "type": "string",
          "format": "uint64"
        },
        "batchId": {
          "format": "uint32",
          "description": "An entry ID, unique within the batch request.",
          "type": "integer"
        },
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`get`\" - \"`getAccessibleGmbAccounts`\" - \"`requestGmbAccess`\" - \"`requestInventoryVerification`\" - \"`setInventoryVerificationContact`\" - \"`update`\" "
        },
        "posDataProviderId": {
          "description": "The ID of POS data provider. Required only for SetPosProvider.",
          "type": "string",
          "format": "uint64"
        },
        "contactEmail": {
          "type": "string",
          "description": "Inventory validation contact email. Required only for SetInventoryValidationContact."
        },
        "country": {
          "description": "The country code. Required only for RequestInventoryVerification.",
          "type": "string"
        },
        "gmbEmail": {
          "type": "string",
          "description": "The GMB account. Required only for RequestGmbAccess."
        },
        "liaSettings": {
          "$ref": "LiaSettings",
          "description": "The account Lia settings to update. Only defined if the method is `update`."
        }
      }
    },
    "InventoryPickup": {
      "type": "object",
      "id": "InventoryPickup",
      "properties": {
        "pickupMethod": {
          "description": "Whether store pickup is available for this offer and whether the pickup option should be shown as buy, reserve, or not supported. Only supported for local inventory. Unless the value is \"not supported\", must be submitted together with `pickupSla`. Acceptable values are: - \"`buy`\" - \"`not supported`\" - \"`reserve`\" - \"`ship to store`\" ",
          "type": "string"
        },
        "pickupSla": {
          "type": "string",
          "description": "The expected date that an order will be ready for pickup, relative to when the order is placed. Only supported for local inventory. Must be submitted together with `pickupMethod`. Acceptable values are: - \"`five day`\" - \"`four day`\" - \"`multi day`\" - \"`multi week`\" - \"`next day`\" - \"`same day`\" - \"`seven day`\" - \"`six day`\" - \"`three day`\" - \"`two day`\" "
        }
      }
    },
    "OrderLegacyPromotionBenefit": {
      "type": "object",
      "id": "OrderLegacyPromotionBenefit",
      "properties": {
        "type": {
          "description": "Describes whether the promotion applies to products (e.g. 20% off) or to shipping (e.g. Free Shipping). Acceptable values are: - \"`product`\" - \"`shipping`\" ",
          "type": "string"
        },
        "discount": {
          "$ref": "Price",
          "description": "The discount in the order price when the promotion is applied."
        },
        "taxImpact": {
          "$ref": "Price",
          "description": "The impact on tax when the promotion is applied."
        },
        "subType": {
          "description": "Further describes the benefit of the promotion. Note that we will expand on this enumeration as we support new promotion sub-types. Acceptable values are: - \"`buyMGetMoneyOff`\" - \"`buyMGetNMoneyOff`\" - \"`buyMGetNPercentOff`\" - \"`buyMGetPercentOff`\" - \"`freeGift`\" - \"`freeGiftWithItemId`\" - \"`freeGiftWithValue`\" - \"`freeOvernightShipping`\" - \"`freeShipping`\" - \"`freeTwoDayShipping`\" - \"`moneyOff`\" - \"`percentageOff`\" - \"`rewardPoints`\" - \"`salePrice`\" ",
          "type": "string"
        },
        "offerIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The OfferId(s) that were purchased in this order and map to this specific benefit of the promotion."
        }
      }
    },
    "OrdersCustomBatchRequest": {
      "properties": {
        "entries": {
          "items": {
            "$ref": "OrdersCustomBatchRequestEntry"
          },
          "description": "The request entries to be processed in the batch.",
          "type": "array"
        }
      },
      "id": "OrdersCustomBatchRequest",
      "type": "object"
    },
    "OrderShipment": {
      "type": "object",
      "id": "OrderShipment",
      "properties": {
        "deliveryDate": {
          "description": "Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`",
          "type": "string"
        },
        "carrier": {
          "description": "The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers will not include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for US are: - \"`ups`\" (United Parcel Service) *automatic status updates* - \"`usps`\" (United States Postal Service) *automatic status updates* - \"`fedex`\" (FedEx) *automatic status updates * - \"`dhl`\" (DHL eCommerce) *automatic status updates* (US only) - \"`ontrac`\" (OnTrac) *automatic status updates * - \"`dhl express`\" (DHL Express) - \"`deliv`\" (Deliv) - \"`dynamex`\" (TForce) - \"`lasership`\" (LaserShip) - \"`mpx`\" (Military Parcel Xpress) - \"`uds`\" (United Delivery Service) - \"`efw`\" (Estes Forwarding Worldwide) - \"`jd logistics`\" (JD Logistics) - \"`yunexpress`\" (YunExpress) - \"`china post`\" (China Post) - \"`china ems`\" (China Post Express Mail Service) - \"`singapore post`\" (Singapore Post) - \"`pos malaysia`\" (Pos Malaysia) - \"`postnl`\" (PostNL) - \"`ptt`\" (PTT Turkish Post) - \"`eub`\" (ePacket) - \"`chukou1`\" (Chukou1 Logistics) - \"`bestex`\" (Best Express) - \"`canada post`\" (Canada Post) - \"`purolator`\" (Purolator) - \"`canpar`\" (Canpar) - \"`india post`\" (India Post) - \"`blue dart`\" (Blue Dart) - \"`delhivery`\" (Delhivery) - \"`dtdc`\" (DTDC) - \"`tpc india`\" (TPC India) Supported carriers for FR are: - \"`la poste`\" (La Poste) *automatic status updates * - \"`colissimo`\" (Colissimo by La Poste) *automatic status updates* - \"`ups`\" (United Parcel Service) *automatic status updates * - \"`chronopost`\" (Chronopost by La Poste) - \"`gls`\" (General Logistics Systems France) - \"`dpd`\" (DPD Group by GeoPost) - \"`bpost`\" (Belgian Post Group) - \"`colis prive`\" (Colis Privé) - \"`boxtal`\" (Boxtal) - \"`geodis`\" (GEODIS) - \"`tnt`\" (TNT) - \"`db schenker`\" (DB Schenker) - \"`aramex`\" (Aramex) ",
          "type": "string"
        },
        "scheduledDeliveryDetails": {
          "description": "Delivery details of the shipment if scheduling is needed.",
          "$ref": "OrderShipmentScheduledDeliveryDetails"
        },
        "id": {
          "description": "The ID of the shipment.",
          "type": "string"
        },
        "trackingId": {
          "type": "string",
          "description": "The tracking ID for the shipment."
        },
        "lineItems": {
          "description": "The line items that are shipped.",
          "items": {
            "$ref": "OrderShipmentLineItemShipment"
          },
          "type": "array"
        },
        "creationDate": {
          "description": "Date on which the shipment has been created, in ISO 8601 format.",
          "type": "string"
        },
        "status": {
          "description": "The status of the shipment. Acceptable values are: - \"`delivered`\" - \"`readyForPickup`\" - \"`shipped`\" - \"`undeliverable`\" ",
          "type": "string"
        }
      }
    },
    "PosSaleResponse": {
      "properties": {
        "targetCountry": {
          "type": "string",
          "description": "Required. The CLDR territory code for the item."
        },
        "contentLanguage": {
          "description": "Required. The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "saleId": {
          "type": "string",
          "description": "A unique ID to group items from the same sale event."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number."
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#posSaleResponse\"."
        },
        "storeCode": {
          "description": "Required. The identifier of the merchant's store. Either a `storeCode` inserted via the API or the code of the store in Google My Business.",
          "type": "string"
        },
        "price": {
          "description": "Required. The price of the item.",
          "$ref": "Price"
        },
        "quantity": {
          "type": "string",
          "description": "Required. The relative change of the available quantity. Negative for items returned.",
          "format": "int64"
        },
        "itemId": {
          "type": "string",
          "description": "Required. A unique identifier for the item."
        },
        "timestamp": {
          "type": "string",
          "description": "Required. The inventory timestamp, in ISO 8601 format."
        }
      },
      "type": "object",
      "id": "PosSaleResponse"
    },
    "OrderCancellation": {
      "properties": {
        "reasonText": {
          "description": "The explanation of the reason.",
          "type": "string"
        },
        "actor": {
          "type": "string",
          "description": "The actor that created the cancellation. Acceptable values are: - \"`customer`\" - \"`googleBot`\" - \"`googleCustomerService`\" - \"`googlePayments`\" - \"`googleSabre`\" - \"`merchant`\" "
        },
        "creationDate": {
          "description": "Date on which the cancellation has been created, in ISO 8601 format.",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "description": "The quantity that was canceled.",
          "type": "integer"
        },
        "reason": {
          "description": "The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Shopping Actions until you make an update to that product. This will not affect your Shopping ads. Acceptable values are: - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`customerCanceled`\" - \"`customerInitiatedCancel`\" - \"`customerSupportRequested`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceError`\" - \"`returnRefundAbuse`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" ",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrderCancellation"
    },
    "DatafeedstatusesCustomBatchResponse": {
      "id": "DatafeedstatusesCustomBatchResponse",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "items": {
            "$ref": "DatafeedstatusesCustomBatchResponseEntry"
          },
          "description": "The result of the execution of the batch requests.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "OrderShipmentScheduledDeliveryDetails": {
      "id": "OrderShipmentScheduledDeliveryDetails",
      "type": "object",
      "properties": {
        "carrierPhoneNumber": {
          "description": "The phone number of the carrier fulfilling the delivery. The phone number is formatted as the international notation in ITU-T Recommendation E.123 (e.g., \"+41 44 668 1800\").",
          "type": "string"
        },
        "scheduledDate": {
          "description": "The date a shipment is scheduled for delivery, in ISO 8601 format.",
          "type": "string"
        }
      }
    },
    "Weight": {
      "properties": {
        "value": {
          "description": "Required. The weight represented as a number.",
          "type": "string"
        },
        "unit": {
          "type": "string",
          "description": "Required. The weight unit. Acceptable values are: - \"`kg`\" - \"`lb`\" "
        }
      },
      "id": "Weight",
      "type": "object"
    },
    "Order": {
      "id": "Order",
      "description": "Order. Production access (all methods) requires the order manager role. Sandbox access does not.",
      "properties": {
        "deliveryDetails": {
          "$ref": "OrderDeliveryDetails",
          "description": "Delivery details for shipments of type `delivery`."
        },
        "refunds": {
          "type": "array",
          "items": {
            "$ref": "OrderRefund"
          },
          "description": "Refunds for the order."
        },
        "acknowledged": {
          "description": "Whether the order was acknowledged.",
          "type": "boolean"
        },
        "netAmount": {
          "$ref": "Price",
          "description": "The net amount for the order. For example, if an order was originally for a grand total of $100 and a refund was issued for $20, the net amount will be $80."
        },
        "shippingCostTax": {
          "$ref": "Price",
          "description": "The tax for the total shipping cost."
        },
        "paymentStatus": {
          "description": "The status of the payment. Acceptable values are: - \"`paymentCaptured`\" - \"`paymentRejected`\" - \"`paymentSecured`\" - \"`pendingAuthorization`\" ",
          "type": "string"
        },
        "pickupDetails": {
          "$ref": "OrderPickupDetails",
          "description": "Pickup details for shipments of type `pickup`."
        },
        "paymentMethod": {
          "$ref": "OrderPaymentMethod",
          "description": "The details of the payment method."
        },
        "merchantOrderId": {
          "type": "string",
          "description": "Merchant-provided ID of the order."
        },
        "customer": {
          "$ref": "OrderCustomer",
          "description": "The details of the customer who placed the order."
        },
        "shippingCost": {
          "$ref": "Price",
          "description": "The total cost of shipping for all items."
        },
        "channelType": {
          "type": "string",
          "description": "Deprecated. Acceptable values are: - \"`googleExpress`\" - \"`purchasesOnGoogle`\" "
        },
        "placedDate": {
          "type": "string",
          "description": "The date when the order was placed, in ISO 8601 format."
        },
        "lineItems": {
          "type": "array",
          "description": "Line items that are ordered.",
          "items": {
            "$ref": "OrderLineItem"
          }
        },
        "taxCollector": {
          "type": "string",
          "description": "The party responsible for collecting and remitting taxes. Acceptable values are: - \"`marketplaceFacilitator`\" - \"`merchant`\" "
        },
        "promotions": {
          "items": {
            "$ref": "OrderLegacyPromotion"
          },
          "type": "array",
          "description": "The details of the merchant provided promotions applied to the order. To determine which promotions apply to which products, check the `Promotions[].Benefits[].OfferIds` field against the `LineItems[].Product.OfferId` field for each promotion. If a promotion is applied to more than 1 `offerId`, divide the discount value by the number of affected offers to determine how much discount to apply to each `offerId`. Examples: 1. To calculate the line item level discount for a single specific item: For each promotion, subtract the `Promotions[].Benefits[].Discount.value` amount from the `LineItems[].Price.value`. 2. To calculate the line item level discount for multiple quantity of a specific item: For each promotion, divide the `Promotions[].Benefits[].Discount.value` by the quantity of products and substract it from `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here."
        },
        "merchantId": {
          "format": "uint64",
          "type": "string"
        },
        "shippingOption": {
          "type": "string",
          "description": "Deprecated. Shipping details are provided with line items instead. Acceptable values are: - \"`economy`\" - \"`expedited`\" - \"`oneDay`\" - \"`sameDay`\" - \"`standard`\" - \"`twoDay`\" "
        },
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"`content#order`\"",
          "type": "string"
        },
        "shipments": {
          "description": "Shipments of the order.",
          "items": {
            "$ref": "OrderShipment"
          },
          "type": "array"
        },
        "status": {
          "type": "string",
          "description": "The status of the order. Acceptable values are: - \"`canceled`\" - \"`delivered`\" - \"`inProgress`\" - \"`partiallyDelivered`\" - \"`partiallyReturned`\" - \"`partiallyShipped`\" - \"`pendingShipment`\" - \"`returned`\" - \"`shipped`\" "
        },
        "id": {
          "description": "The REST ID of the order. Globally unique.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AccountstatusesCustomBatchResponse": {
      "id": "AccountstatusesCustomBatchResponse",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesCustomBatchResponse\".",
          "type": "string"
        },
        "entries": {
          "description": "The result of the execution of the batch requests.",
          "items": {
            "$ref": "AccountstatusesCustomBatchResponseEntry"
          },
          "type": "array"
        }
      }
    },
    "InvoiceSummary": {
      "type": "object",
      "properties": {
        "googleBalance": {
          "$ref": "Amount",
          "description": "Deprecated."
        },
        "merchantBalance": {
          "description": "Deprecated.",
          "$ref": "Amount"
        },
        "additionalChargeSummaries": {
          "description": "Summary of the total amounts of the additional charges.",
          "items": {
            "$ref": "InvoiceSummaryAdditionalChargeSummary"
          },
          "type": "array"
        },
        "productTotal": {
          "description": "[required] Total price for the product.",
          "$ref": "Amount"
        },
        "customerBalance": {
          "description": "Deprecated.",
          "$ref": "Amount"
        },
        "promotionSummaries": {
          "type": "array",
          "description": "Deprecated.",
          "items": {
            "$ref": "Promotion"
          }
        }
      },
      "id": "InvoiceSummary"
    },
    "OrderLineItemProduct": {
      "id": "OrderLineItemProduct",
      "properties": {
        "shownImage": {
          "description": "URL to the cached image shown to the user when order was placed.",
          "type": "string"
        },
        "targetCountry": {
          "description": "The CLDR territory // code of the target country of the product.",
          "type": "string"
        },
        "variantAttributes": {
          "type": "array",
          "description": "Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.",
          "items": {
            "$ref": "OrderLineItemProductVariantAttribute"
          }
        },
        "offerId": {
          "type": "string",
          "description": "An identifier of the item."
        },
        "channel": {
          "type": "string",
          "description": "The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "title": {
          "type": "string",
          "description": "The title of the product."
        },
        "contentLanguage": {
          "description": "The two-letter ISO 639-1 language code for the item.",
          "type": "string"
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number (GTIN) of the item."
        },
        "itemGroupId": {
          "description": "Shared identifier for all variants of the same product.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The REST ID of the product."
        },
        "imageLink": {
          "type": "string",
          "description": "URL of an image of the item."
        },
        "brand": {
          "description": "Brand of the item.",
          "type": "string"
        },
        "condition": {
          "type": "string",
          "description": "Condition or state of the item. Acceptable values are: - \"`new`\" - \"`refurbished`\" - \"`used`\" "
        },
        "fees": {
          "type": "array",
          "description": "Associated fees at order creation time.",
          "items": {
            "$ref": "OrderLineItemProductFee"
          }
        },
        "price": {
          "$ref": "Price",
          "description": "Price of the item."
        },
        "mpn": {
          "description": "Manufacturer Part Number (MPN) of the item.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrdersCustomBatchRequestEntryRejectReturnLineItem": {
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryRejectReturnLineItem",
      "properties": {
        "productId": {
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.",
          "type": "string"
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "reason": {
          "description": "The reason for the return. Acceptable values are: - \"`damagedOrUsed`\" - \"`missingComponent`\" - \"`notEligible`\" - \"`other`\" - \"`outOfReturnWindow`\" ",
          "type": "string"
        },
        "quantity": {
          "format": "uint32",
          "type": "integer",
          "description": "The quantity to return and refund."
        }
      }
    },
    "OrdersCancelResponse": {
      "id": "OrdersCancelResponse",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelResponse\"."
        },
        "executionStatus": {
          "description": "The status of the execution. Acceptable values are: - \"`duplicate`\" - \"`executed`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LiaAboutPageSettings": {
      "type": "object",
      "id": "LiaAboutPageSettings",
      "properties": {
        "status": {
          "type": "string",
          "description": "The status of the verification process for the About page. Acceptable values are: - \"`active`\" - \"`inactive`\" - \"`pending`\" "
        },
        "url": {
          "type": "string",
          "description": "The URL for the About page."
        }
      }
    },
    "AccountStatusProducts": {
      "type": "object",
      "id": "AccountStatusProducts",
      "properties": {
        "itemLevelIssues": {
          "type": "array",
          "items": {
            "$ref": "AccountStatusItemLevelIssue"
          },
          "description": "List of item-level issues."
        },
        "channel": {
          "type": "string",
          "description": "The channel the data applies to. Acceptable values are: - \"`local`\" - \"`online`\" "
        },
        "statistics": {
          "$ref": "AccountStatusStatistics",
          "description": "Aggregated product statistics."
        },
        "country": {
          "type": "string",
          "description": "The country the data applies to."
        },
        "destination": {
          "description": "The destination the data applies to.",
          "type": "string"
        }
      }
    },
    "ProductAmount": {
      "type": "object",
      "properties": {
        "remittedTaxAmount": {
          "description": "Remitted tax value.",
          "$ref": "Price"
        },
        "taxAmount": {
          "$ref": "Price",
          "description": "Tax value."
        },
        "priceAmount": {
          "description": "The pre-tax or post-tax price depending on the location of the order.",
          "$ref": "Price"
        }
      },
      "id": "ProductAmount"
    },
    "ProductDestination": {
      "id": "ProductDestination",
      "properties": {
        "destinationName": {
          "type": "string",
          "description": "The name of the destination."
        },
        "intention": {
          "description": "Whether the destination is required, excluded or should be validated. Acceptable values are: - \"`default`\" - \"`excluded`\" - \"`optional`\" - \"`required`\" ",
          "type": "string"
        }
      },
      "type": "object"
    },
    "OrderLineItem": {
      "properties": {
        "quantityReturned": {
          "format": "uint32",
          "description": "Number of items returned.",
          "type": "integer"
        },
        "quantityReadyForPickup": {
          "type": "integer",
          "format": "uint32",
          "description": "Number of items ready for pickup."
        },
        "returnInfo": {
          "description": "Details of the return policy for the line item.",
          "$ref": "OrderLineItemReturnInfo"
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "OrderMerchantProvidedAnnotation"
          },
          "description": "Annotations that are attached to the line item."
        },
        "tax": {
          "$ref": "Price",
          "description": "Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4."
        },
        "product": {
          "$ref": "OrderLineItemProduct",
          "description": "Product data as seen by customer from the time of the order placement. Note that certain attributes values (e.g. title or gtin) might be reformatted and no longer match values submitted via product feed."
        },
        "id": {
          "description": "The ID of the line item.",
          "type": "string"
        },
        "quantityPending": {
          "type": "integer",
          "description": "Number of items pending.",
          "format": "uint32"
        },
        "quantityOrdered": {
          "type": "integer",
          "description": "Number of items ordered.",
          "format": "uint32"
        },
        "price": {
          "description": "Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20.",
          "$ref": "Price"
        },
        "quantityShipped": {
          "format": "uint32",
          "type": "integer",
          "description": "Number of items shipped."
        },
        "quantityDelivered": {
          "format": "uint32",
          "description": "Number of items delivered.",
          "type": "integer"
        },
        "quantityCanceled": {
          "format": "uint32",
          "description": "Number of items canceled.",
          "type": "integer"
        },
        "returns": {
          "type": "array",
          "description": "Returns of the line item.",
          "items": {
            "$ref": "OrderReturn"
          }
        },
        "shippingDetails": {
          "description": "Details of the requested shipping for the line item.",
          "$ref": "OrderLineItemShippingDetails"
        },
        "cancellations": {
          "type": "array",
          "items": {
            "$ref": "OrderCancellation"
          },
          "description": "Cancellations of the line item."
        }
      },
      "id": "OrderLineItem",
      "type": "object"
    },
    "Errors": {
      "properties": {
        "code": {
          "format": "uint32",
          "type": "integer",
          "description": "The HTTP status of the first error in `errors`."
        },
        "message": {
          "description": "The message of the first error in `errors`.",
          "type": "string"
        },
        "errors": {
          "items": {
            "$ref": "Error"
          },
          "type": "array",
          "description": "A list of errors."
        }
      },
      "description": "A list of errors returned by a failed batch entry.",
      "type": "object",
      "id": "Errors"
    },
    "Value": {
      "id": "Value",
      "description": "The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set.",
      "type": "object",
      "properties": {
        "noShipping": {
          "type": "boolean",
          "description": "If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set."
        },
        "pricePercentage": {
          "type": "string",
          "description": "A percentage of the price represented as a number in decimal notation (e.g., `\"5.4\"`). Can only be set if all other fields are not set."
        },
        "subtableName": {
          "type": "string",
          "description": "The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set."
        },
        "flatRate": {
          "$ref": "Price",
          "description": "A flat rate. Can only be set if all other fields are not set."
        },
        "carrierRateName": {
          "description": "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.",
          "type": "string"
        }
      }
    },
    "AccountsListResponse": {
      "id": "AccountsListResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the retrieval of the next page of accounts."
        },
        "resources": {
          "items": {
            "$ref": "Account"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Identifies what kind of resource this is. Value: the fixed string \"content#accountsListResponse\"."
        }
      },
      "type": "object"
    },
    "PostalCodeGroup": {
      "type": "object",
      "id": "PostalCodeGroup",
      "properties": {
        "country": {
          "description": "The CLDR territory code of the country the postal code group applies to. Required.",
          "type": "string"
        },
        "name": {
          "description": "The name of the postal code group, referred to in headers. Required.",
          "type": "string"
        },
        "postalCodeRanges": {
          "description": "A range of postal codes. Required.",
          "items": {
            "$ref": "PostalCodeRange"
          },
          "type": "array"
        }
      }
    },
    "OrdersCustomBatchRequestEntryReturnLineItem": {
      "properties": {
        "quantity": {
          "description": "The quantity to return.",
          "format": "uint32",
          "type": "integer"
        },
        "reasonText": {
          "type": "string",
          "description": "The explanation of the reason."
        },
        "productId": {
          "type": "string",
          "description": "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required."
        },
        "reason": {
          "type": "string",
          "description": "The reason for the return. Acceptable values are: - \"`customerDiscretionaryReturn`\" - \"`customerInitiatedMerchantCancel`\" - \"`deliveredTooLate`\" - \"`expiredItem`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`other`\" - \"`productArrivedDamaged`\" - \"`productNotAsDescribed`\" - \"`qualityNotAsExpected`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`wrongProductShipped`\" "
        },
        "lineItemId": {
          "type": "string",
          "description": "The ID of the line item to return. Either lineItemId or productId is required."
        }
      },
      "type": "object",
      "id": "OrdersCustomBatchRequestEntryReturnLineItem"
    },
    "AccountsCustomBatchRequestEntry": {
      "type": "object",
      "id": "AccountsCustomBatchRequestEntry",
      "description": "A batch entry encoding a single non-batch accounts request.",
      "properties": {
        "method": {
          "type": "string",
          "description": "The method of the batch entry. Acceptable values are: - \"`claimWebsite`\" - \"`delete`\" - \"`get`\" - \"`insert`\" - \"`link`\" - \"`update`\" "
        },
        "force": {
          "description": "Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.",
          "type": "boolean"
        },
        "overwrite": {
          "description": "Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict.",
          "type": "boolean"
        },
        "account": {
          "$ref": "Account",
          "description": "The account to create or update. Only defined if the method is `insert` or `update`."
        },
        "labelIds": {
          "description": "Label IDs for the 'updatelabels' request.",
          "type": "array",
          "items": {
            "type": "string",
            "format": "uint64"
          }
        },
        "accountId": {
          "description": "The ID of the targeted account. Only defined if the method is not `insert`.",
          "format": "uint64",
          "type": "string"
        },
        "merchantId": {
          "type": "string",
          "format": "uint64",
          "description": "The ID of the managing account."
        },
        "linkRequest": {
          "$ref": "AccountsCustomBatchRequestEntryLinkRequest",
          "description": "Details about the `link` request."
        },
        "batchId": {
          "format": "uint32",
          "type": "integer",
          "description": "An entry ID, unique within the batch request."
        }
      }
    }
  },
  "version": "v2",
  "title": "Content API for Shopping",
  "protocol": "rest",
  "baseUrl": "https://shoppingcontent.googleapis.com/",
  "ownerName": "Google",
  "rootUrl": "https://shoppingcontent.googleapis.com/",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/content": {
          "description": "Manage your product listings and accounts for Google Shopping"
        }
      }
    }
  },
  "servicePath": "",
  "description": "Manage your product listings and accounts for Google Shopping",
  "discoveryVersion": "v1",
  "revision": "20201012"
}
