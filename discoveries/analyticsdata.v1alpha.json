{
  "documentationLink": "https://developers.google.com/analytics/trusted-testing/analytics-data/",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "rootUrl": "https://analyticsdata.googleapis.com/",
  "fullyEncodeReservedExpansion": true,
  "resources": {
    "v1alpha": {
      "methods": {
        "runReport": {
          "httpMethod": "POST",
          "parameterOrder": [],
          "request": {
            "$ref": "RunReportRequest"
          },
          "id": "analyticsdata.runReport",
          "parameters": {},
          "path": "v1alpha:runReport",
          "response": {
            "$ref": "RunReportResponse"
          },
          "flatPath": "v1alpha:runReport",
          "description": "Returns a customized report of your Google Analytics event data. Reports contain statistics derived from data collected by the Google Analytics tracking code. The data returned from the API is as a table with columns for the requested dimensions and metrics. Metrics are individual measurements of user activity on your property, such as active users or event count. Dimensions break down metrics across some common criteria, such as country or event name.",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ]
        },
        "batchRunReports": {
          "flatPath": "v1alpha:batchRunReports",
          "id": "analyticsdata.batchRunReports",
          "parameters": {},
          "httpMethod": "POST",
          "response": {
            "$ref": "BatchRunReportsResponse"
          },
          "description": "Returns multiple reports in a batch. All reports must be for the same Entity.",
          "path": "v1alpha:batchRunReports",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "request": {
            "$ref": "BatchRunReportsRequest"
          },
          "parameterOrder": []
        },
        "getUniversalMetadata": {
          "flatPath": "v1alpha/universalMetadata",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "response": {
            "$ref": "UniversalMetadata"
          },
          "parameterOrder": [],
          "id": "analyticsdata.getUniversalMetadata",
          "path": "v1alpha/universalMetadata",
          "parameters": {},
          "httpMethod": "GET",
          "description": "Returns metadata for dimensions and metrics available in reporting methods. Used to explore the dimensions and metrics. Dimensions and metrics will be mostly added over time, but renames and deletions may occur. This method returns Universal Metadata. Universal Metadata are dimensions and metrics applicable to any property such as `country` and `totalUsers`."
        },
        "batchRunPivotReports": {
          "request": {
            "$ref": "BatchRunPivotReportsRequest"
          },
          "id": "analyticsdata.batchRunPivotReports",
          "parameterOrder": [],
          "httpMethod": "POST",
          "flatPath": "v1alpha:batchRunPivotReports",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "description": "Returns multiple pivot reports in a batch. All reports must be for the same Entity.",
          "parameters": {},
          "response": {
            "$ref": "BatchRunPivotReportsResponse"
          },
          "path": "v1alpha:batchRunPivotReports"
        },
        "runPivotReport": {
          "response": {
            "$ref": "RunPivotReportResponse"
          },
          "request": {
            "$ref": "RunPivotReportRequest"
          },
          "flatPath": "v1alpha:runPivotReport",
          "parameterOrder": [],
          "id": "analyticsdata.runPivotReport",
          "parameters": {},
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "description": "Returns a customized pivot report of your Google Analytics event data. Pivot reports are more advanced and expressive formats than regular reports. In a pivot report, dimensions are only visible if they are included in a pivot. Multiple pivots can be specified to further dissect your data.",
          "path": "v1alpha:runPivotReport"
        }
      }
    },
    "properties": {
      "methods": {
        "getMetadata": {
          "id": "analyticsdata.properties.getMetadata",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Metadata"
          },
          "scopes": [
            "https://www.googleapis.com/auth/analytics",
            "https://www.googleapis.com/auth/analytics.readonly"
          ],
          "description": "Returns metadata for dimensions and metrics available in reporting methods. Used to explore the dimensions and metrics. In this method, a Google Analytics App + Web Property Identifier is specified in the request, and the metadata response includes Custom dimensions and metrics as well as Universal metadata. For example if a custom metric with parameter name `levels_unlocked` is registered to a property, the Metadata response will contain `customEvent:levels_unlocked`. Universal metadata are dimensions and metrics applicable to any property such as `country` and `totalUsers`.",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "pattern": "^properties/[^/]+/metadata$",
              "required": true,
              "location": "path",
              "description": "Required. The resource name of the metadata to retrieve. This name field is specified in the URL path and not URL parameters. Property is a numeric Google Analytics App + Web Property identifier. Example: properties/1234/metadata",
              "type": "string"
            }
          },
          "flatPath": "v1alpha/properties/{propertiesId}/metadata",
          "path": "v1alpha/{+name}"
        }
      }
    }
  },
  "servicePath": "",
  "name": "analyticsdata",
  "baseUrl": "https://analyticsdata.googleapis.com/",
  "parameters": {
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "location": "query",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    }
  },
  "discoveryVersion": "v1",
  "canonicalName": "AnalyticsData",
  "version": "v1alpha",
  "revision": "20201006",
  "schemas": {
    "PivotDimensionHeader": {
      "type": "object",
      "description": "Summarizes dimension values from a row for this pivot.",
      "properties": {
        "dimensionValues": {
          "type": "array",
          "description": "Values of multiple dimensions in a pivot.",
          "items": {
            "$ref": "DimensionValue"
          }
        }
      },
      "id": "PivotDimensionHeader"
    },
    "CaseExpression": {
      "description": "Used to convert a dimension value to a single case.",
      "properties": {
        "dimensionName": {
          "type": "string",
          "description": "Name of a dimension. The name must refer back to a name in dimensions field of the request."
        }
      },
      "id": "CaseExpression",
      "type": "object"
    },
    "RunReportResponse": {
      "description": "The response report table corresponding to a request.",
      "type": "object",
      "id": "RunReportResponse",
      "properties": {
        "rowCount": {
          "format": "int32",
          "description": "The total number of rows in the query result, regardless of the number of rows returned in the response. For example if a query returns 175 rows and includes limit = 50 in the API request, the response will contain row_count = 175 but only 50 rows.",
          "type": "integer"
        },
        "propertyQuota": {
          "$ref": "PropertyQuota",
          "description": "This Analytics Property's quota state including this request."
        },
        "metricHeaders": {
          "type": "array",
          "items": {
            "$ref": "MetricHeader"
          },
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows."
        },
        "totals": {
          "type": "array",
          "description": "If requested, the totaled values of metrics.",
          "items": {
            "$ref": "Row"
          }
        },
        "dimensionHeaders": {
          "items": {
            "$ref": "DimensionHeader"
          },
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
          "type": "array"
        },
        "metadata": {
          "$ref": "ResponseMetaData",
          "description": "Metadata for the report."
        },
        "minimums": {
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the minimum values of metrics.",
          "type": "array"
        },
        "rows": {
          "type": "array",
          "description": "Rows of dimension value combinations and metric values in the report.",
          "items": {
            "$ref": "Row"
          }
        },
        "maximums": {
          "type": "array",
          "items": {
            "$ref": "Row"
          },
          "description": "If requested, the maximum values of metrics."
        }
      }
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "DimensionMetadata"
          },
          "description": "The dimensions descriptions."
        },
        "name": {
          "type": "string",
          "description": "Resource name of this metadata."
        },
        "metrics": {
          "type": "array",
          "description": "The metric descriptions.",
          "items": {
            "$ref": "MetricMetadata"
          }
        }
      },
      "description": "The dimensions and metrics currently accepted in reporting methods.",
      "id": "Metadata"
    },
    "ResponseMetaData": {
      "description": "Response's metadata carrying additional information about the report content.",
      "properties": {
        "dataLossFromOtherRow": {
          "description": "If true, indicates some buckets of dimension combinations are rolled into \"(other)\" row. This can happen for high cardinality reports.",
          "type": "boolean"
        }
      },
      "id": "ResponseMetaData",
      "type": "object"
    },
    "PivotHeader": {
      "id": "PivotHeader",
      "type": "object",
      "description": "Dimensions' values in a single pivot.",
      "properties": {
        "pivotDimensionHeaders": {
          "items": {
            "$ref": "PivotDimensionHeader"
          },
          "type": "array",
          "description": "The size is the same as the cardinality of the corresponding dimension combinations."
        },
        "rowCount": {
          "type": "integer",
          "format": "int32",
          "description": "The cardinality of the pivot as if offset = 0 and limit = -1. The total number of rows for this pivot's fields regardless of how the parameters offset and limit are specified in the request."
        }
      }
    },
    "MetricMetadata": {
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of this metric.",
          "enumDescriptions": [
            "Unspecified type.",
            "Integer type.",
            "Floating point type.",
            "A duration of seconds; a special floating point type.",
            "A duration in milliseconds; a special floating point type.",
            "A duration in minutes; a special floating point type.",
            "A duration in hours; a special floating point type.",
            "A custom metric of standard type; a special floating point type.",
            "An amount of money; a special floating point type.",
            "A length in feet; a special floating point type.",
            "A length in miles; a special floating point type.",
            "A length in meters; a special floating point type.",
            "A length in kilometers; a special floating point type."
          ],
          "enum": [
            "METRIC_TYPE_UNSPECIFIED",
            "TYPE_INTEGER",
            "TYPE_FLOAT",
            "TYPE_SECONDS",
            "TYPE_MILLISECONDS",
            "TYPE_MINUTES",
            "TYPE_HOURS",
            "TYPE_STANDARD",
            "TYPE_CURRENCY",
            "TYPE_FEET",
            "TYPE_MILES",
            "TYPE_METERS",
            "TYPE_KILOMETERS"
          ]
        },
        "expression": {
          "description": "The mathematical expression for this derived metric. Can be used in [Metric](#Metric)'s `expression` field for equivalent reports. Most metrics are not expressions, and for non-expressions, this field is empty.",
          "type": "string"
        },
        "apiName": {
          "description": "A metric name. Useable in [Metric](#Metric)'s `name`. For example, `eventCount`.",
          "type": "string"
        },
        "description": {
          "description": "Description of how this metric is used and calculated.",
          "type": "string"
        },
        "deprecatedApiNames": {
          "description": "Still usable but deprecated names for this metric. If populated, this metric is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the metric will be available only by `apiName`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uiName": {
          "description": "This metric's name within the Google Analytics user interface. For example, `Event count`.",
          "type": "string"
        }
      },
      "id": "MetricMetadata",
      "type": "object",
      "description": "Explains a metric."
    },
    "DimensionMetadata": {
      "properties": {
        "apiName": {
          "description": "This dimension's name. Useable in [Dimension](#Dimension)'s `name`. For example, `eventName`.",
          "type": "string"
        },
        "uiName": {
          "description": "This dimension's name within the Google Analytics user interface. For example, `Event name`.",
          "type": "string"
        },
        "deprecatedApiNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Still usable but deprecated names for this dimension. If populated, this dimension is available by either `apiName` or one of `deprecatedApiNames` for a period of time. After the deprecation period, the dimension will be available only by `apiName`."
        },
        "description": {
          "description": "Description of how this dimension is used and calculated.",
          "type": "string"
        }
      },
      "description": "Explains a dimension.",
      "type": "object",
      "id": "DimensionMetadata"
    },
    "UniversalMetadata": {
      "description": "The dimensions and metrics currently accepted in reporting methods.",
      "properties": {
        "metrics": {
          "description": "The metric descriptions.",
          "type": "array",
          "items": {
            "$ref": "MetricMetadata"
          }
        },
        "dimensions": {
          "items": {
            "$ref": "DimensionMetadata"
          },
          "description": "The dimensions descriptions.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "UniversalMetadata"
    },
    "DateRange": {
      "type": "object",
      "description": "A contiguous set of days: startDate, startDate + 1, ..., endDate. Requests are allowed up to 4 date ranges, and the union of the ranges can cover up to 1 year.",
      "id": "DateRange",
      "properties": {
        "name": {
          "type": "string",
          "description": "Assigns a name to this date range. The dimension `dateRange` is valued to this name in a report response. If set, cannot begin with `date_range_` or `RESERVED_`. If not set, date ranges are named by their zero based index in the request: `date_range_0`, `date_range_1`, etc."
        },
        "endDate": {
          "description": "The inclusive end date for the query in the format `YYYY-MM-DD`. Cannot be before `start_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.",
          "type": "string"
        },
        "startDate": {
          "description": "The inclusive start date for the query in the format `YYYY-MM-DD`. Cannot be after `end_date`. The format `NdaysAgo`, `yesterday`, or `today` is also accepted, and in that case, the date is inferred based on the property's reporting time zone.",
          "type": "string"
        }
      }
    },
    "QuotaStatus": {
      "id": "QuotaStatus",
      "description": "Current state for a particular quota group.",
      "type": "object",
      "properties": {
        "remaining": {
          "format": "int32",
          "description": "Quota remaining after this request.",
          "type": "integer"
        },
        "consumed": {
          "format": "int32",
          "description": "Quota consumed by this request.",
          "type": "integer"
        }
      }
    },
    "OrderBy": {
      "description": "The sort options.",
      "properties": {
        "pivot": {
          "description": "Sorts results by a metric's values within a pivot column group.",
          "$ref": "PivotOrderBy"
        },
        "desc": {
          "description": "If true, sorts by descending order.",
          "type": "boolean"
        },
        "dimension": {
          "description": "Sorts results by a dimension's values.",
          "$ref": "DimensionOrderBy"
        },
        "metric": {
          "description": "Sorts results by a metric's values.",
          "$ref": "MetricOrderBy"
        }
      },
      "type": "object",
      "id": "OrderBy"
    },
    "Pivot": {
      "description": "Describes the visible dimension columns and rows in the report response.",
      "type": "object",
      "id": "Pivot",
      "properties": {
        "fieldNames": {
          "items": {
            "type": "string"
          },
          "description": "Dimension names for visible columns in the report response. Including \"dateRange\" produces a date range column; for each row in the response, dimension values in the date range column will indicate the corresponding date range from the request.",
          "type": "array"
        },
        "offset": {
          "description": "The row count of the start row. The first row is counted as row 0.",
          "format": "int64",
          "type": "string"
        },
        "orderBys": {
          "type": "array",
          "items": {
            "$ref": "OrderBy"
          },
          "description": "Specifies how dimensions are ordered in the pivot. In the first Pivot, the OrderBys determine Row and PivotDimensionHeader ordering; in subsequent Pivots, the OrderBys determine only PivotDimensionHeader ordering. Dimensions specified in these OrderBys must be a subset of Pivot.field_names."
        },
        "limit": {
          "type": "string",
          "description": "The number of rows to return in this pivot. If unspecified, 10 rows are returned. If -1, all rows are returned.",
          "format": "int64"
        },
        "metricAggregations": {
          "items": {
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ],
            "type": "string",
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ]
          },
          "description": "Aggregate the metrics by dimensions in this pivot using the specified metric_aggregations.",
          "type": "array"
        }
      }
    },
    "NumericValue": {
      "properties": {
        "int64Value": {
          "format": "int64",
          "type": "string",
          "description": "Integer value"
        },
        "doubleValue": {
          "type": "number",
          "description": "Double value",
          "format": "double"
        }
      },
      "description": "To represent a number.",
      "type": "object",
      "id": "NumericValue"
    },
    "FilterExpressionList": {
      "id": "FilterExpressionList",
      "properties": {
        "expressions": {
          "items": {
            "$ref": "FilterExpression"
          },
          "type": "array",
          "description": "A list of filter expressions."
        }
      },
      "description": "A list of filter expressions.",
      "type": "object"
    },
    "PropertyQuota": {
      "properties": {
        "tokensPerDay": {
          "description": "Analytics Properties can use up to 25,000 tokens per day. Most requests consume fewer than 10 tokens.",
          "$ref": "QuotaStatus"
        },
        "concurrentRequests": {
          "description": "Analytics Properties can send up to 10 concurrent requests.",
          "$ref": "QuotaStatus"
        },
        "tokensPerHour": {
          "$ref": "QuotaStatus",
          "description": "Analytics Properties can use up to 5,000 tokens per day. An API request consumes a single number of tokens, and that number is deducted from both the hourly and daily quotas."
        },
        "serverErrorsPerProjectPerHour": {
          "description": "Analytics Properties and cloud project pairs can have up to 10 server errors per hour.",
          "$ref": "QuotaStatus"
        }
      },
      "description": "Current state of all quotas for this Analytics Property. If any quota for a property is exhausted, all requests to that property will return Resource Exhausted errors.",
      "type": "object",
      "id": "PropertyQuota"
    },
    "ConcatenateExpression": {
      "properties": {
        "dimensionNames": {
          "description": "Names of dimensions. The names must refer back to names in the dimensions field of the request.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "delimiter": {
          "type": "string",
          "description": "The delimiter placed between dimension names. Delimiters are often single characters such as \"|\" or \",\" but can be longer strings. If a dimension value contains the delimiter, both will be present in response with no distinction. For example if dimension 1 value = \"US,FR\", dimension 2 value = \"JP\", and delimiter = \",\", then the response will contain \"US,FR,JP\"."
        }
      },
      "type": "object",
      "description": "Used to combine dimension values to a single dimension.",
      "id": "ConcatenateExpression"
    },
    "InListFilter": {
      "properties": {
        "values": {
          "items": {
            "type": "string"
          },
          "description": "The list of string values. Must be non-empty.",
          "type": "array"
        },
        "caseSensitive": {
          "description": "If true, the string value is case sensitive.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "The result needs to be in a list of string values.",
      "id": "InListFilter"
    },
    "CohortReportSettings": {
      "description": "Settings of a cohort report.",
      "id": "CohortReportSettings",
      "type": "object",
      "properties": {
        "accumulate": {
          "description": "If true, accumulates the result from first visit day to the end day. Not supported in `RunReportRequest`.",
          "type": "boolean"
        }
      }
    },
    "DimensionOrderBy": {
      "description": "Sorts by dimension values.",
      "type": "object",
      "properties": {
        "orderType": {
          "type": "string",
          "enum": [
            "ORDER_TYPE_UNSPECIFIED",
            "ALPHANUMERIC",
            "CASE_INSENSITIVE_ALPHANUMERIC",
            "NUMERIC"
          ],
          "enumDescriptions": [
            "Unspecified.",
            "Alphanumeric sort by Unicode code point. For example, \"2\" \u003c \"A\" \u003c \"X\" \u003c \"b\" \u003c \"z\".",
            "Case insensitive alphanumeric sort by lower case Unicode code point. For example, \"2\" \u003c \"A\" \u003c \"b\" \u003c \"X\" \u003c \"z\".",
            "Dimension values are converted to numbers before sorting. For example in NUMERIC sort, \"25\" \u003c \"100\", and in `ALPHANUMERIC` sort, \"100\" \u003c \"25\". Non-numeric dimension values all have equal ordering value below all numeric values."
          ],
          "description": "Controls the rule for dimension value ordering."
        },
        "dimensionName": {
          "description": "A dimension name in the request to order by.",
          "type": "string"
        }
      },
      "id": "DimensionOrderBy"
    },
    "StringFilter": {
      "properties": {
        "value": {
          "type": "string",
          "description": "The string value used for the matching."
        },
        "caseSensitive": {
          "description": "If true, the string value is case sensitive.",
          "type": "boolean"
        },
        "matchType": {
          "description": "The match type for this filter.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified",
            "Exact match of the string value.",
            "Begins with the string value.",
            "Ends with the string value.",
            "Contains the string value.",
            "Full regular expression match with the string value.",
            "Partial regular expression match with the string value."
          ],
          "enum": [
            "MATCH_TYPE_UNSPECIFIED",
            "EXACT",
            "BEGINS_WITH",
            "ENDS_WITH",
            "CONTAINS",
            "FULL_REGEXP",
            "PARTIAL_REGEXP"
          ]
        }
      },
      "description": "The filter for string",
      "type": "object",
      "id": "StringFilter"
    },
    "RunReportRequest": {
      "properties": {
        "currencyCode": {
          "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the entity's default currency.",
          "type": "string"
        },
        "metricAggregations": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Unspecified operator.",
              "SUM operator.",
              "Minimum operator.",
              "Maximum operator.",
              "Count operator."
            ],
            "enum": [
              "METRIC_AGGREGATION_UNSPECIFIED",
              "TOTAL",
              "MINIMUM",
              "MAXIMUM",
              "COUNT"
            ]
          },
          "description": "Aggregation of metrics. Aggregated metric values will be shown in rows where the dimension_values are set to \"RESERVED_(MetricAggregation)\".",
          "type": "array"
        },
        "dimensions": {
          "description": "The dimensions requested and displayed.",
          "items": {
            "$ref": "Dimension"
          },
          "type": "array"
        },
        "metrics": {
          "description": "The metrics requested and displayed.",
          "type": "array",
          "items": {
            "$ref": "Metric"
          }
        },
        "entity": {
          "$ref": "Entity",
          "description": "A property whose events are tracked. Within a batch request, this entity should either be unspecified or consistent with the batch-level entity."
        },
        "metricFilter": {
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "keepEmptyRows": {
          "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter.",
          "type": "boolean"
        },
        "orderBys": {
          "items": {
            "$ref": "OrderBy"
          },
          "type": "array",
          "description": "Specifies how rows are ordered in the response."
        },
        "dimensionFilter": {
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter.",
          "$ref": "FilterExpression"
        },
        "cohortSpec": {
          "$ref": "CohortSpec",
          "description": "Cohort group associated with this request. If there is a cohort group in the request the 'cohort' dimension must be present."
        },
        "dateRanges": {
          "description": "Date ranges of data to read. If multiple date ranges are requested, each response row will contain a zero based date range index. If two date ranges overlap, the event data for the overlapping days is included in the response rows for both date ranges. In a cohort request, this `dateRanges` must be unspecified.",
          "items": {
            "$ref": "DateRange"
          },
          "type": "array"
        },
        "offset": {
          "format": "int64",
          "description": "The row count of the start row. The first row is counted as row 0.",
          "type": "string"
        },
        "returnPropertyQuota": {
          "type": "boolean",
          "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota)."
        },
        "limit": {
          "format": "int64",
          "description": "The number of rows to return. If unspecified, 10 rows are returned. If -1, all rows are returned.",
          "type": "string"
        }
      },
      "description": "The request to generate a report.",
      "id": "RunReportRequest",
      "type": "object"
    },
    "FilterExpression": {
      "properties": {
        "notExpression": {
          "description": "The FilterExpression is NOT of not_expression.",
          "$ref": "FilterExpression"
        },
        "orGroup": {
          "$ref": "FilterExpressionList",
          "description": "The FilterExpressions in or_group have an OR relationship."
        },
        "andGroup": {
          "description": "The FilterExpressions in and_group have an AND relationship.",
          "$ref": "FilterExpressionList"
        },
        "filter": {
          "description": "A primitive filter. All fields in filter in same FilterExpression needs to be either all dimensions or metrics.",
          "$ref": "Filter"
        }
      },
      "type": "object",
      "id": "FilterExpression",
      "description": "To express dimension or metric filters. The fields in the same FilterExpression need to be either all dimensions or all metrics."
    },
    "MetricValue": {
      "type": "object",
      "description": "The value of a metric.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Measurement value. See MetricHeader for type."
        }
      },
      "id": "MetricValue"
    },
    "NumericFilter": {
      "description": "Filters for numeric or date values.",
      "type": "object",
      "properties": {
        "value": {
          "description": "A numeric value or a date value.",
          "$ref": "NumericValue"
        },
        "operation": {
          "enum": [
            "OPERATION_UNSPECIFIED",
            "EQUAL",
            "LESS_THAN",
            "LESS_THAN_OR_EQUAL",
            "GREATER_THAN",
            "GREATER_THAN_OR_EQUAL"
          ],
          "description": "The operation type for this filter.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Equal",
            "Less than",
            "Less than or equal",
            "Greater than",
            "Greater than or equal"
          ]
        }
      },
      "id": "NumericFilter"
    },
    "Metric": {
      "type": "object",
      "description": "The quantitative measurements of a report. For example, the metric eventCount is the total number of events. Requests are allowed up to 10 metrics.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the metric."
        },
        "invisible": {
          "description": "Indicates if a metric is invisible. If a metric is invisible, the metric is not in the response, but can be used in filters, order_bys or being referred to in a metric expression.",
          "type": "boolean"
        },
        "expression": {
          "type": "string",
          "description": "A mathematical expression for derived metrics. For example, the metric Event count per user is eventCount/totalUsers."
        }
      },
      "id": "Metric"
    },
    "RunPivotReportResponse": {
      "id": "RunPivotReportResponse",
      "type": "object",
      "properties": {
        "metricHeaders": {
          "type": "array",
          "description": "Describes metric columns. The number of MetricHeaders and ordering of MetricHeaders matches the metrics present in rows.",
          "items": {
            "$ref": "MetricHeader"
          }
        },
        "metadata": {
          "description": "Metadata for the report.",
          "$ref": "ResponseMetaData"
        },
        "rows": {
          "type": "array",
          "description": "Rows of dimension value combinations and metric values in the report.",
          "items": {
            "$ref": "Row"
          }
        },
        "dimensionHeaders": {
          "description": "Describes dimension columns. The number of DimensionHeaders and ordering of DimensionHeaders matches the dimensions present in rows.",
          "type": "array",
          "items": {
            "$ref": "DimensionHeader"
          }
        },
        "propertyQuota": {
          "$ref": "PropertyQuota",
          "description": "This Analytics Property's quota state including this request."
        },
        "aggregates": {
          "description": "Aggregation of metric values. Can be totals, minimums, or maximums. The returned aggregations are controlled by the metric_aggregations in the pivot. The type of aggregation returned in each row is shown by the dimension_values which are set to \"RESERVED_\".",
          "items": {
            "$ref": "Row"
          },
          "type": "array"
        },
        "pivotHeaders": {
          "items": {
            "$ref": "PivotHeader"
          },
          "description": "Summarizes the columns and rows created by a pivot. Each pivot in the request produces one header in the response. If we have a request like this: \"pivots\": [{ \"fieldNames\": [\"country\", \"city\"] }, { \"fieldNames\": \"eventName\" }] We will have the following `pivotHeaders` in the response: \"pivotHeaders\" : [{ \"dimensionHeaders\": [{ \"dimensionValues\": [ { \"value\": \"United Kingdom\" }, { \"value\": \"London\" } ] }, { \"dimensionValues\": [ { \"value\": \"Japan\" }, { \"value\": \"Osaka\" } ] }] }, { \"dimensionHeaders\": [{ \"dimensionValues\": [{ \"value\": \"session_start\" }] }, { \"dimensionValues\": [{ \"value\": \"scroll\" }] }] }]",
          "type": "array"
        }
      },
      "description": "The response pivot report table corresponding to a pivot request."
    },
    "Filter": {
      "type": "object",
      "description": "An expression to filter dimension or metric values.",
      "properties": {
        "betweenFilter": {
          "$ref": "BetweenFilter",
          "description": "A filter for two values."
        },
        "stringFilter": {
          "$ref": "StringFilter",
          "description": "Strings related filter."
        },
        "numericFilter": {
          "description": "A filter for numeric or date values.",
          "$ref": "NumericFilter"
        },
        "nullFilter": {
          "description": "A filter for null values.",
          "type": "boolean"
        },
        "inListFilter": {
          "$ref": "InListFilter",
          "description": "A filter for in list values."
        },
        "fieldName": {
          "type": "string",
          "description": "The dimension name or metric name. Must be a name defined in dimensions or metrics."
        }
      },
      "id": "Filter"
    },
    "Entity": {
      "type": "object",
      "properties": {
        "propertyId": {
          "description": "A Google Analytics App + Web property id.",
          "type": "string"
        }
      },
      "description": "The unique identifier of the property whose events are tracked.",
      "id": "Entity"
    },
    "DimensionValue": {
      "id": "DimensionValue",
      "description": "The value of a dimension.",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value as a string if the dimension type is a string."
        }
      },
      "type": "object"
    },
    "BatchRunReportsResponse": {
      "description": "The batch response containing multiple reports.",
      "type": "object",
      "id": "BatchRunReportsResponse",
      "properties": {
        "reports": {
          "description": "Individual responses. Each response has a separate report request.",
          "type": "array",
          "items": {
            "$ref": "RunReportResponse"
          }
        }
      }
    },
    "CohortsRange": {
      "properties": {
        "startOffset": {
          "format": "int32",
          "description": "For daily cohorts, this will be the start day offset. For weekly cohorts, this will be the week offset.",
          "type": "integer"
        },
        "granularity": {
          "type": "string",
          "enum": [
            "GRANULARITY_UNSPECIFIED",
            "DAILY",
            "WEEKLY",
            "MONTHLY"
          ],
          "description": "Reporting date range for each cohort is calculated based on these three fields.",
          "enumDescriptions": [
            "Unspecified.",
            "Daily",
            "Weekly",
            "Monthly"
          ]
        },
        "endOffset": {
          "format": "int32",
          "description": "For daily cohorts, this will be the end day offset. For weekly cohorts, this will be the week offset.",
          "type": "integer"
        }
      },
      "type": "object",
      "id": "CohortsRange",
      "description": "Describes date range for a cohort report."
    },
    "MetricOrderBy": {
      "type": "object",
      "properties": {
        "metricName": {
          "description": "A metric name in the request to order by.",
          "type": "string"
        }
      },
      "id": "MetricOrderBy",
      "description": "Sorts by metric values."
    },
    "Row": {
      "id": "Row",
      "properties": {
        "metricValues": {
          "description": "List of requested visible metric values.",
          "items": {
            "$ref": "MetricValue"
          },
          "type": "array"
        },
        "dimensionValues": {
          "description": "List of requested dimension values. In a PivotReport, dimension_values are only listed for dimensions included in a pivot.",
          "type": "array",
          "items": {
            "$ref": "DimensionValue"
          }
        }
      },
      "type": "object",
      "description": "Report data for each row. For example if RunReportRequest contains: ```none dimensions { name: \"eventName\" } dimensions { name: \"countryId\" } metrics { name: \"eventCount\" } ``` One row with 'in_app_purchase' as the eventName, 'us' as the countryId, and 15 as the eventCount, would be: ```none dimension_values { name: 'in_app_purchase' name: 'us' } metric_values { int64_value: 15 } ```"
    },
    "MetricHeader": {
      "type": "object",
      "description": "Describes a metric column in the report. Visible metrics requested in a report produce column entries within rows and MetricHeaders. However, metrics used exclusively within filters or expressions do not produce columns in a report; correspondingly, those metrics do not produce headers.",
      "id": "MetricHeader",
      "properties": {
        "type": {
          "description": "The metric's data type.",
          "enum": [
            "METRIC_TYPE_UNSPECIFIED",
            "TYPE_INTEGER",
            "TYPE_FLOAT",
            "TYPE_SECONDS",
            "TYPE_MILLISECONDS",
            "TYPE_MINUTES",
            "TYPE_HOURS",
            "TYPE_STANDARD",
            "TYPE_CURRENCY",
            "TYPE_FEET",
            "TYPE_MILES",
            "TYPE_METERS",
            "TYPE_KILOMETERS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unspecified type.",
            "Integer type.",
            "Floating point type.",
            "A duration of seconds; a special floating point type.",
            "A duration in milliseconds; a special floating point type.",
            "A duration in minutes; a special floating point type.",
            "A duration in hours; a special floating point type.",
            "A custom metric of standard type; a special floating point type.",
            "An amount of money; a special floating point type.",
            "A length in feet; a special floating point type.",
            "A length in miles; a special floating point type.",
            "A length in meters; a special floating point type.",
            "A length in kilometers; a special floating point type."
          ]
        },
        "name": {
          "description": "The metric's name.",
          "type": "string"
        }
      }
    },
    "BatchRunPivotReportsResponse": {
      "description": "The batch response containing multiple pivot reports.",
      "properties": {
        "pivotReports": {
          "type": "array",
          "description": "Individual responses. Each response has a separate pivot report request.",
          "items": {
            "$ref": "RunPivotReportResponse"
          }
        }
      },
      "type": "object",
      "id": "BatchRunPivotReportsResponse"
    },
    "PivotOrderBy": {
      "properties": {
        "metricName": {
          "type": "string",
          "description": "In the response to order by, order rows by this column. Must be a metric name from the request."
        },
        "pivotSelections": {
          "items": {
            "$ref": "PivotSelection"
          },
          "type": "array",
          "description": "Used to select a dimension name and value pivot. If multiple pivot selections are given, the sort occurs on rows where all pivot selection dimension name and value pairs match the row's dimension name and value pair."
        }
      },
      "id": "PivotOrderBy",
      "description": "Sorts by a pivot column group.",
      "type": "object"
    },
    "BetweenFilter": {
      "description": "To express that the result needs to be between two numbers (inclusive).",
      "id": "BetweenFilter",
      "type": "object",
      "properties": {
        "toValue": {
          "$ref": "NumericValue",
          "description": "Ends with this number."
        },
        "fromValue": {
          "$ref": "NumericValue",
          "description": "Begins with this number."
        }
      }
    },
    "RunPivotReportRequest": {
      "properties": {
        "keepEmptyRows": {
          "type": "boolean",
          "description": "If false or unspecified, each row with all metrics equal to 0 will not be returned. If true, these rows will be returned if they are not separately removed by a filter."
        },
        "metrics": {
          "items": {
            "$ref": "Metric"
          },
          "description": "The metrics requested, at least one metric needs to be specified. All defined metrics must be used by one of the following: metric_expression, metric_filter, order_bys.",
          "type": "array"
        },
        "cohortSpec": {
          "$ref": "CohortSpec",
          "description": "Cohort group associated with this request. If there is a cohort group in the request the 'cohort' dimension must be present."
        },
        "dimensionFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of dimensions. Dimensions must be requested to be used in this filter. Metrics cannot be used in this filter."
        },
        "metricFilter": {
          "$ref": "FilterExpression",
          "description": "The filter clause of metrics. Applied at post aggregation phase, similar to SQL having-clause. Metrics must be requested to be used in this filter. Dimensions cannot be used in this filter."
        },
        "dateRanges": {
          "items": {
            "$ref": "DateRange"
          },
          "description": "The date range to retrieve event data for the report. If multiple date ranges are specified, event data from each date range is used in the report. A special dimension with field name \"dateRange\" can be included in a Pivot's field names; if included, the report compares between date ranges. In a cohort request, this `dateRanges` must be unspecified.",
          "type": "array"
        },
        "entity": {
          "description": "A property whose events are tracked. Within a batch request, this entity should either be unspecified or consistent with the batch-level entity.",
          "$ref": "Entity"
        },
        "pivots": {
          "items": {
            "$ref": "Pivot"
          },
          "description": "Describes the visual format of the report's dimensions in columns or rows. The union of the fieldNames (dimension names) in all pivots must be a subset of dimension names defined in Dimensions. No two pivots can share a dimension. A dimension is only visible if it appears in a pivot.",
          "type": "array"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "$ref": "Dimension"
          },
          "description": "The dimensions requested. All defined dimensions must be used by one of the following: dimension_expression, dimension_filter, pivots, order_bys."
        },
        "returnPropertyQuota": {
          "type": "boolean",
          "description": "Toggles whether to return the current state of this Analytics Property's quota. Quota is returned in [PropertyQuota](#PropertyQuota)."
        },
        "currencyCode": {
          "type": "string",
          "description": "A currency code in ISO4217 format, such as \"AED\", \"USD\", \"JPY\". If the field is empty, the report uses the entity's default currency."
        }
      },
      "type": "object",
      "id": "RunPivotReportRequest",
      "description": "The request to generate a pivot report."
    },
    "PivotSelection": {
      "description": "A pair of dimension names and values. Rows with this dimension pivot pair are ordered by the metric's value. For example if pivots = {{\"browser\", \"Chrome\"}} and metric_name = \"Sessions\", then the rows will be sorted based on Sessions in Chrome. ---------|----------|----------------|----------|---------------- | Chrome | Chrome | Safari | Safari ---------|----------|----------------|----------|---------------- Country | Sessions | Pages/Sessions | Sessions | Pages/Sessions ---------|----------|----------------|----------|---------------- US | 2 | 2 | 3 | 1 ---------|----------|----------------|----------|---------------- Canada | 3 | 1 | 4 | 1 ---------|----------|----------------|----------|----------------",
      "id": "PivotSelection",
      "properties": {
        "dimensionName": {
          "description": "Must be a dimension name from the request.",
          "type": "string"
        },
        "dimensionValue": {
          "description": "Order by only when the named dimension is this value.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Cohort": {
      "description": "Defines a cohort. A cohort is a group of users who share a common characteristic. For example, all users with the same acquisition date belong to the same cohort.",
      "type": "object",
      "id": "Cohort",
      "properties": {
        "dimension": {
          "description": "The dimension used by cohort. Only supports `firstTouchDate` for retention report.",
          "type": "string"
        },
        "name": {
          "description": "Assigns a name to this cohort. The dimension `cohort` is valued to this name in a report response. If set, cannot begin with `cohort_` or `RESERVED_`. If not set, cohorts are named by their zero based index `cohort_0`, `cohort_1`, etc.",
          "type": "string"
        },
        "dateRange": {
          "$ref": "DateRange",
          "description": "The cohort selects users whose first visit date is between start date and end date defined in the `dateRange`. In a cohort request, this `dateRange` is required and the `dateRanges` in the `RunReportRequest` or `RunPivotReportRequest` must be unspecified. The date range should be aligned with the cohort's granularity. If CohortsRange uses daily granularity, the date range can be aligned to any day. If CohortsRange uses weekly granularity, the date range should be aligned to the week boundary, starting at Sunday and ending Saturday. If CohortsRange uses monthly granularity, the date range should be aligned to the month, starting at the first and ending on the last day of the month."
        }
      }
    },
    "DimensionHeader": {
      "description": "Describes a dimension column in the report. Dimensions requested in a report produce column entries within rows and DimensionHeaders. However, dimensions used exclusively within filters or expressions do not produce columns in a report; correspondingly, those dimensions do not produce headers.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The dimension's name."
        }
      },
      "id": "DimensionHeader",
      "type": "object"
    },
    "Dimension": {
      "id": "Dimension",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the dimension."
        },
        "dimensionExpression": {
          "description": "One dimension can be the result of an expression of multiple dimensions. For example, dimension \"country, city\": concatenate(country, \", \", city).",
          "$ref": "DimensionExpression"
        }
      },
      "type": "object",
      "description": "Dimensions are attributes of your data. For example, the dimension City indicates the city, for example, \"Paris\" or \"New York\", from which an event originates. Requests are allowed up to 8 dimensions."
    },
    "CohortSpec": {
      "description": "Specification for a cohort report.",
      "type": "object",
      "properties": {
        "cohorts": {
          "description": "The definition for the cohorts.",
          "type": "array",
          "items": {
            "$ref": "Cohort"
          }
        },
        "cohortReportSettings": {
          "description": "Settings of a cohort report.",
          "$ref": "CohortReportSettings"
        },
        "cohortsRange": {
          "$ref": "CohortsRange",
          "description": "The data ranges of cohorts."
        }
      },
      "id": "CohortSpec"
    },
    "BatchRunPivotReportsRequest": {
      "type": "object",
      "description": "The batch request containing multiple pivot report requests.",
      "id": "BatchRunPivotReportsRequest",
      "properties": {
        "entity": {
          "$ref": "Entity",
          "description": "A property whose events are tracked. This entity must be specified for the batch. The entity within RunPivotReportRequest may either be unspecified or consistent with this entity."
        },
        "requests": {
          "items": {
            "$ref": "RunPivotReportRequest"
          },
          "type": "array",
          "description": "Individual requests. Each request has a separate pivot report response. Each batch request is allowed up to 5 requests."
        }
      }
    },
    "DimensionExpression": {
      "id": "DimensionExpression",
      "type": "object",
      "properties": {
        "lowerCase": {
          "$ref": "CaseExpression",
          "description": "Used to convert a dimension value to lower case."
        },
        "concatenate": {
          "$ref": "ConcatenateExpression",
          "description": "Used to combine dimension values to a single dimension. For example, dimension \"country, city\": concatenate(country, \", \", city)."
        },
        "upperCase": {
          "$ref": "CaseExpression",
          "description": "Used to convert a dimension value to upper case."
        }
      },
      "description": "Used to express a dimension which is the result of a formula of multiple dimensions. Example usages: 1) lower_case(dimension) 2) concatenate(dimension1, symbol, dimension2)."
    },
    "BatchRunReportsRequest": {
      "type": "object",
      "id": "BatchRunReportsRequest",
      "description": "The batch request containing multiple report requests.",
      "properties": {
        "entity": {
          "$ref": "Entity",
          "description": "A property whose events are tracked. This entity must be specified for the batch. The entity within RunReportRequest may either be unspecified or consistent with this entity."
        },
        "requests": {
          "type": "array",
          "description": "Individual requests. Each request has a separate report response. Each batch request is allowed up to 5 requests.",
          "items": {
            "$ref": "RunReportRequest"
          }
        }
      }
    }
  },
  "version_module": true,
  "description": "Accesses report data in Google Analytics.",
  "id": "analyticsdata:v1alpha",
  "batchPath": "batch",
  "title": "Google Analytics Data API",
  "protocol": "rest",
  "basePath": "",
  "kind": "discovery#restDescription",
  "mtlsRootUrl": "https://analyticsdata.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/analytics": {
          "description": "View and manage your Google Analytics data"
        },
        "https://www.googleapis.com/auth/analytics.readonly": {
          "description": "View your Google Analytics data"
        }
      }
    }
  },
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  }
}
