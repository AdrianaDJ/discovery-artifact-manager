{
  "discoveryVersion": "v1",
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "description": "Data format for response.",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "servicePath": "",
  "mtlsRootUrl": "https://sts.mtls.googleapis.com/",
  "baseUrl": "https://sts.googleapis.com/",
  "batchPath": "batch",
  "name": "sts",
  "version_module": true,
  "title": "Security Token Service API",
  "id": "sts:v1",
  "revision": "20201004",
  "kind": "discovery#restDescription",
  "ownerName": "Google",
  "canonicalName": "Cloud Security Token",
  "basePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "fullyEncodeReservedExpansion": true,
  "documentationLink": "http://cloud.google.com/iam/docs/workload-identity-federation",
  "protocol": "rest",
  "description": "The Security Token Service exchanges Google or third-party credentials for a short-lived access token to Google Cloud resources.",
  "version": "v1",
  "resources": {
    "v1": {
      "methods": {
        "token": {
          "description": "Exchanges a credential for a Google OAuth 2.0 access token.",
          "parameterOrder": [],
          "httpMethod": "POST",
          "id": "sts.token",
          "flatPath": "v1/token",
          "response": {
            "$ref": "GoogleIdentityStsV1ExchangeTokenResponse"
          },
          "request": {
            "$ref": "GoogleIdentityStsV1ExchangeTokenRequest"
          },
          "path": "v1/token",
          "parameters": {}
        }
      }
    }
  },
  "schemas": {
    "GoogleIdentityStsV1ExchangeTokenResponse": {
      "description": "Response message for ExchangeToken.",
      "type": "object",
      "properties": {
        "access_token": {
          "description": "An OAuth 2.0 security token, issued by Google, in response to the token exchange request.",
          "type": "string"
        },
        "issued_token_type": {
          "type": "string",
          "description": "The token type. Always matches the value of `requested_token_type` from the request."
        },
        "expires_in": {
          "format": "int32",
          "description": "The amount of time, in seconds, between the time when the `access_token` was issued and the time when the `access_token` will expire. This field is absent when the `subject_token` in the request is a Google-issued, short-lived access token. In this case, the `access_token` has the same expiration time as the `subject_token`.",
          "type": "integer"
        },
        "token_type": {
          "description": "The type of `access_token`. Always has the value `Bearer`.",
          "type": "string"
        }
      },
      "id": "GoogleIdentityStsV1ExchangeTokenResponse"
    },
    "GoogleIdentityStsV1ExchangeTokenRequest": {
      "id": "GoogleIdentityStsV1ExchangeTokenRequest",
      "description": "Request message for ExchangeToken.",
      "type": "object",
      "properties": {
        "subjectToken": {
          "type": "string",
          "description": "Required. The input token. You can use a Google-issued OAuth 2.0 access token with this field to obtain an access token with new security attributes applied, such as a Credential Access Boundary. If an access token already contains security attributes, you cannot apply additional security attributes."
        },
        "options": {
          "description": "A set of features that Security Token Service supports, in addition to the standard OAuth 2.0 token exchange, formatted as a serialized JSON object of Options.",
          "type": "string"
        },
        "requestedTokenType": {
          "description": "Required. An identifier for the type of requested security token. Must be `urn:ietf:params:oauth:token-type:access_token`.",
          "type": "string"
        },
        "subjectTokenType": {
          "type": "string",
          "description": "Required. An identifier that indicates the type of the security token in the `subject_token` parameter. Must be `urn:ietf:params:oauth:token-type:access_token`."
        },
        "grantType": {
          "type": "string",
          "description": "Required. The grant type. Must be `urn:ietf:params:oauth:grant-type:token-exchange`, which indicates a token exchange."
        }
      }
    }
  },
  "rootUrl": "https://sts.googleapis.com/",
  "ownerDomain": "google.com"
}
