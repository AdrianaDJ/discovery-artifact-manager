{
  "revision": "20200908",
  "fullyEncodeReservedExpansion": true,
  "batchPath": "batch",
  "resources": {
    "deployments": {
      "resources": {
        "devices": {
          "methods": {
            "move": {
              "path": "v1alpha1/{+name}:move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.deployments.devices.move",
              "description": "Moves a device under another node or customer.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameters": {
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the device to move.",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move"
            },
            "updateSigned": {
              "httpMethod": "PATCH",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "id": "prod_tt_sasportal.deployments.devices.updateSigned",
              "description": "Updates a signed device.",
              "path": "v1alpha1/{+name}:updateSigned",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device to update."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "signDevice": {
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "description": "Signs a device.",
              "id": "prod_tt_sasportal.deployments.devices.signDevice",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Output only. The resource path name."
                }
              }
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.deployments.devices.patch",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated."
                },
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "location": "path"
                }
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a device.",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}"
            },
            "delete": {
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the device.",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Deletes a device.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "httpMethod": "DELETE",
              "id": "prod_tt_sasportal.deployments.devices.delete"
            },
            "get": {
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the device."
                }
              },
              "httpMethod": "GET",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.deployments.devices.get",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Gets details about a device.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}"
            }
          }
        }
      }
    },
    "policies": {
      "methods": {
        "get": {
          "httpMethod": "POST",
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "flatPath": "v1alpha1/policies:get",
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "prod_tt_sasportal.policies.get",
          "path": "v1alpha1/policies:get",
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "parameters": {},
          "parameterOrder": []
        },
        "set": {
          "flatPath": "v1alpha1/policies:set",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
          "parameters": {},
          "id": "prod_tt_sasportal.policies.set",
          "parameterOrder": [],
          "path": "v1alpha1/policies:set",
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          },
          "response": {
            "$ref": "SasPortalPolicy"
          }
        },
        "test": {
          "description": "Returns permissions that a caller has on the specified resource.",
          "path": "v1alpha1/policies:test",
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "prod_tt_sasportal.policies.test",
          "flatPath": "v1alpha1/policies:test",
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "parameters": {}
        }
      }
    },
    "customers": {
      "methods": {
        "get": {
          "flatPath": "v1alpha1/customers/{customersId}",
          "path": "v1alpha1/{+name}",
          "description": "Returns a requested customer.",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "id": "prod_tt_sasportal.customers.get",
          "parameters": {
            "name": {
              "pattern": "^customers/[^/]+$",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Required. The name of the customer."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET"
        },
        "list": {
          "flatPath": "v1alpha1/customers",
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/customers",
          "description": "Returns a list of requested customers.",
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "description": "A pagination token returned from a previous call to ListCustomers method that indicates where this listing should continue from.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "location": "query",
              "format": "int32",
              "type": "integer",
              "description": "The maximum number of customers to return in the response."
            }
          },
          "id": "prod_tt_sasportal.customers.list"
        },
        "patch": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [
            "name"
          ],
          "path": "v1alpha1/{+name}",
          "description": "Updates an existing customer.",
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "flatPath": "v1alpha1/customers/{customersId}",
          "id": "prod_tt_sasportal.customers.patch",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "parameters": {
            "updateMask": {
              "location": "query",
              "type": "string",
              "description": "Fields to be updated.",
              "format": "google-fieldmask"
            },
            "name": {
              "pattern": "^customers/[^/]+$",
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Output only. Resource name of the customer."
            }
          },
          "httpMethod": "PATCH"
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.create",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              },
              "description": "Creates a device under a node or customer."
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.devices.get",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "description": "Gets details about a device.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the device."
                }
              }
            },
            "bulk": {
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/devices:bulk",
              "id": "prod_tt_sasportal.customers.devices.bulk",
              "flatPath": "v1alpha1/customers/{customersId}/devices:bulk",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "delete": {
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the device."
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.delete",
              "httpMethod": "DELETE",
              "description": "Deletes a device.",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "path": "v1alpha1/{+name}"
            },
            "patch": {
              "id": "prod_tt_sasportal.customers.devices.patch",
              "description": "Updates a device.",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated."
                }
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "signDevice": {
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "path": "v1alpha1/{+name}:signDevice",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Output only. The resource path name.",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.devices.signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Signs a device.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice"
            },
            "updateSigned": {
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "path": "v1alpha1/{+name}:updateSigned",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "parameters": {
                "name": {
                  "description": "Required. The name of the device to update.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates a signed device."
            },
            "createSigned": {
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "type": "string"
                }
              },
              "id": "prod_tt_sasportal.customers.devices.createSigned",
              "description": "Creates a signed device under a node or customer.",
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST"
            },
            "move": {
              "description": "Moves a device under another node or customer.",
              "path": "v1alpha1/{+name}:move",
              "id": "prod_tt_sasportal.customers.devices.move",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the device to move."
                }
              },
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "httpMethod": "POST"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists devices under a node or customer.",
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "httpMethod": "GET",
              "path": "v1alpha1/{+parent}/devices",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive."
                },
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "location": "path"
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                }
              },
              "id": "prod_tt_sasportal.customers.devices.list"
            }
          }
        },
        "nodes": {
          "methods": {
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the node."
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.nodes.delete",
              "description": "Deletes a node.",
              "path": "v1alpha1/{+name}"
            },
            "get": {
              "id": "prod_tt_sasportal.customers.nodes.get",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Returns a requested node.",
              "response": {
                "$ref": "SasPortalNode"
              }
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "id": "prod_tt_sasportal.customers.nodes.create",
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalNode"
              },
              "description": "Creates a new node.",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "path": "v1alpha1/{+parent}/nodes"
            },
            "patch": {
              "path": "v1alpha1/{+name}",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "description": "Fields to be updated.",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "description": "Output only. Resource name.",
                  "type": "string",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Updates an existing node.",
              "httpMethod": "PATCH"
            },
            "move": {
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "description": "Moves a node under another node or customer.",
              "parameters": {
                "name": {
                  "description": "Required. The name of the node to move.",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              },
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.customers.nodes.move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:move"
            },
            "list": {
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists nodes.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "id": "prod_tt_sasportal.customers.nodes.list",
              "path": "v1alpha1/{+parent}/nodes",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of nodes to return in the response.",
                  "format": "int32"
                },
                "parent": {
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "location": "path"
                }
              }
            }
          },
          "resources": {
            "nodes": {
              "methods": {
                "create": {
                  "path": "v1alpha1/{+parent}/nodes",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "description": "Creates a new node.",
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalNode"
                  }
                },
                "list": {
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "parameters": {
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of nodes to return in the response."
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list",
                  "description": "Lists nodes.",
                  "path": "v1alpha1/{+parent}/nodes",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                }
              }
            }
          }
        },
        "deployments": {
          "methods": {
            "move": {
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "description": "Required. The name of the deployment to move."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "description": "Moves a deployment under another node or customer.",
              "id": "prod_tt_sasportal.customers.deployments.move"
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.customers.deployments.devices.create",
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "description": "Creates a device under a node or customer.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "id": "prod_tt_sasportal.customers.deployments.devices.list",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  }
                },
                "createSigned": {
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned",
                  "id": "prod_tt_sasportal.customers.deployments.devices.createSigned",
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "description": "Creates a signed device under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "nodes": {
      "resources": {
        "deployments": {
          "methods": {
            "move": {
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the deployment to move.",
                  "required": true,
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "type": "string"
                }
              },
              "id": "prod_tt_sasportal.nodes.deployments.move",
              "description": "Moves a deployment under another node or customer.",
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST"
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "createSigned": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "httpMethod": "POST",
                  "id": "prod_tt_sasportal.nodes.deployments.devices.createSigned",
                  "description": "Creates a signed device under a node or customer.",
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "list": {
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive."
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.nodes.deployments.devices.list",
                  "description": "Lists devices under a node or customer.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "create": {
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.deployments.devices.create",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$"
                    }
                  },
                  "description": "Creates a device under a node or customer.",
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "request": {
                    "$ref": "SasPortalDevice"
                  }
                }
              }
            }
          }
        },
        "nodes": {
          "resources": {
            "devices": {
              "methods": {
                "bulk": {
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:bulk",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.bulk",
                  "path": "v1alpha1/{+parent}/devices:bulk",
                  "request": {
                    "$ref": "SasPortalBulkCreateDeviceRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Creates a device under a node or customer. Returned devices are unordered.",
                  "response": {
                    "$ref": "SasPortalBulkCreateDeviceResponse"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "description": "Creates a device under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    }
                  }
                },
                "createSigned": {
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "description": "Creates a signed device under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "list": {
                  "description": "Lists devices under a node or customer.",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "format": "int32",
                      "type": "integer"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "description": "Lists nodes.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "description": "Required. The parent resource name, for example, \"nodes/1\"."
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of nodes to return in the response.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    }
                  }
                },
                "create": {
                  "path": "v1alpha1/{+parent}/nodes",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource name where the node is to be created."
                    }
                  },
                  "description": "Creates a new node.",
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create",
                  "response": {
                    "$ref": "SasPortalNode"
                  }
                }
              }
            }
          },
          "methods": {
            "delete": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "id": "prod_tt_sasportal.nodes.nodes.delete",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The name of the node.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Deletes a node."
            },
            "patch": {
              "response": {
                "$ref": "SasPortalNode"
              },
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "updateMask": {
                  "description": "Fields to be updated.",
                  "location": "query",
                  "format": "google-fieldmask",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Output only. Resource name."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "request": {
                "$ref": "SasPortalNode"
              },
              "description": "Updates an existing node."
            },
            "list": {
              "id": "prod_tt_sasportal.nodes.nodes.list",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists nodes.",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "path": "v1alpha1/{+parent}/nodes",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of nodes to return in the response.",
                  "type": "integer"
                },
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "type": "string"
                }
              }
            },
            "create": {
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The parent resource name where the node is to be created."
                }
              },
              "request": {
                "$ref": "SasPortalNode"
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "id": "prod_tt_sasportal.nodes.nodes.create",
              "description": "Creates a new node.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "move": {
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the node to move.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Moves a node under another node or customer.",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              }
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Returns a requested node.",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the node."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.nodes.get",
              "httpMethod": "GET",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "response": {
                "$ref": "SasPortalNode"
              }
            }
          }
        },
        "devices": {
          "methods": {
            "move": {
              "response": {
                "$ref": "SasPortalOperation"
              },
              "description": "Moves a device under another node or customer.",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the device to move.",
                  "required": true
                }
              },
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "id": "prod_tt_sasportal.nodes.devices.move",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:move"
            },
            "updateSigned": {
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the device to update.",
                  "required": true,
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:updateSigned",
              "id": "prod_tt_sasportal.nodes.devices.updateSigned",
              "httpMethod": "PATCH",
              "description": "Updates a signed device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "prod_tt_sasportal.nodes.devices.list",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices",
              "description": "Lists devices under a node or customer.",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                },
                "parent": {
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "required": true,
                  "pattern": "^nodes/[^/]+$"
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "format": "int32",
                  "location": "query"
                }
              }
            },
            "bulk": {
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "path": "v1alpha1/{+parent}/devices:bulk",
              "id": "prod_tt_sasportal.nodes.devices.bulk",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:bulk",
              "httpMethod": "POST"
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "DELETE",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.nodes.devices.delete",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a device.",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              }
            },
            "patch": {
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "location": "query",
                  "description": "Fields to be updated.",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates a device.",
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "signDevice": {
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}:signDevice",
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "description": "Signs a device.",
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              }
            },
            "createSigned": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Creates a signed device under a node or customer.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "required": true
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.createSigned",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "httpMethod": "POST"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1alpha1/{+parent}/devices",
              "description": "Creates a device under a node or customer.",
              "id": "prod_tt_sasportal.nodes.devices.create"
            },
            "get": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.nodes.devices.get",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Gets details about a device."
            }
          }
        }
      },
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "description": "Required. The name of the node.",
              "pattern": "^nodes/[^/]+$",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "description": "Returns a requested node.",
          "response": {
            "$ref": "SasPortalNode"
          },
          "id": "prod_tt_sasportal.nodes.get",
          "httpMethod": "GET",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/nodes/{nodesId}"
        }
      }
    },
    "installer": {
      "methods": {
        "validate": {
          "flatPath": "v1alpha1/installer:validate",
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "parameters": {},
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "prod_tt_sasportal.installer.validate",
          "path": "v1alpha1/installer:validate",
          "httpMethod": "POST",
          "parameterOrder": []
        },
        "generateSecret": {
          "parameters": {},
          "httpMethod": "POST",
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "description": "Generates a secret to be used with the ValidateInstaller method",
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "flatPath": "v1alpha1/installer:generateSecret",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "id": "prod_tt_sasportal.installer.generateSecret",
          "parameterOrder": [],
          "path": "v1alpha1/installer:generateSecret"
        }
      }
    }
  },
  "canonicalName": "SAS Portal Testing",
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/",
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "name": "prod_tt_sasportal",
  "servicePath": "",
  "ownerDomain": "google.com",
  "schemas": {
    "SasPortalDevice": {
      "id": "SasPortalDevice",
      "properties": {
        "state": {
          "type": "string",
          "description": "Output only. Device state.",
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ]
        },
        "serialNumber": {
          "type": "string",
          "description": "A serial number assigned to the device by the device manufacturer."
        },
        "displayName": {
          "description": "Device display name.",
          "type": "string"
        },
        "deviceMetadata": {
          "$ref": "SasPortalDeviceMetadata",
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests."
        },
        "preloadedConfig": {
          "description": "Configuration of the device, as specified via SAS Portal API.",
          "$ref": "SasPortalDeviceConfig"
        },
        "activeConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Output only. Current configuration of the device as registered to the SAS."
        },
        "name": {
          "description": "Output only. The resource path name.",
          "type": "string"
        },
        "fccId": {
          "type": "string",
          "description": "The FCC identifier of the device."
        },
        "grants": {
          "description": "Output only. Grants held by the device.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDeviceGrant"
          }
        }
      },
      "type": "object"
    },
    "SasPortalListDevicesResponse": {
      "description": "Response for ListDevices method.",
      "properties": {
        "devices": {
          "description": "The devices that match the request.",
          "items": {
            "$ref": "SasPortalDevice"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDevices method that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalListDevicesResponse"
    },
    "SasPortalCustomer": {
      "id": "SasPortalCustomer",
      "properties": {
        "displayName": {
          "description": "Required. Name of the organization that the customer entity represents.",
          "type": "string"
        },
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "User IDs used by the devices belonging to this customer."
        },
        "name": {
          "description": "Output only. Resource name of the customer.",
          "type": "string"
        }
      },
      "description": "Entity representing a SAS customer.",
      "type": "object"
    },
    "SasPortalGenerateSecretRequest": {
      "type": "object",
      "id": "SasPortalGenerateSecretRequest",
      "properties": {},
      "description": "Request for GenerateSecret method] [spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret]."
    },
    "SasPortalDeviceMetadata": {
      "type": "object",
      "description": "Device data overridable by both SAS Portal and registration requests.",
      "id": "SasPortalDeviceMetadata",
      "properties": {}
    },
    "SasPortalDeviceConfig": {
      "id": "SasPortalDeviceConfig",
      "properties": {
        "category": {
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "type": "string",
          "description": "FCC category of the device."
        },
        "measurementCapabilities": {
          "items": {
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ],
            "type": "string",
            "enumDescriptions": [
              "",
              "",
              ""
            ]
          },
          "type": "array",
          "description": "Measurement reporting capabilities of the device."
        },
        "userId": {
          "description": "The identifier of a device user.",
          "type": "string"
        },
        "installationParams": {
          "$ref": "SasPortalInstallationParams",
          "description": "Installation parameters for the device."
        },
        "isSigned": {
          "type": "boolean",
          "description": "Output-only. Whether the configuration has been signed by a CPI."
        },
        "callSign": {
          "type": "string",
          "description": "The call sign of the device operator."
        },
        "airInterface": {
          "$ref": "SasPortalDeviceAirInterface",
          "description": "Information about this device's air interface."
        },
        "model": {
          "$ref": "SasPortalDeviceModel",
          "description": "Information about this device model."
        },
        "state": {
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "description": "State of the configuration.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "updateTime": {
          "description": "Output-only. The last time the device configuration was edited.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about the device configuration."
    },
    "SasPortalDeviceGrant": {
      "id": "SasPortalDeviceGrant",
      "properties": {
        "maxEirp": {
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of maxEirp represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
          "format": "double",
          "type": "number"
        },
        "suspensionReason": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "If the grant is suspended, the reason(s) for suspension."
        },
        "state": {
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ],
          "description": "State of the grant.",
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "type": "string"
        },
        "grantId": {
          "description": "Grant Id.",
          "type": "string"
        },
        "channelType": {
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Type of channel used."
        },
        "moveList": {
          "type": "array",
          "description": "The DPA move lists on which this grant appears.",
          "items": {
            "$ref": "SasPortalDpaMoveList"
          }
        },
        "frequencyRange": {
          "description": "The transmission frequency range.",
          "$ref": "SasPortalFrequencyRange"
        },
        "expireTime": {
          "description": "The expiration time of the grant.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device."
    },
    "SasPortalValidateInstallerRequest": {
      "description": "Request for ValidateInstaller method.",
      "type": "object",
      "id": "SasPortalValidateInstallerRequest",
      "properties": {
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret."
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database."
        },
        "secret": {
          "type": "string",
          "description": "Required. Secret returned by the GenerateSecret method."
        }
      }
    },
    "SasPortalDpaMoveList": {
      "description": "An entry in a DPA's move list.",
      "properties": {
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The frequency range that the move list affects."
        },
        "dpaId": {
          "type": "string",
          "description": "The ID of the DPA."
        }
      },
      "id": "SasPortalDpaMoveList",
      "type": "object"
    },
    "SasPortalSetPolicyRequest": {
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy."
        },
        "policy": {
          "description": "Required. The policy to be applied to the `resource`.",
          "$ref": "SasPortalPolicy"
        }
      },
      "type": "object",
      "description": "Request message for `SetPolicy` method.",
      "id": "SasPortalSetPolicyRequest"
    },
    "SasPortalMoveDeploymentRequest": {
      "type": "object",
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource Node or Customer to reparent the deployment under.",
          "type": "string"
        }
      },
      "description": "Request for MoveDeployment method.",
      "id": "SasPortalMoveDeploymentRequest"
    },
    "SasPortalOperation": {
      "id": "SasPortalOperation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        }
      }
    },
    "SasPortalSignDeviceRequest": {
      "description": "Request for SignDevice method.",
      "type": "object",
      "id": "SasPortalSignDeviceRequest",
      "properties": {
        "device": {
          "$ref": "SasPortalDevice",
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set."
        }
      }
    },
    "SasPortalDeviceAirInterface": {
      "type": "object",
      "description": "Information about the device's air interface.",
      "properties": {
        "radioTechnology": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "description": "This field specifies the radio access technology that is used for the CBSD. Conditional",
          "type": "string"
        },
        "supportedSpec": {
          "description": "This field is related to the radioTechnology field and provides the air interface specification that the CBSD is compliant with at the time of registration. Optional",
          "type": "string"
        }
      },
      "id": "SasPortalDeviceAirInterface"
    },
    "SasPortalListCustomersResponse": {
      "type": "object",
      "id": "SasPortalListCustomersResponse",
      "properties": {
        "customers": {
          "items": {
            "$ref": "SasPortalCustomer"
          },
          "description": "The list of customers that match the request.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListCustomers method that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers."
        }
      },
      "description": "Response for `ListCustomers`."
    },
    "SasPortalStatus": {
      "id": "SasPortalStatus",
      "properties": {
        "details": {
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "SasPortalPolicy": {
      "type": "object",
      "id": "SasPortalPolicy",
      "properties": {
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "The [etag] is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the [etag] in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An [etag] is returned in the response to [GetPolicy], and systems are expected to put that etag in the request to [SetPolicy] to ensure that their change will be applied to the same version of the policy. If no [etag] is provided in the call to [SetPolicy], then the existing policy is overwritten blindly."
        },
        "assignments": {
          "type": "array",
          "items": {
            "$ref": "SasPortalAssignment"
          }
        }
      },
      "description": "Defines an access control policy to the resources."
    },
    "SasPortalBulkCreateDeviceResponse": {
      "id": "SasPortalBulkCreateDeviceResponse",
      "description": "Response for BulkCreateDevice method.",
      "type": "object",
      "properties": {
        "devices": {
          "items": {
            "$ref": "SasPortalDevice"
          },
          "description": "Required. The devices that were imported.",
          "type": "array"
        }
      }
    },
    "SasPortalCreateSignedDeviceRequest": {
      "description": "Request for CreateSignedDevice method.",
      "id": "SasPortalCreateSignedDeviceRequest",
      "type": "object",
      "properties": {
        "encodedDevice": {
          "type": "string",
          "format": "byte",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the [Device]. The user_id field must be set."
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database."
        }
      }
    },
    "SasPortalNode": {
      "properties": {
        "displayName": {
          "description": "The node's display name.",
          "type": "string"
        },
        "sasUserIds": {
          "description": "User ids used by the devices belonging to this node.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Output only. Resource name.",
          "type": "string"
        }
      },
      "description": "The Node.",
      "id": "SasPortalNode",
      "type": "object"
    },
    "SasPortalBulkCreateDeviceRequest": {
      "type": "object",
      "id": "SasPortalBulkCreateDeviceRequest",
      "description": "Request for BulkCreateDevice method.",
      "properties": {
        "csv": {
          "description": "Required. A csv with each row representing a [device]. Each row must conform to the regulations described on CreateDeviceRequest's device field.",
          "type": "string"
        }
      }
    },
    "SasPortalGenerateSecretResponse": {
      "description": "Response for GenerateSecret method.",
      "id": "SasPortalGenerateSecretResponse",
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "The secret generated by the string and used by [ValidateInstaller] method."
        }
      }
    },
    "SasPortalMoveNodeRequest": {
      "description": "Request for MoveNode method.",
      "id": "SasPortalMoveNodeRequest",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource node or Customer) to reparent the node under."
        }
      },
      "type": "object"
    },
    "SasPortalEmpty": {
      "id": "SasPortalEmpty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "SasPortalListNodesResponse": {
      "id": "SasPortalListNodesResponse",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "$ref": "SasPortalNode"
          },
          "description": "The nodes that match the request."
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes method that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        }
      },
      "description": "Response for ListNodes method.",
      "type": "object"
    },
    "SasPortalTestPermissionsRequest": {
      "type": "object",
      "description": "Request message for `TestPermissions` method.",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        }
      },
      "id": "SasPortalTestPermissionsRequest"
    },
    "SasPortalTestPermissionsResponse": {
      "properties": {
        "permissions": {
          "description": "A set of permissions that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Response message for `TestPermissions` method.",
      "id": "SasPortalTestPermissionsResponse"
    },
    "SasPortalGetPolicyRequest": {
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being requested."
        }
      },
      "id": "SasPortalGetPolicyRequest",
      "type": "object",
      "description": "Request message for `GetPolicy` method."
    },
    "SasPortalMoveDeviceRequest": {
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource (Node or Customer) to reparent the device under."
        }
      },
      "id": "SasPortalMoveDeviceRequest",
      "type": "object",
      "description": "Request for MoveDevice method."
    },
    "SasPortalInstallationParams": {
      "type": "object",
      "id": "SasPortalInstallationParams",
      "properties": {
        "antennaBeamwidth": {
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices.",
          "format": "int32",
          "type": "integer"
        },
        "latitude": {
          "format": "double",
          "type": "number",
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator."
        },
        "cpeCbsdIndication": {
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
          "type": "boolean"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the device antenna location. in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian."
        },
        "antennaAzimuth": {
          "type": "integer",
          "format": "int32",
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices."
        },
        "height": {
          "format": "double",
          "description": "Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum.",
          "type": "number"
        },
        "horizontalAccuracy": {
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters.",
          "format": "double"
        },
        "antennaDowntilt": {
          "format": "int32",
          "type": "integer",
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices."
        },
        "antennaGain": {
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "antennaModel": {
          "type": "string",
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets."
        },
        "indoorDeployment": {
          "type": "boolean",
          "description": "Whether the device antenna is indoor or not. True: indoor. False: outdoor."
        },
        "eirpCapability": {
          "format": "int32",
          "type": "integer",
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category."
        },
        "heightType": {
          "type": "string",
          "description": "Specifies how the height is measured.",
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ],
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ]
        },
        "verticalAccuracy": {
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters.",
          "format": "double"
        }
      },
      "description": "Information about the device installation parameters."
    },
    "SasPortalDeviceModel": {
      "id": "SasPortalDeviceModel",
      "properties": {
        "firmwareVersion": {
          "description": "The firmware version of the device.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the device model."
        },
        "softwareVersion": {
          "type": "string",
          "description": "The software version of the device."
        },
        "vendor": {
          "type": "string",
          "description": "The name of the device vendor."
        },
        "hardwareVersion": {
          "description": "The hardware version of the device.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Information about the model of the device."
    },
    "SasPortalAssignment": {
      "properties": {
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`."
        },
        "role": {
          "description": "Required. Role that is assigned to `members`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalAssignment",
      "description": "Associates `members` with a `role`."
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "properties": {
        "encodedDevice": {
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "format": "byte",
          "type": "string"
        },
        "installerId": {
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalUpdateSignedDeviceRequest",
      "description": "Request for UpdateSignedDevice method."
    },
    "SasPortalFrequencyRange": {
      "description": "Frequency range from `low_frequency` to `high_frequency`.",
      "type": "object",
      "properties": {
        "lowFrequencyMhz": {
          "description": "The lowest frequency of the frequency range in MHz.",
          "format": "double",
          "type": "number"
        },
        "highFrequencyMhz": {
          "format": "double",
          "type": "number",
          "description": "The highest frequency of the frequency range in MHz."
        }
      },
      "id": "SasPortalFrequencyRange"
    },
    "SasPortalValidateInstallerResponse": {
      "type": "object",
      "id": "SasPortalValidateInstallerResponse",
      "description": "Response for ValidateInstaller method] [spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller].",
      "properties": {}
    }
  },
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    }
  },
  "version_module": true,
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        }
      }
    }
  },
  "id": "prod_tt_sasportal:v1alpha1",
  "title": "SAS Portal API (Testing)",
  "discoveryVersion": "v1",
  "version": "v1alpha1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "kind": "discovery#restDescription",
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "basePath": "",
  "description": "",
  "ownerName": "Google",
  "protocol": "rest"
}
