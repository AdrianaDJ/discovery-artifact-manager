{
  "discoveryVersion": "v1",
  "version_module": "True",
  "schemas": {
    "FlightavailabilityPartnerAvailQuestionsPointOfSale": {
      "properties": {
        "salesAirport": {
          "description": "3 to 5 letters.",
          "type": "string"
        },
        "salesCountry": {
          "description": "2 to 3 letters.\nDefaults to 'US'.",
          "type": "string"
        },
        "salesCity": {
          "description": "3 to 5 letters.",
          "type": "string"
        },
        "salesCrss": {
          "description": "Exactly 2 or 3 alphanumeric characters.\nCRS stands for Computer Reservation System.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "salesCarriers": {
          "description": "Exactly 2 or 3 alphanumeric characters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "FlightavailabilityPartnerAvailQuestionsPointOfSale",
      "description": "Location where the ticket is purchased.",
      "type": "object"
    },
    "FlightavailabilityPartnerAvailAnswersSolution": {
      "description": "One solution within an availability answer.",
      "type": "object",
      "properties": {
        "narrative": {
          "description": "Consists of the sequence of calculations done to produce the solution.",
          "type": "string"
        },
        "constraints": {
          "description": "All constraints that apply to a solution.",
          "$ref": "FlightavailabilityPartnerAvailAnswersConstraints"
        },
        "segmentCounts": {
          "description": "A list of seat counts for one or more segments.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailAnswersSegmentCounts"
          },
          "type": "array"
        },
        "timestampTime": {
          "format": "google-datetime",
          "description": "UTC timestamp that indicates when the solution was computed.",
          "type": "string"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersSolution"
    },
    "FlightavailabilityDate": {
      "properties": {
        "day": {
          "format": "int32",
          "description": "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.",
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "description": "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.",
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "description": "Month of year. Must be from 1 to 12.",
          "type": "integer"
        }
      },
      "id": "FlightavailabilityDate",
      "description": "Represents a whole calendar date, e.g. date of birth. The time of day and\ntime zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. The day may be 0 to\nrepresent a year and month where the day is not significant, e.g. credit card\nexpiration date. The year may be 0 to represent a month and day independent\nof year, e.g. anniversary date. Related types are google.type.TimeOfDay\nand `google.protobuf.Timestamp`.",
      "type": "object"
    },
    "FlightavailabilityPartnerAvailAnswersConstraints": {
      "description": "Conditions or constraints that apply to a solution.",
      "type": "object",
      "properties": {
        "sameBookingCodes": {
          "description": "Counts that are valid only when booking in the same BCs.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailAnswersConstraintWithEquivalence"
          },
          "type": "array"
        },
        "diffBookingCodes": {
          "description": "Counts that are valid only when booking in different BCs.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailAnswersConstraintWithEquivalence"
          },
          "type": "array"
        },
        "marriedSegments": {
          "description": "Segments that must be married.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailAnswersConstraint"
          },
          "type": "array"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersConstraints"
    },
    "FlightavailabilityPartnerAvailAnswersSegmentCounts": {
      "properties": {
        "narrative": {
          "description": "Consists of the sequence of calculations done to produce the segment.",
          "type": "string"
        },
        "segmentIndex": {
          "format": "int32",
          "description": "Segment index in the original question.",
          "type": "integer"
        },
        "seatCounts": {
          "description": "A list of seat counts for a segment.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailAnswersSeatCount"
          },
          "type": "array"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersSegmentCounts",
      "description": "A list of seat counts for a segment.",
      "type": "object"
    },
    "FlightavailabilityPartnerAvailQuestionsParameters": {
      "description": "Parameters upon which the questions should be answered.",
      "type": "object",
      "properties": {
        "seamlessAdjustment": {
          "description": "Whether a PAORES-adjusted answer has been requested.",
          "type": "boolean"
        },
        "carrierPreferredAnswer": {
          "description": "Indicates that answer should follow carrier preferred rules.",
          "type": "boolean"
        },
        "journeyDataSegments": {
          "description": "List of segments provided as journey data.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailQuestionsSegment"
          },
          "type": "array"
        },
        "pointOfSale": {
          "$ref": "FlightavailabilityPartnerAvailQuestionsPointOfSale",
          "description": "Location where tickets are purchased."
        }
      },
      "id": "FlightavailabilityPartnerAvailQuestionsParameters"
    },
    "FlightavailabilityPartnerAvailQuestionsQuestion": {
      "description": "One availability question.",
      "type": "object",
      "properties": {
        "segments": {
          "description": "List of segments to be queried for availability.\n\u003cp\u003e\u003caside class=\"note\"\u003e\u003cb\u003eNote:\u003c/b\u003e No more than 10 segments per question\nis allowed.\u003c/aside\u003e\u003c/p\u003e",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailQuestionsSegment"
          },
          "type": "array"
        },
        "journeyOriginCity": {
          "description": "Three-letter abbreviation for the city where the journey originates.",
          "type": "string"
        }
      },
      "id": "FlightavailabilityPartnerAvailQuestionsQuestion"
    },
    "FlightavailabilityPartnerAvailAnswersSeatCount": {
      "properties": {
        "count": {
          "format": "int32",
          "description": "Available seat counts.",
          "type": "integer"
        },
        "bookingCode": {
          "description": "Booking code, one or two letters.",
          "type": "string"
        },
        "seatsFlag": {
          "description": "Seats flag.",
          "$ref": "FlightavailabilityPartnerAvailAnswersSeatCountSeatsFlag"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersSeatCount",
      "description": "Availability count from the seat.",
      "type": "object"
    },
    "FlightavailabilityPartnerAvailQuestionsSegment": {
      "description": "A flight segment, also known as leg.",
      "type": "object",
      "properties": {
        "passiveSegment": {
          "description": "If true, then don't include an availability answer for this segment.\nThe default is \u003ccode\u003efalse\u003c/code\u003e (=include information).\nUseful for multiple segments with married availability, when it would\nonly be desirable to expose availability from a few selected segments.\n\u003cp\u003e\u003caside class=\"note\"\u003e\u003cb\u003eNote:\u003c/b\u003e \u003ci\u003eMarried availability\u003c/i\u003e refers to\nflight segments that are sold together based on origin and destination,\nbut might not be available if you try to book them separately, segment by\nsegment. For example, a routing from New York via Paris to Cairo might be\navailable when you book a New York-Cairo flight, but an airline might\nrestrict booking the two segments (New York to Paris, and Paris to Cairo)\nseparately.\u003c/aside\u003e\u003cp\u003e",
          "type": "boolean"
        },
        "departureDate": {
          "$ref": "FlightavailabilityDate",
          "description": "Departure date for this segment, in the time zone of the origin airport."
        },
        "bookingCode": {
          "description": "Booking code, one or two letters.",
          "type": "string"
        },
        "origin": {
          "description": "Three-letter code of the origin airport.",
          "type": "string"
        },
        "flightNumber": {
          "format": "int32",
          "description": "A positive number from 1 to 9999.",
          "type": "integer"
        },
        "destination": {
          "description": "Three-letter code of the destination airport.",
          "type": "string"
        },
        "carrier": {
          "description": "Exactly 2 alphanumeric characters.",
          "type": "string"
        }
      },
      "id": "FlightavailabilityPartnerAvailQuestionsSegment"
    },
    "FlightavailabilityPartnerAvailAnswersEquivalentBookingCodes": {
      "description": "A set of booking codes considered equivalent.",
      "type": "object",
      "properties": {
        "bookingCodes": {
          "description": "Booking code, one or two letters.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersEquivalentBookingCodes"
    },
    "FlightavailabilityPartnerAvailAnswersConstraint": {
      "description": "Conditions or constraints that apply to a solution.",
      "type": "object",
      "properties": {
        "segmentIndices": {
          "description": "Zero-based non-negative index into the list of segments in the original\nquestion.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersConstraint"
    },
    "FlightavailabilityPartnerAvailAnswers": {
      "description": "External (public) availability answer.",
      "type": "object",
      "properties": {
        "narrative": {
          "description": "Consists of the sequence of calculations done to produce the questions.",
          "type": "string"
        },
        "answers": {
          "description": "One-to-one mapping of answers to questions.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailAnswersAnswer"
          },
          "type": "array"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswers"
    },
    "FlightavailabilityPartnerAvailAnswersConstraintWithEquivalence": {
      "properties": {
        "equivalentBookingCodes": {
          "description": "Multiple groups if booking codes are to be treated as equivalent.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailAnswersEquivalentBookingCodes"
          },
          "type": "array"
        },
        "segmentIndices": {
          "description": "Zero-based non-negative index into the list of segments in the original\nquestion.",
          "items": {
            "format": "int32",
            "type": "integer"
          },
          "type": "array"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersConstraintWithEquivalence",
      "description": "Condition or constraint that applies to a set of segments and has sets of\nequivalent booking codes.",
      "type": "object"
    },
    "FlightavailabilityPartnerAvailQuestions": {
      "description": "External (public) availability questions.",
      "type": "object",
      "properties": {
        "questions": {
          "description": "Availability questions.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailQuestionsQuestion"
          },
          "type": "array"
        },
        "parameters": {
          "$ref": "FlightavailabilityPartnerAvailQuestionsParameters",
          "description": "Parameters that apply to all questions."
        }
      },
      "id": "FlightavailabilityPartnerAvailQuestions"
    },
    "FlightavailabilityPartnerAvailAnswersSeatCountSeatsFlag": {
      "description": "Seats flag parameters.",
      "type": "object",
      "properties": {
        "waitlistClosed": {
          "description": "Wait list closed.",
          "type": "boolean"
        },
        "nonOperating": {
          "description": "Non-operating.",
          "type": "boolean"
        },
        "infinityFlag": {
          "description": "More seats may be available.",
          "type": "boolean"
        },
        "waitlistOpen": {
          "description": "Wait list open.",
          "type": "boolean"
        },
        "onRequest": {
          "description": "Available on request.",
          "type": "boolean"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersSeatCountSeatsFlag"
    },
    "FlightavailabilityPartnerAvailAnswersAnswer": {
      "description": "One answer to an availability question.",
      "type": "object",
      "properties": {
        "foundNoSolution": {
          "description": "Set to true if no solution is found for the corresponding question.\n\u003cp\u003e\u003caside class=\"note\"\u003e\u003cb\u003eNote:\u003c/b\u003e We return no solution if AVS returns\nan empty solution or reports an error for that question.\u003caside\u003e\u003c/p\u003e",
          "type": "boolean"
        },
        "solutions": {
          "description": "The answer. It consists of multiple solutions.",
          "items": {
            "$ref": "FlightavailabilityPartnerAvailAnswersSolution"
          },
          "type": "array"
        },
        "narrative": {
          "description": "Consists of the sequence of calculations done to produce the answer.",
          "type": "string"
        }
      },
      "id": "FlightavailabilityPartnerAvailAnswersAnswer"
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "protocol": "rest",
  "canonicalName": "Flight Availability",
  "rootUrl": "https://flightavailability.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "flightavailability",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Google Flight Availability API",
  "ownerName": "Google",
  "resources": {
    "v1": {
      "methods": {
        "query": {
          "request": {
            "$ref": "FlightavailabilityPartnerAvailQuestions"
          },
          "description": "Called by a partner: receives questions, each of which consists of one or\nmore segments, and returns answers with availability data.",
          "response": {
            "$ref": "FlightavailabilityPartnerAvailAnswers"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "flatPath": "v1:query",
          "id": "flightavailability.query",
          "path": "v1:query"
        }
      }
    }
  },
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "pp": {
      "location": "query",
      "description": "Pretty-print response.",
      "default": "true",
      "type": "boolean"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "bearer_token": {
      "description": "OAuth bearer token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    }
  },
  "version": "v1",
  "baseUrl": "https://flightavailability.googleapis.com/",
  "servicePath": "",
  "description": "The Google Flight Availability API provides flight availability to partner airlines.\n",
  "kind": "discovery#restDescription",
  "basePath": "",
  "id": "flightavailability:v1",
  "revision": "20170713",
  "documentationLink": "https://devsite.googleplex.com/flightavailability"
}
