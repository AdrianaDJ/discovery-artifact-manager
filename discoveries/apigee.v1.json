{
  "canonicalName": "Apigee",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://apigee.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "apigee",
  "mtlsRootUrl": "https://apigee.mtls.googleapis.com/",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Apigee API",
  "ownerName": "Google",
  "resources": {
    "hybrid": {
      "resources": {
        "issuers": {
          "methods": {
            "list": {
              "flatPath": "v1/hybrid/issuers",
              "id": "apigee.hybrid.issuers.list",
              "path": "v1/{+name}",
              "description": "Lists hybrid services and its trusted issuers service account ids.\nThis api is authenticated and unauthorized(allow all the users) and used by\nruntime authn-authz service to query control plane's issuer service account\nids.",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListHybridIssuersResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^hybrid/issuers$",
                  "location": "path",
                  "description": "Required. Must be of the form `hybrid/issuers`.",
                  "type": "string",
                  "required": true
                }
              }
            }
          }
        }
      }
    },
    "organizations": {
      "methods": {
        "setSyncAuthorization": {
          "request": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "description": "Sets the permissions required to allow the Synchronizer to download\nenvironment data from the control plane. You must call this API to enable\nproper functioning of hybrid.\n\nPass the ETag when calling `setSyncAuthorization` to ensure that\nyou are updating the correct version. To get an ETag,\ncall [getSyncAuthorization](getSyncAuthorization).\nIf you don't pass the ETag in the call to `setSyncAuthorization`, then the\nexisting authorization is overwritten indiscriminately.\n\nFor more information, see\n[Enable Synchronizer\naccess](https://docs.apigee.com/hybrid/latest/synchronizer-access#enable-synchronizer-access).\n\n**Note**: Available to Apigee hybrid only.",
          "response": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "description": "Required. Name of the Apigee organization. Use the following structure in your\nrequest:\n `organizations/{org}`",
              "type": "string",
              "required": true,
              "pattern": "^organizations/[^/]+$",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/organizations/{organizationsId}:setSyncAuthorization",
          "id": "apigee.organizations.setSyncAuthorization",
          "path": "v1/{+name}:setSyncAuthorization"
        },
        "getSyncAuthorization": {
          "request": {
            "$ref": "GoogleCloudApigeeV1GetSyncAuthorizationRequest"
          },
          "description": "Lists the service accounts with the permissions required to allow\nthe Synchronizer to download environment data from the control plane.\n\nAn ETag is returned in the response to `getSyncAuthorization`.\nPass that ETag when calling [setSyncAuthorization](setSyncAuthorization)\nto ensure that you are updating the correct version. If you don't pass the\nETag in the call to `setSyncAuthorization`, then the existing authorization\nis overwritten indiscriminately.\n\nFor more information, see\n[Enable Synchronizer\naccess](https://docs.apigee.com/hybrid/latest/synchronizer-access#enable-synchronizer-access).\n\n**Note**: Available to Apigee hybrid only.",
          "httpMethod": "POST",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "parameters": {
            "name": {
              "type": "string",
              "required": true,
              "pattern": "^organizations/[^/]+$",
              "location": "path",
              "description": "Required. Name of the Apigee organization. Use the following structure in your\nrequest:\n `organizations/{org}`"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/organizations/{organizationsId}:getSyncAuthorization",
          "path": "v1/{+name}:getSyncAuthorization",
          "id": "apigee.organizations.getSyncAuthorization"
        },
        "list": {
          "response": {
            "$ref": "GoogleCloudApigeeV1ListOrganizationsResponse"
          },
          "parameterOrder": [
            "parent"
          ],
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "Required. Use the following structure in your request:\n  `organizations`",
              "type": "string",
              "required": true,
              "pattern": "^organizations$",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/organizations",
          "id": "apigee.organizations.list",
          "path": "v1/{+parent}",
          "description": "Lists the Apigee organizations and associated GCP projects that you have\npermission to access. See\n[Organizations](https://docs.apigee.com/hybrid/latest/terminology#organizations)."
        },
        "create": {
          "description": "Creates an Apigee organization. See\n[Create an\norganization](https://docs.apigee.com/hybrid/latest/precog-provision).",
          "request": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "parent": {
              "type": "string",
              "location": "query",
              "description": "Required. Name of the GCP project in which to associate the Apigee organization.\nPass the information as a query parameter using the following structure\nin your request:\n  `projects/\u003cproject\u003e`"
            }
          },
          "flatPath": "v1/organizations",
          "id": "apigee.organizations.create",
          "path": "v1/organizations"
        },
        "get": {
          "path": "v1/{+name}",
          "id": "apigee.organizations.get",
          "description": "Gets the profile for an Apigee organization.\nSee\n[Organizations](https://docs.apigee.com/hybrid/latest/terminology#organizations).",
          "httpMethod": "GET",
          "response": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "name": {
              "description": "Required. Apigee organization name in the following format:\n  `organizations/{org}`",
              "type": "string",
              "required": true,
              "pattern": "^organizations/[^/]+$",
              "location": "path"
            }
          },
          "flatPath": "v1/organizations/{organizationsId}"
        },
        "update": {
          "request": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "description": "Updates the properties for an Apigee organization. No other fields in the\norganization profile will be updated.",
          "response": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "PUT",
          "parameters": {
            "name": {
              "location": "path",
              "description": "Required. Apigee organization name in the following format:\n  `organizations/{org}`",
              "type": "string",
              "required": true,
              "pattern": "^organizations/[^/]+$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1/organizations/{organizationsId}",
          "id": "apigee.organizations.update",
          "path": "v1/{+name}"
        }
      },
      "resources": {
        "deployments": {
          "methods": {
            "list": {
              "description": "Lists all deployments of API proxies or shared flows.",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the organization for which to return deployment information in the\nfollowing format:\n `organizations/{org}`",
                  "type": "string",
                  "required": true
                },
                "sharedFlows": {
                  "location": "query",
                  "description": "Optional. Flag that specifies whether to return shared flow or API proxy deployments.\nSet to `true` to return shared flow deployments; set to `false`\nto return API proxy deployments. Defaults to `false`.",
                  "type": "boolean"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/deployments",
              "id": "apigee.organizations.deployments.list",
              "path": "v1/{+parent}/deployments"
            }
          }
        },
        "sharedflows": {
          "methods": {
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. The name to give the shared flow"
                },
                "action": {
                  "location": "query",
                  "description": "Required. Must be set to either `import` or `validate`.",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the parent organization under which to create the\nshared flow. Must be of the form:\n  `organizations/{organization_id}`"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/sharedflows",
              "path": "v1/{+parent}/sharedflows",
              "id": "apigee.organizations.sharedflows.create",
              "description": "Uploads a ZIP-formatted shared flow configuration bundle to an\norganization. If the shared flow already exists, this creates a new\nrevision of it. If the shared flow does not exist, this creates it.\n\nOnce imported, the shared flow revision must be deployed before it can be\naccessed at runtime.\n\nThe size limit of a shared flow bundle is 15 MB.",
              "request": {
                "$ref": "GoogleApiHttpBody"
              }
            },
            "delete": {
              "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}",
              "id": "apigee.organizations.sharedflows.delete",
              "path": "v1/{+name}",
              "description": "Deletes a shared flow and all it's revisions. The shared flow must be\nundeployed before you can delete it.",
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlow"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                  "location": "path",
                  "description": "Required. shared flow name of the form:\n  `organizations/{organization_id}/sharedflows/{shared_flow_id}`",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}",
              "path": "v1/{+name}",
              "id": "apigee.organizations.sharedflows.get",
              "description": "Gets a shared flow by name, including a list of its revisions.",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlow"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the shared flow to get. Must be of the\nform:\n  `organizations/{organization_id}/sharedflows/{shared_flow_id}`",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "description": "Lists all shared flows in the organization.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListSharedFlowsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the parent organization under which to get shared\nflows. Must be of the form:\n  `organizations/{organization_id}`",
                  "type": "string",
                  "required": true
                },
                "includeMetaData": {
                  "location": "query",
                  "description": "Indicates whether to include shared flow metadata in the response.",
                  "type": "boolean"
                },
                "includeRevisions": {
                  "location": "query",
                  "description": "Indicates whether to include a list of revisions in the response.",
                  "type": "boolean"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/sharedflows",
              "path": "v1/{+parent}/sharedflows",
              "id": "apigee.organizations.sharedflows.list"
            }
          },
          "resources": {
            "revisions": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the API proxy revision for which to return deployment information\nin the following format:\n  `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "path": "v1/{+parent}/deployments",
                      "id": "apigee.organizations.sharedflows.revisions.deployments.list",
                      "description": "Lists all deployments of a shared flow revision."
                    }
                  }
                }
              },
              "methods": {
                "get": {
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.sharedflows.revisions.get",
                  "description": "Gets a revision of a shared flow.\n\nIf `format=bundle` is passed, it instead outputs a shared flow revision as\na ZIP-formatted bundle of code and config files.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the shared flow revision to get. Must be of the\nform:\n  `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$"
                    },
                    "format": {
                      "location": "query",
                      "description": "Specify `bundle` to export the contents of the shared flow bundle.\nOtherwise, the bundle metadata is returned.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the shared flow revision to delete. Must be of the\nform:\n  `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.sharedflows.revisions.delete",
                  "description": "Deletes a shared flow and all associated policies, resources, and\nrevisions. You must undeploy the shared flow before deleting it.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
                  }
                },
                "updateSharedFlowRevision": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
                  },
                  "parameters": {
                    "validate": {
                      "description": "Ignored. All uploads are validated regardless of the value of this field.\nIt is kept for compatibility with existing APIs. Must be `true` or `false`\nif provided.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the shared flow revision to update.\nMust be of the form:\n  `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.sharedflows.revisions.updateSharedFlowRevision",
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "description": "Updates a shared flow revision. This operation is only allowed on revisions\nwhich have never been deployed. After deployment a revision becomes\nimmutable, even if it becomes undeployed.\n\nThe payload is a ZIP-formatted shared flow.  Content type must be either\nmultipart/form-data or application/octet-stream."
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "description": "Lists all deployments of a shared flow.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the shared flow for which to return deployment information in the\nfollowing format:\n  `organizations/{org}/sharedflows/{sharedflow}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/deployments",
                  "path": "v1/{+parent}/deployments",
                  "id": "apigee.organizations.sharedflows.deployments.list"
                }
              }
            }
          }
        },
        "environments": {
          "methods": {
            "updateDebugmask": {
              "path": "v1/{+name}",
              "id": "apigee.organizations.environments.updateDebugmask",
              "description": "Updates the debug mask singleton resource for an environment.",
              "request": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+/debugmask$",
                  "location": "path",
                  "description": "Name of the debug mask.",
                  "type": "string",
                  "required": true
                },
                "replaceRepeatedFields": {
                  "location": "query",
                  "description": "Boolean flag that specifies whether to replace existing values in the debug\nmask when doing an update. Set to true to replace existing values.\nThe default behavior is to append the values (false).",
                  "type": "boolean"
                },
                "updateMask": {
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "Field debug mask to support partial updates."
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/debugmask"
            },
            "delete": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the environment. Use the following structure in your\nrequest:\n `organizations/{org}/environments/{env}`",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "id": "apigee.organizations.environments.delete",
              "path": "v1/{+name}",
              "description": "Deletes an environment from an organization."
            },
            "getDeployedConfig": {
              "response": {
                "$ref": "GoogleCloudApigeeV1EnvironmentConfig"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment deployed configuration resource. Use the following\nstructure in your request:\n `organizations/{org}/environments/{env}/deployedConfig`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+/deployedConfig$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/deployedConfig",
              "id": "apigee.organizations.environments.getDeployedConfig",
              "path": "v1/{+name}",
              "description": "Gets the deployed configuration for an environment."
            },
            "setIamPolicy": {
              "request": {
                "$ref": "GoogleIamV1SetIamPolicyRequest"
              },
              "description": "Sets the IAM policy on an environment, if the policy already\nexists it will be replaced. For more information, see\n[Manage users, roles, and permissions\nusing the API](https://docs.apigee.com/hybrid/latest/manage-users-roles).\n\nYou must have the `apigee.environments.setIamPolicy` permission to\ncall this API.",
              "httpMethod": "POST",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "parameters": {
                "resource": {
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:setIamPolicy",
              "path": "v1/{+resource}:setIamPolicy",
              "id": "apigee.organizations.environments.setIamPolicy"
            },
            "getIamPolicy": {
              "parameters": {
                "options.requestedPolicyVersion": {
                  "format": "int32",
                  "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.",
                  "type": "integer",
                  "location": "query"
                },
                "resource": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:getIamPolicy",
              "path": "v1/{+resource}:getIamPolicy",
              "id": "apigee.organizations.environments.getIamPolicy",
              "description": "Gets the IAM policy on an environment. For more information, see\n[Manage users, roles, and permissions\nusing the API](https://docs.apigee.com/hybrid/latest/manage-users-roles).\n\nYou must have the `apigee.environments.getIamPolicy` permission to call\nthis API.",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "parameterOrder": [
                "resource"
              ]
            },
            "getDebugmask": {
              "response": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+/debugmask$",
                  "location": "path",
                  "description": "Required. Name of the debug mask. Use the following structure in your request:\n  `organizations/{org}/environments/{env}/debugmask`.",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/debugmask",
              "id": "apigee.organizations.environments.getDebugmask",
              "path": "v1/{+name}",
              "description": "Gets the debug mask singleton resource for an environment."
            },
            "getDatalocation": {
              "response": {
                "$ref": "GoogleCloudApigeeV1DataLocation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "repo": {
                  "location": "query",
                  "description": "Required. Repository name",
                  "type": "string"
                },
                "relativeFilePath": {
                  "type": "string",
                  "location": "query",
                  "description": "Required. Relative path to the GCS bucket"
                },
                "contentType": {
                  "location": "query",
                  "description": "Content-Type for uploaded file.",
                  "type": "string"
                },
                "name": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+/datalocation$",
                  "location": "path",
                  "description": "Required. The parent organization and environment names. Must be of the\nform `organizations/{org}/environments/{env}/datalocation`.",
                  "type": "string",
                  "required": true
                },
                "dataset": {
                  "location": "query",
                  "description": "Required. Dataset could be one of `api`, `mint`, `trace` and `event`",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/datalocation",
              "id": "apigee.organizations.environments.getDatalocation",
              "path": "v1/{+name}",
              "description": "Get Google Cloud Storage (GCS) signed url for specific organization and\nenvironment. Collection agent uses this signed url to upload data\nto GCS bucket."
            },
            "update": {
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the environment. Use the following structure in your request:\n `organizations/{org}/environments/{env}`"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "id": "apigee.organizations.environments.update",
              "path": "v1/{+name}",
              "description": "Updates an existing environment.\n\nWhen updating properties, you must pass all existing properties to the API,\neven if they are not being changed. If you omit properties from the\npayload, the properties are removed. To get the current list of\nproperties for the environment, use the [Get Environment API](get).",
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              }
            },
            "updateEnvironment": {
              "id": "apigee.organizations.environments.updateEnvironment",
              "path": "v1/{+name}",
              "description": "Updates an existing environment.\n\nWhen updating properties, you must pass all existing properties to the API,\neven if they are not being changed. If you omit properties from the\npayload, the properties are removed. To get the current list of\nproperties for the environment, use the [Get Environment API](get).",
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment. Use the following structure in your request:\n `organizations/{org}/environments/{env}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}"
            },
            "create": {
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "description": "Creates an environment in an organization.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "name": {
                  "description": "Optional. Name of the environment. Alternatively, the name may\nbe specified in the request body in the\nenvironment_id field.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. Name of the organization in which the environment will\nbe created. Use the following structure in your request:\n `organizations/{org}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments",
              "path": "v1/{+parent}/environments",
              "id": "apigee.organizations.environments.create"
            },
            "unsubscribe": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. Name of the environment. Use the following structure in your request:\n `organizations/{org}/environments/{env}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:unsubscribe",
              "id": "apigee.organizations.environments.unsubscribe",
              "path": "v1/{+parent}:unsubscribe",
              "description": "Deletes a subscription for the environment's Pub/Sub topic.",
              "request": {
                "$ref": "GoogleCloudApigeeV1Subscription"
              }
            },
            "get": {
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "id": "apigee.organizations.environments.get",
              "path": "v1/{+name}",
              "description": "Gets environment details.",
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment. Use the following structure in your request:\n `organizations/{org}/environments/{env}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path"
                }
              }
            },
            "subscribe": {
              "path": "v1/{+parent}:subscribe",
              "id": "apigee.organizations.environments.subscribe",
              "description": "Creates a subscription for the environment's Pub/Sub topic.\nThe server will assign a random name for this subscription.\nThe \"name\" and \"push_config\" must *not* be specified.",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Subscription"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the environment. Use the following structure in your request:\n `organizations/{org}/environments/{env}`"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:subscribe"
            },
            "testIamPermissions": {
              "response": {
                "$ref": "GoogleIamV1TestIamPermissionsResponse"
              },
              "parameterOrder": [
                "resource"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "resource": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:testIamPermissions",
              "id": "apigee.organizations.environments.testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "description": "Tests the permissions of a user on an environment,\nand returns a subset of permissions that the user has on the environment.\nIf the environment does not exist, an empty permission set is returned\n(a NOT_FOUND error is not returned).",
              "request": {
                "$ref": "GoogleIamV1TestIamPermissionsRequest"
              }
            }
          },
          "resources": {
            "keystores": {
              "methods": {
                "delete": {
                  "description": "Deletes a keystore or truststore.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of keystore to delete. Must be of the form\n`organizations/{organization}/environments/{environment}/keystores/{keystore}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.keystores.delete"
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of keystore. Must be of the form\n`organizations/{organization}/environments/{environment}/keystores/{keystore}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.keystores.get",
                  "description": "Gets a keystore or truststore."
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "query",
                      "description": "Optional. Overrides the value in Keystore.",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the environment in which to create the keystore.\nMust be of the form\n`organizations/{organization}/environments/{environment}`."
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores",
                  "id": "apigee.organizations.environments.keystores.create",
                  "path": "v1/{+parent}/keystores",
                  "description": "Creates a keystore or truststore:\n * Keystore: Contains certificates and their associated keys.\n * Truststore: Contains trusted certificates used to validate a\n server's certificate. These certificates are typically self-signed\n certificates or certificates that are not signed by a trusted CA.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST"
                }
              },
              "resources": {
                "aliases": {
                  "methods": {
                    "getCertificate": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}/certificate",
                      "id": "apigee.organizations.environments.keystores.aliases.getCertificate",
                      "path": "v1/{+name}/certificate",
                      "description": "Gets the certificate from an alias in PEM-encoded form.",
                      "response": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the alias. Must be of the form\n`organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.",
                          "type": "string",
                          "required": true
                        }
                      }
                    },
                    "create": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. The name of the keystore. Must be of the form\n`organizations/{organization}/environments/{environment}/keystores/{keystore}`.",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$",
                          "location": "path"
                        },
                        "alias": {
                          "location": "query",
                          "description": "The alias for the key, certificate pair. Values must match\nregular expression `[\\w\\s-.]{1,255}`. This must be provided for all formats\nexcept 'selfsignedcert'; self-signed certs may specify the alias in either\nthis parameter or the JSON body.",
                          "type": "string"
                        },
                        "format": {
                          "location": "query",
                          "description": "Required. The format of the data. Must be either `selfsignedcert`,\n`keycertfile`, or `pkcs12`.",
                          "type": "string"
                        },
                        "_password": {
                          "description": "The password for the private key file, if it exists.",
                          "type": "string",
                          "location": "query"
                        },
                        "ignoreExpiryValidation": {
                          "description": "If `true`, no expiry validation will be performed.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "ignoreNewlineValidation": {
                          "location": "query",
                          "description": "If `true`, do not throw an error when the file contains a chain with no\nnewline between each certificate. By default, a newline is needed between\neach certificate in a chain.",
                          "type": "boolean"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases",
                      "path": "v1/{+parent}/aliases",
                      "id": "apigee.organizations.environments.keystores.aliases.create",
                      "request": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "description": "Creates an alias from a key, certificate pair.\nThe structure of the request is controlled by the `format` query parameter:\n * `keycertfile` - Separate PEM-encoded key and certificate files are\n uploaded. The request must have `Content-Type: multipart/form-data` and\n include fields `keyFile` and `certFile`. If uploading to a truststore,\n omit `keyFile`.\n* `pkcs12` - A PKCS12 file is uploaded. The request must have\n`Content-Type: multipart/form-data` with the file provided in the only\nfield.\n* `selfsignedcert` - A new private key and certificate are generated. The\nrequest must have `Content-Type: application/json` and a body of\nCertificateGenerationSpec."
                    },
                    "csr": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}/csr",
                      "path": "v1/{+name}/csr",
                      "id": "apigee.organizations.environments.keystores.aliases.csr",
                      "description": "Generates a PKCS #10 Certificate Signing Request for the private key in\nan alias.",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the alias. Must be of the form\n`organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "get": {
                      "description": "Gets an alias.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the alias. Must be of the form\n`organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "id": "apigee.organizations.environments.keystores.aliases.get",
                      "path": "v1/{+name}"
                    },
                    "update": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "id": "apigee.organizations.environments.keystores.aliases.update",
                      "path": "v1/{+name}",
                      "request": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "description": "Updates the certificate in an alias.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PUT",
                      "parameters": {
                        "ignoreNewlineValidation": {
                          "description": "If `true`, do not throw an error when the file contains a chain with no\nnewline between each certificate. By default, a newline is needed between\neach certificate in a chain.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "ignoreExpiryValidation": {
                          "location": "query",
                          "description": "Required. If `true`, no expiry validation will be performed.",
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the alias. Must be of the form\n`organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the alias. Must be of the form\n`organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "path": "v1/{+name}",
                      "id": "apigee.organizations.environments.keystores.aliases.delete",
                      "description": "Deletes an alias.",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      }
                    }
                  }
                }
              }
            },
            "queries": {
              "methods": {
                "create": {
                  "id": "apigee.organizations.environments.queries.create",
                  "path": "v1/{+parent}/queries",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Query"
                  },
                  "description": "Submit a query to be processed in the background.\nIf the submission of the query succeeds, the API returns a 201 status and\nan ID that refer to the query. In addition to the HTTP status 201, the\n`state` of \"enqueued\" means that the request succeeded.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1AsyncQuery"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent organization and environment names.\nMust be of the form `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries"
                },
                "getResult": {
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries/{queriesId}/result",
                  "id": "apigee.organizations.environments.queries.getResult",
                  "path": "v1/{+name}",
                  "description": "After the query is completed, use this API to retrieve the results.\nIf the request succeeds, and there is a non-zero result set, the result is\ndownloaded to the client as a zipped JSON file.\nThe name of the downloaded file will be:\n  OfflineQueryResult-\u003cquery-id\u003e.zip\n\nExample: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`",
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the asynchronous query result to get. Must be of the\nform `organizations/{org}/environments/{env}/queries/{queryId}/result`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "description": "Return a list of Asynchronous Queries",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListAsyncQueriesResponse"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent organization and environment names.\nMust be of the form `organizations/{org}/environments/{env}`."
                    },
                    "status": {
                      "location": "query",
                      "description": "Filter response list by asynchronous query status",
                      "type": "string"
                    },
                    "dataset": {
                      "description": "Filter response list by dataset.\n\nExample: `api`, `mint`",
                      "type": "string",
                      "location": "query"
                    },
                    "submittedBy": {
                      "description": "Filter response list by user who submitted queries",
                      "type": "string",
                      "location": "query"
                    },
                    "from": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter response list by returning asynchronous queries that\ncreated after this date time.\nTime must be in ISO date-time format like '2011-12-03T10:15:30Z'."
                    },
                    "inclQueriesWithoutReport": {
                      "location": "query",
                      "description": "Flag to include asynchronous queries that don't have a report\ndenifition.",
                      "type": "string"
                    },
                    "to": {
                      "description": "Filter response list by returning asynchronous queries that\ncreated before this date time.\nTime must be in ISO date-time format like '2011-12-03T10:16:30Z'.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries",
                  "id": "apigee.organizations.environments.queries.list",
                  "path": "v1/{+parent}/queries"
                },
                "getResultView": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1AsyncQueryResultView"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the asynchronous query result view to get. Must be of the\nform `organizations/{org}/environments/{env}/queries/{queryId}/resultView`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/resultView$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries/{queriesId}/resultView",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.queries.getResultView",
                  "description": ""
                },
                "get": {
                  "id": "apigee.organizations.environments.queries.get",
                  "path": "v1/{+name}",
                  "description": "Get query status\nIf the query is still in progress, the `state` is set to \"running\"\nAfter the query has completed successfully, `state` is set to \"completed\"",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1AsyncQuery"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the asynchronous query to get. Must be of the form\n`organizations/{org}/environments/{env}/queries/{queryId}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries/{queriesId}"
                }
              }
            },
            "caches": {
              "methods": {
                "delete": {
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/caches/{cachesId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.caches.delete",
                  "description": "Deletes a cache.",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$",
                      "location": "path",
                      "description": "Required. Cache resource name of the form:\n    `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`",
                      "type": "string",
                      "required": true
                    }
                  }
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "sharedFlows": {
                      "location": "query",
                      "description": "Optional. Flag that specifies whether to return shared flow or API proxy deployments.\nSet to `true` to return shared flow deployments; set to `false`\nto return API proxy deployments. Defaults to `false`.",
                      "type": "boolean"
                    },
                    "parent": {
                      "description": "Required. Name of the environment for which to return deployment information in the\nfollowing format:\n  `organizations/{org}/environments/{env}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/deployments",
                  "id": "apigee.organizations.environments.deployments.list",
                  "path": "v1/{+parent}/deployments",
                  "description": "Lists all deployments of API proxies or shared flows in an environment."
                }
              }
            },
            "resourcefiles": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "type": {
                      "description": "Required. Resource file type.  {{ resource_file_type }}",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the environment in the following format:\n  `organizations/{org}/environments/{env}`."
                    },
                    "name": {
                      "description": "Required. ID of the resource file. Must match the regular\nexpression: \u003cvar\u003e[a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}\u003c/var\u003e",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "id": "apigee.organizations.environments.resourcefiles.get",
                  "description": "Gets the contents of a resource file.\n\nFor more information about resource files, see\n[Resource files](/api-platform/develop/resource-files)."
                },
                "update": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. ID of the resource file to update. Must match the regular\nexpression: \u003cvar\u003e[a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}\u003c/var\u003e",
                      "type": "string",
                      "required": true
                    },
                    "type": {
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Name of the environment in the following format:\n  `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "id": "apigee.organizations.environments.resourcefiles.update",
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "description": "Updates a resource file.\n\nSpecify the `Content-Type` as `application/octet-stream` or\n`multipart/form-data`.\n\nFor more information about resource files, see\n[Resource files](/api-platform/develop/resource-files).",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ],
                  "httpMethod": "PUT"
                },
                "listEnvironmentResources": {
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}",
                  "id": "apigee.organizations.environments.resourcefiles.listEnvironmentResources",
                  "path": "v1/{+parent}/resourcefiles/{type}",
                  "description": "Lists all resource files.\n\nFor more information about resource files, see\n[Resource files](/api-platform/develop/resource-files).",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse"
                  },
                  "parameterOrder": [
                    "parent",
                    "type"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "type": {
                      "location": "path",
                      "description": "Optional. Type of resource files to list.\n{{ resource_file_type }}",
                      "type": "string",
                      "required": true
                    },
                    "parent": {
                      "description": "Required. Name of the environment in which to list resource files in the following\nformat:\n  `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "type": {
                      "location": "path",
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "type": "string",
                      "required": true
                    },
                    "parent": {
                      "description": "Required. Name of the environment in the following format:\n  `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. ID of the resource file to delete. Must match the regular\nexpression: \u003cvar\u003e[a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}\u003c/var\u003e"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "id": "apigee.organizations.environments.resourcefiles.delete",
                  "description": "Deletes a resource file.\n\nFor more information about resource files, see\n[Resource files](/api-platform/develop/resource-files)."
                },
                "list": {
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles",
                  "path": "v1/{+parent}/resourcefiles",
                  "id": "apigee.organizations.environments.resourcefiles.list",
                  "description": "Lists all resource files.\n\nFor more information about resource files, see\n[Resource files](/api-platform/develop/resource-files).",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "type": {
                      "location": "query",
                      "description": "Optional. Type of resource files to list.\n{{ resource_file_type }}",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the environment in which to list resource files in the following\nformat:\n  `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the environment in which to create the resource file in the\nfollowing format:\n  `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "location": "query",
                      "description": "Required. Name of the resource file.  Must match the regular expression:\n\u003cvar\u003e[a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}\u003c/var\u003e",
                      "type": "string"
                    },
                    "type": {
                      "location": "query",
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles",
                  "path": "v1/{+parent}/resourcefiles",
                  "id": "apigee.organizations.environments.resourcefiles.create",
                  "description": "Creates a resource file.\n\nSpecify the `Content-Type` as `application/octet-stream` or\n`multipart/form-data`.\n\nFor more information about resource files, see\n[Resource files](/api-platform/develop/resource-files).",
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  }
                }
              }
            },
            "flowhooks": {
              "methods": {
                "get": {
                  "id": "apigee.organizations.environments.flowhooks.get",
                  "path": "v1/{+name}",
                  "description": "Returns the name of the shared flow attached to the specified flow hook. If\nthere's no shared flow attached to the flow hook, the API does not return\nan error; it simply does not return a name in the response.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the flow hook in the following format:\n  `organizations/{org}/environments/{env}/flowhooks/{flowhook}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}"
                },
                "attachSharedFlowToFlowHook": {
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.flowhooks.attachSharedFlowToFlowHook",
                  "description": "Attaches a shared flow to a flow hook.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the flow hook to which the shared flow should be\nattached in the following format:\n  `organizations/{org}/environments/{env}/flowhooks/{flowhook}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}"
                },
                "detachSharedFlowFromFlowHook": {
                  "id": "apigee.organizations.environments.flowhooks.detachSharedFlowFromFlowHook",
                  "path": "v1/{+name}",
                  "description": "Detaches a shared flow from a flow hook.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the flow hook to detach in the following format:\n  `organizations/{org}/environments/{env}/flowhooks/{flowhook}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}"
                }
              }
            },
            "analytics": {
              "resources": {
                "admin": {
                  "methods": {
                    "getSchemav2": {
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Schema"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$",
                          "location": "path",
                          "description": "Required. The parent organization and environment names. Must be of the\nform `organizations/{org}/environments/{env}/analytics/admin/schemav2`.",
                          "type": "string",
                          "required": true
                        },
                        "type": {
                          "location": "query",
                          "description": "Required. Type refers to the dataset name whose schema needs to be\nretrieved E.g. type=fact or type=agg_cus1",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/admin/schemav2",
                      "id": "apigee.organizations.environments.analytics.admin.getSchemav2",
                      "path": "v1/{+name}",
                      "description": "Get a list of metrics and dimensions which can be used for creating\nanalytics queries and reports.\nEach schema element contains the name of the field with its associated type\nand if it is either custom field or standard field."
                    }
                  }
                }
              }
            },
            "apis": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "description": "Lists all deployments of an API proxy in an environment.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$",
                          "location": "path",
                          "description": "Required. Name representing an API proxy in an environment in the following\nformat:\n  `organizations/{org}/environments/{env}/apis/{api}`",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/deployments",
                      "id": "apigee.organizations.environments.apis.deployments.list",
                      "path": "v1/{+parent}/deployments"
                    }
                  }
                },
                "revisions": {
                  "resources": {
                    "debugsessions": {
                      "methods": {
                        "deleteData": {
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "DELETE",
                          "parameters": {
                            "name": {
                              "description": "Required. The name of the debug session to delete.\nMust be of the form:\n `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`.",
                              "type": "string",
                              "required": true,
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$",
                              "location": "path"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions/{debugsessionsId}/data",
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.deleteData",
                          "path": "v1/{+name}/data",
                          "description": "Deletes the data from a debug session. This does not cancel the debug\nsession or prevent further data from being collected if the session is\nstill active in runtime pods."
                        },
                        "list": {
                          "description": "Lists debug sessions that are currently active in the given API Proxy\nrevision.",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1ListDebugSessionsResponse"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "required": true,
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "location": "path",
                              "description": "Required. The name of the API Proxy revision deployment for which\nto list debug sessions. Must be of the form:\n `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions",
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.list",
                          "path": "v1/{+parent}/debugsessions"
                        },
                        "create": {
                          "parameters": {
                            "timeout": {
                              "format": "int64",
                              "description": "Optional. The time in seconds after which this DebugSession should end.\nA timeout specified in DebugSession will overwrite this value.",
                              "type": "string",
                              "location": "query"
                            },
                            "parent": {
                              "type": "string",
                              "required": true,
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "location": "path",
                              "description": "Required. The resource name of the API Proxy revision deployment for which\nto create the DebugSession. Must be of the form\n `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`."
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions",
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.create",
                          "path": "v1/{+parent}/debugsessions",
                          "request": {
                            "$ref": "GoogleCloudApigeeV1DebugSession"
                          },
                          "description": "Creates a debug session for a deployed API Proxy revision.",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DebugSession"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST"
                        }
                      },
                      "resources": {
                        "data": {
                          "methods": {
                            "get": {
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "GoogleCloudApigeeV1DebugSessionTransaction"
                              },
                              "parameters": {
                                "name": {
                                  "description": "Required. The name of the debug session transaction. Must be of the form:\n `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{transaction}`.",
                                  "type": "string",
                                  "required": true,
                                  "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$",
                                  "location": "path"
                                }
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions/{debugsessionsId}/data/{dataId}",
                              "path": "v1/{+name}",
                              "id": "apigee.organizations.environments.apis.revisions.debugsessions.data.get",
                              "description": "Gets the debug data from a transaction."
                            }
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "getDeployments": {
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name representing an API proxy revision in an\nenvironment in the following format:\n  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "id": "apigee.organizations.environments.apis.revisions.getDeployments",
                      "path": "v1/{+name}/deployments",
                      "description": "Gets the deployment of an API proxy revision and actual state reported by\nruntime pods."
                    },
                    "deployments": {
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. Name of the API proxy revision deployment in the following format:\n  `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "id": "apigee.organizations.environments.apis.revisions.deployments",
                      "path": "v1/{+name}/deployments",
                      "description": "Undeploys an API proxy revision from an environment.\n\nBecause multiple revisions of the same API proxy can be deployed in\nthe same environment if the base paths are different, you must specify the\nrevision number of the API proxy."
                    }
                  }
                }
              }
            },
            "sharedflows": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/deployments",
                      "id": "apigee.organizations.environments.sharedflows.deployments.list",
                      "path": "v1/{+parent}/deployments",
                      "description": "Lists all deployments of a shared flow in an environment.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "description": "Required. Name representing a shared flow in an environment in the following\nformat:\n  `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$",
                          "location": "path"
                        }
                      }
                    }
                  }
                },
                "revisions": {
                  "methods": {
                    "deployments": {
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the shared flow revision to undeploy in the following format:\n  `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "path": "v1/{+name}/deployments",
                      "id": "apigee.organizations.environments.sharedflows.revisions.deployments",
                      "description": "Undeploys a shared flow revision from an environment."
                    },
                    "getDeployments": {
                      "description": "Gets the deployment of a shared flow revision and actual state reported by\nruntime pods.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Required. Name representing a shared flow in an environment in the following\nformat:\n  `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "id": "apigee.organizations.environments.sharedflows.revisions.getDeployments",
                      "path": "v1/{+name}/deployments"
                    }
                  }
                }
              }
            },
            "optimizedStats": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1OptimizedStats"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "tzo": {
                      "description": "This parameters contains the timezone offset value",
                      "type": "string",
                      "location": "query"
                    },
                    "sortby": {
                      "description": "Comma separated list of columns to sort the final result.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Enables drill-down on specific dimension values",
                      "type": "string",
                      "location": "query"
                    },
                    "aggTable": {
                      "location": "query",
                      "description": "If customers want to query custom aggregate tables, then this parameter\ncan be used to specify the table name. If this parameter is skipped, then\nEdge Query will try to retrieve the data from fact tables which will be\nexpensive.",
                      "type": "string"
                    },
                    "timeUnit": {
                      "description": "A value of second, minute, hour, day, week, month.\nTime Unit specifies the granularity of metrics returned.",
                      "type": "string",
                      "location": "query"
                    },
                    "sort": {
                      "location": "query",
                      "description": "This parameter specifies if the sort order should be ascending or\ndescending Supported values are DESC and ASC.",
                      "type": "string"
                    },
                    "topk": {
                      "location": "query",
                      "description": "Take 'top k' results from results, for example, to return the top 5\nresults 'topk=5'.",
                      "type": "string"
                    },
                    "tsAscending": {
                      "location": "query",
                      "description": "Lists timestamps in ascending order if set to true. Recommend setting\nthis value to true if you are using sortby with sort=DESC.",
                      "type": "boolean"
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. The organization and environment name for which the interactive\nquery will be executed. Must be of the form\n  `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`\nDimensions let you view metrics in meaningful groupings. E.g. apiproxy,\ntarget_host. The value of dimensions should be comma separated list as\nshown below\n`organizations/{org}/environments/{env}/stats/apiproxy,request_verb`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$"
                    },
                    "timeRange": {
                      "location": "query",
                      "description": "Required. Time interval for the interactive query.\nTime range is specified as start~end E.g. 04/15/2017 00:00~05/15/2017 23:59",
                      "type": "string"
                    },
                    "select": {
                      "location": "query",
                      "description": "Required. The select parameter contains a comma separated list of metrics\nE.g. sum(message_count),sum(error_count)",
                      "type": "string"
                    },
                    "limit": {
                      "location": "query",
                      "description": "This parameter is used to limit the number of result items.\nDefault and the max value is 14400",
                      "type": "string"
                    },
                    "offset": {
                      "location": "query",
                      "description": "Use offset with limit to enable pagination of results. For example,\nto display results 11-20, set limit to '10' and offset to '10'.",
                      "type": "string"
                    },
                    "accuracy": {
                      "location": "query",
                      "description": "Legacy field. not used anymore",
                      "type": "string"
                    },
                    "sonar": {
                      "location": "query",
                      "description": "This parameter routes the query to api monitoring service for last hour",
                      "type": "boolean"
                    },
                    "realtime": {
                      "location": "query",
                      "description": "Legacy field: not used anymore",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/optimizedStats/{optimizedStatsId}",
                  "id": "apigee.organizations.environments.optimizedStats.get",
                  "path": "v1/{+name}",
                  "description": "This api is similar to GetStats\nexcept that the response is less verbose.\nIn the current scheme, a query parameter _optimized instructs\nEdge Analytics to change the response but since this behavior\nis not possible with protocol buffer and since this parameter is\npredominantly used by Edge UI, we are introducing a separate api."
                }
              }
            },
            "keyvaluemaps": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the key value map.\nMust be of the form\n`organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keyvaluemaps/{keyvaluemapsId}",
                  "id": "apigee.organizations.environments.keyvaluemaps.delete",
                  "path": "v1/{+name}",
                  "description": "Delete a key value map in an environment."
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the environment in which to create the key value map.\nMust be of the form\n`organizations/{organization}/environments/{environment}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keyvaluemaps",
                  "id": "apigee.organizations.environments.keyvaluemaps.create",
                  "path": "v1/{+parent}/keyvaluemaps",
                  "description": "Creates a key value map in an environment.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  }
                }
              }
            },
            "targetservers": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the TargetServer to delete. Must be\nof the form\n`organizations/{org}/environments/{env}/targetservers/{target_server_id}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.targetservers.delete",
                  "description": "Deletes a TargetServer from an environment. Returns the deleted\nTargetServer resource."
                },
                "get": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the TargetServer to get. Must be of the form\n`organizations/{org}/environments/{env}/targetservers/{target_server_id}`.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "id": "apigee.organizations.environments.targetservers.get",
                  "path": "v1/{+name}",
                  "description": "Gets a TargetServer resource."
                },
                "update": {
                  "request": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "description": "Updates an existing TargetServer. Note that this operation has PUT\nsemantics; it will replace the entirety of the existing TargetServer with\nthe resource in the request body.",
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The name of the TargetServer to replace. Must be of the form\n`organizations/{org}/environments/{env}/targetservers/{target_server_id}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.targetservers.update"
                },
                "create": {
                  "parameters": {
                    "name": {
                      "description": "Optional. The ID to give the TargetServer. This will overwrite the\nvalue in TargetServer.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "description": "Required. The parent environment name under which the TargetServer will\nbe created. Must be of the form `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers",
                  "path": "v1/{+parent}/targetservers",
                  "id": "apigee.organizations.environments.targetservers.create",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "description": "Creates a TargetServer in the specified environment.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  }
                }
              }
            },
            "stats": {
              "methods": {
                "get": {
                  "description": "Retrieve metrics grouped by dimensions.\nThe types of metrics you can retrieve include traffic, message counts,\nAPI call latency, response size, and cache hits and counts.\nDimensions let you view metrics in meaningful groups.\nThe stats api does accept dimensions as path params. The dimensions are\noptional in which case the metrics are computed on the entire data\nfor the given timerange.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Stats"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "realtime": {
                      "description": "Legacy field: not used anymore",
                      "type": "boolean",
                      "location": "query"
                    },
                    "tzo": {
                      "description": "This parameters contains the timezone offset value",
                      "type": "string",
                      "location": "query"
                    },
                    "sortby": {
                      "location": "query",
                      "description": "Comma separated list of columns to sort the final result.",
                      "type": "string"
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Enables drill-down on specific dimension values"
                    },
                    "timeUnit": {
                      "location": "query",
                      "description": "A value of second, minute, hour, day, week, month.\nTime Unit specifies the granularity of metrics returned.",
                      "type": "string"
                    },
                    "aggTable": {
                      "location": "query",
                      "description": "If customers want to query custom aggregate tables, then this parameter\ncan be used to specify the table name. If this parameter is skipped, then\nEdge Query will try to retrieve the data from fact tables which will be\nexpensive.",
                      "type": "string"
                    },
                    "sort": {
                      "description": "This parameter specifies if the sort order should be ascending or\ndescending Supported values are DESC and ASC.",
                      "type": "string",
                      "location": "query"
                    },
                    "topk": {
                      "location": "query",
                      "description": "Take 'top k' results from results, for example, to return the top 5\nresults 'topk=5'.",
                      "type": "string"
                    },
                    "tsAscending": {
                      "description": "Lists timestamps in ascending order if set to true. Recommend setting\nthis value to true if you are using sortby with sort=DESC.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "description": "Required. The organization and environment name for which the interactive\nquery will be executed. Must be of the form\n  `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}`\nDimensions let you view metrics in meaningful groupings. E.g. apiproxy,\ntarget_host. The value of dimensions should be comma separated list as\nshown below\n`organizations/{org}/environments/{env}/stats/apiproxy,request_verb`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/stats/.*$",
                      "location": "path"
                    },
                    "timeRange": {
                      "location": "query",
                      "description": "Time interval for the interactive query.\nTime range is specified as start~end E.g. 04/15/2017 00:00~05/15/2017 23:59",
                      "type": "string"
                    },
                    "select": {
                      "location": "query",
                      "description": "The select parameter contains a comma separated list of metrics\nE.g. sum(message_count),sum(error_count)",
                      "type": "string"
                    },
                    "limit": {
                      "description": "This parameter is used to limit the number of result items.\nDefault and the max value is 14400",
                      "type": "string",
                      "location": "query"
                    },
                    "accuracy": {
                      "description": "Legacy field. not used anymore\nThis field is present to support UI calls which still use this parameter",
                      "type": "string",
                      "location": "query"
                    },
                    "offset": {
                      "location": "query",
                      "description": "Use offset with limit to enable pagination of results. For example,\nto display results 11-20, set limit to '10' and offset to '10'.",
                      "type": "string"
                    },
                    "sonar": {
                      "location": "query",
                      "description": "This parameter routes the query to api monitoring service for last hour",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/stats/{statsId}",
                  "id": "apigee.organizations.environments.stats.get",
                  "path": "v1/{+name}"
                }
              }
            },
            "references": {
              "methods": {
                "delete": {
                  "description": "Deletes a Reference from an environment. Returns the deleted\nReference resource.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Reference to delete. Must be\nof the form `organizations/{org}/environments/{env}/references/{ref}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.references.delete"
                },
                "get": {
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.references.get",
                  "description": "Gets a Reference resource.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the Reference to get. Must be of the form\n`organizations/{org}/environments/{env}/references/{ref}`.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}"
                },
                "update": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "PUT",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the Reference to update. Must be of the form\n`organizations/{org}/environments/{env}/references/{ref}`."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}",
                  "id": "apigee.organizations.environments.references.update",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "description": "Updates an existing Reference. Note that this operation has PUT\nsemantics; it will replace the entirety of the existing Reference with\nthe resource in the request body."
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent environment name under which the Reference will\nbe created. Must be of the form `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references",
                  "path": "v1/{+parent}/references",
                  "id": "apigee.organizations.environments.references.create",
                  "description": "Creates a Reference in the specified environment.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  }
                }
              }
            }
          }
        },
        "keyvaluemaps": {
          "methods": {
            "delete": {
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/keyvaluemaps/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the key value map.\nMust be of the form\n`organizations/{organization}/keyvaluemaps/{keyvaluemap}`."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/keyvaluemaps/{keyvaluemapsId}",
              "path": "v1/{+name}",
              "id": "apigee.organizations.keyvaluemaps.delete",
              "description": "Delete a key value map in an organization.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              }
            },
            "create": {
              "description": "Creates a key value map in an organization.",
              "request": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the organization in which to create the key value map\nfile. Must be of the form `organizations/{organization}`."
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/keyvaluemaps",
              "path": "v1/{+parent}/keyvaluemaps",
              "id": "apigee.organizations.keyvaluemaps.create"
            }
          }
        },
        "reports": {
          "methods": {
            "delete": {
              "id": "apigee.organizations.reports.delete",
              "path": "v1/{+name}",
              "description": "Deletes an existing custom report definition",
              "response": {
                "$ref": "GoogleCloudApigeeV1DeleteCustomReportResponse"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/reports/[^/]+$",
                  "location": "path",
                  "description": "Required. Custom Report name of the form:\n  `organizations/{organization_id}/reports/{report_name}`",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}"
            },
            "list": {
              "description": "Return a list of Custom Reports",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListCustomReportsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "expand": {
                  "description": "Set to 'true' to get expanded details about each custom report.",
                  "type": "boolean",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. The parent organization name under which the API product will\nbe listed\n  `organizations/{organization_id}/reports`",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/reports",
              "id": "apigee.organizations.reports.list",
              "path": "v1/{+parent}/reports"
            },
            "get": {
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Custom Report name of the form:\n  `organizations/{organization_id}/reports/{report_name}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/reports/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}",
              "path": "v1/{+name}",
              "id": "apigee.organizations.reports.get",
              "description": "Retrieve a custom report definition."
            },
            "update": {
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}",
              "id": "apigee.organizations.reports.update",
              "path": "v1/{+name}",
              "description": "Update an existing custom report definition",
              "request": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Custom Report name of the form:\n  `organizations/{organization_id}/reports/{report_name}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/reports/[^/]+$"
                }
              }
            },
            "create": {
              "request": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "description": "Creates a Custom Report for an Organization. A Custom Report\nprovides Apigee Customers to create custom dashboards in addition\nto the standard dashboards which are provided. The Custom Report in its\nsimplest form contains specifications about metrics, dimensions and\nfilters. It is important to note that the custom report by itself does not\nprovide an executable entity. The Edge UI converts the custom report\ndefinition into an analytics query and displays the result in a chart.",
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. The parent organization name under which the Custom Report will\nbe created. Must be of the form:\n  `organizations/{organization_id}/reports`"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/reports",
              "id": "apigee.organizations.reports.create",
              "path": "v1/{+parent}/reports"
            }
          }
        },
        "apps": {
          "methods": {
            "list": {
              "flatPath": "v1/organizations/{organizationsId}/apps",
              "path": "v1/{+parent}/apps",
              "id": "apigee.organizations.apps.list",
              "description": "Lists IDs of apps within an organization that have the specified app status\n(approved or revoked) or are of the specified app type\n(developer or company).",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListAppsResponse"
              },
              "parameters": {
                "ids": {
                  "location": "query",
                  "description": "Optional. Comma-separated list of app IDs on which to filter.",
                  "type": "string"
                },
                "includeCred": {
                  "location": "query",
                  "description": "Optional. Flag that specifies whether to include credentials in the\nresponse.",
                  "type": "boolean"
                },
                "rows": {
                  "location": "query",
                  "format": "int64",
                  "description": "Optional. Maximum number of app IDs to return. Defaults to 10000.",
                  "type": "string"
                },
                "apiProduct": {
                  "description": "API product.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. Resource path of the parent in the following format:\n `organizations/{org}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                },
                "status": {
                  "location": "query",
                  "description": "Optional. Filter by the status of the app. Valid values are `approved`\nor `revoked`. Defaults to `approved`.",
                  "type": "string"
                },
                "startKey": {
                  "location": "query",
                  "description": "Returns the list of apps starting from the specified app ID.",
                  "type": "string"
                },
                "expand": {
                  "location": "query",
                  "description": "Optional. Flag that specifies whether to return an expanded list of\napps for the organization. Defaults to `false`.",
                  "type": "boolean"
                },
                "apptype": {
                  "location": "query",
                  "description": "Optional. Filter by the type of the app. Valid values are `company` or\n`developer`. Defaults to `developer`.",
                  "type": "string"
                },
                "keyStatus": {
                  "location": "query",
                  "description": "Optional. Key status of the app. Valid values include `approved` or\n`revoked`. Defaults to `approved`.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "id": "apigee.organizations.apps.get",
              "path": "v1/{+name}",
              "description": "Gets the app profile for the specified app ID.",
              "response": {
                "$ref": "GoogleCloudApigeeV1App"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. App ID in the following format:\n `organizations/{org}/apps/{app}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apps/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apps/{appsId}"
            }
          }
        },
        "companies": {
          "resources": {
            "apps": {
              "methods": {
                "list": {
                  "description": "List company apps in an organization. You can optionally expand the\nresponse to include the profile for each app.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListCompanyAppsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "startKey": {
                      "description": "Lets you return a list of app starting with a specific app name in the\nlist.",
                      "type": "string",
                      "location": "query"
                    },
                    "count": {
                      "location": "query",
                      "format": "int64",
                      "description": "Limits the list to the number you specify. The limit is 100.",
                      "type": "string"
                    },
                    "expand": {
                      "location": "query",
                      "description": "Set expand to true to return a full profile",
                      "type": "boolean"
                    },
                    "parent": {
                      "pattern": "^organizations/[^/]+/companies/[^/]+$",
                      "location": "path",
                      "description": "The name of a company resource:\n`organizations/{org}/companies/{company_name}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}/apps",
                  "path": "v1/{+parent}/apps",
                  "id": "apigee.organizations.companies.apps.list"
                },
                "get": {
                  "description": "Gets the profile of a specific company app.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1CompanyApp"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "name of the app resource:\n`organizations/{org}/companies/{company_name}/apps/{app_name}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}/apps/{appsId}",
                  "id": "apigee.organizations.companies.apps.get",
                  "path": "v1/{+name}"
                },
                "update": {
                  "request": {
                    "$ref": "GoogleCloudApigeeV1CompanyApp"
                  },
                  "description": "Updates an existing company app.",
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1CompanyApp"
                  },
                  "parameters": {
                    "name": {
                      "description": "Resource path of the app:\n`organizations/{org}/companies/{company_name}/apps/{app_name}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}/apps/{appsId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.companies.apps.update"
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1CompanyApp"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Resource path of the parent: `organizations/{org}/companies/{company_name}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/companies/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}/apps",
                  "id": "apigee.organizations.companies.apps.create",
                  "path": "v1/{+parent}/apps",
                  "description": "Creates an app for a company.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1CompanyApp"
                  }
                },
                "delete": {
                  "description": "Deletes a company app.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1CompanyApp"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/companies/[^/]+/apps/[^/]+$",
                      "location": "path",
                      "description": "name of the app resource:\n`organizations/{org}/companies/{company_name}/apps/{app_name}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}/apps/{appsId}",
                  "id": "apigee.organizations.companies.apps.delete",
                  "path": "v1/{+name}"
                }
              },
              "resources": {
                "keys": {
                  "methods": {
                    "get": {
                      "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}/apps/{appsId}/keys/{keysId}",
                      "path": "v1/{+name}",
                      "id": "apigee.organizations.companies.apps.keys.get",
                      "description": "Gets information about the consumer key issued to a specific company app.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1CompanyAppKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Resource name of a company app key\n`organizations/{org}/companies/{company}/apps/{app}/keys/{key}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path"
                        }
                      }
                    },
                    "updateCompanyAppKey": {
                      "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}/apps/{appsId}/keys/{keysId}",
                      "id": "apigee.organizations.companies.apps.keys.updateCompanyAppKey",
                      "path": "v1/{+name}",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1CompanyAppKey"
                      },
                      "description": "Updates an existing company app key to add additional API products or\nattributes. Note that only a single API product can be resolved per app\nkey at runtime. API products are resolved by name, in alphabetical order.\nThe first API product found in the list will be returned.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1CompanyAppKey"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "action": {
                          "description": "Set action to approve or revoke.",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path",
                          "description": "Resource name of a company app key\n`organizations/{org}/companies/{company}/apps/{app}/keys/{key}`"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "description": "Deletes a key for a company app and removes all API products associated\nwith the app. The key can no longer be used to access any APIs.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1CompanyAppKey"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Resource name of a company app key\n`organizations/{org}/companies/{company}/apps/{app}/keys/{key}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/companies/[^/]+/apps/[^/]+/keys/[^/]+$"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}/apps/{appsId}/keys/{keysId}",
                      "id": "apigee.organizations.companies.apps.keys.delete",
                      "path": "v1/{+name}"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "delete": {
              "path": "v1/{+name}",
              "id": "apigee.organizations.companies.delete",
              "description": "Deletes an existing company.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Company"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/companies/[^/]+$",
                  "location": "path",
                  "description": "The company resource name\n`organizations/{org}/companies/{company}`",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}"
            },
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListCompaniesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "startKey": {
                  "location": "query",
                  "description": "To filter the keys that are returned, enter the email of a developer\nthat the list will start with.",
                  "type": "string"
                },
                "count": {
                  "format": "int64",
                  "description": "Limits the list to the number you specify. The limit is 100.",
                  "type": "string",
                  "location": "query"
                },
                "expand": {
                  "description": "Set expand to true to return a full profile for each company.",
                  "type": "boolean",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "The parent organization name\n`organizations/{org}`",
                  "type": "string",
                  "required": true
                },
                "includeDevelopers": {
                  "description": "Optional. include developers in the response.",
                  "type": "boolean",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/companies",
              "path": "v1/{+parent}/companies",
              "id": "apigee.organizations.companies.list",
              "description": "List all companies in an organization, and optionally returns an\nexpanded list of companies, displaying a full profile for each company in\nthe organization."
            },
            "get": {
              "description": "List details for a company.",
              "response": {
                "$ref": "GoogleCloudApigeeV1Company"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/companies/[^/]+$",
                  "location": "path",
                  "description": "The company resource name\n`organizations/{org}/companies/{company}`"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}",
              "id": "apigee.organizations.companies.get",
              "path": "v1/{+name}"
            },
            "update": {
              "flatPath": "v1/organizations/{organizationsId}/companies/{companiesId}",
              "id": "apigee.organizations.companies.update",
              "path": "v1/{+name}",
              "description": "Updates an existing company.\nSend the complete company record as a payload with any changes you want to\nmake. Note that to change the status of the Company you use Set the Status\nof a Company. The attributes in the sample payload below apply to company\nconfiguration in monetization. For non-monetized companies, you need send\nonly displayName.",
              "request": {
                "$ref": "GoogleCloudApigeeV1Company"
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1Company"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "action": {
                  "description": "Specify the status as active or inactive.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^organizations/[^/]+/companies/[^/]+$",
                  "location": "path",
                  "description": "Name of the company to be updated.\n`{name=organizations/*/companies/*}`",
                  "type": "string",
                  "required": true
                }
              }
            },
            "create": {
              "request": {
                "$ref": "GoogleCloudApigeeV1Company"
              },
              "description": "Creates an app for a company. Note that you must first create a profile\nfor the company in your organization before you can register apps that\nare associated with the company.",
              "response": {
                "$ref": "GoogleCloudApigeeV1Company"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Name of org that the company will be created in\n`{parent=organizations/*}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/companies",
              "id": "apigee.organizations.companies.create",
              "path": "v1/{+parent}/companies"
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the operation resource.",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/operations/[^/]+$"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/operations/{operationsId}",
              "path": "v1/{+name}",
              "id": "apigee.organizations.operations.get",
              "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              }
            },
            "list": {
              "description": "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The standard list page size."
                },
                "filter": {
                  "location": "query",
                  "description": "The standard list filter.",
                  "type": "string"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "description": "The name of the operation's parent resource.",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/operations",
              "path": "v1/{+name}/operations",
              "id": "apigee.organizations.operations.list"
            }
          }
        },
        "apis": {
          "methods": {
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxy"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Name of the API proxy in the following format:\n  `organizations/{org}/apis/{api}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apis/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}",
              "path": "v1/{+name}",
              "id": "apigee.organizations.apis.get",
              "description": "Gets an API proxy including a list of existing revisions."
            },
            "list": {
              "flatPath": "v1/organizations/{organizationsId}/apis",
              "id": "apigee.organizations.apis.list",
              "path": "v1/{+parent}/apis",
              "description": "Lists the names of all API proxies in an organization. The names returned\ncorrespond to the names defined in the configuration files for each API\nproxy.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListApiProxiesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. Name of the organization in the following format:\n  `organizations/{org}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                },
                "includeMetaData": {
                  "location": "query",
                  "description": "Flag that specifies whether to include API proxy metadata in the response.",
                  "type": "boolean"
                },
                "includeRevisions": {
                  "location": "query",
                  "description": "Flag that specifies whether to include a list of revisions in the response.",
                  "type": "boolean"
                }
              }
            },
            "create": {
              "description": "Creates an API proxy.\nThe API proxy created will not be accessible at runtime until it is\ndeployed to an environment.\n\nCreate a new API proxy by setting the `name` query parameter to the\nname of the API proxy.\n\nImport an API proxy configuration bundle stored in zip format\non your local machine to your organization by doing the following:\n\n* Set the `name` query parameter to the name of the API proxy.\n* Set the `action` query parameter to `import`.\n* Set the `Content-Type` header to `multipart/form-data`.\n* Pass as a file the name of API proxy\n  configuration bundle stored in zip format on your local machine using\n  the `file` form field.\n\n**Note**: To validate the API proxy configuration bundle only\n  without importing it, set the `action` query\n  parameter to `validate`.\n\nWhen importing an API proxy configuration bundle, if the API proxy\ndoes not exist, it will be created.\nIf the API proxy exists, then a new revision is created. Invalid API\nproxy configurations are rejected, and a list of validation errors is\nreturned to the client.",
              "request": {
                "$ref": "GoogleApiHttpBody"
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "action": {
                  "type": "string",
                  "location": "query",
                  "description": "Action to perform when importing an API proxy configuration bundle. Set\nthis parameter to one of the following values:\n\n* `import` to import the API proxy configuration bundle.\n* `validate` to validate the API proxy configuration bundle without\n   importing it."
                },
                "name": {
                  "description": "Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-",
                  "type": "string",
                  "location": "query"
                },
                "validate": {
                  "description": "Ignored. All uploads are validated regardless of the value of this\nfield. Maintained for compatibility with Apigee Edge API.",
                  "type": "boolean",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. Name of the organization in the following format:\n  `organizations/{org}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/apis",
              "id": "apigee.organizations.apis.create",
              "path": "v1/{+parent}/apis"
            },
            "delete": {
              "description": "Deletes an API proxy and all associated endpoints, policies, resources, and\nrevisions. The API proxy must be undeployed before you can delete it.",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxy"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/apis/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the API proxy in the following format:\n  `organizations/{org}/apis/{api}`",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}",
              "id": "apigee.organizations.apis.delete",
              "path": "v1/{+name}"
            }
          },
          "resources": {
            "keyvaluemaps": {
              "methods": {
                "delete": {
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/keyvaluemaps/{keyvaluemapsId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.apis.keyvaluemaps.delete",
                  "description": "Delete a key value map in an api proxy.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the key value map.\nMust be of the form\n`organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the environment in which to create the key value map.\nMust be of the form\n`organizations/{organization}/apis/{api}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/keyvaluemaps",
                  "id": "apigee.organizations.apis.keyvaluemaps.create",
                  "path": "v1/{+parent}/keyvaluemaps",
                  "description": "Creates a key value map in an api proxy.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  }
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the API proxy for which to return deployment information in the\nfollowing format:\n `organizations/{org}/apis/{api}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/deployments",
                  "path": "v1/{+parent}/deployments",
                  "id": "apigee.organizations.apis.deployments.list",
                  "description": "Lists all deployments of an API proxy."
                }
              }
            },
            "revisions": {
              "methods": {
                "updateApiProxyRevision": {
                  "id": "apigee.organizations.apis.revisions.updateApiProxyRevision",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "description": "Updates an existing API proxy revision by uploading the API proxy\nconfiguration bundle as a zip file from your local machine.\n\nYou can update only API proxy revisions\nthat have never been deployed. After deployment, an API proxy revision\nbecomes immutable, even if it is undeployed.\n\nSet the `Content-Type` header to either\n`multipart/form-data` or `application/octet-stream`.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Required. API proxy revision to update in the following format:\n  `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$",
                      "location": "path"
                    },
                    "validate": {
                      "location": "query",
                      "description": "Ignored. All uploads are validated regardless of the value of this field.\nMaintained for compatibility with Apigee Edge API.",
                      "type": "boolean"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}"
                },
                "delete": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. API proxy revision in the following format:\n  `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}",
                  "id": "apigee.organizations.apis.revisions.delete",
                  "path": "v1/{+name}",
                  "description": "Deletes an API proxy revision and all policies, resources, endpoints,\nand revisions associated with it. The API proxy revision must be undeployed\nbefore you can delete it."
                },
                "get": {
                  "description": "Gets an API proxy revision.\n\nTo download the API proxy configuration bundle for the specified revision\nas a zip file, do the following:\n\n * Set the `format` query parameter to `bundle`.\n * Set the `Accept` header to `application/zip`.\n\nIf you are using curl, specify `-o filename.zip` to save the output to a\nfile; otherwise, it displays to `stdout`. Then, develop the API proxy\nconfiguration locally and upload the updated API proxy configuration\nrevision, as described in\n[updateApiProxyRevision](updateApiProxyRevision).",
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "format": {
                      "description": "Format used when downloading the API proxy configuration revision.\nSet to `bundle` to download the API proxy configuration revision as a zip\nfile.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "description": "Required. API proxy revision in the following format:\n  `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}",
                  "id": "apigee.organizations.apis.revisions.get",
                  "path": "v1/{+name}"
                }
              },
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "description": "Lists all deployments of an API proxy revision.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the API proxy revision for which to return deployment information\nin the following format:\n  `organizations/{org}/apis/{api}/revisions/{rev}`.",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "path": "v1/{+parent}/deployments",
                      "id": "apigee.organizations.apis.revisions.deployments.list"
                    }
                  }
                }
              }
            }
          }
        },
        "apiproducts": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. API product name in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e/apiproducts/\u003cvar\u003eapi_product_name\u003c/var\u003e\u003c/pre\u003e",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}",
              "path": "v1/{+name}",
              "id": "apigee.organizations.apiproducts.delete",
              "description": "Deletes an API product from an organization.\n\nDeleting an API product\ncauses app requests to the resource URIs defined in the API product to\nfail.\n\nEnsure that you create a new API product to serve existing apps, unless\nyour intention is to disable access to the resources defined in the API\nproduct.\n\nThe API product name required in the request URL is the internal name of\nthe product, not the display name. While they may be the same, it depends\non whether the API product was created via the UI or the API. View the list\nof API products to verify the internal name."
            },
            "list": {
              "flatPath": "v1/organizations/{organizationsId}/apiproducts",
              "id": "apigee.organizations.apiproducts.list",
              "path": "v1/{+parent}/apiproducts",
              "description": "Lists all API product names for an organization.\nFilter the list by passing an `attributename` and `attibutevalue`.\n\nThe limit on the number of API products returned by the API is 1000. You\ncan paginate the list of API products returned using the `startKey` and\n`count` query parameters.",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListApiProductsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "parameters": {
                "attributename": {
                  "location": "query",
                  "description": "The name of the attribute to search.",
                  "type": "string"
                },
                "count": {
                  "format": "int64",
                  "description": "Enter the number of API products you want returned in the API call. The\nlimit is 1000.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "description": "**Required.** The parent organization name in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e\u003c/pre\u003e",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                },
                "startKey": {
                  "location": "query",
                  "description": "Gets a list of API products starting with a specific API product in the\nlist. For example, if you're returning 50 API products at a time (using the\n`count` query parameter), you can view products 50-99 by entering the name\nof the 50th API product in the first API (without using `startKey`).\nProduct name is case sensitive.",
                  "type": "string"
                },
                "attributevalue": {
                  "location": "query",
                  "description": "The value of the attribute.",
                  "type": "string"
                },
                "expand": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Set to `true` to get expanded details about each API."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "parameters": {
                "parent": {
                  "description": "Required. The parent organization name under which the API product will\nbe created. Must be in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e\u003c/pre\u003e",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apiproducts",
              "id": "apigee.organizations.apiproducts.create",
              "path": "v1/{+parent}/apiproducts",
              "request": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "description": "Creates an API product in an organization.\nYou create API products after\nyou have proxied backend services using API proxies.\nAn API product is a\ncollection of API resources combined with quota settings and metadata that\nyou can use to deliver customized and productized API bundles to your\ndeveloper community. This metadata can include:\n\n- Scope\n- Environments\n- API proxies\n- Extensible profile\n\nAPI products enable you repackage APIs\non-the-fly, without having to do any additional coding or configuration.\nApigee recommends that you start with a simple API product including only\nrequired elements. You then provision credentials to apps to enable them to\nstart testing your APIs.\n\nAfter you have authentication and authorization\nworking against a simple API product, you can iterate to create finer\ngrained API products, defining different sets of API resources for each API\nproduct.\n\n\u003caside class=\"warning\"\u003e\u003cstrong\u003eWARNING:\u003c/strong\u003e\n\n- If you don't specify an API proxy in the request body, \u003cem\u003eany\u003c/em\u003e app\nassociated with the product can make calls to \u003cem\u003eany\u003c/em\u003e API in your\nentire organization.\n- If you don't specify an environment in the request body, the product\nallows access to all environments.\n\n\u003c/aside\u003e\n\nFor more information, see {{what_api_product}}",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST"
            },
            "attributes": {
              "request": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "description": "Updates or creates API product attributes. This API **replaces** the\ncurrent list of attributes with the attributes specified in the request\nbody. In this way, you can update existing attributes, add new attributes,\nor delete existing attributes by omitting them from the request body.\n\nOAuth access tokens and Key Management Service (KMS) entities (apps,\ndevelopers, and API products) are cached for 180 seconds (current default).\nAny custom attributes associated with entities also get cached for at least\n180 seconds after entity is accessed during runtime.\nIn this case, the `ExpiresIn` element on the OAuthV2 policy won't be able\nto expire an access token in less than 180 seconds.",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "parameters": {
                "name": {
                  "description": "**Required.** API product name in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e/apiproducts/\u003cvar\u003eapi_product_name\u003c/var\u003e\u003c/pre\u003e",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes",
              "path": "v1/{+name}/attributes",
              "id": "apigee.organizations.apiproducts.attributes"
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "location": "path",
                  "description": "**Required.** API product name in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e/apiproducts/\u003cvar\u003eapi_product_name\u003c/var\u003e\u003c/pre\u003e"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}",
              "id": "apigee.organizations.apiproducts.get",
              "path": "v1/{+name}",
              "description": "Gets configuration details for an API product.\n\nThe API product name required in the request URL is the internal name of\nthe product, not the display name. While they may be the same, it depends\non whether the API product was created via the UI or the API. View the list\nof API products to verify the internal name."
            },
            "update": {
              "httpMethod": "PUT",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "**Required.** API product name in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e/apiproducts/\u003cvar\u003eapi_product_name\u003c/var\u003e\u003c/pre\u003e",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}",
              "path": "v1/{+name}",
              "id": "apigee.organizations.apiproducts.update",
              "description": "Updates an existing API product. You must include all required values,\nwhether or not you are updating them, as well as any optional values that\nyou are updating.\n\nThe API product name required in the request URL is the\ninternal name of the product, not the Display Name. While they may be the\nsame, it depends on whether the API product was created via UI or API. View\nthe list of API products to identify their internal names.",
              "request": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              }
            }
          },
          "resources": {
            "attributes": {
              "methods": {
                "updateApiProductAttribute": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "location": "path",
                      "description": "**Required.** API product name in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e/apiproducts/\u003cvar\u003eapi_product_name\u003c/var\u003e\u003c/pre\u003e"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "id": "apigee.organizations.apiproducts.attributes.updateApiProductAttribute",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "description": "Updates the value of an API product attribute. Limitations are:\n\nOAuth access tokens and Key Management Service (KMS) entities (apps,\ndevelopers, and API products) are cached for 180 seconds (current default).\nAny custom attributes associated with entities also get cached for at least\n180 seconds after entity is accessed during runtime.\nIn this case, the `ExpiresIn` element on the OAuthV2 policy won't be able\nto expire an access token in less than 180 seconds."
                },
                "list": {
                  "description": "Returns a list of all API product attributes.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent organization name. Must be in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e/apiproducts/\u003cvar\u003eapi_product_name\u003c/var\u003e\u003c/pre\u003e",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes",
                  "path": "v1/{+parent}/attributes",
                  "id": "apigee.organizations.apiproducts.attributes.list"
                },
                "get": {
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "id": "apigee.organizations.apiproducts.attributes.get",
                  "path": "v1/{+name}",
                  "description": "Returns the value of an API product attribute.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "location": "path",
                      "description": "**Required.** API product name in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e/apiproducts/\u003cvar\u003eapi_product_name\u003c/var\u003e/attributes/\u003cvar\u003eattribute_name\u003c/var\u003e\u003c/pre\u003e"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "description": "Deletes an API product attribute.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "location": "path",
                      "description": "**Required.** API product name in the following form:\n\u003cpre\u003eorganizations/\u003cvar\u003eorganization_ID\u003c/var\u003e/apiproducts/\u003cvar\u003eapi_product_name\u003c/var\u003e/attributes/\u003cvar\u003eattribute_name\u003c/var\u003e\u003c/pre\u003e"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "id": "apigee.organizations.apiproducts.attributes.delete",
                  "path": "v1/{+name}"
                }
              }
            }
          }
        },
        "developers": {
          "methods": {
            "delete": {
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "id": "apigee.organizations.developers.delete",
              "path": "v1/{+name}",
              "description": "Deletes a developer. All apps and API keys associated\nwith the developer are also removed.\n\n**Warning**: This API will permanently delete the developer\nand related artifacts.\n\nTo avoid permanently deleting developers and their artifacts,\nset the developer status to `inactive` using\nthe SetDeveloperStatus API.\n\n**Note**: The delete operation is asynchronous. The developer app is\ndeleted immediately,\nbut its associated resources, such as apps and API keys, may take anywhere\nfrom a few seconds to a few minutes to be deleted.",
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. Email address of the developer. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/developers/[^/]+$"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "list": {
              "description": "Lists all developers in an organization by email address.\n\nBy default,\nthe response does not include company developers. Set the `includeCompany`\nquery parameter to `true` to include company developers.\n\n**Note**: A maximum of 1000 developers are returned in the response. You\npaginate the list of developers returned using the `startKey` and `count`\nquery parameters.",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListOfDevelopersResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "expand": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Specifies whether to expand the results. Set to `true`\nto expand the results. This query parameter is not valid if you use\nthe `count` or `startKey` query parameters."
                },
                "ids": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. List of IDs to include, separated by commas."
                },
                "includeCompany": {
                  "description": "Flag that specifies whether to include company details in the response.",
                  "type": "boolean",
                  "location": "query"
                },
                "count": {
                  "type": "string",
                  "location": "query",
                  "format": "int64",
                  "description": "Optional. Number of developers to return in the API call. Use with the `startKey`\nparameter to provide more targeted filtering.\nThe limit is 1000."
                },
                "parent": {
                  "description": "Required. Name of the Apigee organization. Use the following structure in your\nrequest:\n  `organizations/{org}`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                },
                "startKey": {
                  "description": "**Note**: Must be used in conjunction with the `count` parameter.\n\nEmail address of the developer from which to start displaying the list of\ndevelopers. For example, if the an unfiltered list returns:\n\n```\nwestley@example.com\nfezzik@example.com\nbuttercup@example.com\n```\n\nand your `startKey` is `fezzik@example.com`, the list returned will be\n\n```\nfezzik@example.com\nbuttercup@example.com\n```",
                  "type": "string",
                  "location": "query"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/developers",
              "path": "v1/{+parent}/developers",
              "id": "apigee.organizations.developers.list"
            },
            "create": {
              "request": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "description": "Creates a developer. Once created,\nthe developer can register an app and obtain an API key.\n\nAt creation time, a developer is set as `active`. To change the developer\nstatus, use the SetDeveloperStatus API.",
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the Apigee organization in which the developer is created.\nUse the following structure in your request:\n  `organizations/{org}`.",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/developers",
              "id": "apigee.organizations.developers.create",
              "path": "v1/{+parent}/developers"
            },
            "attributes": {
              "description": "Updates developer attributes.\n\nThis API replaces the\nexisting attributes with those specified in the request.\nAdd new attributes, and include or exclude any existing\nattributes that you want to retain or\nremove, respectively.\n\nThe custom attribute limit is 18.\n\n**Note**: OAuth access tokens and Key Management Service (KMS) entities\n(apps, developers, and API products) are cached for 180 seconds\n(default). Any custom attributes associated with these entities\nare cached for at least 180 seconds after the entity is accessed at\nruntime. Therefore, an `ExpiresIn` element on the OAuthV2 policy\nwon't be able to expire an access token in less than 180 seconds.",
              "request": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. Email address of the developer for which attributes are being updated in\nthe following format:\n  `organizations/{org}/developers/{developer_email}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes",
              "path": "v1/{+parent}/attributes",
              "id": "apigee.organizations.developers.attributes"
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "action": {
                  "description": "Status of the developer. Valid values are `active` or `inactive`.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "description": "Required. Email address of the developer. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "id": "apigee.organizations.developers.get",
              "path": "v1/{+name}",
              "description": "Returns the developer details, including the\ndeveloper's name, email address, apps, and other information.\n\n**Note**: The response includes only the first 100 developer apps."
            },
            "update": {
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "location": "path",
                  "description": "Required. Email address of the developer. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}`",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "id": "apigee.organizations.developers.update",
              "path": "v1/{+name}",
              "description": "Updates a developer.\n\nThis API replaces the existing developer details with those specified\nin the request. Include or exclude any existing details that\nyou want to retain or delete, respectively.\n\nThe custom attribute limit is 18.\n\n**Note**: OAuth access tokens and Key Management Service (KMS) entities\n(apps, developers, and API products) are cached for 180 seconds\n(current default). Any custom attributes associated with these entities\nare cached for at least 180 seconds after the entity is accessed at\nruntime. Therefore, an `ExpiresIn` element on the OAuthV2 policy\nwon't be able to expire an access token in less than 180 seconds.",
              "request": {
                "$ref": "GoogleCloudApigeeV1Developer"
              }
            },
            "setDeveloperStatus": {
              "path": "v1/{+name}",
              "id": "apigee.organizations.developers.setDeveloperStatus",
              "description": "Sets the status of a developer. Valid values are `active` or `inactive`.\n\nA developer is `active` by default. If you set a developer's status to\n`inactive`, the API keys assigned to the developer apps are no longer valid\neven though the API keys are set to `approved`. Inactive developers\ncan still sign in to the developer portal and create apps; however, any\nnew API keys generated during app creation won't work.\n\nIf successful, the API call returns the\nfollowing HTTP status code: `204 No Content`",
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "action": {
                  "location": "query",
                  "description": "Status of the developer. Valid values are `active` and `inactive`.",
                  "type": "string"
                },
                "name": {
                  "description": "Required. Email address of the developer. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}"
            }
          },
          "resources": {
            "attributes": {
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the developer attribute. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}/attributes/{attribute}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.developers.attributes.delete",
                  "description": "Deletes a developer attribute."
                },
                "list": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes",
                  "path": "v1/{+parent}/attributes",
                  "id": "apigee.organizations.developers.attributes.list",
                  "description": "Returns a list of all developer attributes.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+$",
                      "location": "path",
                      "description": "Required. Email address of the developer for which attributes are being listed in the\nfollowing format:\n  `organizations/{org}/developers/{developer_email}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "updateDeveloperAttribute": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the developer attribute. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}/attributes/{attribute}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}",
                  "id": "apigee.organizations.developers.attributes.updateDeveloperAttribute",
                  "path": "v1/{+name}",
                  "description": "Updates a developer attribute.\n\n**Note**: OAuth access tokens and Key Management Service (KMS) entities\n(apps, developers, and API products) are cached for 180 seconds\n(default). Any custom attributes associated with these entities\nare cached for at least 180 seconds after the entity is accessed at\nruntime. Therefore, an `ExpiresIn` element on the OAuthV2 policy\nwon't be able to expire an access token in less than 180 seconds.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  }
                },
                "get": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}",
                  "id": "apigee.organizations.developers.attributes.get",
                  "path": "v1/{+name}",
                  "description": "Returns the value of the specified developer attribute.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the developer attribute. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}/attributes/{attribute}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$"
                    }
                  }
                }
              }
            },
            "apps": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the developer app. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "id": "apigee.organizations.developers.apps.delete",
                  "path": "v1/{+name}",
                  "description": "Deletes a developer app.\n\n**Note**: The delete operation is asynchronous. The developer app is\ndeleted immediately,\nbut its associated resources, such as app\nkeys or access tokens, may take anywhere from a few seconds to a\nfew minutes to be deleted."
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeveloperAppsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the developer. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+$",
                      "location": "path"
                    },
                    "shallowExpand": {
                      "description": "Optional. Specifies whether to expand the results in shallow mode.\nSet to `true` to expand the results in shallow mode.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "startKey": {
                      "description": "**Note**: Must be used in conjunction with the `count` parameter.\n\nName of the developer app from which to start displaying the list of\ndeveloper apps. For example, if you're returning 50 developer apps at\na time (using the `count` query parameter), you can view developer apps\n50-99 by entering the name of the 50th developer app.\nThe developer app name is case sensitive.",
                      "type": "string",
                      "location": "query"
                    },
                    "count": {
                      "location": "query",
                      "format": "int64",
                      "description": "Number of developer apps to return in the API call. Use with the `startKey`\nparameter to provide more targeted filtering.\nThe limit is 1000.",
                      "type": "string"
                    },
                    "expand": {
                      "location": "query",
                      "description": "Optional. Specifies whether to expand the results. Set to `true`\nto expand the results. This query parameter is not valid if you use\nthe `count` or `startKey` query parameters.",
                      "type": "boolean"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps",
                  "path": "v1/{+parent}/apps",
                  "id": "apigee.organizations.developers.apps.list",
                  "description": "Lists all apps created by a developer in an Apigee organization.\nOptionally, you can request an expanded view of the developer apps.\n\nA maximum of 100 developer apps are returned per API call. You can paginate\nthe list of deveoper apps returned using the `startKey` and `count` query\nparameters."
                },
                "create": {
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "description": "Creates an app associated with a developer. This API associates the\ndeveloper app with the specified API\nproduct and auto-generates an API key for the app to use in calls to API\nproxies inside that API product.\n\nThe `name` is the unique ID of the app\nthat you can use in API calls. The `DisplayName` (set as an\nattribute) appears in the UI. If you don't set the\n`DisplayName` attribute, the `name` appears in the UI.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the developer. Use the following structure in your request:\n   `organizations/{org}/developers/{developer_email}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps",
                  "path": "v1/{+parent}/apps",
                  "id": "apigee.organizations.developers.apps.create"
                },
                "attributes": {
                  "description": "Updates attributes for a developer app. This API replaces the\ncurrent attributes with those specified in the request.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the developer app. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes",
                  "path": "v1/{+name}/attributes",
                  "id": "apigee.organizations.developers.apps.attributes"
                },
                "get": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the developer app. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "type": "string",
                      "required": true
                    },
                    "query": {
                      "description": "**Note**: Must be used in conjunction with the `entity` parameter.\n\nSet to `count` to return the number of API resources\nthat have been approved for access by a developer app in the\nspecified Apigee organization.",
                      "type": "string",
                      "location": "query"
                    },
                    "entity": {
                      "description": "**Note**: Must be used in conjunction with the `query` parameter.\n\nSet to `apiresources`\nto return the number of API resources\nthat have been approved for access by a developer app in the\nspecified Apigee organization.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.developers.apps.get",
                  "description": "Returns the details for a developer app."
                },
                "update": {
                  "httpMethod": "PUT",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the developer app. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.developers.apps.update",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "description": "Updates the details for a developer app. In addition, you can\nadd an API product to a developer app and automatically generate\nan API key for the app to use when calling APIs in the API product.\n\nIf you want to use an existing API key for the API product,\nadd the API product to the API key using the\nUpdateDeveloperAppKey\nAPI.\n\nUsing this API, you cannot update the following:\n\n* App name as it is the primary key used to identify the app and cannot\n  be changed.\n* Scopes associated with the app. Instead, use the\n  ReplaceDeveloperAppKey API.\n\nThis API replaces the\nexisting attributes with those specified in the request.\nInclude or exclude any existing attributes that you want to retain or\ndelete, respectively."
                },
                "generateKeyPairOrUpdateDeveloperAppStatus": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.developers.apps.generateKeyPairOrUpdateDeveloperAppStatus",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "description": "Manages access to a developer app by enabling you to:\n\n* Approve or revoke a developer app\n* Generate a new consumer key and secret for a developer app\n\nTo approve or revoke a developer app, set the `action` query parameter to\n`approved` or `revoked`, respectively, and the\n`Content-Type` header to `application/octet-stream`. If a developer app is\nrevoked, none of its API keys are valid for API calls even though\nthe keys are still `approved`. If successful, the API call returns the\nfollowing HTTP status code: `204 No Content`\n\nTo generate a new consumer key and secret for a developer\napp, pass the new key/secret details. Rather than\nreplace an existing key, this API generates a new\nkey. In this case, multiple key\npairs may be associated with a single developer app. Each key pair has an\nindependent status (`approved` or `revoked`) and expiration time.\nAny approved, non-expired key can be used in an API call.\n\nFor example, if you're using API key rotation, you can generate new\nkeys with expiration times that overlap keys that are going to expire.\nYou might also generate a new consumer key/secret if the security of the\noriginal key/secret is compromised.\n\nThe `keyExpiresIn` property defines the\nexpiration time for the API key in milliseconds. If you don't set\nthis property or set it to `-1`, the API key never expires.\n\n**Notes**:\n\n* When generating a new key/secret, this API replaces the\nexisting attributes, notes, and callback URLs with those specified in the\nrequest. Include or exclude any existing information that you want to\nretain or delete, respectively.\n* To migrate existing consumer keys and secrets to hybrid from another\nsystem, see the\nCreateDeveloperAppKey API.",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "parameters": {
                    "action": {
                      "description": "Action. Valid values are `approve` or `revoke`.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the developer app. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "type": "string",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              },
              "resources": {
                "attributes": {
                  "methods": {
                    "delete": {
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the developer app attribute. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}",
                      "id": "apigee.organizations.developers.apps.attributes.delete",
                      "path": "v1/{+name}",
                      "description": "Deletes a developer app attribute."
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attributes"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. Name of the developer app. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes",
                      "id": "apigee.organizations.developers.apps.attributes.list",
                      "path": "v1/{+parent}/attributes",
                      "description": "Returns a list of all developer app attributes."
                    },
                    "get": {
                      "description": "Returns a developer app attribute.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the developer app attribute. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}",
                      "id": "apigee.organizations.developers.apps.attributes.get",
                      "path": "v1/{+name}"
                    },
                    "updateDeveloperAppAttribute": {
                      "description": "Updates a developer app attribute.\n\n**Note**: OAuth access tokens and Key Management Service (KMS) entities\n(apps, developers, and API products) are cached for 180 seconds\n(current default). Any custom attributes associated with these entities\nare cached for at least 180 seconds after the entity is accessed at\nruntime. Therefore, an `ExpiresIn` element on the OAuthV2 policy\nwon't be able to expire an access token in less than 180 seconds.",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the developer app attribute. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}",
                      "path": "v1/{+name}",
                      "id": "apigee.organizations.developers.apps.attributes.updateDeveloperAppAttribute"
                    }
                  }
                },
                "keys": {
                  "methods": {
                    "replaceDeveloperAppKey": {
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "path": "v1/{+name}",
                      "id": "apigee.organizations.developers.apps.keys.replaceDeveloperAppKey",
                      "description": "Updates the scope of an app.\n\nThis API replaces the\nexisting scopes with those specified in the request.\nInclude or exclude any existing scopes that you want to retain or\ndelete, respectively. The specified scopes must already\nbe defined for the API products associated with the app.\n\nThis API sets the `scopes` element\nunder the `apiProducts` element in the attributes of the app.",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "httpMethod": "PUT",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Name of the developer app key. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path"
                        }
                      }
                    },
                    "updateDeveloperAppKey": {
                      "httpMethod": "POST",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "action": {
                          "description": "Approve or revoke the consumer key by setting this value to\n`approve` or `revoke`, respectively.",
                          "type": "string",
                          "location": "query"
                        },
                        "name": {
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path",
                          "description": "Name of the developer app key. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "path": "v1/{+name}",
                      "id": "apigee.organizations.developers.apps.keys.updateDeveloperAppKey",
                      "description": "Adds an API product to a developer app key, enabling the app that holds\nthe key to access the API resources bundled in the API product.\n\nIn addition, you can add\nattributes to a developer app key. This API replaces the\nexisting attributes with those specified in the request.\nInclude or exclude any existing attributes that you want to retain or\ndelete, respectively.\n\nYou can use the same key to access all API products\nassociated with the app.",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      }
                    },
                    "delete": {
                      "id": "apigee.organizations.developers.apps.keys.delete",
                      "path": "v1/{+name}",
                      "description": "Deletes an app's consumer key and removes all API products\nassociated with the app. After the consumer key is deleted,\nit cannot be used to access any APIs.\n\n**Note**: After you delete a consumer key, you may want to:\n1. Create a new consumer key and secret for the developer app using the\nCreateDeveloperAppKey API, and\nsubsequently add an API product to the key using the\nUpdateDeveloperAppKey API.\n2. Delete the developer app, if it is no longer required.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path",
                          "description": "Name of the developer app key. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}"
                    },
                    "get": {
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "path": "v1/{+name}",
                      "id": "apigee.organizations.developers.apps.keys.get",
                      "description": "Returns details for a consumer key for a developer app, including the key\nand secret value, associated API products, and other information.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path",
                          "description": "Name of the developer app key. Use the following structure in your request:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`"
                        }
                      }
                    },
                    "create": {
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "description": "Creates a custom consumer key and secret for a developer app. This is\nparticularly useful if you want to migrate existing consumer keys and\nsecrets to Apigee hybrid from another system.\n\nConsumer keys and secrets can contain letters, numbers, underscores, and\nhyphens. No other special characters are allowed.\n\n**Note**: To avoid service disruptions, a consumer key and secret\nshould not exceed 2 KBs each.\n\nAfter creating the consumer key and secret, associate the key with\nan API product using the\nUpdateDeveloperAppKey API.\n\nIf a consumer key and secret already exist, you can keep them or\ndelete them using the\nDeleteDeveloperAppKey API.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                          "location": "path",
                          "description": "Parent of the developer app key. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}/apps`",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys",
                      "id": "apigee.organizations.developers.apps.keys.create",
                      "path": "v1/{+parent}/keys"
                    }
                  },
                  "resources": {
                    "create": {
                      "methods": {
                        "create": {
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "parent"
                          ],
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "parameters": {
                            "parent": {
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                              "location": "path",
                              "description": "Parent of the developer app key. Use the following structure in your\nrequest:\n  `organizations/{org}/developers/{developer_email}/apps`",
                              "type": "string",
                              "required": true
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/create",
                          "path": "v1/{+parent}/keys/create",
                          "id": "apigee.organizations.developers.apps.keys.create.create",
                          "request": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "description": "Creates a custom consumer key and secret for a developer app. This is\nparticularly useful if you want to migrate existing consumer keys and\nsecrets to Apigee hybrid from another system.\n\nConsumer keys and secrets can contain letters, numbers, underscores, and\nhyphens. No other special characters are allowed.\n\n**Note**: To avoid service disruptions, a consumer key and secret\nshould not exceed 2 KBs each.\n\nAfter creating the consumer key and secret, associate the key with\nan API product using the\nUpdateDeveloperAppKey API.\n\nIf a consumer key and secret already exist, you can keep them or\ndelete them using the\nDeleteDeveloperAppKey API."
                        }
                      }
                    },
                    "apiproducts": {
                      "methods": {
                        "updateDeveloperAppKeyApiProduct": {
                          "httpMethod": "POST",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "action": {
                              "location": "query",
                              "description": "Approve or revoke the consumer key by setting this value to\n`approve` or `revoke`, respectively.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the API product in the developer app key in the following\nformat:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`",
                              "type": "string",
                              "required": true,
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$",
                              "location": "path"
                            }
                          },
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}/apiproducts/{apiproductsId}",
                          "path": "v1/{+name}",
                          "id": "apigee.organizations.developers.apps.keys.apiproducts.updateDeveloperAppKeyApiProduct",
                          "description": "Approve or revoke an app's consumer key. After a consumer key is approved,\nthe app can use it to access APIs.\n\nA consumer key that is revoked or pending cannot be used to access an API.\nAny access tokens associated with a revoked consumer key will remain\nactive. However, Apigee hybrid checks the status of the consumer key and\nif set to `revoked` will not allow access to the API."
                        },
                        "delete": {
                          "httpMethod": "DELETE",
                          "parameterOrder": [
                            "name"
                          ],
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$",
                              "location": "path",
                              "description": "Name of the API product in the developer app key in the following\nformat:\n  `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`",
                              "type": "string",
                              "required": true
                            }
                          },
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}/apiproducts/{apiproductsId}",
                          "path": "v1/{+name}",
                          "id": "apigee.organizations.developers.apps.keys.apiproducts.delete",
                          "description": "Removes an API product from an app's consumer key. After the API product is\nremoved, the app cannot access the API resources defined in\nthat API product.\n\n**Note**: The consumer key is not removed, only its association with the\nAPI product."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    }
  },
  "version": "v1",
  "baseUrl": "https://apigee.googleapis.com/",
  "kind": "discovery#restDescription",
  "description": "The Apigee API lets you programmatically manage Apigee hybrid with a set of RESTful operations, including:\u003cul\u003e  \u003cli\u003eCreate, edit, and delete API proxies\u003c/li\u003e  \u003cli\u003eManage users\u003c/li\u003e  \u003cli\u003eDeploy and undeploy proxy revisions\u003c/li\u003e  \u003cli\u003eConfigure environments\u003c/li\u003e\u003c/ul\u003e\u003cp\u003eFor information on using the APIs described in this section, see \u003ca href=\"docs.apigee.com/hybrid/latest/api-get-started\"\u003eGet started using the APIs\u003c/a\u003e.\u003c/p\u003e\u003cp\u003e\u003cstrong\u003eNote:\u003c/strong\u003e This product is available as a free trial for a time period of 60 days.",
  "servicePath": "",
  "basePath": "",
  "revision": "20200502",
  "documentationLink": "https://cloud.google.com/apigee-api-management/",
  "id": "apigee:v1",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "GoogleCloudApigeeV1Organization": {
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "int64",
          "description": "Output only. Time that the Apigee organization was created in milliseconds since epoch.",
          "type": "string"
        },
        "customerName": {
          "description": "Not used by Apigee.",
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "properties": {
          "$ref": "GoogleCloudApigeeV1Properties",
          "description": "Properties defined in the Apigee organization profile."
        },
        "runtimeType": {
          "enum": [
            "RUNTIME_TYPE_UNSPECIFIED",
            "CLOUD",
            "HYBRID"
          ],
          "description": "Output only. Runtime type of the Apigee organization based on the Apigee subscription\npurchased.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Google-managed Apigee runtime.",
            "User-managed Apigee hybrid runtime."
          ]
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Output only. Time that the Apigee organization was last modified in milliseconds\nsince epoch.",
          "type": "string"
        },
        "environments": {
          "description": "Output only. List of environments in the Apigee organization.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_TRIAL",
            "TYPE_PAID",
            "TYPE_INTERNAL"
          ],
          "description": "Not used by Apigee.",
          "type": "string",
          "enumDescriptions": [
            "Subscription type not specified.",
            "Subscription to Apigee is free, limited, and used for evaluation purposes\nonly.",
            "Full subscription to Apigee has been purchased. See\n[Apigee pricing](https://cloud.google.com/apigee/pricing/).",
            "For internal users only."
          ]
        },
        "attributes": {
          "description": "Not used by Apigee.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "description": {
          "description": "Description of the Apigee organization.",
          "type": "string"
        },
        "analyticsRegion": {
          "description": "Required. Primary GCP region for analytics data storage. For valid values, see\n[Create an\norganization](https://docs.apigee.com/hybrid/latest/precog-provision).",
          "type": "string"
        },
        "name": {
          "description": "Required. Name of the Apigee organization.",
          "type": "string"
        },
        "subscriptionType": {
          "description": "Output only. Subscription type of the Apigee organization. Valid values include trial\n(free, limited, and for evaluation purposes only) or paid (full\nsubscription has been purchased). See\n[Apigee pricing](https://cloud.google.com/apigee/pricing/).",
          "type": "string",
          "enumDescriptions": [
            "",
            "Full subscription to Apigee has been purchased.",
            "Subscription to Apigee is free, limited, and used for evaluation purposes\nonly."
          ],
          "enum": [
            "SUBSCRIPTION_TYPE_UNSPECIFIED",
            "PAID",
            "TRIAL"
          ]
        }
      },
      "id": "GoogleCloudApigeeV1Organization"
    },
    "GoogleCloudApigeeV1Credential": {
      "type": "object",
      "properties": {
        "issuedAt": {
          "format": "int64",
          "description": "Time the credential was issued in milliseconds since epoch.",
          "type": "string"
        },
        "apiProducts": {
          "description": "List of API products this credential can be used for.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProductRef"
          },
          "type": "array"
        },
        "status": {
          "description": "Status of the credential.",
          "type": "string"
        },
        "scopes": {
          "description": "List of scopes to apply to the app. Specified scopes must already\nexist on the API product that you associate with the app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributes": {
          "description": "List of attributes associated with this credential.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        },
        "consumerKey": {
          "description": "Consumer key.",
          "type": "string"
        },
        "consumerSecret": {
          "description": "Secret key.",
          "type": "string"
        },
        "expiresAt": {
          "format": "int64",
          "description": "Time the credential will expire in milliseconds since epoch.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Credential"
    },
    "GoogleCloudApigeeV1AccessRemove": {
      "description": "Remove action. For example,\n\"Remove\" : {\n  \"name\" : \"target.name\",\n  \"success\" : true\n}",
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1AccessRemove"
    },
    "GoogleCloudApigeeV1DeveloperAppKey": {
      "type": "object",
      "properties": {
        "status": {
          "description": "Status of the credential. Valid values include `approved` or `revoked`.",
          "type": "string"
        },
        "scopes": {
          "description": "Scopes to apply to the app. The specified scope names must already\nbe defined for the API product that you associate with the app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "expiresAt": {
          "type": "string",
          "format": "int64",
          "description": "Time the developer app expires in milliseconds since epoch."
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array",
          "description": "List of attributes associated with the credential."
        },
        "consumerKey": {
          "description": "Consumer key.",
          "type": "string"
        },
        "consumerSecret": {
          "type": "string",
          "description": "Secret key."
        },
        "issuedAt": {
          "format": "int64",
          "description": "Time the developer app was created in milliseconds since epoch.",
          "type": "string"
        },
        "apiProducts": {
          "description": "List of API products for which the credential can be used.",
          "items": {
            "type": "any"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1DeveloperAppKey"
    },
    "GoogleIamV1Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "description": "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently.",
          "$ref": "GoogleTypeExpr"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleIamV1Binding"
    },
    "GoogleCloudApigeeV1ConfigVersion": {
      "description": "Version of the API proxy configuration schema. Currently, only 4.0 is\nsupported.",
      "type": "object",
      "properties": {
        "majorVersion": {
          "format": "int32",
          "description": "Major version of the API proxy configuration schema.",
          "type": "integer"
        },
        "minorVersion": {
          "format": "int32",
          "description": "Minor version of the API proxy configuration schema.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudApigeeV1ConfigVersion"
    },
    "GoogleCloudApigeeV1App": {
      "properties": {
        "lastModifiedAt": {
          "format": "int64",
          "description": "Output only. Last modified time as milliseconds since epoch.",
          "type": "string"
        },
        "appId": {
          "description": "ID of the app.",
          "type": "string"
        },
        "attributes": {
          "description": "List of attributes.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        },
        "companyName": {
          "description": "Name of the company that owns the app.",
          "type": "string"
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL used by OAuth 2.0 authorization servers to communicate\nauthorization codes back to apps."
        },
        "apiProducts": {
          "description": "List of API products associated with the app.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProductRef"
          },
          "type": "array"
        },
        "status": {
          "description": "Status of the credential.",
          "type": "string"
        },
        "keyExpiresIn": {
          "format": "int64",
          "description": "Duration, in milliseconds, of the consumer key that will\nbe generated for the app. The default value, -1, indicates an\ninfinite validity period. Once set, the expiration can't be updated.\njson key: keyExpiresIn",
          "type": "string"
        },
        "credentials": {
          "description": "Output only. Set of credentials for the app. Credentials are API\nkey/secret pairs associated with API products.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Credential"
          },
          "type": "array"
        },
        "scopes": {
          "description": "Scopes to apply to the app. The specified scope names must already\nexist on the API product that you associate with the app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Name of the app."
        },
        "createdAt": {
          "format": "int64",
          "description": "Output only. Unix time when the app was created.",
          "type": "string"
        },
        "developerId": {
          "description": "ID  of the developer.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1App",
      "type": "object"
    },
    "GoogleCloudApigeeV1Metadata": {
      "description": "This message type encapsulates additional information about query execution",
      "type": "object",
      "properties": {
        "notices": {
          "description": "List of additional information such as data source, if result was\ntruncated etc.\nE.g\n\"notices\": [\n             \"Source:Postgres\",\n             \"PG Host:uappg0rw.e2e.apigeeks.net\",\n             \"query served by:4b64601e-40de-4eb1-bfb9-eeee7ac929ed\",\n             \"Table used: edge.api.uapgroup2.agg_api\"\n  ]",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "errors": {
          "description": "List of error messages as strings",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Metadata"
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "id": "GoogleIamV1SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "$ref": "GoogleIamV1Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1EnvironmentConfig": {
      "type": "object",
      "properties": {
        "keystores": {
          "description": "A list of keystores in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1KeystoreConfig"
          },
          "type": "array"
        },
        "deployments": {
          "description": "A list of deployments in the environment",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentConfig"
          },
          "type": "array"
        },
        "name": {
          "description": "The name of the environment config. Must be of the form\n'organizations/{org}/environments/{env}/configs/{config_id}",
          "type": "string"
        },
        "flowhooks": {
          "description": "A list of flow hooks in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1FlowHookConfig"
          },
          "type": "array"
        },
        "featureFlags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Feature flags inherited from the org and environment parents."
        },
        "sequenceNumber": {
          "format": "int64",
          "description": "A sequence number that defines an ordering on environment configs. No two\nconfigs under an environment will ever have the same sequence number.\nA higher sequence number means that the config was deployed more\nrecently than one with a lower sequence number.",
          "type": "string"
        },
        "debugMask": {
          "$ref": "GoogleCloudApigeeV1DebugMask",
          "description": "Debug mask that applies to all deployments in the environment."
        },
        "pubsubTopic": {
          "description": "Name of the pubsub topic for this environment.",
          "type": "string"
        },
        "provider": {
          "description": "This field can be used by the control plane to add some context\ninformation about itself. This information could help detect the source of\nthe document during diagnostics and debugging.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "The time at which this environment config was created.",
          "type": "string"
        },
        "targets": {
          "description": "A list of target servers in the environment. Disabled target servers are\nnot included.",
          "items": {
            "$ref": "GoogleCloudApigeeV1TargetServerConfig"
          },
          "type": "array"
        },
        "resources": {
          "description": "A list of resource versions in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceConfig"
          },
          "type": "array"
        },
        "resourceReferences": {
          "description": "A list of resource references in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ReferenceConfig"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1EnvironmentConfig"
    },
    "GoogleCloudApigeeV1SchemaSchemaElement": {
      "description": "Message type for the schema element",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the field"
        },
        "properties": {
          "$ref": "GoogleCloudApigeeV1SchemaSchemaProperty",
          "description": "Property of the schema field\nE.g.\n{\n   \"createTime\": \"2016-02-26T10:23:09.592Z\",\n   \"custom\": \"false\",\n   \"type\": \"string\"\n}"
        }
      },
      "id": "GoogleCloudApigeeV1SchemaSchemaElement"
    },
    "GoogleCloudApigeeV1DimensionMetric": {
      "description": "This message type encapsulates a metric grouped by dimension",
      "type": "object",
      "properties": {
        "name": {
          "description": "This field contains the name of the dimension",
          "type": "string"
        },
        "metrics": {
          "description": "This field contains a list of metrics",
          "items": {
            "$ref": "GoogleCloudApigeeV1Metric"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1DimensionMetric"
    },
    "GoogleCloudApigeeV1DebugSessionTransaction": {
      "description": "A transaction contains all of the debug information of the entire message\nflow of an API call processed by the runtime plane. The information is\ncollected and recorded at critical points of the message flow in the runtime\napiproxy.",
      "type": "object",
      "properties": {
        "point": {
          "description": "List of debug data collected by runtime plane at various defined points in\nthe flow.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Point"
          },
          "type": "array"
        },
        "completed": {
          "description": "Flag indicating whether a transaction is completed or not",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudApigeeV1DebugSessionTransaction"
    },
    "GoogleCloudApigeeV1ListAsyncQueriesResponse": {
      "id": "GoogleCloudApigeeV1ListAsyncQueriesResponse",
      "description": "The response for ListAsyncQueries",
      "type": "object",
      "properties": {
        "queries": {
          "items": {
            "$ref": "GoogleCloudApigeeV1AsyncQuery"
          },
          "type": "array",
          "description": "The asynchronous queries belong to requested organization and environment"
        }
      }
    },
    "GoogleIamV1Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "properties": {
        "etag": {
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "type": "string"
        },
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.",
          "type": "integer"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "type": "array"
        },
        "bindings": {
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "type": "array",
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member."
        }
      },
      "id": "GoogleIamV1Policy"
    },
    "GoogleCloudApigeeV1DebugMask": {
      "id": "GoogleCloudApigeeV1DebugMask",
      "type": "object",
      "properties": {
        "responseJSONPaths": {
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON\nresponse message payloads.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "faultJSONPaths": {
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON\npayloads in error flows.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "responseXPaths": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of XPaths that specify the XML elements to be filtered from XML\nresponse message payloads."
        },
        "namespaces": {
          "description": "Map of namespaces to URIs.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requestXPaths": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of XPaths that specify the XML elements to be filtered from XML\nrequest message payloads."
        },
        "requestJSONPaths": {
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON\nrequest message payloads.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "faultXPaths": {
          "description": "List of XPaths that specify the XML elements to be filtered from XML\npayloads in error flows.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "variables": {
          "description": "List of variables that should be masked from the debug output.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the debug mask.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1ListDeveloperAppsResponse": {
      "id": "GoogleCloudApigeeV1ListDeveloperAppsResponse",
      "type": "object",
      "properties": {
        "app": {
          "description": "List of developer apps and their credentials.",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeveloperApp"
          },
          "type": "array"
        }
      }
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "id": "GoogleRpcStatus"
    },
    "GoogleCloudApigeeV1Developer": {
      "type": "object",
      "properties": {
        "email": {
          "description": "Required. Email address of the developer. This value is used to uniquely identify\nthe developer in Apigee hybrid.",
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "int64",
          "description": "Output only. Time at which the developer was created in milliseconds\nsince epoch."
        },
        "apps": {
          "description": "List of apps associated with the developer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lastName": {
          "description": "Required. Last name of the developer.",
          "type": "string"
        },
        "appFamily": {
          "description": "Developer app family.",
          "type": "string"
        },
        "accessType": {
          "description": "Access type.",
          "type": "string"
        },
        "companies": {
          "description": "List of companies associated with the developer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "firstName": {
          "description": "Required. First name of the developer.",
          "type": "string"
        },
        "organizationName": {
          "description": "Output only. Name of the Apigee organization in which the developer resides.",
          "type": "string"
        },
        "developerId": {
          "type": "string",
          "description": "ID of the developer.\n\n**Note**: IDs are generated internally by Apigee and are not\nguaranteed to stay the same over time."
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Output only. Time at which the developer was last modified in\nmilliseconds since epoch.",
          "type": "string"
        },
        "userName": {
          "type": "string",
          "description": "Required. User name of the developer. Not used by Apigee hybrid."
        },
        "attributes": {
          "description": "Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        },
        "status": {
          "description": "Output only. Status of the developer. Valid values are `active` and `inactive`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Developer"
    },
    "GoogleCloudApigeeV1KeyValueMap": {
      "description": "A collection of key, value string pairs",
      "type": "object",
      "properties": {
        "encrypted": {
          "description": "Optional. If `true` entry values will be encrypted.",
          "type": "boolean"
        },
        "name": {
          "description": "Required. The id of the key value map.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1KeyValueMap"
    },
    "GoogleCloudApigeeV1AsyncQueryResult": {
      "type": "object",
      "properties": {
        "self": {
          "description": "Self link of the query results\n\nExample:\n`/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`",
          "type": "string"
        },
        "expires": {
          "description": "Query result will be unaccessable after this time.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1AsyncQueryResult"
    },
    "GoogleCloudApigeeV1Result": {
      "description": "Result is short for \"action result\", could be different types identified by\n\"action_result\" field. Supported types:\n1. DebugInfo : generic debug info collected by runtime recorded as a list of\nproperties. For example, the contents could be virtual host info, state\nchange result, or execution metadata. Required fields : properties, timestamp\n\n2. RequestMessage: information of a http request. Contains headers, request\nURI and http methods type.Required fields : headers, uri, verb\n\n3. ResponseMessage: information of a http response. Contains headers, reason\nphrase and http status code. Required fields : headers, reasonPhrase,\nstatusCode\n\n4. ErrorMessage: information of a http error message. Contains detail error\nmessage, reason phrase and status code. Required fields : content, headers,\nreasonPhrase, statusCode\n\n5. VariableAccess: a list of variable access actions, can be Get, Set and\nRemove. Required fields : accessList",
      "type": "object",
      "properties": {
        "statusCode": {
          "description": "HTTP response code",
          "type": "string"
        },
        "ActionResult": {
          "description": "Type of the action result. Can be one of the five: DebugInfo,\nRequestMessage, ResponseMessage, ErrorMessage, VariableAccess",
          "type": "string"
        },
        "uRI": {
          "description": "The relative path of the api proxy.\nfor example, `\"uRI\" : \"/iloveapis\"`",
          "type": "string"
        },
        "content": {
          "description": "Error message content. for example,\n\"content\" : \"{\\\"fault\\\":{\\\"faultstring\\\":\\\"API timed\nout\\\",\\\"detail\\\":{\\\"errorcode\\\":\\\"flow.APITimedOut\\\"}}}\"",
          "type": "string"
        },
        "headers": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Property"
          },
          "type": "array",
          "description": "A list of HTTP headers.\nfor example,\n'\"headers\" : [ {\n  \"name\" : \"Content-Length\",\n  \"value\" : \"83\"\n}, {\n  \"name\" : \"Content-Type\",\n  \"value\" : \"application/json\"\n} ]'"
        },
        "timestamp": {
          "description": "Timestamp of when the result is recorded. Its format is dd-mm-yy\nhh:mm:ss:xxx. For example, `\"timestamp\" : \"12-08-19 00:31:59:960\"`",
          "type": "string"
        },
        "accessList": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Access"
          },
          "type": "array",
          "description": "A list of variable access actions agaist the api proxy.\nSupported values: Get, Set, Remove."
        },
        "reasonPhrase": {
          "description": "HTTP response phrase",
          "type": "string"
        },
        "verb": {
          "description": "HTTP method verb",
          "type": "string"
        },
        "properties": {
          "description": "Name value pairs used for DebugInfo ActionResult.",
          "$ref": "GoogleCloudApigeeV1Properties"
        }
      },
      "id": "GoogleCloudApigeeV1Result"
    },
    "GoogleCloudApigeeV1Attribute": {
      "properties": {
        "name": {
          "description": "API key of the attribute.",
          "type": "string"
        },
        "value": {
          "description": "Value of the attribute.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Attribute",
      "description": "Key-value pair to store extra metadata.",
      "type": "object"
    },
    "GoogleCloudApigeeV1ListEnvironmentResourcesResponse": {
      "description": "Response for\nListEnvironmentResources",
      "type": "object",
      "properties": {
        "resourceFile": {
          "description": "List of resources files.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceFile"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse"
    },
    "GoogleCloudApigeeV1CustomReport": {
      "type": "object",
      "properties": {
        "toTime": {
          "description": "Legacy field: not used. Contains the end time for the report",
          "type": "string"
        },
        "topk": {
          "description": "Legacy field: not used. This field contains the top k parameter value\nfor restricting the result",
          "type": "string"
        },
        "fromTime": {
          "description": "Legacy field: not used. Contains the from time for the report",
          "type": "string"
        },
        "name": {
          "description": "Required. Unique identifier for the report\nT his is a legacy field used to encode custom report unique id",
          "type": "string"
        },
        "lastViewedAt": {
          "format": "int64",
          "description": "Output only. Last viewed time of this entity as milliseconds since epoch",
          "type": "string"
        },
        "comments": {
          "description": "Legacy field: not used. This field contains a list of comments associated\nwith custom report",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "tags": {
          "description": "Legacy field: not used. This field contains a list of tags associated with\ncustom report",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "limit": {
          "description": "Legacy field: not used This field contains the limit for the result\nretrieved",
          "type": "string"
        },
        "createdAt": {
          "format": "int64",
          "description": "Output only. Unix time when the app was created\njson key: createdAt",
          "type": "string"
        },
        "offset": {
          "description": "Legacy field: not used. This field contains the offset for the data",
          "type": "string"
        },
        "displayName": {
          "description": "This is the display name for the report",
          "type": "string"
        },
        "organization": {
          "description": "Output only. Organization name",
          "type": "string"
        },
        "properties": {
          "description": "This field contains report properties such as ui metadata etc.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ReportProperty"
          },
          "type": "array"
        },
        "environment": {
          "description": "Output only. Environment name",
          "type": "string"
        },
        "metrics": {
          "description": "Required. This contains the list of metrics",
          "items": {
            "$ref": "GoogleCloudApigeeV1CustomReportMetric"
          },
          "type": "array"
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Output only. Modified time of this entity as milliseconds since epoch.\njson key: lastModifiedAt",
          "type": "string"
        },
        "sortOrder": {
          "description": "Legacy field: not used much. Contains the sort order for the sort columns",
          "type": "string"
        },
        "filter": {
          "description": "This field contains the filter expression",
          "type": "string"
        },
        "dimensions": {
          "description": "This contains the list of dimensions for the report",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "timeUnit": {
          "type": "string",
          "description": "This field contains the time unit of aggregation for the report"
        },
        "chartType": {
          "description": "This field contains the chart type for the report",
          "type": "string"
        },
        "sortByCols": {
          "description": "Legacy field: not used much. Contains the list of sort by columns",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1CustomReport"
    },
    "GoogleCloudApigeeV1Deployment": {
      "properties": {
        "deployStartTime": {
          "format": "int64",
          "description": "Time the API proxy was marked `deployed` in the control plane in\nmillisconds since epoch.",
          "type": "string"
        },
        "revision": {
          "description": "API proxy revision.",
          "type": "string"
        },
        "apiProxy": {
          "description": "API proxy.",
          "type": "string"
        },
        "environment": {
          "description": "Environment.",
          "type": "string"
        },
        "pods": {
          "items": {
            "$ref": "GoogleCloudApigeeV1PodStatus"
          },
          "type": "array",
          "description": "Status reported by runtime pods."
        },
        "basePath": {
          "description": "Base path for the deployment.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Deployment",
      "type": "object"
    },
    "GoogleCloudApigeeV1Session": {
      "description": "Session carries the debug session id and its creation time.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The debug session ID.",
          "type": "string"
        },
        "timestampMs": {
          "format": "int64",
          "description": "The first transaction creation timestamp in millisecond, recoreded by UAP.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Session"
    },
    "GoogleCloudApigeeV1TlsInfo": {
      "description": "TLS configuration information for\nVirtualHosts and\nTargetServers.",
      "type": "object",
      "properties": {
        "keyAlias": {
          "description": "Required if `client_auth_enabled` is true. The resource ID for the\nalias containing the private key and cert.",
          "type": "string"
        },
        "trustStore": {
          "description": "The resource ID of the truststore.\nReferences not yet supported.",
          "type": "string"
        },
        "ignoreValidationErrors": {
          "description": "If true, Edge ignores TLS certificate errors. Valid when configuring TLS\nfor target servers and target endpoints, and when configuring virtual hosts\nthat use 2-way TLS.\n\nWhen used with a target endpoint/target server, if the backend system uses\nSNI and returns a cert with a subject Distinguished Name (DN) that does not\nmatch the hostname, there is no way to ignore the error and the connection\nfails.",
          "type": "boolean"
        },
        "protocols": {
          "description": "The TLS versioins to be used.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Required. Enables one-way TLS.",
          "type": "boolean"
        },
        "commonName": {
          "$ref": "GoogleCloudApigeeV1TlsInfoCommonName",
          "description": "The TLS Common Name of the certificate."
        },
        "ciphers": {
          "description": "The SSL/TLS cipher suites to be used. Must be one of the cipher suite names\nlisted in:\nhttp://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "keyStore": {
          "description": "Required if `client_auth_enabled` is true. The resource ID of the\nkeystore. References not yet supported.",
          "type": "string"
        },
        "clientAuthEnabled": {
          "type": "boolean",
          "description": "Optional. Enables two-way TLS."
        }
      },
      "id": "GoogleCloudApigeeV1TlsInfo"
    },
    "GoogleCloudApigeeV1Query": {
      "type": "object",
      "properties": {
        "limit": {
          "format": "int32",
          "description": "Maximum number of rows that can be returned in the result.",
          "type": "integer"
        },
        "filter": {
          "description": "Boolean expression that can be used to filter data.\nFilter expressions can be combined using AND/OR terms and should be fully\nparenthesized to avoid ambiguity. See Analytics metrics, dimensions, and\nfilters reference\nhttps://docs.apigee.com/api-platform/analytics/analytics-reference\nfor more information on the fields available to filter\non. For more information on the tokens that you use to build filter\nexpressions, see Filter expression syntax.\nhttps://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax",
          "type": "string"
        },
        "dimensions": {
          "description": "A list of dimensions\nhttps://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "groupByTimeUnit": {
          "description": "Time unit used to group the result set.\nValid values include: second, minute, hour, day, week, or month.\nIf a query includes groupByTimeUnit, then the result is an aggregation\nbased on the specified time unit and the resultant timestamp does not\ninclude milliseconds precision.\nIf a query omits groupByTimeUnit, then the resultant timestamp includes\nmilliseconds precision.",
          "type": "string"
        },
        "csvDelimiter": {
          "description": "Delimiter used in the CSV file, if `outputFormat` is set\nto `csv`. Defaults to the `,` (comma) character.\nSupported delimiter characters include comma (`,`), pipe (`|`),\nand tab (`\\t`).",
          "type": "string"
        },
        "metrics": {
          "description": "A list of Metrics",
          "items": {
            "$ref": "GoogleCloudApigeeV1QueryMetric"
          },
          "type": "array"
        },
        "reportDefinitionId": {
          "description": "Asynchronous Report ID.",
          "type": "string"
        },
        "name": {
          "description": "Asynchronous Query Name.",
          "type": "string"
        },
        "outputFormat": {
          "description": "Valid values include: `csv` or `json`. Defaults to `json`.\nNote: Configure the delimiter for CSV output using the csvDelimiter\nproperty.",
          "type": "string"
        },
        "timeRange": {
          "description": "Required. Time range for the query.\nCan use the following predefined strings to specify the time range:\n  `last60minutes`\n  `last24hours`\n  `last7days`\nOr, specify the timeRange as a structure describing start and end\ntimestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ.\n\nExample:\n  \"timeRange\": {\n    \"start\": \"2018-07-29T00:13:00Z\",\n    \"end\": \"2018-08-01T00:18:00Z\"\n  }",
          "type": "any"
        }
      },
      "id": "GoogleCloudApigeeV1Query"
    },
    "GoogleCloudApigeeV1EntityMetadata": {
      "id": "GoogleCloudApigeeV1EntityMetadata",
      "description": "Metadata common to many entities in this API.",
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "int64",
          "description": "Time at which the API proxy was created, in milliseconds since epoch.",
          "type": "string"
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Time at which the API proxy was most recently modified, in milliseconds\nsince epoch.",
          "type": "string"
        },
        "subType": {
          "description": "The type of entity described",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1OptimizedStatsResponse": {
      "type": "object",
      "properties": {
        "resultTruncated": {
          "description": "This ia a boolean field to indicate if the results were truncated\nbased on the limit parameter.",
          "type": "boolean"
        },
        "metaData": {
          "$ref": "GoogleCloudApigeeV1Metadata",
          "description": "This field contains metadata information about the query executed"
        },
        "TimeUnit": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "This field contains a list of time unit values. Time unit refers to\nan epoch timestamp value."
        },
        "stats": {
          "$ref": "GoogleCloudApigeeV1OptimizedStatsNode",
          "description": "This field contains a stats results"
        }
      },
      "id": "GoogleCloudApigeeV1OptimizedStatsResponse",
      "description": "This message type encapsulates a response format for Js Optimized Scenario"
    },
    "GoogleCloudApigeeV1Schema": {
      "type": "object",
      "properties": {
        "meta": {
          "description": "Additional metadata associated with schema. This is\na legacy field and usually consists of an empty array of strings.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metrics": {
          "description": "List of schema fields grouped as dimensions. These are fields\nthat can be used with an aggregate function such as sum, avg, min, max.",
          "items": {
            "$ref": "GoogleCloudApigeeV1SchemaSchemaElement"
          },
          "type": "array"
        },
        "dimensions": {
          "description": "List of schema fiels grouped as dimensions.",
          "items": {
            "$ref": "GoogleCloudApigeeV1SchemaSchemaElement"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Schema",
      "description": "Response for Schema call"
    },
    "GoogleCloudApigeeV1AsyncQueryResultView": {
      "type": "object",
      "properties": {
        "error": {
          "description": "Error message when there is a failure.",
          "type": "string"
        },
        "code": {
          "format": "int32",
          "description": "Error code when there is a failure.",
          "type": "integer"
        },
        "metadata": {
          "$ref": "GoogleCloudApigeeV1QueryMetadata",
          "description": "Metadata contains information like metrics, dimenstions etc\nof the AsyncQuery"
        },
        "state": {
          "type": "string",
          "description": "State of retrieving ResultView."
        },
        "rows": {
          "description": "Rows of query result. Each row is a JSON object.\n\nExample: {sum(message_count): 1, developer_app: \"(not set)\",…}",
          "items": {
            "type": "any"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1AsyncQueryResultView"
    },
    "GoogleCloudApigeeV1TargetServer": {
      "description": "TargetServer configuration. TargetServers are used to decouple a proxy's\nTargetEndpoint HTTPTargetConnections from concrete URLs for backend services.",
      "type": "object",
      "properties": {
        "port": {
          "format": "int32",
          "description": "Required. The port number this target connects to on the given host. Value\nmust be between 1 and 65535, inclusive.",
          "type": "integer"
        },
        "host": {
          "description": "Required. The host name this target connects to. Value must be a valid\nhostname as described by RFC-1123.",
          "type": "string"
        },
        "isEnabled": {
          "description": "Optional. Enabling/disabling a TargetServer is useful when TargetServers\nare used in load balancing configurations, and one or more TargetServers\nneed to taken out of rotation periodically. Defaults to true.",
          "type": "boolean"
        },
        "description": {
          "description": "Optional. A human-readable description of this TargetServer.",
          "type": "string"
        },
        "sSLInfo": {
          "description": "Optional. Specifies TLS configuration info for this TargetServer. The JSON\nname is `sSLInfo` for legacy/backwards compatibility reasons -- Edge\noriginally supported SSL, and the name is still used for TLS configuration.",
          "$ref": "GoogleCloudApigeeV1TlsInfo"
        },
        "name": {
          "description": "Required. The resource id of this target server. Values must match the\nregular expression ",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1TargetServer"
    },
    "GoogleCloudApigeeV1ReferenceConfig": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The name of the referred resource. Only references to keystore resources\nare supported. Must be of the form\n'organizations/{org}/environments/{env}/keystores/{ks}'."
        },
        "name": {
          "description": "The name of the reference. Must be of the form\n'organizations/{org}/environments/{env}/references/{ref}'.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ReferenceConfig"
    },
    "GoogleCloudApigeeV1ListHybridIssuersResponse": {
      "type": "object",
      "properties": {
        "issuers": {
          "description": "Lists of hybrid services and its trusted issuer email ids.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ServiceIssuersMapping"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListHybridIssuersResponse"
    },
    "GoogleCloudApigeeV1ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "description": "List of deployments.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Deployment"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListDeploymentsResponse"
    },
    "GoogleCloudApigeeV1DeveloperApp": {
      "type": "object",
      "properties": {
        "createdAt": {
          "format": "int64",
          "description": "Output only. Time the developer app was created in milliseconds since epoch.",
          "type": "string"
        },
        "appFamily": {
          "description": "Developer app family.",
          "type": "string"
        },
        "developerId": {
          "description": "ID of the developer.",
          "type": "string"
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Output only. Time the developer app was modified in milliseconds since epoch.",
          "type": "string"
        },
        "appId": {
          "description": "ID of the developer app.",
          "type": "string"
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array",
          "description": "List of attributes for the developer app."
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL used by OAuth 2.0 authorization servers to communicate\nauthorization codes back to developer apps."
        },
        "apiProducts": {
          "description": "List of API products associated with the developer app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "description": "Status of the credential. Valid values include `approved` or `revoked`.",
          "type": "string"
        },
        "keyExpiresIn": {
          "format": "int64",
          "description": "Expiration time, in milliseconds, for the consumer key that\nis generated for the developer app. If not set or left to the default\nvalue of `-1`, the API key never expires.\nThe expiration time can't be updated after it is set.",
          "type": "string"
        },
        "scopes": {
          "description": "Scopes to apply to the developer app. The specified scopes must\nalready exist for the API product that you associate with the developer\napp.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "credentials": {
          "description": "Output only. Set of credentials for the developer app consisting of the\nconsumer key/secret pairs associated with the API products.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Credential"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the developer app.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DeveloperApp"
    },
    "GoogleCloudApigeeV1ReportProperty": {
      "id": "GoogleCloudApigeeV1ReportProperty",
      "type": "object",
      "properties": {
        "value": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array",
          "description": "property values"
        },
        "property": {
          "description": "name of the property",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1CertInfo": {
      "description": "An X.509 certificate as defined in RFC 5280.",
      "type": "object",
      "properties": {
        "isValid": {
          "description": "\"Yes\" if certificate is valid, \"No\" if expired and \"Not yet\"\nif not yet valid.",
          "type": "string"
        },
        "version": {
          "format": "int32",
          "description": "The X.509 version.",
          "type": "integer"
        },
        "expiryDate": {
          "format": "int64",
          "description": "The X.509 validity / notAfter in milliseconds since the epoch.",
          "type": "string"
        },
        "basicConstraints": {
          "description": "The X.509 basic constraints extension.",
          "type": "string"
        },
        "subjectAlternativeNames": {
          "description": "The X.509 subject alternative names (SANs) extension.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "serialNumber": {
          "type": "string",
          "description": "The X.509 serial number."
        },
        "sigAlgName": {
          "description": "The X.509 signatureAlgorithm.",
          "type": "string"
        },
        "validFrom": {
          "format": "int64",
          "description": "The X.509 validity / notBefore in milliseconds since the\nepoch.",
          "type": "string"
        },
        "subject": {
          "description": "The X.509 subject.",
          "type": "string"
        },
        "issuer": {
          "description": "The X.509 issuer.",
          "type": "string"
        },
        "publicKey": {
          "type": "string",
          "description": "The public key component of the X.509 subject public key info."
        }
      },
      "id": "GoogleCloudApigeeV1CertInfo"
    },
    "GoogleIamV1AuditConfig": {
      "id": "GoogleIamV1AuditConfig",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1AsyncQuery": {
      "type": "object",
      "properties": {
        "updated": {
          "description": "Last updated timestamp for the query",
          "type": "string"
        },
        "created": {
          "description": "Creation time of the query",
          "type": "string"
        },
        "error": {
          "description": "Error is set when query fails",
          "type": "string"
        },
        "state": {
          "description": "Query state could be \"enqueued\", \"running\", \"completed\",\n\"failed\"",
          "type": "string"
        },
        "reportDefinitionId": {
          "type": "string",
          "description": "Asynchronous Report ID."
        },
        "name": {
          "description": "Asynchronous Query Name.",
          "type": "string"
        },
        "resultRows": {
          "format": "int64",
          "description": "ResultRows is available only after the query is completed",
          "type": "string"
        },
        "queryParams": {
          "description": "Contains information like metrics, dimenstions etc\nof the AsyncQuery",
          "$ref": "GoogleCloudApigeeV1QueryMetadata"
        },
        "executionTime": {
          "description": "ExecutionTime is available only after the query is completed",
          "type": "string"
        },
        "resultFileSize": {
          "description": "ResultFileSize is available only after the query is completed",
          "type": "string"
        },
        "self": {
          "type": "string",
          "description": "Self link of the query\n\nExample:\n`/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`"
        },
        "result": {
          "$ref": "GoogleCloudApigeeV1AsyncQueryResult",
          "description": "Result is available only after the query is completed"
        }
      },
      "id": "GoogleCloudApigeeV1AsyncQuery"
    },
    "GoogleCloudApigeeV1ApiProduct": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The name to be displayed in the UI or developer portal to developers\nregistering for API access.",
          "type": "string"
        },
        "environments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A comma-separated list of environment names to which the API product is\nbound. Requests to environments that are not listed are rejected.\n\nBy specifying one or more environments, you can bind the resources listed\nin the API product to a specific environment, preventing developers from\naccessing those resources through API proxies deployed in another\nenvironment.\n\nThis setting is used, for example, to prevent resources associated with\nAPI proxies in 'prod' from being accessed by API proxies deployed in\n'test'."
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Response only. Modified time of this environment as milliseconds since\nepoch.",
          "type": "string"
        },
        "quotaInterval": {
          "description": "The time interval over which the number of request messages is calculated.",
          "type": "string"
        },
        "apiResources": {
          "description": "Comma-separated list of API resources to be bundled in the API Product.\n\nBy default, the resource paths are mapped from the `proxy.pathsuffix`\nvariable.\n\nThe proxy path suffix is defined as the URI fragment following the\nProxyEndpoint base path.\nFor example, if the `apiResources` element is defined to be\n`/forecastrss` and the base path defined for the API proxy is\n`/weather`, then only requests to `/weather/forecastrss` are permitted by\nthe API product.\n\nYou can select a specific path, or you can select all subpaths with the\nfollowing wildcard:\n\n- /**: Indicates that all sub-URIs are included.\n- /* : Indicates that only URIs one level down are included.\n\nBy default, / supports the same resources as /** as well as the base path\ndefined by the API proxy.\n\nFor example, if the base path of the API proxy is `/v1/weatherapikey`,\nthen the API product supports requests to `/v1/weatherapikey` and to any\nsub-URIs, such as `/v1/weatherapikey/forecastrss`,\n`/v1/weatherapikey/region/CA`, and so on.\nFor more information, see:\n\n- \u003ca href=\"/api-platform/publish/create-api-products\"\u003eManage API\nproducts\u003c/a\u003e\n- \u003ca\nhref=\"/api-platform/monetization/create-transaction-recording-policy#spectrpcaapi\"\u003eManaging\na transaction recording policy using the API\u003c/a\u003e",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array",
          "description": "Array of attributes that may be used to extend the default API product\nprofile with customer-specific metadata. You can specify a maximum of 18\nattributes.\n\nUse this property to specify the access level of the API product as either\n`public`, `private`, or `internal`.\n\nOnly products marked `public` are available to developers in the Apigee\ndeveloper portal. For example, you can set a product to `internal` while it\nis in development and then change access to `public` when it is ready to\nrelease on the portal.\n\nAPI products marked as `private` do not appear on the portal but\ncan be accessed by external developers.\n\nFor monetization, you can use the attributes field to:\n\n- \u003ca\nhref=\"/api-platform/monetization/create-transaction-recording-policy#spectrpsuccessapi\"\ntarget=\"_blank\"\u003eSpecify transaction success criteria\u003c/a\u003e\n- \u003ca\nhref=\"/api-platform/monetization/create-transaction-recording-policy#spectrpcaapi\"\ntarget=\"_blank\"\u003eSpecify custom attributes\u003c/a\u003e on which you base rate plan\ncharges\u003c/a\u003e."
        },
        "quotaTimeUnit": {
          "description": "The time unit defined for the `quotaInterval`. Valid values include minute,\nhour, day, or month.",
          "type": "string"
        },
        "description": {
          "description": "An overview of the API product. Include key information about the API\nproduct that is not captured by other fields.",
          "type": "string"
        },
        "quota": {
          "description": "The number of request messages permitted per app by this API product for\nthe specified `quotaInterval` and `quotaTimeUnit`.\n\nFor example, a `quota` of 50, for a `quotaInterval` of 12 and a\n`quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.",
          "type": "string"
        },
        "proxies": {
          "description": "A comma-separated list of API proxy names to which this API product is\nbound. By specifying API proxies, you can associate resources in the API\nproduct with specific API proxies, preventing developers from accessing\nthose resources through other API proxies.\n\nEdge rejects requests to API proxies that are not listed.\n\n\u003caside class=\"note\"\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e The API proxy names must already\nexist in the specified environment as they will be validated upon\ncreation.\u003c/aside\u003e",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "The internal name of the API Product. Characters you can use in the name\nare restricted to: A-Z0-9._\\-$ %.\n\n\u003caside class=\"note\"\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e The internal name cannot be\nedited when updating the API product.\u003c/aside\u003e",
          "type": "string"
        },
        "scopes": {
          "description": "A comma-separated list of OAuth scopes that are validated at runtime.\nEdge validates that the scopes in any access token presented match the\nscopes defined in the OAuth policy assoicated with the API product.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "approvalType": {
          "type": "string",
          "description": "Specifies how API keys are approved to access the APIs defined by the API\nproduct.\n\nIf set to `manual`, the consumer key is generated and returned in \"pending\"\nstate. In this case, the API keys won't work until they have been\nexplicitly approved.\n\nIf set to `auto`, the consumer key is generated and returned in \"approved\"\nstate and can be used immediately.\n\n\u003caside class=\"note\"\u003e\u003cstrong\u003eNOTE:\u003c/strong\u003e Typically, `auto` is used\nto provide access to free or trial API products that provide limited quota\nor capabilities.\u003c/aside\u003e"
        },
        "createdAt": {
          "format": "int64",
          "description": "Response only. Creation time of this environment as milliseconds since\nepoch.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ApiProduct"
    },
    "GoogleCloudApigeeV1AccessGet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1AccessGet",
      "description": "Get action. For example,\n\"Get\" : {\n  \"name\" : \"target.name\",\n  \"value\" : \"default\"\n}"
    },
    "GoogleCloudApigeeV1ResourceFile": {
      "id": "GoogleCloudApigeeV1ResourceFile",
      "description": "Metadata about a resource file.",
      "type": "object",
      "properties": {
        "name": {
          "description": "ID of the resource file.",
          "type": "string"
        },
        "type": {
          "description": "Resource file type. {{ resource_file_type }}",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1TlsInfoCommonName": {
      "type": "object",
      "properties": {
        "wildcardMatch": {
          "description": "Indicates whether the cert should be matched against as a wildcard cert.",
          "type": "boolean"
        },
        "value": {
          "description": "The TLS Common Name string of the certificate.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1TlsInfoCommonName"
    },
    "GoogleCloudApigeeV1ListCustomReportsResponse": {
      "id": "GoogleCloudApigeeV1ListCustomReportsResponse",
      "description": "This message encapsulates a list of custom report definitions",
      "type": "object",
      "properties": {
        "qualifier": {
          "items": {
            "$ref": "GoogleCloudApigeeV1CustomReport"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1Subscription": {
      "description": "Pub/Sub subscription of an environment.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Full name of the Pub/Sub subcription. Use the following structure in your\nrequest:\n  `subscription \"projects/foo/subscription/bar\"`"
        }
      },
      "id": "GoogleCloudApigeeV1Subscription"
    },
    "GoogleCloudApigeeV1DebugSession": {
      "type": "object",
      "properties": {
        "tracesize": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The maximum number of bytes captured from the response payload.\nMin = 0, Max = 5120, Default = 5120."
        },
        "filter": {
          "description": "Optional. A conditional statement which is evaluated against the request\nmessage to determine if it should be traced. Syntax matches that of on\nAPI Proxy bundle flow Condition.",
          "type": "string"
        },
        "count": {
          "format": "int32",
          "description": "Optional. The number of request to be traced. Min = 1, Max = 15, Default\n= 10.",
          "type": "integer"
        },
        "timeout": {
          "format": "int64",
          "description": "Optional. The time in seconds after which this DebugSession should end.\nThis value will override the value in query param, if both are provided.",
          "type": "string"
        },
        "name": {
          "description": "A unique ID for this DebugSession.",
          "type": "string"
        },
        "validity": {
          "format": "int32",
          "description": "Optional. The length of time, in seconds, that this debug session is valid,\nstarting from when it's received in the control plane. Min = 1, Max = 15,\nDefault = 10.",
          "type": "integer"
        }
      },
      "id": "GoogleCloudApigeeV1DebugSession"
    },
    "GoogleCloudApigeeV1Attributes": {
      "type": "object",
      "properties": {
        "attribute": {
          "description": "List of attributes.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Attributes"
    },
    "GoogleCloudApigeeV1Access": {
      "type": "object",
      "properties": {
        "Set": {
          "$ref": "GoogleCloudApigeeV1AccessSet"
        },
        "Remove": {
          "$ref": "GoogleCloudApigeeV1AccessRemove"
        },
        "Get": {
          "$ref": "GoogleCloudApigeeV1AccessGet"
        }
      },
      "id": "GoogleCloudApigeeV1Access"
    },
    "GoogleCloudApigeeV1Point": {
      "id": "GoogleCloudApigeeV1Point",
      "description": "Point is a group of information collected by runtime plane at critical points\nof the message flow of the processed API request.\nThis is a list of supported point IDs, categorized to three major buckets.\nFor each category, debug points that we are currently supporting are listed\nbelow:\n- Flow status debug points:\n    StateChange\n    FlowInfo\n    Condition\n    Execution\n    DebugMask\n    Error\n- Flow control debug points:\n    FlowCallout\n    Paused\n    Resumed\n    FlowReturn\n    BreakFlow\n    Error\n- Runtime debug points:\n    ScriptExecutor\n    FlowCalloutStepDefinition\n    CustomTarget\n    StepDefinition\n    Oauth2ServicePoint\n    RaiseFault\n    NodeJS\n\nThe detail information of the given debug point is stored in a list of\nresults.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Name of a step in the transaction.",
          "type": "string"
        },
        "results": {
          "description": "List of results extracted from a given debug point.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Result"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1Alias": {
      "description": "A reference to a certificate or key, certificate pair.",
      "type": "object",
      "properties": {
        "certsInfo": {
          "$ref": "GoogleCloudApigeeV1Certificate",
          "description": "The chain of certificates under this alias."
        },
        "alias": {
          "description": "The resource ID for this alias. Values must match regular expression\n`[^/]{1,255}`.",
          "type": "string"
        },
        "type": {
          "enum": [
            "ALIAS_TYPE_UNSPECIFIED",
            "CERT",
            "KEY_CERT"
          ],
          "description": "The type of alias.",
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "id": "GoogleCloudApigeeV1Alias"
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleIamV1TestIamPermissionsRequest"
    },
    "GoogleCloudApigeeV1CommonNameConfig": {
      "type": "object",
      "properties": {
        "matchWildCards": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1CommonNameConfig"
    },
    "GoogleCloudApigeeV1CustomReportMetric": {
      "description": "This encapsulates a metric property of the form sum(message_count)\nwhere name is message_count and function is sum",
      "type": "object",
      "properties": {
        "name": {
          "description": "name of the metric",
          "type": "string"
        },
        "function": {
          "type": "string",
          "description": "aggregate function"
        }
      },
      "id": "GoogleCloudApigeeV1CustomReportMetric"
    },
    "GoogleCloudApigeeV1TargetServerConfig": {
      "type": "object",
      "properties": {
        "tlsInfo": {
          "$ref": "GoogleCloudApigeeV1TlsInfoConfig",
          "description": "TLS settings for the target."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Target port."
        },
        "host": {
          "description": "Target host name.",
          "type": "string"
        },
        "name": {
          "description": "The target server revision name. Must be of the form\n'organizations/{org}/environments/{env}/targetservers/{ts_id}/revisions/{rev}'.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1TargetServerConfig"
    },
    "GoogleCloudApigeeV1ListDebugSessionsResponse": {
      "type": "object",
      "properties": {
        "sessions": {
          "description": "Session info that includes debug session ID and the first transaction\ncreation timestamp.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Session"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListDebugSessionsResponse"
    },
    "GoogleCloudApigeeV1AccessSet": {
      "description": "Set action. For example,\n\"Set\" : {\n  \"name\" : \"target.name\",\n  \"success\" : true,\n  \"value\" : \"default\"\n}",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "id": "GoogleCloudApigeeV1AccessSet"
    },
    "GoogleCloudApigeeV1StatsEnvironmentStats": {
      "id": "GoogleCloudApigeeV1StatsEnvironmentStats",
      "description": "This message type encapsulates the environment wrapper\n    \"environments\": [\n     {\n         \"metrics\": [\n             {\n                 \"name\": \"sum(message_count)\",\n                 \"values\": [\n                     \"2.52056245E8\"\n                 ]\n             }\n         ],\n         \"name\": \"prod\"\n     }\n ]",
      "type": "object",
      "properties": {
        "dimensions": {
          "items": {
            "$ref": "GoogleCloudApigeeV1DimensionMetric"
          },
          "type": "array",
          "description": "This field contains the list of metrics grouped under dimensions"
        },
        "name": {
          "type": "string"
        },
        "metrics": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Metric"
          },
          "type": "array",
          "description": "In the final response, only one of the following fields will be present\nbased on the dimensions provided. If no dimensions are provided, then\nonly a top level metrics is provided. If dimensions are included, then\nthere will be a top level dimensions field under environments which will\ncontain metrics values and the dimension name.\nExample:\n     \"environments\": [\n      {\n         \"dimensions\": [\n             {\n                 \"metrics\": [\n                     {\n                         \"name\": \"sum(message_count)\",\n                         \"values\": [\n                             \"2.14049521E8\"\n                         ]\n                     }\n                 ],\n                 \"name\": \"nit_proxy\"\n             }\n           ],\n           \"name\": \"prod\"\n       }\n    ]\n\n    OR\n    \"environments\": [\n           {\n               \"metrics\": [\n                   {\n                       \"name\": \"sum(message_count)\",\n                        \"values\": [\n                           \"2.19026331E8\"\n                       ]\n                   }\n               ],\n               \"name\": \"prod\"\n           }\n       ]\nThis field contains the list of metric values"
        }
      }
    },
    "GoogleCloudApigeeV1SharedFlow": {
      "description": "The metadata describing a shared flow",
      "type": "object",
      "properties": {
        "name": {
          "description": "The ID of the shared flow.",
          "type": "string"
        },
        "latestRevisionId": {
          "description": "The id of the most recently created revision for this shared flow.",
          "type": "string"
        },
        "revision": {
          "description": "A list of revisions of this shared flow.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metaData": {
          "description": "Metadata describing the shared flow.",
          "$ref": "GoogleCloudApigeeV1EntityMetadata"
        }
      },
      "id": "GoogleCloudApigeeV1SharedFlow"
    },
    "GoogleCloudApigeeV1OptimizedStatsNode": {
      "type": "object",
      "properties": {
        "data": {
          "items": {
            "type": "any"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1OptimizedStatsNode"
    },
    "GoogleApiHttpBody": {
      "description": "Message that represents an arbitrary HTTP body. It should only be used for\npayload formats that can't be represented as JSON, such as raw binary or\nan HTML page.\n\n\nThis message can be used both in streaming and non-streaming API methods in\nthe request as well as the response.\n\nIt can be used as a top-level request field, which is convenient if one\nwants to extract parameters from either the URL or HTTP template into the\nrequest fields and also want access to the raw HTTP body.\n\nExample:\n\n    message GetResourceRequest {\n      // A unique request id.\n      string request_id = 1;\n\n      // The raw HTTP body is bound to this field.\n      google.api.HttpBody http_body = 2;\n    }\n\n    service ResourceService {\n      rpc GetResource(GetResourceRequest) returns (google.api.HttpBody);\n      rpc UpdateResource(google.api.HttpBody) returns\n      (google.protobuf.Empty);\n    }\n\nExample with streaming methods:\n\n    service CaldavService {\n      rpc GetCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n      rpc UpdateCalendar(stream google.api.HttpBody)\n        returns (stream google.api.HttpBody);\n    }\n\nUse of this type only changes how the request and response bodies are\nhandled, all other features will continue to work unchanged.",
      "type": "object",
      "properties": {
        "data": {
          "format": "byte",
          "description": "The HTTP request/response body as raw binary.",
          "type": "string"
        },
        "contentType": {
          "description": "The HTTP Content-Type header value specifying the content type of the body.",
          "type": "string"
        },
        "extensions": {
          "description": "Application specific response metadata. Must be set in the first response\nfor streaming APIs.",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "id": "GoogleApiHttpBody"
    },
    "GoogleCloudApigeeV1ListSharedFlowsResponse": {
      "type": "object",
      "properties": {
        "sharedFlows": {
          "items": {
            "$ref": "GoogleCloudApigeeV1SharedFlow"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListSharedFlowsResponse"
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        },
        "response": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object"
        }
      },
      "id": "GoogleLongrunningOperation"
    },
    "GoogleCloudApigeeV1Environment": {
      "type": "object",
      "properties": {
        "lastModifiedAt": {
          "format": "int64",
          "description": "Output only. Last modification time of this environment as milliseconds\nsince epoch.",
          "type": "string"
        },
        "name": {
          "description": "Required. Name of the environment. Values must match the\nregular expression `^[.\\\\p{Alnum}-_]{1,255}$`",
          "type": "string"
        },
        "createdAt": {
          "format": "int64",
          "description": "Output only. Creation time of this environment as milliseconds since epoch.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the environment.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. Display name for this environment.",
          "type": "string"
        },
        "properties": {
          "description": "Optional. Key-value pairs that may be used for customizing the environment.",
          "$ref": "GoogleCloudApigeeV1Properties"
        }
      },
      "id": "GoogleCloudApigeeV1Environment"
    },
    "GoogleCloudApigeeV1Properties": {
      "description": "Message for compatibility with legacy Edge specification for Java Properties\nobject in JSON.",
      "type": "object",
      "properties": {
        "property": {
          "description": "List of all properties in the object",
          "items": {
            "$ref": "GoogleCloudApigeeV1Property"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Properties"
    },
    "GoogleCloudApigeeV1Property": {
      "description": "A single property entry in the Properties message.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The property key",
          "type": "string"
        },
        "value": {
          "description": "The property value",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Property"
    },
    "GoogleCloudApigeeV1ApiProxyRevision": {
      "description": "API proxy revision.",
      "type": "object",
      "properties": {
        "lastModifiedAt": {
          "format": "int64",
          "description": "Time that the API proxy revision was last modified in\nmilliseconds since epoch.",
          "type": "string"
        },
        "sharedFlows": {
          "description": "List of the shared flows included in the API proxy revision.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "Type. Set to `Application`. Maintained for compatibility with\nthe Apigee Edge API.",
          "type": "string"
        },
        "resourceFiles": {
          "$ref": "GoogleCloudApigeeV1ResourceFiles",
          "description": "List of resource files included in the API proxy revision."
        },
        "description": {
          "description": "Description of the API proxy revision.",
          "type": "string"
        },
        "proxyEndpoints": {
          "description": "List of ProxyEndpoints in the `/proxies` directory of the API proxy.\nTypically, this element is included only when the API proxy was created\nusing the Edge UI. This is a 'manifest' setting designed to\nprovide visibility into the contents of the API proxy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "basepaths": {
          "description": "Base URL of the API proxy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "configurationVersion": {
          "description": "Version of the API proxy configuration schema to which the API proxy\nconforms. Currently, the only supported value is 4.0\n(`majorVersion.minorVersion`). This setting may be used in the future to\ntrack the evolution of the API proxy format.",
          "$ref": "GoogleCloudApigeeV1ConfigVersion"
        },
        "proxies": {
          "description": "List of proxy names included in the API proxy revision.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the API proxy.",
          "type": "string"
        },
        "teams": {
          "description": "List of the teams included in the API proxy revision.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "revision": {
          "type": "string",
          "description": "API proxy revision."
        },
        "createdAt": {
          "format": "int64",
          "description": "Time that the API proxy revision was created in milliseconds since\nepoch.",
          "type": "string"
        },
        "policies": {
          "description": "List of policy names included in the API proxy revision..",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "contextInfo": {
          "type": "string",
          "description": "Revision number, app name, and organization for the API proxy."
        },
        "displayName": {
          "description": "Human-readable name of the API proxy.",
          "type": "string"
        },
        "targetServers": {
          "description": "List of TargetServers referenced in any TargetEndpoint in the API\nproxy. Typically, you will see this element only when the API proxy was\ncreated using the Edge UI. This is a 'manifest' setting\ndesigned to provide visibility into the contents of the API proxy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "entityMetaDataAsProperties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata describing the API proxy revision as a key-value map.",
          "type": "object"
        },
        "targetEndpoints": {
          "description": "List of TargetEndpoints in the `/targets` directory of the API proxy.\nTypically, this element is included only when the API proxy was created\nusing the Edge  UI. This is a 'manifest' setting designed to\nprovide visibility into the contents of the API proxy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "targets": {
          "description": "List of the targets included in the API proxy revision.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "resources": {
          "description": "List of the resources included in the API proxy revision formatted as\n\"{type}://{name}\".",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "spec": {
          "description": "OpenAPI Specification that is associated with the API proxy.\nThe value is set to a URL or to a path in the specification store.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ApiProxyRevision"
    },
    "GoogleCloudApigeeV1DeleteCustomReportResponse": {
      "type": "object",
      "properties": {
        "message": {
          "description": "The response contains only a message field.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DeleteCustomReportResponse"
    },
    "GoogleCloudApigeeV1OrganizationProjectMapping": {
      "id": "GoogleCloudApigeeV1OrganizationProjectMapping",
      "type": "object",
      "properties": {
        "projectIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of GCP projects associated with the Apigee organization."
        },
        "organization": {
          "description": "Name of the Apigee organization.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1ListOfDevelopersResponse": {
      "id": "GoogleCloudApigeeV1ListOfDevelopersResponse",
      "type": "object",
      "properties": {
        "developer": {
          "description": "List of developers.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Developer"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1ListCompaniesResponse": {
      "type": "object",
      "properties": {
        "company": {
          "description": "A list of company.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Company"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListCompaniesResponse"
    },
    "GoogleCloudApigeeV1SyncAuthorization": {
      "type": "object",
      "properties": {
        "identities": {
          "description": "Required. Array of service accounts to grant access to control plane\nresources, each specified using the following\nformat: `serviceAccount:`\u003cvar\u003eservice-account-name\u003c/var\u003e.\n\nThe \u003cvar\u003eservice-account-name\u003c/var\u003e is formatted like an email address. For\nexample:\n`my-synchronizer-manager-service_account@my_project_id.iam.gserviceaccount.com`\n\nYou might specify multiple service accounts, for example, if you have\nmultiple environments and wish to assign a unique service account to each\none.\n\nThe service accounts must have **Apigee Synchronizer Manager** role.\nSee also [Create service\naccounts](https://docs.apigee.com/hybrid/latest/sa-about#create-the-service-accounts).",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "description": "Entity tag (ETag) used for optimistic concurrency control as a way to help\nprevent simultaneous updates from overwriting each other.\n\nFor example, when you call  [getSyncAuthorization](getSyncAuthorization)\nan ETag is returned in the response. Pass that ETag when calling\nthe [setSyncAuthorization](setSyncAuthorization) to ensure\nthat you are updating the correct version. If you don't pass the\nETag in the call to `setSyncAuthorization`, then the\nexisting authorization is overwritten indiscriminately.\n\n**Note**: We strongly recommend that you use the ETag in the\nread-modify-write cycle to avoid race conditions.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1SyncAuthorization"
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array"
        }
      },
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudApigeeV1QueryMetric": {
      "id": "GoogleCloudApigeeV1QueryMetric",
      "description": "More info about Metric:\nhttps://docs.apigee.com/api-platform/analytics/analytics-reference#metrics",
      "type": "object",
      "properties": {
        "operator": {
          "description": "One of `+`, `-`, `/`, `%`, `*`",
          "type": "string"
        },
        "value": {
          "description": "Operand value should be provided when operator is set.",
          "type": "string"
        },
        "function": {
          "description": "Aggregation function: avg, min, max, or sum",
          "type": "string"
        },
        "alias": {
          "description": "Alias for the metric. Alias will be used to replace metric name\nin query results.",
          "type": "string"
        },
        "name": {
          "description": "Required. Metric name",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1SchemaSchemaProperty": {
      "description": "Message type for schema property",
      "type": "object",
      "properties": {
        "type": {
          "description": "Data type of the field.",
          "type": "string"
        },
        "custom": {
          "description": "Custom is a flag signifying if the field was provided as\npart of the standard dataset or a custom field created by the customer",
          "type": "string"
        },
        "createTime": {
          "description": "Creation time of the field",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1SchemaSchemaProperty"
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method."
    },
    "GoogleCloudApigeeV1ListApiProductsResponse": {
      "type": "object",
      "properties": {
        "apiProduct": {
          "description": "Lists all API product names defined for an organization.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProduct"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListApiProductsResponse"
    },
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudApigeeV1SharedFlowRevision": {
      "description": "The metadata describing a shared flow revision.",
      "type": "object",
      "properties": {
        "configurationVersion": {
          "description": "The version of the configuration schema to which this shared flow conforms.\nThe only supported value currently is majorVersion 4 and minorVersion 0.\nThis setting may be used in the future to enable evolution of the shared\nflow format.",
          "$ref": "GoogleCloudApigeeV1ConfigVersion"
        },
        "name": {
          "description": "The resource ID of the parent shared flow.",
          "type": "string"
        },
        "revision": {
          "description": "The resource ID of this revision.",
          "type": "string"
        },
        "policies": {
          "description": "A list of policy names included in this shared flow revision.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createdAt": {
          "format": "int64",
          "description": "Time at which this shared flow revision was created, in milliseconds since\nepoch.",
          "type": "string"
        },
        "contextInfo": {
          "type": "string",
          "description": "A textual description of the shared flow revision."
        },
        "displayName": {
          "description": "The human readable name of this shared flow.",
          "type": "string"
        },
        "entityMetaDataAsProperties": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "A Key-Value map of metadata about this shared flow revision.",
          "type": "object"
        },
        "resources": {
          "description": "A list of the resources included in this shared flow revision formatted as\n\"{type}://{name}\".",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Time at which this shared flow revision was most recently modified, in\nmilliseconds since epoch.",
          "type": "string"
        },
        "sharedFlows": {
          "description": "A list of the shared flow names included in this shared flow revision.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "type": {
          "description": "The string \"Application\"",
          "type": "string"
        },
        "resourceFiles": {
          "$ref": "GoogleCloudApigeeV1ResourceFiles",
          "description": "The resource files included in this shared flow revision."
        }
      },
      "id": "GoogleCloudApigeeV1SharedFlowRevision"
    },
    "GoogleCloudApigeeV1Certificate": {
      "type": "object",
      "properties": {
        "certInfo": {
          "description": "The chain of certificates under this name.",
          "items": {
            "$ref": "GoogleCloudApigeeV1CertInfo"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Certificate"
    },
    "GoogleCloudApigeeV1OptimizedStats": {
      "type": "object",
      "properties": {
        "Response": {
          "$ref": "GoogleCloudApigeeV1OptimizedStatsResponse",
          "description": "This field wraps the stats response for Js Optimized Scenario\nwith a Response key.\nE.g.\n{\n \"Response\": {\n     \"TimeUnit\": [],\n     \"metaData\": {\n         \"errors\": [],\n         \"notices\": [\n             \"Source:Postgres\",\n             \"Table used: edge.api.aaxgroup001.agg_api\",\n             \"PG Host:ruappg08-ro.production.apigeeks.net\",\n             \"query served by:80c4ebca-6a10-4a2e-8faf-c60c1ee306ca\"\n         ]\n     },\n     \"resultTruncated\": false,\n     \"stats\": {\n         \"data\": [\n             {\n                \"identifier\": {\n                    \"names\": [\n                        \"apiproxy\"\n                    ],\n                    \"values\": [\n                        \"sirjee\"\n                    ]\n                },\n                \"metric\": [\n                    {\n                        \"env\": \"prod\",\n                        \"name\": \"sum(message_count)\",\n                        \"values\": [\n                            36.0\n                        ]\n                    },\n                    {\n                        \"env\": \"prod\",\n                        \"name\": \"sum(is_error)\",\n                        \"values\": [\n                            36.0\n                        ]\n                    }\n                ]\n            }\n         ]\n     }\n }\n}"
        }
      },
      "id": "GoogleCloudApigeeV1OptimizedStats"
    },
    "GoogleCloudApigeeV1ListApiProxiesResponse": {
      "type": "object",
      "properties": {
        "proxies": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProxy"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListApiProxiesResponse"
    },
    "GoogleCloudApigeeV1ServiceIssuersMapping": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "description": "String indicating the Apigee service name."
        },
        "emailIds": {
          "description": "List of trusted issuer email ids.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ServiceIssuersMapping"
    },
    "GoogleCloudApigeeV1ResourceConfig": {
      "type": "object",
      "properties": {
        "location": {
          "description": "The location of the resource as a URI.",
          "type": "string"
        },
        "name": {
          "description": "The resource name. Only environment-scoped resource files are supported.\nMust be of the form\n'organizations/{org}/environments/{env}/resourcefiles/{type}/{file}/revisions/{rev}'.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ResourceConfig"
    },
    "GoogleCloudApigeeV1DataLocation": {
      "id": "GoogleCloudApigeeV1DataLocation",
      "type": "object",
      "properties": {
        "url": {
          "description": "GCS signed url. Signed URLs provide a way to give time-limited\nread or write access to anyone in possession of the URL, regardless of\nwhether they have a Google account.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1Reference": {
      "id": "GoogleCloudApigeeV1Reference",
      "description": "A Reference configuration. References must refer to a keystore\nthat also exists in the parent environment.",
      "type": "object",
      "properties": {
        "refers": {
          "description": "Required. The id of the resource to which this reference refers.\nMust be the id of a resource that exists in the parent environment and is\nof the given resource_type.",
          "type": "string"
        },
        "name": {
          "description": "Required. The resource id of this reference. Values must match the\nregular expression [\\w\\s\\-.]+.",
          "type": "string"
        },
        "description": {
          "description": "Optional. A human-readable description of this reference.",
          "type": "string"
        },
        "resourceType": {
          "type": "string",
          "description": "The type of resource referred to by this reference. Valid values\nare 'KeyStore' or 'TrustStore'."
        }
      }
    },
    "GoogleCloudApigeeV1ListAppsResponse": {
      "type": "object",
      "properties": {
        "app": {
          "items": {
            "$ref": "GoogleCloudApigeeV1App"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListAppsResponse"
    },
    "GoogleCloudApigeeV1GetSyncAuthorizationRequest": {
      "description": "Request for\nGetSyncAuthorization.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudApigeeV1GetSyncAuthorizationRequest"
    },
    "GoogleCloudApigeeV1FlowHookConfig": {
      "id": "GoogleCloudApigeeV1FlowHookConfig",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the flow hook. Must be of the form\n'organizations/{org}/environments/{env}/flowhooks/{point}''.\nKnown points are PreProxyFlowHook, PostProxyFlowHook, PreTargetFlowHook,\nand PostTargetFlowHook",
          "type": "string"
        },
        "sharedFlowName": {
          "description": "The name of the shared flow to invoke. Must be of the form\n'organizations/{org}/sharedflows/{sharedflow}'.",
          "type": "string"
        },
        "continueOnError": {
          "description": "Should the flow abort after an error in the flow hook.\nShould default to true if unset.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudApigeeV1Stats": {
      "description": "This message type encapsulates a stats response",
      "type": "object",
      "properties": {
        "metaData": {
          "$ref": "GoogleCloudApigeeV1Metadata",
          "description": "This field contains the metadata information"
        },
        "environments": {
          "items": {
            "$ref": "GoogleCloudApigeeV1StatsEnvironmentStats"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Stats"
    },
    "GoogleCloudApigeeV1ResourceFiles": {
      "type": "object",
      "properties": {
        "resourceFile": {
          "description": "List of resource files.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceFile"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ResourceFiles",
      "description": "List of resource files."
    },
    "GoogleCloudApigeeV1ListCompanyAppsResponse": {
      "type": "object",
      "properties": {
        "app": {
          "description": "A list of apps for a company.",
          "items": {
            "$ref": "GoogleCloudApigeeV1CompanyApp"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListCompanyAppsResponse"
    },
    "GoogleCloudApigeeV1CompanyAppKey": {
      "type": "object",
      "properties": {
        "apiProducts": {
          "description": "A list of api products this credential can be used for.",
          "items": {
            "type": "any"
          },
          "type": "array"
        },
        "issuedAt": {
          "format": "int64",
          "description": "Unix time when the app was issued\njson key: issuedAt",
          "type": "string"
        },
        "status": {
          "description": "The status of the credential.",
          "type": "string"
        },
        "scopes": {
          "description": "The scopes to apply to the app. The specified scope names must already\nexist on the API product that you associate with the app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "consumerSecret": {
          "description": "The secret key.",
          "type": "string"
        },
        "consumerKey": {
          "description": "The consumer key.",
          "type": "string"
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array",
          "description": "A list of attributes tied to the credential."
        },
        "expiresAt": {
          "format": "int64",
          "description": "Unix time when the app was created\njson key: expiresAt",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1CompanyAppKey"
    },
    "GoogleCloudApigeeV1DeploymentConfig": {
      "type": "object",
      "properties": {
        "attributes": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional key-value metadata about the deployment.",
          "type": "object"
        },
        "basePath": {
          "type": "string",
          "description": "Base path where the application needs to be hosted. Default value is\nassumed to be \"/\"."
        },
        "location": {
          "description": "The location of the proxy bundle, as a uri.",
          "type": "string"
        },
        "name": {
          "description": "The name of the API or shared flow revision to be deployed. Must be of the\nform 'organizations/{org}/apis/{api}/revisions/{rev}' or\n'organizations/{org}/sharedflows/{sf}/revisions/{rev}'.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DeploymentConfig"
    },
    "GoogleCloudApigeeV1ListOrganizationsResponse": {
      "type": "object",
      "properties": {
        "organizations": {
          "description": "List of Apigee organizations and associated GCP projects.",
          "items": {
            "$ref": "GoogleCloudApigeeV1OrganizationProjectMapping"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListOrganizationsResponse"
    },
    "GoogleCloudApigeeV1KeystoreConfig": {
      "type": "object",
      "properties": {
        "aliases": {
          "description": "Aliases in the keystore.",
          "items": {
            "$ref": "GoogleCloudApigeeV1AliasRevisionConfig"
          },
          "type": "array"
        },
        "name": {
          "description": "The resource name. Must be of the\nform:\n'organizations/{org}/environments/{env}/keystores/{keystore}'.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1KeystoreConfig"
    },
    "GoogleCloudApigeeV1ApiProxy": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the API proxy.",
          "type": "string"
        },
        "latestRevisionId": {
          "description": "The id of the most recently created revision for this api proxy.",
          "type": "string"
        },
        "revision": {
          "description": "List of revisons defined for the API proxy.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metaData": {
          "$ref": "GoogleCloudApigeeV1EntityMetadata",
          "description": "Metadata describing the API proxy."
        }
      },
      "id": "GoogleCloudApigeeV1ApiProxy",
      "description": "Metadata describing the API proxy"
    },
    "GoogleCloudApigeeV1Metric": {
      "type": "object",
      "properties": {
        "name": {
          "description": "This field contains the metric name",
          "type": "string"
        },
        "values": {
          "description": "List of metric values\nPossible value format\n\"values\":[\"39.0\"] or\n\"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]",
          "items": {
            "type": "any"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Metric",
      "description": "This message type encapsulates the metric data point\nExample\n{\n   \"name\": \"sum(message_count)\",\n   \"values\" : [ {\n                  \"timestamp\": 1549004400000,\n                  \"value\": \"39.0\"\n                },\n                {\n                  \"timestamp\" : 1548997200000,\n                  \"value\" : \"0.0\"\n                } ]\n}\nor\n{\n    \"name\": \"sum(message_count)\",\n    \"values\" : [\"39.0\"]\n}"
    },
    "GoogleIamV1AuditLogConfig": {
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        }
      },
      "id": "GoogleIamV1AuditLogConfig"
    },
    "GoogleCloudApigeeV1ApiProductRef": {
      "type": "object",
      "properties": {
        "apiproduct": {
          "description": "Name of the API product.",
          "type": "string"
        },
        "status": {
          "description": "Status of the API product.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ApiProductRef"
    },
    "GoogleCloudApigeeV1AliasRevisionConfig": {
      "type": "object",
      "properties": {
        "location": {
          "description": "The location of the alias file, e.g. a GCS URI.",
          "type": "string"
        },
        "name": {
          "description": "The name of the alias revision included in the keystore. Must be of the\nform:\n'organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}/revisions/{rev}'.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "ALIAS_TYPE_UNSPECIFIED",
            "CERT",
            "KEY_CERT"
          ]
        }
      },
      "id": "GoogleCloudApigeeV1AliasRevisionConfig"
    },
    "GoogleCloudApigeeV1QueryMetadata": {
      "id": "GoogleCloudApigeeV1QueryMetadata",
      "type": "object",
      "properties": {
        "timeUnit": {
          "description": "Query GroupBy time unit.",
          "type": "string"
        },
        "metrics": {
          "description": "Metrics of the AsyncQuery.\n\nExample: [\"name:message_count,func:sum,alias:sum_message_count\"]",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "endTimestamp": {
          "description": "End timestamp of the query range.",
          "type": "string"
        },
        "outputFormat": {
          "description": "Output format.",
          "type": "string"
        },
        "startTimestamp": {
          "description": "Start timestamp of the query range.",
          "type": "string"
        },
        "dimensions": {
          "description": "Dimensions of the AsyncQuery.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1PodStatus": {
      "type": "object",
      "properties": {
        "podName": {
          "description": "Name of the pod which is reporting the status.",
          "type": "string"
        },
        "deploymentTime": {
          "type": "string",
          "format": "int64",
          "description": "Time the proxy was deployed in milliseconds since epoch."
        },
        "deploymentStatusTime": {
          "format": "int64",
          "description": "Time the deployment status was reported in milliseconds since epoch.",
          "type": "string"
        },
        "deploymentStatus": {
          "description": "Status of the deployment. Valid values\ninclude:\n- `deployed`: Successful.\n- `error` : Failed.\n- `pending` : Pod has not yet reported on the deployment.",
          "type": "string"
        },
        "podStatusTime": {
          "format": "int64",
          "description": "Time the pod status was reported in milliseconds since epoch.",
          "type": "string"
        },
        "appVersion": {
          "description": "Version of the application running in the pod.",
          "type": "string"
        },
        "statusCodeDetails": {
          "type": "string",
          "description": "Human-readable message associated with the status code."
        },
        "statusCode": {
          "description": "Code associated with the deployment status.",
          "type": "string"
        },
        "podStatus": {
          "description": "Overall status of the pod (not this specific deployment). Valid values\ninclude:\n- `active`: Up to date.\n- `stale` : Recently out of date.\n\nPods that have not reported status in a\nlong time are excluded from the output.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1PodStatus"
    },
    "GoogleCloudApigeeV1Company": {
      "type": "object",
      "properties": {
        "apps": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "organization": {
          "type": "string",
          "description": "the org that the company is created"
        },
        "displayName": {
          "description": "company name displayed in the UI",
          "type": "string"
        },
        "status": {
          "description": "The status of the company",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the company. Characters you can use in the name are restricted to:\nA-Z0-9._\\-$ %."
        },
        "lastModifiedAt": {
          "format": "int64",
          "description": "Output only. Modified time as milliseconds since epoch.\njson key: lastModifiedAt",
          "type": "string"
        },
        "attributes": {
          "description": "A list of attributes",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        },
        "createdAt": {
          "format": "int64",
          "description": "Output only. Created time as milliseconds since epoch.\njson key: createdAt",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Company"
    },
    "GoogleCloudApigeeV1TlsInfoConfig": {
      "type": "object",
      "properties": {
        "ignoreValidationErrors": {
          "type": "boolean",
          "description": "If true, ignore TLS certificate validation errors."
        },
        "protocols": {
          "description": "Whitelist of supported TLS protocols.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "enabled": {
          "description": "Enables one-way TLS.",
          "type": "boolean"
        },
        "commonName": {
          "$ref": "GoogleCloudApigeeV1CommonNameConfig",
          "description": "Common name to validate the target against."
        },
        "ciphers": {
          "description": "Whitelist of supported ciphers.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "keyAliasReference": {
          "description": "A pair of reference name and alias to use for client side auth.",
          "$ref": "GoogleCloudApigeeV1KeyAliasReference"
        },
        "clientAuthEnabled": {
          "description": "Indicates if client auth is enabled for the target. Enables two-way TLS.",
          "type": "boolean"
        },
        "keyAlias": {
          "type": "string",
          "description": "The name of the Alias used for client side auth. It must be of the form:\norganizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}"
        },
        "trustStore": {
          "description": "The name of the Keystore or keystore reference containing trusted\ncertificates for the server. It must be of either the form\norganizations/{org}/environments/{env}/keystores/{keystore} or\norganizations/{org}/environments/{env}/references/{reference}.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1TlsInfoConfig"
    },
    "GoogleCloudApigeeV1OperationMetadata": {
      "description": "Metadata describing an Operation.",
      "type": "object",
      "properties": {
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "IN_PROGRESS",
            "FINISHED"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ]
        },
        "targetResourceName": {
          "description": "Name of the resource for which the operation is operating on.",
          "type": "string"
        },
        "operationType": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "INSERT",
            "DELETE"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        }
      },
      "id": "GoogleCloudApigeeV1OperationMetadata"
    },
    "GoogleCloudApigeeV1KeyAliasReference": {
      "properties": {
        "reference": {
          "description": "The reference name. Must be of the form:\norganizations/{org}/environments/{env}/references/{ref}.",
          "type": "string"
        },
        "aliasId": {
          "description": "The alias id. Must exist in the keystore referred to by reference.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1KeyAliasReference",
      "type": "object"
    },
    "GoogleCloudApigeeV1CompanyApp": {
      "type": "object",
      "properties": {
        "lastModifiedAt": {
          "format": "int64",
          "description": "Output only. Modified time as milliseconds since epoch.\njson key: lastModifiedAt",
          "type": "string"
        },
        "appId": {
          "type": "string",
          "description": "The id of the app."
        },
        "attributes": {
          "description": "A list of attributes.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        },
        "companyName": {
          "description": "The name of the company owns the app",
          "type": "string"
        },
        "callbackUrl": {
          "description": "The callbackUrl is used by OAuth 2.0 authorization servers to communicate\nauthorization codes back to apps.",
          "type": "string"
        },
        "apiProducts": {
          "description": "Any API Products the app consumes",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "status": {
          "description": "The status of the credential.",
          "type": "string"
        },
        "keyExpiresIn": {
          "type": "string",
          "format": "int64",
          "description": "A setting, in milliseconds, for the lifetime of the consumer key that will\nbe generated for the developer app. The default value, -1, indicates an\ninfinite validity period. Once set, the expiration can't be updated.\njson key: keyExpiresIn"
        },
        "credentials": {
          "description": "Output only. A set of credentials for the app\ncredentials are key/secret pairs",
          "items": {
            "$ref": "GoogleCloudApigeeV1Credential"
          },
          "type": "array"
        },
        "name": {
          "description": "The resoure id of the app.\nJSON key: name",
          "type": "string"
        },
        "scopes": {
          "description": "The scopes to apply to the app. The specified scope names must already\nexist on the API product that you associate with the app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "createdAt": {
          "format": "int64",
          "description": "Output only. created time of this environment as milliseconds since epoch.\nJSON key: createdAt",
          "type": "string"
        },
        "appFamily": {
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1CompanyApp"
    },
    "GoogleTypeExpr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() \u003c 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language\nsyntax.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        }
      },
      "id": "GoogleTypeExpr"
    },
    "GoogleCloudApigeeV1FlowHook": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the flow hook.",
          "type": "string"
        },
        "flowHookPoint": {
          "description": "Output only. Where in the API call flow the flow hook is invoked. Must be one of\n`PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, or\n`PostTargetFlowHook`.",
          "type": "string"
        },
        "continueOnError": {
          "description": "Optional. Flag that specifies whether execution should continue if the flow hook\nthrows an exception. Set to `true` to continue execution. Set to\n`false` to stop execution if the flow hook throws an exception.Defaults\nto `true`.",
          "type": "boolean"
        },
        "sharedFlow": {
          "type": "string",
          "description": "Shared flow attached to this flow hook, or empty if there is none attached."
        }
      },
      "id": "GoogleCloudApigeeV1FlowHook"
    },
    "GoogleCloudApigeeV1Keystore": {
      "description": "A datastore for Certificates and Aliases",
      "type": "object",
      "properties": {
        "aliases": {
          "description": "Output only. The aliases in this keystore.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Required. The resource ID for this keystore.  Values must match the\nregular expression `[\\w[:space:]-.]{1,255}`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1Keystore"
    }
  },
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  }
}
