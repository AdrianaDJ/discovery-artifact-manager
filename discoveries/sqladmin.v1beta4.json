{
  "resources": {
    "backupRuns": {
      "methods": {
        "insert": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.backupRuns.insert",
          "description": "Creates a new backup run on demand. This method is applicable only to Second Generation instances.",
          "response": {
            "$ref": "Operation"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "request": {
            "$ref": "BackupRun"
          },
          "httpMethod": "POST",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns"
        },
        "delete": {
          "httpMethod": "DELETE",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "description": "Deletes the backup taken by a backup run.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "id": "sql.backupRuns.delete",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "instance": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "id": {
              "format": "int64",
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID of the Backup Run to delete. To find a Backup Run ID, use the list method."
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}"
        },
        "list": {
          "parameters": {
            "maxResults": {
              "description": "Maximum number of backup runs per response.",
              "type": "integer",
              "location": "query",
              "format": "int32"
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A previously-returned page token representing part of the larger set of results to view."
            }
          },
          "httpMethod": "GET",
          "description": "Lists all backup runs associated with a given instance and configuration in the reverse chronological order of the backup initiation time.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "BackupRunsListResponse"
          },
          "id": "sql.backupRuns.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns"
        },
        "get": {
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path"
            },
            "id": {
              "location": "path",
              "type": "string",
              "description": "The ID of this Backup Run.",
              "format": "int64",
              "required": true
            },
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "description": "Retrieves a resource containing information about a backup run.",
          "response": {
            "$ref": "BackupRun"
          },
          "httpMethod": "GET",
          "id": "sql.backupRuns.get"
        }
      }
    },
    "flags": {
      "methods": {
        "list": {
          "parameterOrder": [],
          "parameters": {
            "databaseVersion": {
              "type": "string",
              "location": "query",
              "description": "Database type and version you want to retrieve flags for. By default, this method returns flags for all database types and versions."
            }
          },
          "flatPath": "sql/v1beta4/flags",
          "path": "sql/v1beta4/flags",
          "description": "List all available database flags for Cloud SQL instances.",
          "id": "sql.flags.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "FlagsListResponse"
          },
          "httpMethod": "GET"
        }
      }
    },
    "operations": {
      "methods": {
        "list": {
          "description": "Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.operations.list",
          "path": "sql/v1beta4/projects/{project}/operations",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "query",
              "type": "string"
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "maxResults": {
              "location": "query",
              "description": "Maximum number of operations per response.",
              "format": "uint32",
              "type": "integer"
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "location": "query",
              "type": "string"
            }
          },
          "response": {
            "$ref": "OperationsListResponse"
          },
          "flatPath": "sql/v1beta4/projects/{project}/operations"
        },
        "get": {
          "parameterOrder": [
            "project",
            "operation"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/operations/{operation}",
          "path": "sql/v1beta4/projects/{project}/operations/{operation}",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.operations.get",
          "parameters": {
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string"
            },
            "operation": {
              "required": true,
              "location": "path",
              "description": "Instance operation ID.",
              "type": "string"
            }
          },
          "description": "Retrieves an instance operation that has been performed on an instance."
        }
      }
    },
    "users": {
      "methods": {
        "delete": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.users.delete",
          "description": "Deletes a user from a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "parameters": {
            "instance": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Database instance ID. This does not include the project ID."
            },
            "name": {
              "description": "Name of the user in the instance.",
              "location": "query",
              "type": "string"
            },
            "host": {
              "location": "query",
              "description": "Host of the user in the instance.",
              "type": "string"
            },
            "project": {
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            }
          },
          "httpMethod": "DELETE"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.users.update",
          "request": {
            "$ref": "User"
          },
          "parameters": {
            "name": {
              "type": "string",
              "location": "query",
              "description": "Name of the user in the instance."
            },
            "instance": {
              "required": true,
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path"
            },
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path"
            },
            "host": {
              "description": "Optional. Host of the user in the instance.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "httpMethod": "PUT",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "description": "Updates an existing user in a Cloud SQL instance."
        },
        "insert": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "required": true
            }
          },
          "request": {
            "$ref": "User"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.users.insert",
          "description": "Creates a new user in a Cloud SQL instance.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST"
        },
        "list": {
          "description": "Lists users in the specified Cloud SQL instance.",
          "httpMethod": "GET",
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string",
              "required": true,
              "location": "path"
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "UsersListResponse"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "id": "sql.users.list"
        }
      }
    },
    "instances": {
      "methods": {
        "stopReplica": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "required": true,
              "location": "path",
              "description": "ID of the project that contains the read replica.",
              "type": "string"
            },
            "instance": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Cloud SQL read replica instance name."
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/stopReplica",
          "description": "Stops the replication in the read replica instance.",
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.stopReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/stopReplica"
        },
        "get": {
          "response": {
            "$ref": "DatabaseInstance"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Retrieves a resource containing information about a Cloud SQL instance.",
          "parameters": {
            "instance": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Database instance ID. This does not include the project ID."
            },
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "id": "sql.instances.get"
        },
        "startReplica": {
          "description": "Starts the replication in the read replica instance.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/startReplica",
          "httpMethod": "POST",
          "id": "sql.instances.startReplica",
          "parameters": {
            "project": {
              "description": "ID of the project that contains the read replica.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "instance": {
              "type": "string",
              "location": "path",
              "description": "Cloud SQL read replica instance name.",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/startReplica",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "export": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/export",
          "request": {
            "$ref": "InstancesExportRequest"
          },
          "httpMethod": "POST",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/export",
          "description": "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance to be exported.",
              "type": "string",
              "location": "path"
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.export"
        },
        "update": {
          "request": {
            "$ref": "DatabaseInstance"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "httpMethod": "PUT",
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            },
            "project": {
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.update",
          "description": "Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "restoreBackup": {
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path"
            },
            "instance": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.restoreBackup",
          "description": "Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.",
          "request": {
            "$ref": "InstancesRestoreBackupRequest"
          }
        },
        "clone": {
          "description": "Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.",
          "httpMethod": "POST",
          "request": {
            "$ref": "InstancesCloneRequest"
          },
          "id": "sql.instances.clone",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/clone",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/clone",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the source as well as the clone Cloud SQL instance.",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "required": true,
              "description": "The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID.",
              "type": "string"
            }
          }
        },
        "truncateLog": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/truncateLog",
          "httpMethod": "POST",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/truncateLog",
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.truncateLog",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "request": {
            "$ref": "InstancesTruncateLogRequest"
          },
          "parameters": {
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string"
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Project ID of the Cloud SQL project.",
              "type": "string"
            }
          },
          "description": "Truncate MySQL general and slow query log tables",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "rotateServerCa": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "description": "Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.",
          "httpMethod": "POST",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "request": {
            "$ref": "InstancesRotateServerCaRequest"
          },
          "id": "sql.instances.rotateServerCa"
        },
        "patch": {
          "httpMethod": "PATCH",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            },
            "instance": {
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "id": "sql.instances.patch",
          "description": "Updates settings of a Cloud SQL instance. This method supports patch semantics.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "response": {
            "$ref": "Operation"
          }
        },
        "promoteReplica": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.promoteReplica",
          "parameters": {
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL read replica instance name.",
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica",
          "description": "Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.",
          "httpMethod": "POST"
        },
        "list": {
          "path": "sql/v1beta4/projects/{project}/instances",
          "httpMethod": "GET",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "pageToken": {
              "type": "string",
              "location": "query",
              "description": "A previously-returned page token representing part of the larger set of results to view."
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "A filter expression that filters resources listed in the response. The expression is in the form of field:value. For example, 'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per their JSON representation, such as 'settings.userLabels.auto_start:true'. Multiple filter queries are space-separated. For example. 'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly."
            },
            "project": {
              "required": true,
              "description": "Project ID of the project for which to list Cloud SQL instances.",
              "type": "string",
              "location": "path"
            },
            "maxResults": {
              "type": "integer",
              "format": "uint32",
              "location": "query",
              "description": "The maximum number of results to return per response."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Lists instances under a given project.",
          "id": "sql.instances.list",
          "response": {
            "$ref": "InstancesListResponse"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances"
        },
        "failover": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/failover",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "InstancesFailoverRequest"
          },
          "id": "sql.instances.failover",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Failover the instance to its failover replica instance. Using this operation might cause your instance to restart.",
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "ID of the project that contains the read replica."
            },
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/failover"
        },
        "demoteMaster": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST",
          "id": "sql.instances.demoteMaster",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "required": true,
              "description": "ID of the project that contains the instance.",
              "type": "string",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance name.",
              "type": "string",
              "required": true
            }
          },
          "description": "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
          "request": {
            "$ref": "InstancesDemoteMasterRequest"
          },
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "addServerCa": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Add a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.",
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/addServerCa",
          "id": "sql.instances.addServerCa",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/addServerCa"
        },
        "listServerCas": {
          "description": "Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "GET",
          "id": "sql.instances.listServerCas",
          "parameters": {
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path"
            },
            "project": {
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/listServerCas",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/listServerCas",
          "response": {
            "$ref": "InstancesListServerCasResponse"
          },
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "resetSslConfig": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig",
          "description": "Deletes all client certificates and generates a new server SSL certificate for the instance.",
          "id": "sql.instances.resetSslConfig",
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST"
        },
        "restart": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Restarts a Cloud SQL instance.",
          "id": "sql.instances.restart",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/restart",
          "httpMethod": "POST",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance to be restarted.",
              "required": true
            },
            "instance": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID."
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/restart"
        },
        "import": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "project": {
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            }
          },
          "request": {
            "$ref": "InstancesImportRequest"
          },
          "description": "Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.",
          "id": "sql.instances.import",
          "response": {
            "$ref": "Operation"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/import",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/import"
        },
        "insert": {
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the project to which the newly created Cloud SQL instances should belong.",
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST",
          "parameterOrder": [
            "project"
          ],
          "request": {
            "$ref": "DatabaseInstance"
          },
          "path": "sql/v1beta4/projects/{project}/instances",
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.insert",
          "description": "Creates a new Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances"
        },
        "delete": {
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance to be deleted.",
              "type": "string"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "description": "Deletes a Cloud SQL instance.",
          "id": "sql.instances.delete",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "httpMethod": "DELETE"
        }
      }
    },
    "sslCerts": {
      "methods": {
        "get": {
          "parameters": {
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true
            },
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            },
            "sha1Fingerprint": {
              "type": "string",
              "description": "Sha1 FingerPrint.",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "GET",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "id": "sql.sslCerts.get",
          "description": "Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "SslCert"
          }
        },
        "list": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "response": {
            "$ref": "SslCertsListResponse"
          },
          "httpMethod": "GET",
          "parameters": {
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true
            },
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "required": true
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Lists all of the current SSL certificates for the instance.",
          "id": "sql.sslCerts.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts"
        },
        "insert": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "id": "sql.sslCerts.insert",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "request": {
            "$ref": "SslCertsInsertRequest"
          },
          "description": "Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.",
          "response": {
            "$ref": "SslCertsInsertResponse"
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "delete": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "parameters": {
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "sha1Fingerprint": {
              "location": "path",
              "description": "Sha1 FingerPrint.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "id": "sql.sslCerts.delete",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "httpMethod": "DELETE"
        },
        "createEphemeral": {
          "parameters": {
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the Cloud SQL project."
            }
          },
          "id": "sql.sslCerts.createEphemeral",
          "httpMethod": "POST",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "request": {
            "$ref": "SslCertsCreateEphemeralRequest"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral",
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "SslCert"
          }
        }
      }
    },
    "databases": {
      "methods": {
        "list": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "DatabasesListResponse"
          },
          "id": "sql.databases.list",
          "description": "Lists databases in the specified Cloud SQL instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "httpMethod": "GET",
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "get": {
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "httpMethod": "GET",
          "response": {
            "$ref": "Database"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Retrieves a resource containing information about a database inside a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameters": {
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "required": true
            },
            "database": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Name of the database in the instance."
            },
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "id": "sql.databases.get"
        },
        "patch": {
          "response": {
            "$ref": "Operation"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.databases.patch",
          "description": "Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameters": {
            "database": {
              "type": "string",
              "description": "Name of the database to be updated in the instance.",
              "location": "path",
              "required": true
            },
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string"
            },
            "instance": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Database instance ID. This does not include the project ID."
            }
          },
          "request": {
            "$ref": "Database"
          },
          "httpMethod": "PATCH"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "request": {
            "$ref": "Database"
          },
          "id": "sql.databases.update",
          "response": {
            "$ref": "Operation"
          },
          "description": "Updates a resource containing information about a database inside a Cloud SQL instance.",
          "httpMethod": "PUT",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "project": {
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string"
            },
            "database": {
              "required": true,
              "description": "Name of the database to be updated in the instance.",
              "type": "string",
              "location": "path"
            }
          }
        },
        "delete": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameters": {
            "database": {
              "location": "path",
              "type": "string",
              "description": "Name of the database to be deleted in the instance.",
              "required": true
            },
            "instance": {
              "location": "path",
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "required": true
            },
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "DELETE",
          "id": "sql.databases.delete",
          "description": "Deletes a database from a Cloud SQL instance."
        },
        "insert": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "id": "sql.databases.insert",
          "description": "Inserts a resource containing information about a database inside a Cloud SQL instance.",
          "request": {
            "$ref": "Database"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "location": "path",
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            },
            "instance": {
              "required": true,
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path"
            }
          }
        }
      }
    },
    "tiers": {
      "methods": {
        "list": {
          "flatPath": "sql/v1beta4/projects/{project}/tiers",
          "id": "sql.tiers.list",
          "path": "sql/v1beta4/projects/{project}/tiers",
          "description": "Lists all available machine types (tiers) for Cloud SQL, for example, db-n1-standard-1. For related information, see Pricing.",
          "parameterOrder": [
            "project"
          ],
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project for which to list tiers."
            }
          },
          "httpMethod": "GET",
          "response": {
            "$ref": "TiersListResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "projects": {
      "resources": {
        "instances": {
          "methods": {
            "startExternalSync": {
              "id": "sql.projects.instances.startExternalSync",
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "instance": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Cloud SQL instance ID. This does not include the project ID."
                },
                "syncMode": {
                  "type": "string",
                  "location": "query",
                  "description": "External sync mode",
                  "enumDescriptions": [
                    "Unknown external sync mode, will be defaulted to ONLINE mode",
                    "Online external sync will set up replication after initial data external sync",
                    "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
                  ],
                  "enum": [
                    "EXTERNAL_SYNC_MODE_UNSPECIFIED",
                    "ONLINE",
                    "OFFLINE"
                  ]
                },
                "project": {
                  "required": true,
                  "location": "path",
                  "description": "ID of the project that contains the instance.",
                  "type": "string"
                }
              },
              "description": "Start External primary instance migration.",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync"
            },
            "rescheduleMaintenance": {
              "request": {
                "$ref": "SqlInstancesRescheduleMaintenanceRequestBody"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "parameterOrder": [
                "project",
                "instance"
              ],
              "httpMethod": "POST",
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "description": "Reschedules the maintenance on the given instance.",
              "parameters": {
                "project": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "ID of the project that contains the instance."
                },
                "instance": {
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "id": "sql.projects.instances.rescheduleMaintenance",
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance"
            },
            "verifyExternalSyncSettings": {
              "parameterOrder": [
                "project",
                "instance"
              ],
              "parameters": {
                "verifyConnectionOnly": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Flag to enable verifying connection only"
                },
                "syncMode": {
                  "location": "query",
                  "enumDescriptions": [
                    "Unknown external sync mode, will be defaulted to ONLINE mode",
                    "Online external sync will set up replication after initial data external sync",
                    "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
                  ],
                  "description": "External sync mode",
                  "enum": [
                    "EXTERNAL_SYNC_MODE_UNSPECIFIED",
                    "ONLINE",
                    "OFFLINE"
                  ],
                  "type": "string"
                },
                "project": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Project ID of the project that contains the instance."
                },
                "instance": {
                  "type": "string",
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "location": "path",
                  "required": true
                }
              },
              "id": "sql.projects.instances.verifyExternalSyncSettings",
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "description": "Verify External primary instance external sync settings.",
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "response": {
                "$ref": "SqlInstancesVerifyExternalSyncSettingsResponse"
              }
            }
          }
        }
      }
    }
  },
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "kind": "discovery#restDescription",
  "name": "sqladmin",
  "ownerName": "Google",
  "batchPath": "batch",
  "baseUrl": "https://sqladmin.googleapis.com/",
  "id": "sqladmin:v1beta4",
  "servicePath": "",
  "title": "Cloud SQL Admin API",
  "revision": "20201007",
  "documentationLink": "https://developers.google.com/cloud-sql/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/sqlservice.admin": {
          "description": "Manage your Google SQL Service instances"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "parameters": {
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "ownerDomain": "google.com",
  "protocol": "rest",
  "mtlsRootUrl": "https://sqladmin.mtls.googleapis.com/",
  "canonicalName": "SQL Admin",
  "description": "API for Cloud SQL database instance management",
  "basePath": "",
  "rootUrl": "https://sqladmin.googleapis.com/",
  "schemas": {
    "ReplicaConfiguration": {
      "properties": {
        "failoverTarget": {
          "description": "Specifies if the replica is the failover target. If the field is set to *true* the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.",
          "type": "boolean"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#replicaConfiguration*."
        },
        "mysqlReplicaConfiguration": {
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory.",
          "$ref": "MySqlReplicaConfiguration"
        }
      },
      "description": "Read-replica configuration for connecting to the primary instance.",
      "id": "ReplicaConfiguration",
      "type": "object"
    },
    "Tier": {
      "description": "A Google Cloud SQL service tier resource.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#tier*."
        },
        "RAM": {
          "description": "The maximum RAM usage of this tier in bytes.",
          "format": "int64",
          "type": "string"
        },
        "region": {
          "description": "The applicable regions for this tier.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tier": {
          "description": "An identifier for the machine type, for example, db-n1-standard-1. For related information, see Pricing.",
          "type": "string"
        },
        "DiskQuota": {
          "description": "The maximum disk size of this tier in bytes.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "Tier",
      "type": "object"
    },
    "User": {
      "type": "object",
      "properties": {
        "sqlserverUserDetails": {
          "$ref": "SqlServerUserDetails"
        },
        "host": {
          "type": "string",
          "description": "The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
        },
        "type": {
          "type": "string",
          "enum": [
            "BUILT_IN",
            "CLOUD_IAM_USER",
            "CLOUD_IAM_SERVICE_ACCOUNT"
          ],
          "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.",
          "enumDescriptions": [
            "The database's built-in user type.",
            "Cloud IAM user.",
            "Cloud IAM service account."
          ]
        },
        "name": {
          "description": "The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL.",
          "type": "string"
        },
        "instance": {
          "type": "string",
          "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL."
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#user*."
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API.",
          "type": "string"
        },
        "password": {
          "type": "string",
          "description": "The password for the user."
        }
      },
      "id": "User",
      "description": "A Cloud SQL user resource."
    },
    "SslCertDetail": {
      "type": "object",
      "id": "SslCertDetail",
      "description": "SslCertDetail.",
      "properties": {
        "certInfo": {
          "description": "The public information about the cert.",
          "$ref": "SslCert"
        },
        "certPrivateKey": {
          "type": "string",
          "description": "The private key for the client cert, in pem format. Keep private in order to protect your security."
        }
      }
    },
    "LocationPreference": {
      "properties": {
        "followGaeApplication": {
          "description": "The App Engine application to follow, it must be in the same region as the Cloud SQL instance.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#locationPreference*.",
          "type": "string"
        },
        "zone": {
          "type": "string",
          "description": "The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.)."
        }
      },
      "type": "object",
      "id": "LocationPreference",
      "description": "Preferred location. This specifies where a Cloud SQL instance is located, either in a specific Compute Engine zone, or co-located with an App Engine application. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified."
    },
    "SslCertsInsertResponse": {
      "properties": {
        "clientCert": {
          "description": "The new client certificate and private key.",
          "$ref": "SslCertDetail"
        },
        "operation": {
          "description": "The operation to track the ssl certs insert request.",
          "$ref": "Operation"
        },
        "serverCaCert": {
          "description": "The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource.",
          "$ref": "SslCert"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#sslCertsInsert*."
        }
      },
      "type": "object",
      "id": "SslCertsInsertResponse",
      "description": "SslCert insert response."
    },
    "InstancesListServerCasResponse": {
      "type": "object",
      "id": "InstancesListServerCasResponse",
      "description": "Instances ListServerCas response.",
      "properties": {
        "kind": {
          "description": "This is always *sql#instancesListServerCas*.",
          "type": "string"
        },
        "certs": {
          "type": "array",
          "description": "List of server CA certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          }
        },
        "activeVersion": {
          "type": "string"
        }
      }
    },
    "OperationErrors": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#operationErrors*."
        },
        "errors": {
          "description": "The list of errors encountered while processing this operation.",
          "type": "array",
          "items": {
            "$ref": "OperationError"
          }
        }
      },
      "id": "OperationErrors",
      "description": "Database instance operation errors list wrapper.",
      "type": "object"
    },
    "InstancesTruncateLogRequest": {
      "type": "object",
      "description": "Instance truncate log request.",
      "properties": {
        "truncateLogContext": {
          "description": "Contains details about the truncate log operation.",
          "$ref": "TruncateLogContext"
        }
      },
      "id": "InstancesTruncateLogRequest"
    },
    "InstancesImportRequest": {
      "type": "object",
      "id": "InstancesImportRequest",
      "properties": {
        "importContext": {
          "description": "Contains details about the import operation.",
          "$ref": "ImportContext"
        }
      },
      "description": "Database instance import request."
    },
    "DemoteMasterContext": {
      "properties": {
        "verifyGtidConsistency": {
          "description": "Verify GTID consistency for demote operation. Default value: *True*. Second Generation instances only. Setting this flag to false enables you to bypass GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues.",
          "type": "boolean"
        },
        "masterInstanceName": {
          "type": "string",
          "description": "The name of the instance which will act as on-premises primary instance in the replication setup."
        },
        "kind": {
          "description": "This is always *sql#demoteMasterContext*.",
          "type": "string"
        },
        "replicaConfiguration": {
          "$ref": "DemoteMasterConfiguration",
          "description": "Configuration specific to read-replicas replicating from the on-premises primary instance."
        }
      },
      "id": "DemoteMasterContext",
      "type": "object",
      "description": "Database instance demote primary instance context."
    },
    "BackupRunsListResponse": {
      "description": "Backup run list results.",
      "id": "BackupRunsListResponse",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "BackupRun"
          },
          "description": "A list of backup runs in reverse chronological order of the enqueued time."
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#backupRunsList*."
        }
      }
    },
    "CloneContext": {
      "properties": {
        "destinationInstanceName": {
          "type": "string",
          "description": "Name of the Cloud SQL instance to be created as a clone."
        },
        "binLogCoordinates": {
          "description": "Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates.",
          "$ref": "BinLogCoordinates"
        },
        "pitrTimestampMs": {
          "description": "Reserved for future use.",
          "format": "int64",
          "type": "string"
        },
        "pointInTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Reserved for future use."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#cloneContext*."
        }
      },
      "id": "CloneContext",
      "description": "Database instance clone context.",
      "type": "object"
    },
    "IpConfiguration": {
      "type": "object",
      "description": "IP Management configuration.",
      "id": "IpConfiguration",
      "properties": {
        "privateNetwork": {
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, */projects/myProject/global/networks/default*. This setting can be updated, but it cannot be removed after it is set.",
          "type": "string"
        },
        "requireSsl": {
          "type": "boolean",
          "description": "Whether SSL connections over IP are enforced or not."
        },
        "ipv4Enabled": {
          "type": "boolean",
          "description": "Whether the instance is assigned a public IP address or not."
        },
        "authorizedNetworks": {
          "items": {
            "$ref": "AclEntry"
          },
          "description": "The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: *192.168.100.0/24*).",
          "type": "array"
        }
      }
    },
    "SslCertsCreateEphemeralRequest": {
      "id": "SslCertsCreateEphemeralRequest",
      "type": "object",
      "description": "SslCerts create ephemeral certificate request.",
      "properties": {
        "public_key": {
          "type": "string",
          "description": "PEM encoded public key to include in the signed certificate."
        }
      }
    },
    "MySqlReplicaConfiguration": {
      "type": "object",
      "id": "MySqlReplicaConfiguration",
      "description": "Read-replica configuration specific to MySQL databases.",
      "properties": {
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        },
        "dumpFilePath": {
          "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.",
          "type": "string"
        },
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "masterHeartbeatPeriod": {
          "format": "int64",
          "type": "string",
          "description": "Interval in milliseconds between replication heartbeats."
        },
        "sslCipher": {
          "type": "string",
          "description": "A list of permissible ciphers to use for SSL encryption."
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#mysqlReplicaConfiguration*."
        },
        "connectRetryInterval": {
          "type": "integer",
          "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds.",
          "format": "int32"
        },
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "verifyServerCertificate": {
          "description": "Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake.",
          "type": "boolean"
        }
      }
    },
    "OperationsListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#operationsList*."
        },
        "items": {
          "type": "array",
          "description": "List of operation resources.",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        }
      },
      "description": "Database instance list operations response.",
      "id": "OperationsListResponse",
      "type": "object"
    },
    "DemoteMasterMySqlReplicaConfiguration": {
      "id": "DemoteMasterMySqlReplicaConfiguration",
      "type": "object",
      "description": "Read-replica configuration specific to MySQL databases.",
      "properties": {
        "clientKey": {
          "type": "string",
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. The format of the replica's private key can be either PKCS #1 or PKCS #8."
        },
        "password": {
          "type": "string",
          "description": "The password for the replication connection."
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#demoteMasterMysqlReplicaConfiguration*."
        },
        "caCertificate": {
          "type": "string",
          "description": "PEM representation of the trusted CA's x509 certificate."
        }
      }
    },
    "InstancesCloneRequest": {
      "type": "object",
      "properties": {
        "cloneContext": {
          "$ref": "CloneContext",
          "description": "Contains details about the clone operation."
        }
      },
      "description": "Database instance clone request.",
      "id": "InstancesCloneRequest"
    },
    "SslCert": {
      "id": "SslCert",
      "description": "SslCerts Resource",
      "properties": {
        "expirationTime": {
          "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "type": "string",
          "format": "google-datetime"
        },
        "sha1Fingerprint": {
          "type": "string",
          "description": "Sha1 Fingerprint."
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#sslCert*."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*",
          "format": "google-datetime"
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "certSerialNumber": {
          "description": "Serial number, as extracted from the certificate.",
          "type": "string"
        },
        "commonName": {
          "type": "string",
          "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+."
        },
        "cert": {
          "type": "string",
          "description": "PEM representation."
        }
      },
      "type": "object"
    },
    "Settings": {
      "type": "object",
      "description": "Database instance settings.",
      "properties": {
        "maintenanceWindow": {
          "$ref": "MaintenanceWindow",
          "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes."
        },
        "dataDiskSizeGb": {
          "type": "string",
          "description": "The size of data disk, in GB. The data disk size minimum is 10GB.",
          "format": "int64"
        },
        "settingsVersion": {
          "format": "int64",
          "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.",
          "type": "string"
        },
        "tier": {
          "type": "string",
          "description": "The tier (or machine type) for this instance, for example *db-n1-standard-1* (MySQL instances) or *db-custom-1-3840* (PostgreSQL instances)."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#settings*."
        },
        "availabilityType": {
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal available instance.",
            "Regional available instance."
          ],
          "type": "string",
          "description": "Availability type. Potential values: *ZONAL*: The instance serves data from only one zone. Outages in that zone affect data accessibility. *REGIONAL*: The instance can serve data from more than one zone in a region (it is highly available). For more information, see Overview of the High Availability Configuration.",
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ]
        },
        "storageAutoResizeLimit": {
          "format": "int64",
          "type": "string",
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit."
        },
        "userLabels": {
          "description": "User-provided labels, represented as a dictionary where each label is a single key value pair.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "locationPreference": {
          "description": "The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances.",
          "$ref": "LocationPreference"
        },
        "backupConfiguration": {
          "$ref": "BackupConfiguration",
          "description": "The daily backup configuration for the instance."
        },
        "storageAutoResize": {
          "type": "boolean",
          "description": "Configuration to increase storage size automatically. The default value is true."
        },
        "activeDirectoryConfig": {
          "description": "Active Directory configuration, for now relevant only for SQL Server",
          "$ref": "SqlActiveDirectoryConfig"
        },
        "replicationType": {
          "enum": [
            "SQL_REPLICATION_TYPE_UNSPECIFIED",
            "SYNCHRONOUS",
            "ASYNCHRONOUS"
          ],
          "type": "string",
          "enumDescriptions": [
            "This is an unknown replication type for a Cloud SQL instance.",
            "The synchronous replication mode for First Generation instances. It is the default value.",
            "The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data."
          ],
          "description": "The type of replication this instance uses. This can be either *ASYNCHRONOUS* or *SYNCHRONOUS*. (Deprecated_ This property was only applicable to First Generation instances."
        },
        "databaseFlags": {
          "items": {
            "$ref": "DatabaseFlags"
          },
          "description": "The database flags passed to the instance at startup.",
          "type": "array"
        },
        "activationPolicy": {
          "type": "string",
          "enumDescriptions": [
            "Unknown activation plan.",
            "The instance is always up and running.",
            "The instance never starts.",
            "The instance starts upon receiving requests."
          ],
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER",
            "ON_DEMAND"
          ],
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: *ALWAYS*: The instance is on, and remains so even in the absence of connection requests. *NEVER*: The instance is off; it is not activated, even if a connection request arrives."
        },
        "dataDiskType": {
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD",
            "OBSOLETE_LOCAL_SSD"
          ],
          "description": "The type of data disk: PD_SSD (default) or PD_HDD. Not used for First Generation instances.",
          "enumDescriptions": [
            "This is an unknown data disk type.",
            "An SSD data disk.",
            "An HDD data disk.",
            "This field is deprecated and will be removed from a future version of the API."
          ],
          "type": "string"
        },
        "pricingPlan": {
          "enumDescriptions": [
            "This is an unknown pricing plan for this instance.",
            "The instance is billed at a monthly flat rate.",
            "The instance is billed per usage."
          ],
          "enum": [
            "SQL_PRICING_PLAN_UNSPECIFIED",
            "PACKAGE",
            "PER_USE"
          ],
          "description": "The pricing plan for this instance. This can be either *PER_USE* or *PACKAGE*. Only *PER_USE* is supported for Second Generation instances.",
          "type": "string"
        },
        "collation": {
          "type": "string",
          "description": "The name of server Instance collation."
        },
        "databaseReplicationEnabled": {
          "description": "Configuration specific to read replica instances. Indicates whether replication is enabled or not.",
          "type": "boolean"
        },
        "ipConfiguration": {
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.",
          "$ref": "IpConfiguration"
        },
        "authorizedGaeApplications": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only."
        },
        "crashSafeReplicationEnabled": {
          "type": "boolean",
          "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances."
        },
        "denyMaintenancePeriods": {
          "description": "Deny maintenance periods",
          "items": {
            "$ref": "DenyMaintenancePeriod"
          },
          "type": "array"
        }
      },
      "id": "Settings"
    },
    "SqlServerDatabaseDetails": {
      "type": "object",
      "properties": {
        "compatibilityLevel": {
          "description": "The version of SQL Server with which the database is to be made compatible",
          "type": "integer",
          "format": "int32"
        },
        "recoveryModel": {
          "description": "The recovery model of a SQL Server database",
          "type": "string"
        }
      },
      "description": "Represents a Sql Server database on the Cloud SQL instance.",
      "id": "SqlServerDatabaseDetails"
    },
    "FailoverContext": {
      "properties": {
        "settingsVersion": {
          "type": "string",
          "format": "int64",
          "description": "The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#failoverContext*."
        }
      },
      "description": "Database instance failover context.",
      "type": "object",
      "id": "FailoverContext"
    },
    "InstancesExportRequest": {
      "type": "object",
      "id": "InstancesExportRequest",
      "description": "Database instance export request.",
      "properties": {
        "exportContext": {
          "$ref": "ExportContext",
          "description": "Contains details about the export operation."
        }
      }
    },
    "OperationError": {
      "type": "object",
      "id": "OperationError",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#operationError*."
        },
        "message": {
          "description": "Additional information about the error encountered.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "description": "Identifies the specific error that occurred."
        }
      },
      "description": "Database instance operation error."
    },
    "UsersListResponse": {
      "id": "UsersListResponse",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "User"
          },
          "description": "List of user resources in the instance."
        },
        "nextPageToken": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#usersList*.",
          "type": "string"
        }
      },
      "description": "User list response."
    },
    "DiskEncryptionStatus": {
      "description": "Disk encryption status for an instance.",
      "type": "object",
      "id": "DiskEncryptionStatus",
      "properties": {
        "kmsKeyVersionName": {
          "description": "KMS key version used to encrypt the Cloud SQL instance resource",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#diskEncryptionStatus*.",
          "type": "string"
        }
      }
    },
    "InstancesRestoreBackupRequest": {
      "properties": {
        "restoreBackupContext": {
          "description": "Parameters required to perform the restore backup operation.",
          "$ref": "RestoreBackupContext"
        }
      },
      "id": "InstancesRestoreBackupRequest",
      "type": "object",
      "description": "Database instance restore backup request."
    },
    "BackupRetentionSettings": {
      "properties": {
        "retentionUnit": {
          "enum": [
            "RETENTION_UNIT_UNSPECIFIED",
            "COUNT"
          ],
          "enumDescriptions": [
            "Backup retention unit is unspecified, will be treated as COUNT.",
            "Retention will be by count, eg. \"retain the most recent 7 backups\"."
          ],
          "type": "string",
          "description": "The unit that 'retained_backups' represents."
        },
        "retainedBackups": {
          "format": "int32",
          "type": "integer",
          "description": "Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups."
        }
      },
      "type": "object",
      "id": "BackupRetentionSettings",
      "description": "We currently only support backup retention by specifying the number of backups we will retain."
    },
    "BackupConfiguration": {
      "description": "Database instance backup configuration.",
      "type": "object",
      "id": "BackupConfiguration",
      "properties": {
        "binaryLogEnabled": {
          "type": "boolean",
          "description": "(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well."
        },
        "pointInTimeRecoveryEnabled": {
          "description": "Reserved for future use.",
          "type": "boolean"
        },
        "startTime": {
          "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - *HH:MM*.",
          "type": "string"
        },
        "replicationLogArchivingEnabled": {
          "description": "Reserved for future use.",
          "type": "boolean"
        },
        "kind": {
          "description": "This is always *sql#backupConfiguration*.",
          "type": "string"
        },
        "backupRetentionSettings": {
          "$ref": "BackupRetentionSettings",
          "description": "Backup retention settings."
        },
        "enabled": {
          "description": "Whether this configuration is enabled.",
          "type": "boolean"
        },
        "transactionLogRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "The number of days of transaction logs we retain for point in time restore, from 1-7."
        },
        "location": {
          "description": "Location of the backup",
          "type": "string"
        }
      }
    },
    "Database": {
      "properties": {
        "charset": {
          "description": "The Cloud SQL charset value.",
          "type": "string"
        },
        "sqlserverDatabaseDetails": {
          "$ref": "SqlServerDatabaseDetails"
        },
        "instance": {
          "type": "string",
          "description": "The name of the Cloud SQL instance. This does not include the project ID."
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#database*."
        },
        "collation": {
          "description": "The Cloud SQL collation value.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name."
        },
        "etag": {
          "type": "string",
          "description": "This field is deprecated and will be removed from a future version of the API."
        },
        "project": {
          "type": "string",
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable."
        }
      },
      "id": "Database",
      "description": "Represents a SQL database on the Cloud SQL instance.",
      "type": "object"
    },
    "DatabaseInstance": {
      "description": "A Cloud SQL instance resource. Next field: 36",
      "properties": {
        "diskEncryptionStatus": {
          "description": "Disk encryption status specific to an instance. Applies only to Second Generation instances.",
          "$ref": "DiskEncryptionStatus"
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API. Use the *settings.settingsVersion* field instead.",
          "type": "string"
        },
        "replicaConfiguration": {
          "description": "Configuration specific to failover replicas and read replicas.",
          "$ref": "ReplicaConfiguration"
        },
        "maxDiskSize": {
          "description": "The maximum disk size of the instance in bytes.",
          "format": "int64",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the Cloud SQL instance. This does not include the project ID."
        },
        "masterInstanceName": {
          "type": "string",
          "description": "The name of the instance which will act as primary in the replication setup."
        },
        "currentDiskSize": {
          "format": "int64",
          "description": "The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see this announcement for details.",
          "type": "string"
        },
        "suspensionReason": {
          "items": {
            "type": "string",
            "enumDescriptions": [
              "This is an unknown suspension reason.",
              "The instance is suspended due to billing issues (for example:, GCP account issue)",
              "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
              "The instance is causing operational issues (for example:, causing the database to crash).",
              "The KMS key used by the instance is either revoked or denied access to"
            ],
            "enum": [
              "SQL_SUSPENSION_REASON_UNSPECIFIED",
              "BILLING_ISSUE",
              "LEGAL_ISSUE",
              "OPERATIONAL_ISSUE",
              "KMS_KEY_ISSUE"
            ]
          },
          "description": "If the instance state is SUSPENDED, the reason for the suspension.",
          "type": "array"
        },
        "scheduledMaintenance": {
          "$ref": "SqlScheduledMaintenance",
          "description": "The start time of any upcoming scheduled maintenance for this instance."
        },
        "serviceAccountEmailAddress": {
          "type": "string",
          "description": "The service account email address assigned to the instance. This property is applicable only to Second Generation instances."
        },
        "replicaNames": {
          "description": "The replicas of the instance.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "failoverReplica": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID. This property is applicable only to Second Generation instances."
            },
            "available": {
              "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true.",
              "type": "boolean"
            }
          },
          "description": "The name and status of the failover replica. This property is applicable only to Second Generation instances."
        },
        "rootPassword": {
          "description": "Initial root password. Use only on creation.",
          "type": "string"
        },
        "backendType": {
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ],
          "description": " *SECOND_GEN*: Cloud SQL database instance. *EXTERNAL*: A database server that is not managed by Google. This property is read-only; use the *tier* property in the *settings* object to determine the database type."
        },
        "state": {
          "description": "The current serving state of the Cloud SQL instance. This can be one of the following. *SQL_INSTANCE_STATE_UNSPECIFIED*: The state of the instance is unknown. *RUNNABLE*: The instance has been stopped by owner. It is not currently running, but it's ready to be restarted. *SUSPENDED*: The instance is not available, for example due to problems with billing. for example due to problems with billing. *PENDING_DELETE*: The instance is being deleted. *PENDING_CREATE*: The instance is being created. *MAINTENANCE*: The instance is down for maintenance. *FAILED*: The instance creation failed.",
          "enumDescriptions": [
            "The state of the instance is unknown.",
            "The instance has been stopped by owner. It is not currently running, but it's ready to be restarted.",
            "The instance is not available, for example due to problems with billing.",
            "The instance is being deleted.",
            "The instance is being created.",
            "The instance is down for maintenance.",
            "The creation of the instance failed or a fatal error occurred during maintenance."
          ],
          "type": "string",
          "enum": [
            "SQL_INSTANCE_STATE_UNSPECIFIED",
            "RUNNABLE",
            "SUSPENDED",
            "PENDING_DELETE",
            "PENDING_CREATE",
            "MAINTENANCE",
            "FAILED"
          ]
        },
        "ipv6Address": {
          "description": "The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#instance*."
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
          "description": "Disk encryption configuration specific to an instance. Applies only to Second Generation instances."
        },
        "gceZone": {
          "type": "string",
          "description": "The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone."
        },
        "onPremisesConfiguration": {
          "$ref": "OnPremisesConfiguration",
          "description": "Configuration specific to on-premises instances."
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "ipAddresses": {
          "items": {
            "$ref": "IpMapping"
          },
          "type": "array",
          "description": "The assigned IP addresses for the instance."
        },
        "settings": {
          "description": "The user settings.",
          "$ref": "Settings"
        },
        "region": {
          "description": "The geographical region. Can be *us-central* (*FIRST_GEN* instances only) *us-central1* (*SECOND_GEN* instances only) *asia-east1* or *europe-west1*. Defaults to *us-central* or *us-central1* depending on the instance type. The region cannot be changed after instance creation.",
          "type": "string"
        },
        "databaseVersion": {
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
            "POSTGRES_12",
            "MYSQL_8_0",
            "POSTGRES_13"
          ],
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12.",
            "The database version is MySQL 8.",
            "The database version is PostgreSQL 13."
          ],
          "description": "The database engine type and version. The *databaseVersion* field cannot be changed after instance creation. MySQL instances: *MYSQL_8_0*, *MYSQL_5_7* (default), or *MYSQL_5_6*. PostgreSQL instances: *POSTGRES_9_6*, *POSTGRES_10*, *POSTGRES_11* or *POSTGRES_12* (default). SQL Server instances: *SQLSERVER_2017_STANDARD* (default), *SQLSERVER_2017_ENTERPRISE*, *SQLSERVER_2017_EXPRESS*, or *SQLSERVER_2017_WEB*.",
          "type": "string"
        },
        "instanceType": {
          "enumDescriptions": [
            "This is an unknown Cloud SQL instance type.",
            "A regular Cloud SQL instance.",
            "An instance running on the customer's premises that is not managed by Cloud SQL.",
            "A Cloud SQL instance acting as a read-replica."
          ],
          "description": "The instance type. This can be one of the following. *CLOUD_SQL_INSTANCE*: A Cloud SQL instance that is not replicating from a primary instance. *ON_PREMISES_INSTANCE*: An instance running on the customer's premises. *READ_REPLICA_INSTANCE*: A Cloud SQL instance configured as a read-replica.",
          "enum": [
            "SQL_INSTANCE_TYPE_UNSPECIFIED",
            "CLOUD_SQL_INSTANCE",
            "ON_PREMISES_INSTANCE",
            "READ_REPLICA_INSTANCE"
          ],
          "type": "string"
        },
        "connectionName": {
          "description": "Connection name of the Cloud SQL instance used in connection strings.",
          "type": "string"
        },
        "serverCaCert": {
          "description": "SSL configuration.",
          "$ref": "SslCert"
        }
      },
      "id": "DatabaseInstance",
      "type": "object"
    },
    "InstancesFailoverRequest": {
      "type": "object",
      "description": "Instance failover request.",
      "properties": {
        "failoverContext": {
          "description": "Failover Context.",
          "$ref": "FailoverContext"
        }
      },
      "id": "InstancesFailoverRequest"
    },
    "FlagsListResponse": {
      "id": "FlagsListResponse",
      "description": "Flags list response.",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#flagsList*."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Flag"
          },
          "description": "List of flags."
        }
      }
    },
    "SqlInstancesVerifyExternalSyncSettingsResponse": {
      "description": "Instance verify external sync settings response.",
      "properties": {
        "kind": {
          "description": "This is always *sql#migrationSettingErrorList*.",
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          },
          "description": "List of migration violations."
        }
      },
      "id": "SqlInstancesVerifyExternalSyncSettingsResponse",
      "type": "object"
    },
    "InstancesRotateServerCaRequest": {
      "type": "object",
      "id": "InstancesRotateServerCaRequest",
      "description": "Rotate Server CA request.",
      "properties": {
        "rotateServerCaContext": {
          "$ref": "RotateServerCaContext",
          "description": "Contains details about the rotate server CA operation."
        }
      }
    },
    "InstancesDemoteMasterRequest": {
      "properties": {
        "demoteMasterContext": {
          "description": "Contains details about the demoteMaster operation.",
          "$ref": "DemoteMasterContext"
        }
      },
      "type": "object",
      "id": "InstancesDemoteMasterRequest",
      "description": "Database demote primary instance request."
    },
    "DiskEncryptionConfiguration": {
      "id": "DiskEncryptionConfiguration",
      "description": "Disk encryption configuration for an instance.",
      "properties": {
        "kind": {
          "description": "This is always *sql#diskEncryptionConfiguration*.",
          "type": "string"
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Resource name of KMS key for disk encryption"
        }
      },
      "type": "object"
    },
    "IpMapping": {
      "description": "Database instance IP Mapping.",
      "properties": {
        "timeToRetire": {
          "format": "google-datetime",
          "type": "string",
          "description": "The due time for this IP to be retired in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*. This field is only available when the IP is scheduled to be retired."
        },
        "ipAddress": {
          "description": "The IP address assigned.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "This is an unknown IP address type.",
            "IP address the customer is supposed to connect to. Usually this is the load balancer's IP address",
            "Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.",
            "Private IP used when using private IPs and network peering.",
            "V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY."
          ],
          "description": "The type of this IP address. A *PRIMARY* address is a public address that can accept incoming connections. A *PRIVATE* address is a private address that can accept incoming connections. An *OUTGOING* address is the source address of connections originating from the instance, if supported.",
          "enum": [
            "SQL_IP_ADDRESS_TYPE_UNSPECIFIED",
            "PRIMARY",
            "OUTGOING",
            "PRIVATE",
            "MIGRATED_1ST_GEN"
          ],
          "type": "string"
        }
      },
      "id": "IpMapping",
      "type": "object"
    },
    "TruncateLogContext": {
      "properties": {
        "kind": {
          "description": "This is always *sql#truncateLogContext*.",
          "type": "string"
        },
        "logType": {
          "description": "The type of log to truncate. Valid values are *MYSQL_GENERAL_TABLE* and *MYSQL_SLOW_TABLE*.",
          "type": "string"
        }
      },
      "id": "TruncateLogContext",
      "type": "object",
      "description": "Database Instance truncate log context."
    },
    "DenyMaintenancePeriod": {
      "description": "Deny Maintenance Periods. This specifies a date range during when all CSA rollout will be denied.",
      "properties": {
        "startDate": {
          "type": "string",
          "description": "\"deny maintenance period\" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01"
        },
        "endDate": {
          "description": "\"deny maintenance period\" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01",
          "type": "string"
        },
        "time": {
          "type": "string",
          "description": "Time in UTC when the \"deny maintenance period\" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00"
        }
      },
      "id": "DenyMaintenancePeriod",
      "type": "object"
    },
    "SslCertsInsertRequest": {
      "id": "SslCertsInsertRequest",
      "type": "object",
      "description": "SslCerts insert request.",
      "properties": {
        "commonName": {
          "type": "string",
          "description": "User supplied name. Must be a distinct name from the other certificates for this instance."
        }
      }
    },
    "OnPremisesConfiguration": {
      "description": "On-premises instance configuration.",
      "properties": {
        "dumpFilePath": {
          "type": "string",
          "description": "The dump file to create the Cloud SQL replica."
        },
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#onPremisesConfiguration*.",
          "type": "string"
        },
        "username": {
          "description": "The username for connecting to on-premises instance.",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        },
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        },
        "hostPort": {
          "type": "string",
          "description": "The host and port of the on-premises instance in host:port format"
        },
        "password": {
          "description": "The password for connecting to on-premises instance.",
          "type": "string"
        }
      },
      "id": "OnPremisesConfiguration",
      "type": "object"
    },
    "SslCertsListResponse": {
      "description": "SslCerts list response.",
      "id": "SslCertsListResponse",
      "properties": {
        "items": {
          "items": {
            "$ref": "SslCert"
          },
          "description": "List of client certificates for the instance.",
          "type": "array"
        },
        "kind": {
          "description": "This is always *sql#sslCertsList*.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ApiWarning": {
      "description": "An Admin API warning message.",
      "properties": {
        "message": {
          "description": "The warning message.",
          "type": "string"
        },
        "code": {
          "type": "string",
          "enum": [
            "SQL_API_WARNING_CODE_UNSPECIFIED",
            "REGION_UNREACHABLE"
          ],
          "description": "Code to uniquely identify the warning type.",
          "enumDescriptions": [
            "An unknown or unset warning type from Cloud SQL API.",
            "Warning when one or more regions are not reachable. The returned result set may be incomplete."
          ]
        }
      },
      "type": "object",
      "id": "ApiWarning"
    },
    "DatabaseFlags": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables for MySQL. Flags are specified with underscores, not hyphens. For more information, see Configuring Database Flags in the Cloud SQL documentation."
        },
        "value": {
          "type": "string",
          "description": "The value of the flag. Booleans are set to *on* for true and *off* for false. This field must be omitted if the flag doesn't take a value."
        }
      },
      "id": "DatabaseFlags",
      "type": "object",
      "description": "Database flags for Cloud SQL instances."
    },
    "SqlInstancesRescheduleMaintenanceRequestBody": {
      "type": "object",
      "description": "Reschedule options for maintenance windows.",
      "properties": {
        "reschedule": {
          "$ref": "Reschedule",
          "description": "Required. The type of the reschedule the user wants."
        }
      },
      "id": "SqlInstancesRescheduleMaintenanceRequestBody"
    },
    "InstancesListResponse": {
      "type": "object",
      "description": "Database instances list response.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "DatabaseInstance"
          },
          "description": "List of database instance resources."
        },
        "warnings": {
          "type": "array",
          "items": {
            "$ref": "ApiWarning"
          },
          "description": "List of warnings that occurred while handling the request."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#instancesList*."
        }
      },
      "id": "InstancesListResponse"
    },
    "RotateServerCaContext": {
      "properties": {
        "kind": {
          "description": "This is always *sql#rotateServerCaContext*.",
          "type": "string"
        },
        "nextVersion": {
          "description": "The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version.",
          "type": "string"
        }
      },
      "description": "Instance rotate server CA context.",
      "type": "object",
      "id": "RotateServerCaContext"
    },
    "RestoreBackupContext": {
      "properties": {
        "backupRunId": {
          "type": "string",
          "description": "The ID of the backup run to restore from.",
          "format": "int64"
        },
        "instanceId": {
          "type": "string",
          "description": "The ID of the instance that the backup was taken from."
        },
        "project": {
          "description": "The full project ID of the source instance.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#restoreBackupContext*."
        }
      },
      "description": "Database instance restore from backup context. Backup context contains source instance id and project id.",
      "type": "object",
      "id": "RestoreBackupContext"
    },
    "ExportContext": {
      "description": "Database instance export context.",
      "type": "object",
      "id": "ExportContext",
      "properties": {
        "offload": {
          "description": "Option for export offload.",
          "type": "boolean"
        },
        "databases": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
        },
        "csvExportOptions": {
          "properties": {
            "selectQuery": {
              "description": "The select query used to extract the data.",
              "type": "string"
            }
          },
          "type": "object",
          "description": "Options for exporting data as CSV."
        },
        "kind": {
          "description": "This is always *sql#exportContext*.",
          "type": "string"
        },
        "uri": {
          "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs: //bucketName/fileName*. If the file already exists, the requests // succeeds, but the operation fails. If *fileType* is // *SQL* and the filename ends with .gz, the contents are // compressed.",
          "type": "string"
        },
        "sqlExportOptions": {
          "type": "object",
          "properties": {
            "mysqlExportOptions": {
              "properties": {
                "masterData": {
                  "format": "int32",
                  "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment, and has no effect. All other values are ignored.",
                  "type": "integer"
                }
              },
              "description": "Options for exporting from MySQL.",
              "type": "object"
            },
            "tables": {
              "items": {
                "type": "string"
              },
              "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table.",
              "type": "array"
            },
            "schemaOnly": {
              "description": "Export only schemas.",
              "type": "boolean"
            }
          },
          "description": "Options for exporting data as SQL statements."
        },
        "fileType": {
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "type": "string"
        }
      }
    },
    "SqlActiveDirectoryConfig": {
      "properties": {
        "domain": {
          "type": "string",
          "description": "Domain name"
        },
        "kind": {
          "type": "string",
          "description": "This will be always sql#activeDirectoryConfig."
        }
      },
      "id": "SqlActiveDirectoryConfig",
      "description": "Active Directory configuration, for now relevant only for SQL Server",
      "type": "object"
    },
    "AclEntry": {
      "description": "An entry for an Access Control list.",
      "id": "AclEntry",
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#aclEntry*."
        },
        "value": {
          "type": "string",
          "description": "The allowlisted value for the access control list."
        },
        "expirationTime": {
          "type": "string",
          "description": "The time when this access control entry expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "Optional. A label to identify this entry."
        }
      }
    },
    "SqlServerUserDetails": {
      "id": "SqlServerUserDetails",
      "type": "object",
      "description": "Represents a Sql Server user on the Cloud SQL instance.",
      "properties": {
        "disabled": {
          "type": "boolean",
          "description": "If the user has been disabled"
        },
        "serverRoles": {
          "items": {
            "type": "string"
          },
          "description": "The server roles for this user",
          "type": "array"
        }
      }
    },
    "DemoteMasterConfiguration": {
      "properties": {
        "mysqlReplicaConfiguration": {
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory.",
          "$ref": "DemoteMasterMySqlReplicaConfiguration"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#demoteMasterConfiguration*."
        }
      },
      "type": "object",
      "id": "DemoteMasterConfiguration",
      "description": "Read-replica configuration for connecting to the on-premises primary instance."
    },
    "BinLogCoordinates": {
      "properties": {
        "binLogFileName": {
          "description": "Name of the binary log file for a Cloud SQL instance.",
          "type": "string"
        },
        "binLogPosition": {
          "description": "Position (offset) within the binary log file.",
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#binLogCoordinates*."
        }
      },
      "type": "object",
      "id": "BinLogCoordinates",
      "description": "Binary log coordinates."
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.",
      "id": "MaintenanceWindow",
      "properties": {
        "kind": {
          "description": "This is always *sql#maintenanceWindow*.",
          "type": "string"
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "day of week (1-7), starting on Monday."
        },
        "updateTrack": {
          "type": "string",
          "enum": [
            "SQL_UPDATE_TRACK_UNSPECIFIED",
            "canary",
            "stable"
          ],
          "enumDescriptions": [
            "This is an unknown maintenance timing preference.",
            "For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.",
            "For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable)."
          ],
          "description": "Maintenance timing setting: *canary* (Earlier) or *stable* (Later). Learn more."
        },
        "hour": {
          "type": "integer",
          "description": "hour of day - 0 to 23.",
          "format": "int32"
        }
      }
    },
    "SqlScheduledMaintenance": {
      "properties": {
        "canReschedule": {
          "description": "If the scheduled maintenance can be rescheduled.",
          "type": "boolean"
        },
        "canDefer": {
          "type": "boolean"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time of any upcoming scheduled maintenance for this instance."
        }
      },
      "description": "Any scheduled maintenancce for this instance.",
      "type": "object",
      "id": "SqlScheduledMaintenance"
    },
    "ImportContext": {
      "properties": {
        "fileType": {
          "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data.",
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "type": "string",
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ]
        },
        "database": {
          "type": "string",
          "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
        },
        "bakImportOptions": {
          "properties": {
            "encryptionOptions": {
              "properties": {
                "pvkPassword": {
                  "description": "Password that encrypts the private key",
                  "type": "string"
                },
                "certPath": {
                  "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file.",
                  "type": "string"
                },
                "pvkPath": {
                  "type": "string",
                  "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                }
              },
              "type": "object"
            }
          },
          "type": "object",
          "description": "Import parameters specific to SQL Server .BAK files"
        },
        "csvImportOptions": {
          "properties": {
            "columns": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data."
            },
            "table": {
              "type": "string",
              "description": "The table to which CSV data is imported."
            }
          },
          "description": "Options for importing data as CSV.",
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#importContext*."
        },
        "importUser": {
          "description": "The PostgreSQL user for this import operation. PostgreSQL instances only.",
          "type": "string"
        },
        "uri": {
          "description": "Path to the import file in Cloud Storage, in the form *gs: //bucketName/fileName*. Compressed gzip files (.gz) are supported // when *fileType* is *SQL*. The instance must have // write permissions to the bucket and read access to the file.",
          "type": "string"
        }
      },
      "id": "ImportContext",
      "description": "Database instance import context.",
      "type": "object"
    },
    "TiersListResponse": {
      "description": "Tiers list response.",
      "id": "TiersListResponse",
      "properties": {
        "items": {
          "items": {
            "$ref": "Tier"
          },
          "description": "List of tiers.",
          "type": "array"
        },
        "kind": {
          "description": "This is always *sql#tiersList*.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SqlExternalSyncSettingError": {
      "type": "object",
      "description": "External primary instance migration setting error.",
      "id": "SqlExternalSyncSettingError",
      "properties": {
        "detail": {
          "type": "string",
          "description": "Additional information about the error encountered."
        },
        "type": {
          "enum": [
            "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "BINLOG_NOT_ENABLED",
            "INCOMPATIBLE_DATABASE_VERSION",
            "REPLICA_ALREADY_SETUP",
            "INSUFFICIENT_PRIVILEGE",
            "UNSUPPORTED_MIGRATION_TYPE",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "INVALID_LOGGING_SETUP",
            "INVALID_DB_PARAM",
            "UNSUPPORTED_GTID_MODE",
            "SQLSERVER_AGENT_NOT_RUNNING"
          ],
          "description": "Identifies the specific error that occurred.",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "Unsupported migration type.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions",
            "The value of parameter rds.logical_replication is not set to 1.",
            "The primary instance logging setup doesn't allow EM sync.",
            "The primary instance database parameter setup doesn't allow EM sync.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "SQL Server Agent is not running."
          ],
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#migrationSettingError*.",
          "type": "string"
        }
      }
    },
    "BackupRun": {
      "properties": {
        "kind": {
          "description": "This is always *sql#backupRun*.",
          "type": "string"
        },
        "status": {
          "enumDescriptions": [
            "The status of the run is unknown.",
            "The backup operation was enqueued.",
            "The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.",
            "The backup is in progress.",
            "The backup failed.",
            "The backup was successful.",
            "The backup was skipped (without problems) for a given backup window. Example: Instance was idle.",
            "The backup is about to be deleted.",
            "The backup deletion failed.",
            "The backup has been deleted."
          ],
          "type": "string",
          "enum": [
            "SQL_BACKUP_RUN_STATUS_UNSPECIFIED",
            "ENQUEUED",
            "OVERDUE",
            "RUNNING",
            "FAILED",
            "SUCCESSFUL",
            "SKIPPED",
            "DELETION_PENDING",
            "DELETION_FAILED",
            "DELETED"
          ],
          "description": "The status of this run."
        },
        "enqueuedTime": {
          "format": "google-datetime",
          "description": "The time the run was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "type": "string"
        },
        "location": {
          "description": "Location of the backups.",
          "type": "string"
        },
        "instance": {
          "type": "string",
          "description": "Name of the database instance."
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
          "description": "Encryption configuration specific to a backup. Applies only to Second Generation instances."
        },
        "backupKind": {
          "description": "Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.",
          "enumDescriptions": [
            "This is an unknown BackupKind.",
            "The snapshot based backups",
            "Physical backups"
          ],
          "type": "string",
          "enum": [
            "SQL_BACKUP_KIND_UNSPECIFIED",
            "SNAPSHOT",
            "PHYSICAL"
          ]
        },
        "diskEncryptionStatus": {
          "description": "Encryption status specific to a backup. Applies only to Second Generation instances.",
          "$ref": "DiskEncryptionStatus"
        },
        "id": {
          "description": "The identifier for this backup run. Unique only for a specific Cloud SQL instance.",
          "format": "int64",
          "type": "string"
        },
        "windowStartTime": {
          "description": "The start time of the backup window during which this the backup was attempted in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "type": "string",
          "format": "google-datetime"
        },
        "error": {
          "$ref": "OperationError",
          "description": "Information about why the backup operation failed. This is only present if the run has the FAILED status."
        },
        "type": {
          "enumDescriptions": [
            "This is an unknown BackupRun type.",
            "The backup schedule automatically triggers a backup.",
            "The user manually triggers a backup."
          ],
          "enum": [
            "SQL_BACKUP_RUN_TYPE_UNSPECIFIED",
            "AUTOMATED",
            "ON_DEMAND"
          ],
          "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\".",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description of this run, only applicable to on-demand backups."
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "startTime": {
          "description": "The time the backup operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "The time the backup operation completed in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "BackupRun",
      "description": "A BackupRun resource."
    },
    "DatabasesListResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#databasesList*."
        },
        "items": {
          "description": "List of database resources in the instance.",
          "type": "array",
          "items": {
            "$ref": "Database"
          }
        }
      },
      "id": "DatabasesListResponse",
      "description": "Database list response.",
      "type": "object"
    },
    "Reschedule": {
      "properties": {
        "scheduleTime": {
          "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime",
          "type": "string"
        },
        "rescheduleType": {
          "type": "string",
          "description": "Required. The type of the reschedule.",
          "enumDescriptions": [
            "",
            "If the user wants to schedule the maintenance to happen now.",
            "If the user wants to use the existing maintenance policy to find the next available window.",
            "If the user wants to reschedule the maintenance to a specific time."
          ],
          "enum": [
            "RESCHEDULE_TYPE_UNSPECIFIED",
            "IMMEDIATE",
            "NEXT_AVAILABLE_WINDOW",
            "SPECIFIC_TIME"
          ]
        }
      },
      "id": "Reschedule",
      "type": "object"
    },
    "Operation": {
      "properties": {
        "name": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "status": {
          "enum": [
            "SQL_OPERATION_STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
          "enumDescriptions": [
            "The state of the operation is unknown.",
            "The operation has been queued, but has not started yet.",
            "The operation is running.",
            "The operation completed."
          ],
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "type": "string"
        },
        "targetLink": {
          "type": "string"
        },
        "error": {
          "$ref": "OperationErrors",
          "description": "If errors occurred during processing of this operation, this field will be populated."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
        },
        "exportContext": {
          "description": "The context for export operation, if applicable.",
          "$ref": "ExportContext"
        },
        "user": {
          "description": "The email address of the user who initiated this operation.",
          "type": "string"
        },
        "targetId": {
          "description": "Name of the database instance related to this operation.",
          "type": "string"
        },
        "importContext": {
          "$ref": "ImportContext",
          "description": "The context for import operation, if applicable."
        },
        "operationType": {
          "enum": [
            "SQL_OPERATION_TYPE_UNSPECIFIED",
            "IMPORT",
            "EXPORT",
            "CREATE",
            "UPDATE",
            "DELETE",
            "RESTART",
            "BACKUP",
            "SNAPSHOT",
            "BACKUP_VOLUME",
            "DELETE_VOLUME",
            "RESTORE_VOLUME",
            "INJECT_USER",
            "CLONE",
            "STOP_REPLICA",
            "START_REPLICA",
            "PROMOTE_REPLICA",
            "CREATE_REPLICA",
            "CREATE_USER",
            "DELETE_USER",
            "UPDATE_USER",
            "CREATE_DATABASE",
            "DELETE_DATABASE",
            "UPDATE_DATABASE",
            "FAILOVER",
            "DELETE_BACKUP",
            "RECREATE_REPLICA",
            "TRUNCATE_LOG",
            "DEMOTE_MASTER",
            "MAINTENANCE",
            "ENABLE_PRIVATE_IP",
            "DEFER_MAINTENANCE",
            "CREATE_CLONE",
            "RESCHEDULE_MAINTENANCE",
            "START_EXTERNAL_SYNC"
          ],
          "enumDescriptions": [
            "Unknown operation type.",
            "Imports data into a Cloud SQL instance.",
            "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
            "Creates a new Cloud SQL instance.",
            "Updates the settings of a Cloud SQL instance.",
            "Deletes a Cloud SQL instance.",
            "Restarts the Cloud SQL instance.",
            "",
            "",
            "Performs instance backup.",
            "Deletes an instance backup.",
            "Restores an instance backup.",
            "Injects a privileged user in mysql for MOB instances.",
            "Clones a Cloud SQL instance.",
            "Stops replication on a Cloud SQL read replica instance.",
            "Starts replication on a Cloud SQL read replica instance.",
            "Promotes a Cloud SQL replica instance.",
            "Creates a Cloud SQL replica instance.",
            "Creates a new user in a Cloud SQL instance.",
            "Deletes a user from a Cloud SQL instance.",
            "Updates an existing user in a Cloud SQL instance.",
            "Creates a database in the Cloud SQL instance.",
            "Deletes a database in the Cloud SQL instance.",
            "Updates a database in the Cloud SQL instance.",
            "Performs failover of an HA-enabled Cloud SQL failover replica.",
            "Deletes the backup taken by a backup run.",
            "",
            "Truncates a general or slow log table in MySQL.",
            "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
            "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
            "This field is deprecated, and will be removed in future version of API.",
            "",
            "Creates clone instance.",
            "Reschedule maintenance to another time.",
            "Starts external sync of a Cloud SQL EM replica to an external primary instance."
          ],
          "type": "string",
          "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*"
        },
        "targetProject": {
          "type": "string",
          "description": "The project ID of the target instance related to this operation."
        },
        "kind": {
          "description": "This is always *sql#operation*.",
          "type": "string"
        },
        "insertTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
        }
      },
      "type": "object",
      "id": "Operation",
      "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource."
    },
    "Flag": {
      "id": "Flag",
      "description": "A flag resource.",
      "type": "object",
      "properties": {
        "requiresRestart": {
          "type": "boolean",
          "description": "Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances."
        },
        "kind": {
          "description": "This is always *sql#flag*.",
          "type": "string"
        },
        "appliesTo": {
          "items": {
            "enumDescriptions": [
              "This is an unknown database version.",
              "The database version is MySQL 5.1.",
              "The database version is MySQL 5.5.",
              "The database version is MySQL 5.6.",
              "The database version is MySQL 5.7.",
              "The database version is PostgreSQL 9.6.",
              "The database version is PostgreSQL 11.",
              "The database version is SQL Server 2017 Standard.",
              "The database version is SQL Server 2017 Enterprise.",
              "The database version is SQL Server 2017 Express.",
              "The database version is SQL Server 2017 Web.",
              "The database version is PostgreSQL 10.",
              "The database version is PostgreSQL 12.",
              "The database version is MySQL 8.",
              "The database version is PostgreSQL 13."
            ],
            "type": "string",
            "enum": [
              "SQL_DATABASE_VERSION_UNSPECIFIED",
              "MYSQL_5_1",
              "MYSQL_5_5",
              "MYSQL_5_6",
              "MYSQL_5_7",
              "POSTGRES_9_6",
              "POSTGRES_11",
              "SQLSERVER_2017_STANDARD",
              "SQLSERVER_2017_ENTERPRISE",
              "SQLSERVER_2017_EXPRESS",
              "SQLSERVER_2017_WEB",
              "POSTGRES_10",
              "POSTGRES_12",
              "MYSQL_8_0",
              "POSTGRES_13"
            ]
          },
          "description": "The database version this flag applies to. Can be *MYSQL_8_0*, *MYSQL_5_6*, or *MYSQL_5_7*.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "This is the name of the flag. Flag names always use underscores, not hyphens, for example: *max_allowed_packet*"
        },
        "maxValue": {
          "description": "For *INTEGER* flags, the maximum allowed value.",
          "type": "string",
          "format": "int64"
        },
        "type": {
          "enum": [
            "SQL_FLAG_TYPE_UNSPECIFIED",
            "BOOLEAN",
            "STRING",
            "INTEGER",
            "NONE",
            "MYSQL_TIMEZONE_OFFSET",
            "FLOAT",
            "REPEATED_STRING"
          ],
          "enumDescriptions": [
            "This is an unknown flag type.",
            "Boolean type flag.",
            "String type flag.",
            "Integer type flag.",
            "Flag type used for a server startup option.",
            "Type introduced specically for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].",
            "Float type flag.",
            "Comma-separated list of the strings in a SqlFlagType enum."
          ],
          "description": "The type of the flag. Flags are typed to being *BOOLEAN*, *STRING*, *INTEGER* or *NONE*. *NONE* is used for flags which do not take a value, such as *skip_grant_tables*.",
          "type": "string"
        },
        "allowedStringValues": {
          "description": "For *STRING* flags, a list of strings that the value can be set to.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowedIntValues": {
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array",
          "description": "Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values."
        },
        "inBeta": {
          "type": "boolean",
          "description": "Whether or not the flag is considered in beta."
        },
        "minValue": {
          "format": "int64",
          "description": "For *INTEGER* flags, the minimum allowed value.",
          "type": "string"
        }
      }
    }
  },
  "discoveryVersion": "v1",
  "version": "v1beta4"
}
