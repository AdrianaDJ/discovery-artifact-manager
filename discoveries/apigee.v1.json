{
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "name": "apigee",
  "description": "Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Get started using the APIs. *Note:* This product is available as a free trial for a time period of 60 days.",
  "revision": "20201002",
  "canonicalName": "Apigee",
  "id": "apigee:v1",
  "fullyEncodeReservedExpansion": true,
  "title": "Apigee API",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "mtlsRootUrl": "https://apigee.mtls.googleapis.com/",
  "servicePath": "",
  "version_module": true,
  "baseUrl": "https://apigee.googleapis.com/",
  "kind": "discovery#restDescription",
  "rootUrl": "https://apigee.googleapis.com/",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/apigee-api-management/",
  "protocol": "rest",
  "batchPath": "batch",
  "parameters": {
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "ownerName": "Google",
  "schemas": {
    "GoogleCloudApigeeV1ListDebugSessionsResponse": {
      "type": "object",
      "properties": {
        "sessions": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Session"
          },
          "description": "Session info that includes debug session ID and the first transaction creation timestamp.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token that you can include in a ListDebugSessionsRequest to retrieve the next page. If omitted, no subsequent pages exist."
        }
      },
      "id": "GoogleCloudApigeeV1ListDebugSessionsResponse"
    },
    "GoogleCloudApigeeV1ResourceStatus": {
      "type": "object",
      "description": "The status of a resource loaded in the runtime.",
      "properties": {
        "revisions": {
          "type": "array",
          "description": "Revisions of the resource currently deployed in the instance.",
          "items": {
            "$ref": "GoogleCloudApigeeV1RevisionStatus"
          }
        },
        "resource": {
          "description": "The resource name. Currently only two resources are supported: EnvironmentGroup - organizations/{org}/envgroups/{envgroup} EnvironmentConfig - organizations/{org}/environments/{environment}/deployedConfig",
          "type": "string"
        },
        "totalReplicas": {
          "description": "The total number of replicas that should have this resource.",
          "format": "int32",
          "type": "integer"
        },
        "uid": {
          "description": "The uid of the resource. In the unexpected case that the instance has multiple uids for the same name, they should be reported under separate ResourceStatuses.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ResourceStatus"
    },
    "GoogleCloudApigeeV1ListDatastoresResponse": {
      "type": "object",
      "properties": {
        "datastores": {
          "description": "A list of datastores",
          "items": {
            "$ref": "GoogleCloudApigeeV1Datastore"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListDatastoresResponse",
      "description": "The response for ListDatastores"
    },
    "GoogleCloudApigeeV1TargetServerConfig": {
      "id": "GoogleCloudApigeeV1TargetServerConfig",
      "properties": {
        "host": {
          "type": "string",
          "description": "Host name of the target server."
        },
        "tlsInfo": {
          "$ref": "GoogleCloudApigeeV1TlsInfoConfig",
          "description": "TLS settings for the target server."
        },
        "port": {
          "format": "int32",
          "description": "Port number for the target server.",
          "type": "integer"
        },
        "name": {
          "description": "Target server revision name in the following format: `organizations/{org}/environments/{env}/targetservers/{targetserver}/revisions/{rev}`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1SchemaSchemaElement": {
      "description": "Message type for the schema element",
      "id": "GoogleCloudApigeeV1SchemaSchemaElement",
      "properties": {
        "properties": {
          "$ref": "GoogleCloudApigeeV1SchemaSchemaProperty",
          "description": "Property of the schema field E.g. { \"createTime\": \"2016-02-26T10:23:09.592Z\", \"custom\": \"false\", \"type\": \"string\" }"
        },
        "name": {
          "type": "string",
          "description": "Name of the field"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1Reference": {
      "type": "object",
      "id": "GoogleCloudApigeeV1Reference",
      "properties": {
        "resourceType": {
          "description": "The type of resource referred to by this reference. Valid values are 'KeyStore' or 'TrustStore'.",
          "type": "string"
        },
        "refers": {
          "type": "string",
          "description": "Required. The id of the resource to which this reference refers. Must be the id of a resource that exists in the parent environment and is of the given resource_type."
        },
        "description": {
          "type": "string",
          "description": "Optional. A human-readable description of this reference."
        },
        "name": {
          "description": "Required. The resource id of this reference. Values must match the regular expression [\\w\\s\\-.]+.",
          "type": "string"
        }
      },
      "description": "A Reference configuration. References must refer to a keystore that also exists in the parent environment."
    },
    "GoogleCloudApigeeV1FlowHook": {
      "id": "GoogleCloudApigeeV1FlowHook",
      "properties": {
        "description": {
          "description": "Description of the flow hook.",
          "type": "string"
        },
        "sharedFlow": {
          "description": "Shared flow attached to this flow hook, or empty if there is none attached.",
          "type": "string"
        },
        "flowHookPoint": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Where in the API call flow the flow hook is invoked. Must be one of `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, or `PostTargetFlowHook`."
        },
        "continueOnError": {
          "description": "Optional. Flag that specifies whether execution should continue if the flow hook throws an exception. Set to `true` to continue execution. Set to `false` to stop execution if the flow hook throws an exception.Defaults to `true`.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1Operation": {
      "id": "GoogleCloudApigeeV1Operation",
      "type": "object",
      "properties": {
        "methods": {
          "type": "array",
          "description": "methods refers to the REST verbs as in https://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html. When none specified, all verb types are allowed.",
          "items": {
            "type": "string"
          }
        },
        "resource": {
          "type": "string",
          "description": "Required. resource represents REST resource path associated with the proxy/remote service."
        }
      },
      "description": "Operation represents the pairing of REST resource path and the actions (verbs) allowed on the resource path."
    },
    "GoogleCloudApigeeV1OperationConfig": {
      "type": "object",
      "properties": {
        "apiSource": {
          "type": "string",
          "description": "Required. api_source represents either a proxy or remote service name for which the resources, methods and quota are associated with."
        },
        "operations": {
          "description": "operations is the list of resource/methods pair, belonging to proxy/remote service, upon which quota will applied on. Note that currently we allow only a single operation. The call will fail if more than one is provided.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Operation"
          },
          "type": "array"
        },
        "quota": {
          "$ref": "GoogleCloudApigeeV1Quota",
          "description": "Quota parameters to be enforced for the resources, methods, api_source combination. If none specified, quota enforcement will not be done."
        },
        "attributes": {
          "description": "custom attribute associated with the operation.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1OperationConfig",
      "description": "OperationConfig binds the resources in a proxy or remote service with the allowed REST methods and its associated quota enforcement."
    },
    "GoogleCloudApigeeV1CustomReportMetric": {
      "type": "object",
      "id": "GoogleCloudApigeeV1CustomReportMetric",
      "description": "This encapsulates a metric property of the form sum(message_count) where name is message_count and function is sum",
      "properties": {
        "name": {
          "description": "name of the metric",
          "type": "string"
        },
        "function": {
          "type": "string",
          "description": "aggregate function"
        }
      }
    },
    "GoogleCloudApigeeV1ListApiProxiesResponse": {
      "type": "object",
      "id": "GoogleCloudApigeeV1ListApiProxiesResponse",
      "properties": {
        "proxies": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProxy"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1ApiProduct": {
      "id": "GoogleCloudApigeeV1ApiProduct",
      "properties": {
        "displayName": {
          "description": "The name to be displayed in the UI or developer portal to developers registering for API access.",
          "type": "string"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "int64",
          "description": "Response only. Modified time of this environment as milliseconds since epoch."
        },
        "environments": {
          "items": {
            "type": "string"
          },
          "description": "A comma-separated list of environment names to which the API product is bound. Requests to environments that are not listed are rejected. By specifying one or more environments, you can bind the resources listed in the API product to a specific environment, preventing developers from accessing those resources through API proxies deployed in another environment. This setting is used, for example, to prevent resources associated with API proxies in 'prod' from being accessed by API proxies deployed in 'test'.",
          "type": "array"
        },
        "createdAt": {
          "format": "int64",
          "type": "string",
          "description": "Response only. Creation time of this environment as milliseconds since epoch."
        },
        "scopes": {
          "description": "A comma-separated list of OAuth scopes that are validated at runtime. Edge validates that the scopes in any access token presented match the scopes defined in the OAuth policy assoicated with the API product.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "quotaInterval": {
          "type": "string",
          "description": "The time interval over which the number of request messages is calculated."
        },
        "attributes": {
          "type": "array",
          "description": "Array of attributes that may be used to extend the default API product profile with customer-specific metadata. You can specify a maximum of 18 attributes. Use this property to specify the access level of the API product as either `public`, `private`, or `internal`. Only products marked `public` are available to developers in the Apigee developer portal. For example, you can set a product to `internal` while it is in development and then change access to `public` when it is ready to release on the portal. API products marked as `private` do not appear on the portal but can be accessed by external developers. For monetization, you can use the attributes field to: - Specify transaction success criteria - Specify custom attributes on which you base rate plan charges.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          }
        },
        "apiResources": {
          "type": "array",
          "description": "Comma-separated list of API resources to be bundled in the API Product. By default, the resource paths are mapped from the `proxy.pathsuffix` variable. The proxy path suffix is defined as the URI fragment following the ProxyEndpoint base path. For example, if the `apiResources` element is defined to be `/forecastrss` and the base path defined for the API proxy is `/weather`, then only requests to `/weather/forecastrss` are permitted by the API product. You can select a specific path, or you can select all subpaths with the following wildcard: - /**: Indicates that all sub-URIs are included. - /* : Indicates that only URIs one level down are included. By default, / supports the same resources as /** as well as the base path defined by the API proxy. For example, if the base path of the API proxy is `/v1/weatherapikey`, then the API product supports requests to `/v1/weatherapikey` and to any sub-URIs, such as `/v1/weatherapikey/forecastrss`, `/v1/weatherapikey/region/CA`, and so on. For more information, see: - Manage API products - Managing a transaction recording policy using the API",
          "items": {
            "type": "string"
          }
        },
        "proxies": {
          "items": {
            "type": "string"
          },
          "description": "A comma-separated list of API proxy names to which this API product is bound. By specifying API proxies, you can associate resources in the API product with specific API proxies, preventing developers from accessing those resources through other API proxies. Edge rejects requests to API proxies that are not listed. *NOTE:* The API proxy names must already exist in the specified environment as they will be validated upon creation.",
          "type": "array"
        },
        "description": {
          "description": "An overview of the API product. Include key information about the API product that is not captured by other fields.",
          "type": "string"
        },
        "operationGroup": {
          "$ref": "GoogleCloudApigeeV1OperationGroup",
          "description": "The operation_group enables api product creators to group Apigee proxies or remote services with resources, method types and quotas. The resource refers to the resource URI(excluding the base path). With this grouping, API product creator is able to finetune and give precise control over which REST methods have access to which resources, and how many such calls can be made (via Quota). Note that api_resources cannot be specified at both the API product level as well as within the operation_group. If configured that way, the call will fail. Please refer go/api-product-with-methods for additional details."
        },
        "name": {
          "type": "string",
          "description": "The internal name of the API Product. Characters you can use in the name are restricted to: A-Z0-9._\\-$ %. *NOTE:* The internal name cannot be edited when updating the API product."
        },
        "quota": {
          "description": "The number of request messages permitted per app by this API product for the specified `quotaInterval` and `quotaTimeUnit`. For example, a `quota` of 50, for a `quotaInterval` of 12 and a `quotaTimeUnit` of hours means 50 requests are allowed every 12 hours.",
          "type": "string"
        },
        "approvalType": {
          "description": "Specifies how API keys are approved to access the APIs defined by the API product. If set to `manual`, the consumer key is generated and returned in \"pending\" state. In this case, the API keys won't work until they have been explicitly approved. If set to `auto`, the consumer key is generated and returned in \"approved\" state and can be used immediately. *NOTE:* Typically, `auto` is used to provide access to free or trial API products that provide limited quota or capabilities.",
          "type": "string"
        },
        "quotaTimeUnit": {
          "description": "The time unit defined for the `quotaInterval`. Valid values include minute, hour, day, or month.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1QueryMetric": {
      "id": "GoogleCloudApigeeV1QueryMetric",
      "description": "More info about Metric: https://docs.apigee.com/api-platform/analytics/analytics-reference#metrics",
      "type": "object",
      "properties": {
        "operator": {
          "description": "One of `+`, `-`, `/`, `%`, `*`.",
          "type": "string"
        },
        "name": {
          "description": "Required. Metric name.",
          "type": "string"
        },
        "value": {
          "description": "Operand value should be provided when operator is set.",
          "type": "string"
        },
        "alias": {
          "type": "string",
          "description": "Alias for the metric. Alias will be used to replace metric name in query results."
        },
        "function": {
          "description": "Aggregation function: avg, min, max, or sum.",
          "type": "string"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudApigeeV1DeploymentChangeReportRoutingChange": {
      "description": "Describes a potential routing change that may occur as a result of some deployment operation.",
      "properties": {
        "shouldSequenceRollout": {
          "description": "True if using sequenced rollout would make this routing change safer. Note: this does not necessarily imply that automated sequenced rollout mode is supported for the operation.",
          "type": "boolean"
        },
        "environmentGroup": {
          "description": "The name of the environment group affected by this routing change.",
          "type": "string"
        },
        "fromDeployment": {
          "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
          "description": "The basepath/deployment that may stop receiving some traffic."
        },
        "description": {
          "description": "A human-readable description of this routing change.",
          "type": "string"
        },
        "toDeployment": {
          "description": "The basepath/deployment that may start receiving that traffic. May be null if no deployment is able to receive the traffic.",
          "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment"
        }
      },
      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingChange",
      "type": "object"
    },
    "GoogleCloudApigeeV1OptimizedStatsResponse": {
      "id": "GoogleCloudApigeeV1OptimizedStatsResponse",
      "properties": {
        "resultTruncated": {
          "description": "This ia a boolean field to indicate if the results were truncated based on the limit parameter.",
          "type": "boolean"
        },
        "stats": {
          "description": "This field contains a stats results.",
          "$ref": "GoogleCloudApigeeV1OptimizedStatsNode"
        },
        "TimeUnit": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "description": "This field contains a list of time unit values. Time unit refers to an epoch timestamp value.",
          "type": "array"
        },
        "metaData": {
          "$ref": "GoogleCloudApigeeV1Metadata",
          "description": "This field contains metadata information about the query executed"
        }
      },
      "type": "object",
      "description": "This message type encapsulates a response format for Js Optimized Scenario."
    },
    "GoogleCloudApigeeV1DeleteCustomReportResponse": {
      "id": "GoogleCloudApigeeV1DeleteCustomReportResponse",
      "type": "object",
      "properties": {
        "message": {
          "description": "The response contains only a message field.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1Keystore": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Required. The resource ID for this keystore. Values must match the regular expression `[\\w[:space:]-.]{1,255}`."
        },
        "aliases": {
          "type": "array",
          "description": "Output only. The aliases in this keystore.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1Keystore",
      "description": "A datastore for Certificates and Aliases"
    },
    "GoogleCloudApigeeV1Stats": {
      "type": "object",
      "description": "This message type encapsulates a stats response.",
      "properties": {
        "metaData": {
          "description": "This field contains the metadata information.",
          "$ref": "GoogleCloudApigeeV1Metadata"
        },
        "environments": {
          "items": {
            "$ref": "GoogleCloudApigeeV1StatsEnvironmentStats"
          },
          "description": "This field contains a list of query results on environment level.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Stats"
    },
    "GoogleCloudApigeeV1DeveloperAppKey": {
      "type": "object",
      "properties": {
        "consumerSecret": {
          "description": "Secret key.",
          "type": "string"
        },
        "apiProducts": {
          "description": "List of API products for which the credential can be used. **Note**: Do not specify the list of API products when creating a consumer key and secret for a developer app. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created.",
          "items": {
            "type": "any"
          },
          "type": "array"
        },
        "scopes": {
          "items": {
            "type": "string"
          },
          "description": "Scopes to apply to the app. The specified scope names must already be defined for the API product that you associate with the app.",
          "type": "array"
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array",
          "description": "List of attributes associated with the credential."
        },
        "consumerKey": {
          "description": "Consumer key.",
          "type": "string"
        },
        "expiresAt": {
          "description": "Time the developer app expires in milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "description": "Status of the credential. Valid values include `approved` or `revoked`."
        },
        "issuedAt": {
          "description": "Time the developer app was created in milliseconds since epoch.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DeveloperAppKey"
    },
    "GoogleCloudApigeeV1Alias": {
      "properties": {
        "certsInfo": {
          "$ref": "GoogleCloudApigeeV1Certificate",
          "description": "The chain of certificates under this alias."
        },
        "alias": {
          "type": "string",
          "description": "The resource ID for this alias. Values must match regular expression `[^/]{1,255}`."
        },
        "type": {
          "type": "string",
          "description": "The type of alias.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "ALIAS_TYPE_UNSPECIFIED",
            "CERT",
            "KEY_CERT"
          ]
        }
      },
      "id": "GoogleCloudApigeeV1Alias",
      "description": "A reference to a certificate or key, certificate pair.",
      "type": "object"
    },
    "GoogleCloudApigeeV1ApiProductRef": {
      "properties": {
        "status": {
          "description": "Status of the API product.",
          "type": "string"
        },
        "apiproduct": {
          "description": "Name of the API product.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ApiProductRef",
      "type": "object"
    },
    "GoogleCloudApigeeV1CustomReport": {
      "type": "object",
      "id": "GoogleCloudApigeeV1CustomReport",
      "properties": {
        "createdAt": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Unix time when the app was created json key: createdAt",
          "type": "string"
        },
        "toTime": {
          "description": "Legacy field: not used. Contains the end time for the report",
          "type": "string"
        },
        "fromTime": {
          "type": "string",
          "description": "Legacy field: not used. Contains the from time for the report"
        },
        "environment": {
          "description": "Output only. Environment name",
          "type": "string",
          "readOnly": true
        },
        "name": {
          "description": "Required. Unique identifier for the report T his is a legacy field used to encode custom report unique id",
          "type": "string"
        },
        "sortOrder": {
          "type": "string",
          "description": "Legacy field: not used much. Contains the sort order for the sort columns"
        },
        "lastModifiedAt": {
          "readOnly": true,
          "description": "Output only. Modified time of this entity as milliseconds since epoch. json key: lastModifiedAt",
          "type": "string",
          "format": "int64"
        },
        "sortByCols": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Legacy field: not used much. Contains the list of sort by columns"
        },
        "properties": {
          "type": "array",
          "description": "This field contains report properties such as ui metadata etc.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ReportProperty"
          }
        },
        "chartType": {
          "description": "This field contains the chart type for the report",
          "type": "string"
        },
        "metrics": {
          "description": "Required. This contains the list of metrics",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1CustomReportMetric"
          }
        },
        "topk": {
          "description": "Legacy field: not used. This field contains the top k parameter value for restricting the result",
          "type": "string"
        },
        "filter": {
          "type": "string",
          "description": "This field contains the filter expression"
        },
        "displayName": {
          "description": "This is the display name for the report",
          "type": "string"
        },
        "dimensions": {
          "items": {
            "type": "string"
          },
          "description": "This contains the list of dimensions for the report",
          "type": "array"
        },
        "timeUnit": {
          "type": "string",
          "description": "This field contains the time unit of aggregation for the report"
        },
        "lastViewedAt": {
          "type": "string",
          "description": "Output only. Last viewed time of this entity as milliseconds since epoch",
          "format": "int64",
          "readOnly": true
        },
        "offset": {
          "description": "Legacy field: not used. This field contains the offset for the data",
          "type": "string"
        },
        "limit": {
          "type": "string",
          "description": "Legacy field: not used This field contains the limit for the result retrieved"
        },
        "tags": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Legacy field: not used. This field contains a list of tags associated with custom report"
        },
        "comments": {
          "description": "Legacy field: not used. This field contains a list of comments associated with custom report",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "organization": {
          "description": "Output only. Organization name",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1Quota": {
      "type": "object",
      "properties": {
        "timeUnit": {
          "type": "string",
          "description": "The time unit defined for the `interval`. Valid values include minute, hour, day, or month. The default value is empty. If limit and interval are valid, the default value is \"hour\"."
        },
        "limit": {
          "description": "Required. Limit represents the upper bound count allowed for the time interval and time unit specified. Requests exceeding this limit will get rejected.",
          "type": "string"
        },
        "interval": {
          "type": "string",
          "description": "Required. The time interval over which the number of request messages is calculated."
        }
      },
      "description": "Quota contains the essential parameters needed that can be applied on a proxy/remote service, resources and methods combination associated with this API product. While setting of Quota is optional, setting it prevents requests from exceeding the provisioned parameters.",
      "id": "GoogleCloudApigeeV1Quota"
    },
    "GoogleCloudApigeeV1Export": {
      "type": "object",
      "properties": {
        "state": {
          "description": "Output only. Status of the export job. Valid values include `enqueued`, `running`, `completed`, and `failed`.",
          "type": "string",
          "readOnly": true
        },
        "created": {
          "readOnly": true,
          "description": "Output only. Time the export job was created.",
          "type": "string"
        },
        "name": {
          "description": "Display name of the export job.",
          "type": "string"
        },
        "description": {
          "description": "Description of the export job.",
          "type": "string"
        },
        "error": {
          "type": "string",
          "description": "Output only. Error is set when export fails",
          "readOnly": true
        },
        "self": {
          "readOnly": true,
          "description": "Output only. Self link of the export job. A URI that can be used to retrieve the status of an export job. Example: `/organizations/myorg/environments/myenv/analytics/exports/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Output only. Time the export job was last updated.",
          "readOnly": true
        },
        "datastoreName": {
          "type": "string",
          "description": "Name of the datastore that is the destination of the export job [datastore]"
        },
        "executionTime": {
          "readOnly": true,
          "description": "Output only. Execution time for this export job. If the job is still in progress, it will be set to the amount of time that has elapsed since`created`, in seconds. Else, it will set to (`updated` - `created`), in seconds.",
          "type": "string"
        }
      },
      "description": "Details of an export job.",
      "id": "GoogleCloudApigeeV1Export"
    },
    "GoogleCloudApigeeV1Metric": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This field contains the metric name."
        },
        "values": {
          "description": "List of metric values. Possible value format: \"values\":[\"39.0\"] or \"values\":[ { \"value\": \"39.0\", \"timestamp\": 1232434354} ]",
          "type": "array",
          "items": {
            "type": "any"
          }
        }
      },
      "description": "This message type encapsulates the metric data point. Example: { \"name\": \"sum(message_count)\", \"values\" : [ { \"timestamp\": 1549004400000, \"value\": \"39.0\" }, { \"timestamp\" : 1548997200000, \"value\" : \"0.0\" } ] } or { \"name\": \"sum(message_count)\", \"values\" : [\"39.0\"] }",
      "id": "GoogleCloudApigeeV1Metric"
    },
    "GoogleCloudApigeeV1Schema": {
      "description": "Response for Schema call",
      "properties": {
        "metrics": {
          "items": {
            "$ref": "GoogleCloudApigeeV1SchemaSchemaElement"
          },
          "type": "array",
          "description": "List of schema fields grouped as dimensions. These are fields that can be used with an aggregate function such as sum, avg, min, max."
        },
        "dimensions": {
          "items": {
            "$ref": "GoogleCloudApigeeV1SchemaSchemaElement"
          },
          "description": "List of schema fiels grouped as dimensions.",
          "type": "array"
        },
        "meta": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Additional metadata associated with schema. This is a legacy field and usually consists of an empty array of strings."
        }
      },
      "id": "GoogleCloudApigeeV1Schema",
      "type": "object"
    },
    "GoogleCloudApigeeV1DatastoreConfig": {
      "properties": {
        "path": {
          "type": "string",
          "description": "Path of Cloud Storage bucket Required for `gcs` target_type."
        },
        "datasetName": {
          "description": "BigQuery dataset name Required for `bigquery` target_type.",
          "type": "string"
        },
        "bucketName": {
          "type": "string",
          "description": "Name of the Cloud Storage bucket. Required for `gcs` target_type."
        },
        "tablePrefix": {
          "type": "string",
          "description": "Prefix of BigQuery table Required for `bigquery` target_type."
        },
        "projectId": {
          "type": "string",
          "description": "Required. GCP project in which the datastore exists"
        }
      },
      "description": "Configuration detail for datastore",
      "id": "GoogleCloudApigeeV1DatastoreConfig",
      "type": "object"
    },
    "GoogleCloudApigeeV1OptimizedStatsNode": {
      "description": "This message type encapsulates a data node as represented below: { \"identifier\": { \"names\": [ \"apiproxy\" ], \"values\": [ \"sirjee\" ] }, \"metric\": [ { \"env\": \"prod\", \"name\": \"sum(message_count)\", \"values\": [ 36.0 ] } ] } OR { \"env\": \"prod\", \"name\": \"sum(message_count)\", \"values\": [ 36.0 ] } Depending on whether a dimension is present in the query or not the data node type can be a simple metric value or dimension identifier with list of metrics.",
      "type": "object",
      "id": "GoogleCloudApigeeV1OptimizedStatsNode",
      "properties": {
        "data": {
          "items": {
            "type": "any"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict": {
      "properties": {
        "description": {
          "description": "A human-readable description of this conflict.",
          "type": "string"
        },
        "conflictingDeployment": {
          "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment",
          "description": "The existing basepath/deployment causing the conflict."
        },
        "environmentGroup": {
          "type": "string",
          "description": "The name of the environment group in which this conflict exists."
        }
      },
      "description": "Describes a routing conflict that may cause a deployment not to receive traffic at some basepath.",
      "type": "object",
      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict"
    },
    "GoogleCloudApigeeV1Metadata": {
      "id": "GoogleCloudApigeeV1Metadata",
      "type": "object",
      "description": "This message type encapsulates additional information about query execution.",
      "properties": {
        "notices": {
          "type": "array",
          "description": "List of additional information such as data source, if result was truncated etc. E.g \"notices\": [ \"Source:Postgres\", \"PG Host:uappg0rw.e2e.apigeeks.net\", \"query served by:4b64601e-40de-4eb1-bfb9-eeee7ac929ed\", \"Table used: edge.api.uapgroup2.agg_api\" ]",
          "items": {
            "type": "string"
          }
        },
        "errors": {
          "description": "List of error messages as strings.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudApigeeV1StatsEnvironmentStats": {
      "id": "GoogleCloudApigeeV1StatsEnvironmentStats",
      "properties": {
        "dimensions": {
          "type": "array",
          "description": "This field contains the list of metrics grouped under dimensions.",
          "items": {
            "$ref": "GoogleCloudApigeeV1DimensionMetric"
          }
        },
        "metrics": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Metric"
          },
          "description": "In the final response, only one of the following fields will be present based on the dimensions provided. If no dimensions are provided, then only a top level metrics is provided. If dimensions are included, then there will be a top level dimensions field under environments which will contain metrics values and the dimension name. Example: \"environments\": [ { \"dimensions\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.14049521E8\" ] } ], \"name\": \"nit_proxy\" } ], \"name\": \"prod\" } ] OR \"environments\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.19026331E8\" ] } ], \"name\": \"prod\" } ] This field contains the list of metric values.",
          "type": "array"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object",
      "description": "This message type encapsulates the environment wrapper: \"environments\": [ { \"metrics\": [ { \"name\": \"sum(message_count)\", \"values\": [ \"2.52056245E8\" ] } ], \"name\": \"prod\" } ]"
    },
    "GoogleCloudApigeeV1ResourceConfig": {
      "properties": {
        "location": {
          "description": "Location of the resource as a URI.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Resource name in the following format: `organizations/{org}/environments/{env}/resourcefiles/{type}/{file}/revisions/{rev}` Only environment-scoped resource files are supported."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ResourceConfig"
    },
    "GoogleTypeExpr": {
      "type": "object",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        }
      },
      "id": "GoogleTypeExpr"
    },
    "GoogleCloudApigeeV1ListAppsResponse": {
      "id": "GoogleCloudApigeeV1ListAppsResponse",
      "properties": {
        "app": {
          "items": {
            "$ref": "GoogleCloudApigeeV1App"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1InstanceDeploymentStatus": {
      "description": "The status of a deployment as reported by a single instance.",
      "type": "object",
      "id": "GoogleCloudApigeeV1InstanceDeploymentStatus",
      "properties": {
        "instance": {
          "description": "ID of the instance reporting the status.",
          "type": "string"
        },
        "deployedRevisions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision"
          },
          "description": "Revisions currently deployed in MPs."
        },
        "deployedRoutes": {
          "description": "The current routes deployed in the ingress routing table. A route which is missing will be shown with no destination environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1Environment": {
      "properties": {
        "createdAt": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Creation time of this environment as milliseconds since epoch.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. Display name for this environment.",
          "type": "string"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Last modification time of this environment as milliseconds since epoch."
        },
        "properties": {
          "description": "Optional. Key-value pairs that may be used for customizing the environment.",
          "$ref": "GoogleCloudApigeeV1Properties"
        },
        "name": {
          "type": "string",
          "description": "Required. Name of the environment. Values must match the regular expression `^[.\\\\p{Alnum}-_]{1,255}$`"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the environment."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1Environment"
    },
    "GoogleCloudApigeeV1Subscription": {
      "id": "GoogleCloudApigeeV1Subscription",
      "properties": {
        "name": {
          "type": "string",
          "description": "Full name of the Pub/Sub subcription. Use the following structure in your request: `subscription \"projects/foo/subscription/bar\"`"
        }
      },
      "description": "Pub/Sub subscription of an environment.",
      "type": "object"
    },
    "GoogleCloudApigeeV1KeystoreConfig": {
      "properties": {
        "name": {
          "description": "Resource name in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}`",
          "type": "string"
        },
        "aliases": {
          "items": {
            "$ref": "GoogleCloudApigeeV1AliasRevisionConfig"
          },
          "type": "array",
          "description": "Aliases in the keystore."
        }
      },
      "id": "GoogleCloudApigeeV1KeystoreConfig",
      "type": "object"
    },
    "GoogleCloudApigeeV1ApiResponseWrapper": {
      "properties": {
        "errorCode": {
          "description": "ID that can be used to find errors in the log files.",
          "type": "string"
        },
        "status": {
          "description": "Status of the operation.",
          "type": "string"
        },
        "requestId": {
          "description": "ID that can be used to find request details in the log files.",
          "type": "string"
        },
        "message": {
          "description": "Description of the operation.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ApiResponseWrapper",
      "type": "object"
    },
    "GoogleIamV1Policy": {
      "id": "GoogleIamV1Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "GoogleIamV1AuditConfig"
          },
          "type": "array"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "items": {
            "$ref": "GoogleIamV1Binding"
          },
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        }
      },
      "type": "object"
    },
    "GoogleIamV1TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "id": "GoogleIamV1TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ListHybridIssuersResponse": {
      "type": "object",
      "properties": {
        "issuers": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ServiceIssuersMapping"
          },
          "description": "Lists of hybrid services and its trusted issuer email ids.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListHybridIssuersResponse"
    },
    "GoogleCloudApigeeV1App": {
      "properties": {
        "developerId": {
          "description": "ID of the developer.",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Status of the credential."
        },
        "name": {
          "type": "string",
          "description": "Name of the app."
        },
        "credentials": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Credential"
          },
          "description": "Output only. Set of credentials for the app. Credentials are API key/secret pairs associated with API products.",
          "type": "array",
          "readOnly": true
        },
        "apiProducts": {
          "type": "array",
          "description": "List of API products associated with the app.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProductRef"
          }
        },
        "attributes": {
          "type": "array",
          "description": "List of attributes.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          }
        },
        "scopes": {
          "description": "Scopes to apply to the app. The specified scope names must already exist on the API product that you associate with the app.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyExpiresIn": {
          "description": "Duration, in milliseconds, of the consumer key that will be generated for the app. The default value, -1, indicates an infinite validity period. Once set, the expiration can't be updated. json key: keyExpiresIn",
          "type": "string",
          "format": "int64"
        },
        "appId": {
          "type": "string",
          "description": "ID of the app."
        },
        "lastModifiedAt": {
          "description": "Output only. Last modified time as milliseconds since epoch.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "createdAt": {
          "description": "Output only. Unix time when the app was created.",
          "readOnly": true,
          "type": "string",
          "format": "int64"
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to apps."
        },
        "companyName": {
          "description": "Name of the company that owns the app.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1App"
    },
    "GoogleCloudApigeeV1IngressConfig": {
      "type": "object",
      "properties": {
        "uid": {
          "type": "string",
          "description": "A unique id for the ingress config that will only change if the organization is deleted and recreated."
        },
        "revisionCreateTime": {
          "description": "Time at which the IngressConfig revision was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "revisionId": {
          "format": "int64",
          "description": "Revision id that defines the ordering on IngressConfig resources. The higher the revision, the more recently the configuration was deployed.",
          "type": "string"
        },
        "environmentGroups": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1EnvironmentGroupConfig"
          },
          "description": "List of environment groups in the organization."
        },
        "name": {
          "type": "string",
          "description": "Name of the resource in the following format: `organizations/{org}/deployedIngressConfig`."
        }
      },
      "id": "GoogleCloudApigeeV1IngressConfig"
    },
    "GoogleCloudApigeeV1RuntimeTraceConfigOverride": {
      "type": "object",
      "id": "GoogleCloudApigeeV1RuntimeTraceConfigOverride",
      "description": "NEXT ID: 7 Trace configuration override for a specific API proxy in an environment.",
      "properties": {
        "samplingConfig": {
          "$ref": "GoogleCloudApigeeV1RuntimeTraceSamplingConfig",
          "description": "Trace configuration override for a specific API proxy in an environment."
        },
        "revisionCreateTime": {
          "type": "string",
          "description": "The timestamp that the revision was created or updated.",
          "format": "google-datetime"
        },
        "uid": {
          "type": "string",
          "description": "Unique ID for the configuration override. The ID will only change if the override is deleted and recreated."
        },
        "name": {
          "description": "Name of the trace config override in the following format: `organizations/{org}/environment/{env}/traceConfig/overrides/{override}`",
          "type": "string"
        },
        "revisionId": {
          "description": "Revision number which can be used by the runtime to detect if the trace config override has changed between two versions.",
          "type": "string"
        },
        "apiProxy": {
          "description": "Name of the API proxy that will have its trace configuration overridden following format: `organizations/{org}/apis/{api}`",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1OperationGroup": {
      "id": "GoogleCloudApigeeV1OperationGroup",
      "properties": {
        "operationConfigType": {
          "description": "Identfies whether the configuration is for Apigee proxy or a remote service. Possible values are \"proxy\" and \"remoteservice\". If none specified, the default is \"proxy\". \"proxy\" is used when Apigee proxies are associated with the API product. \"remoteservice\" is used when non-Apigee proxy like Envoy is used, and is associated with the API product.",
          "type": "string"
        },
        "operationConfigs": {
          "description": "Required. A list of OperationConfig for either Apigee proxies or other other remote services, that are associated with this API product.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1OperationConfig"
          }
        }
      },
      "type": "object",
      "description": "The OperationGroup contains a list of configuration details associated with Apigee proxies or Remote services. Remote services are non-Apigee Edge proxies. eg, Istio-Envoy."
    },
    "GoogleCloudApigeeV1RuntimeTraceSamplingConfigResponseCodeRange": {
      "description": "ResponseCodeRange represents a group of response codes to capture, from the first response code to the last response code. Each range is a close interval. For example, if an interval is [400, 403], then that means 400, 401, 402, 403 will be all captured.",
      "properties": {
        "firstResponseCode": {
          "type": "integer",
          "description": "The first response code to capture.",
          "format": "int32"
        },
        "lastResponseCode": {
          "type": "integer",
          "description": "The last response code to capture.",
          "format": "int32"
        }
      },
      "id": "GoogleCloudApigeeV1RuntimeTraceSamplingConfigResponseCodeRange",
      "type": "object"
    },
    "GoogleCloudApigeeV1ListDeveloperAppsResponse": {
      "id": "GoogleCloudApigeeV1ListDeveloperAppsResponse",
      "properties": {
        "app": {
          "items": {
            "$ref": "GoogleCloudApigeeV1DeveloperApp"
          },
          "type": "array",
          "description": "List of developer apps and their credentials."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1TestDatastoreResponse": {
      "type": "object",
      "description": "The response for TestDatastore",
      "id": "GoogleCloudApigeeV1TestDatastoreResponse",
      "properties": {
        "state": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. It could be `completed` or `failed`"
        },
        "error": {
          "readOnly": true,
          "description": "Output only. Error message of test connection failure",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1DebugSession": {
      "id": "GoogleCloudApigeeV1DebugSession",
      "type": "object",
      "properties": {
        "validity": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. The length of time, in seconds, that this debug session is valid, starting from when it's received in the control plane. Min = 1, Max = 15, Default = 10."
        },
        "filter": {
          "type": "string",
          "description": "Optional. A conditional statement which is evaluated against the request message to determine if it should be traced. Syntax matches that of on API Proxy bundle flow Condition."
        },
        "tracesize": {
          "description": "Optional. The maximum number of bytes captured from the response payload. Min = 0, Max = 5120, Default = 5120.",
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "type": "integer",
          "description": "Optional. The number of request to be traced. Min = 1, Max = 15, Default = 10.",
          "format": "int32"
        },
        "timeout": {
          "type": "string",
          "format": "int64",
          "description": "Optional. The time in seconds after which this DebugSession should end. This value will override the value in query param, if both are provided."
        },
        "name": {
          "type": "string",
          "description": "A unique ID for this DebugSession."
        }
      }
    },
    "GoogleCloudApigeeV1ListOrganizationsResponse": {
      "id": "GoogleCloudApigeeV1ListOrganizationsResponse",
      "type": "object",
      "properties": {
        "organizations": {
          "items": {
            "$ref": "GoogleCloudApigeeV1OrganizationProjectMapping"
          },
          "description": "List of Apigee organizations and associated GCP projects.",
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1TargetServer": {
      "properties": {
        "sSLInfo": {
          "$ref": "GoogleCloudApigeeV1TlsInfo",
          "description": "Optional. Specifies TLS configuration info for this TargetServer. The JSON name is `sSLInfo` for legacy/backwards compatibility reasons -- Edge originally supported SSL, and the name is still used for TLS configuration."
        },
        "name": {
          "type": "string",
          "description": "Required. The resource id of this target server. Values must match the regular expression "
        },
        "host": {
          "description": "Required. The host name this target connects to. Value must be a valid hostname as described by RFC-1123.",
          "type": "string"
        },
        "isEnabled": {
          "type": "boolean",
          "description": "Optional. Enabling/disabling a TargetServer is useful when TargetServers are used in load balancing configurations, and one or more TargetServers need to taken out of rotation periodically. Defaults to true."
        },
        "port": {
          "format": "int32",
          "description": "Required. The port number this target connects to on the given host. Value must be between 1 and 65535, inclusive.",
          "type": "integer"
        },
        "description": {
          "description": "Optional. A human-readable description of this TargetServer.",
          "type": "string"
        }
      },
      "description": "TargetServer configuration. TargetServers are used to decouple a proxy's TargetEndpoint HTTPTargetConnections from concrete URLs for backend services.",
      "id": "GoogleCloudApigeeV1TargetServer",
      "type": "object"
    },
    "GoogleCloudApigeeV1Organization": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "subscriptionType": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Subscription type of the Apigee organization. Valid values include trial (free, limited, and for evaluation purposes only) or paid (full subscription has been purchased). See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
          "enumDescriptions": [
            "Subscription type not specified.",
            "Full subscription to Apigee has been purchased.",
            "Subscription to Apigee is free, limited, and used for evaluation purposes only."
          ],
          "enum": [
            "SUBSCRIPTION_TYPE_UNSPECIFIED",
            "PAID",
            "TRIAL"
          ]
        },
        "lastModifiedAt": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time that the Apigee organization was last modified in milliseconds since epoch."
        },
        "customerName": {
          "description": "Not used by Apigee.",
          "type": "string"
        },
        "projectId": {
          "type": "string",
          "description": "The project ID associated with the Apigee organization."
        },
        "description": {
          "type": "string",
          "description": "Description of the Apigee organization."
        },
        "createdAt": {
          "description": "Output only. Time that the Apigee organization was created in milliseconds since epoch.",
          "readOnly": true,
          "format": "int64",
          "type": "string"
        },
        "environments": {
          "readOnly": true,
          "description": "Output only. List of environments in the Apigee organization.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "array",
          "description": "Not used by Apigee.",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "description": "Not used by Apigee.",
          "enum": [
            "TYPE_UNSPECIFIED",
            "TYPE_TRIAL",
            "TYPE_PAID",
            "TYPE_INTERNAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Subscription type not specified.",
            "Subscription to Apigee is free, limited, and used for evaluation purposes only.",
            "Full subscription to Apigee has been purchased. See [Apigee pricing](https://cloud.google.com/apigee/pricing/).",
            "For internal users only."
          ]
        },
        "runtimeType": {
          "description": "Required. Runtime type of the Apigee organization based on the Apigee subscription purchased.",
          "enum": [
            "RUNTIME_TYPE_UNSPECIFIED",
            "CLOUD",
            "HYBRID"
          ],
          "type": "string",
          "enumDescriptions": [
            "Runtime type not specified.",
            "Google-managed Apigee runtime.",
            "User-managed Apigee hybrid runtime."
          ]
        },
        "analyticsRegion": {
          "type": "string",
          "description": "Required. Primary GCP region for analytics data storage. For valid values, see [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org)."
        },
        "properties": {
          "description": "Properties defined in the Apigee organization profile.",
          "$ref": "GoogleCloudApigeeV1Properties"
        },
        "name": {
          "readOnly": true,
          "description": "Output only. Name of the Apigee organization.",
          "type": "string"
        },
        "caCertificate": {
          "format": "byte",
          "description": "Output only. Base64-encoded public certificate for the root CA of the Apigee organization. Valid only when [RuntimeType] is CLOUD.",
          "readOnly": true,
          "type": "string"
        },
        "authorizedNetwork": {
          "type": "string",
          "description": "Compute Engine network used for Service Networking to be peered with Apigee runtime instances. See [Getting started with the Service Networking API](https://cloud.google.com/service-infrastructure/docs/service-networking/getting-started). Valid only when [RuntimeType] is set to CLOUD. The value can be updated only when there are no runtime instances. For example: \"default\". **Note:** Not supported for Apigee hybrid."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1Organization"
    },
    "GoogleCloudApigeeV1RuntimeTraceConfig": {
      "id": "GoogleCloudApigeeV1RuntimeTraceConfig",
      "properties": {
        "overrides": {
          "items": {
            "$ref": "GoogleCloudApigeeV1RuntimeTraceConfigOverride"
          },
          "type": "array",
          "description": "List of trace configuration overrides for spicific API proxies."
        },
        "name": {
          "description": "Name of the trace config in the following format: `organizations/{org}/environment/{env}/traceConfig`",
          "type": "string"
        },
        "exporter": {
          "description": "Exporter that is used to view the distributed trace captured using OpenCensus. An exporter sends traces to any backend that is capable of consuming them. Recorded spans can be exported by registered exporters.",
          "enumDescriptions": [
            "Exporter unspecified",
            "Jaeger exporter",
            "Cloudtrace exporter"
          ],
          "enum": [
            "EXPORTER_UNSPECIFIED",
            "JAEGER",
            "CLOUD_TRACE"
          ],
          "type": "string"
        },
        "revisionCreateTime": {
          "type": "string",
          "description": "The timestamp that the revision was created or updated.",
          "format": "google-datetime"
        },
        "samplingConfig": {
          "$ref": "GoogleCloudApigeeV1RuntimeTraceSamplingConfig",
          "description": "Trace configuration for all API proxies in an environment."
        },
        "revisionId": {
          "description": "Revision number which can be used by the runtime to detect if the trace config has changed between two versions.",
          "type": "string"
        },
        "endpoint": {
          "description": "Endpoint of the exporter.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "NEXT ID: 8 RuntimeTraceConfig defines the configurations for distributed trace in an environment."
    },
    "GoogleCloudApigeeV1TlsInfoConfig": {
      "id": "GoogleCloudApigeeV1TlsInfoConfig",
      "properties": {
        "commonName": {
          "$ref": "GoogleCloudApigeeV1CommonNameConfig",
          "description": "Common name to validate the target server against."
        },
        "protocols": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of TLS protocols that are granted access."
        },
        "enabled": {
          "type": "boolean",
          "description": "Flag that specifies whether one-way TLS is enabled. Set to `true` to enable one-way TLS."
        },
        "ciphers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of ciphers that are granted access."
        },
        "keyAliasReference": {
          "$ref": "GoogleCloudApigeeV1KeyAliasReference",
          "description": "Reference name and alias pair to use for client-side authentication."
        },
        "ignoreValidationErrors": {
          "type": "boolean",
          "description": "Flag that specifies whether to ignore TLS certificate validation errors. Set to `true` to ignore errors."
        },
        "keyAlias": {
          "description": "Name of the alias used for client-side authentication in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}`",
          "type": "string"
        },
        "trustStore": {
          "type": "string",
          "description": "Name of the keystore or keystore reference containing trusted certificates for the server in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` or `organizations/{org}/environments/{env}/references/{reference}`"
        },
        "clientAuthEnabled": {
          "type": "boolean",
          "description": "Flag that specifies whether client-side authentication is enabled for the target server. Enables two-way TLS."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ResourceFiles": {
      "description": "List of resource files.",
      "properties": {
        "resourceFile": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceFile"
          },
          "description": "List of resource files.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ResourceFiles",
      "type": "object"
    },
    "GoogleCloudApigeeV1RuntimeTraceSamplingConfig": {
      "properties": {
        "errorSources": {
          "description": "Error sources from which to capture errors. If none are specified, error codes are captured from all sources.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Error source is unspecified.",
              "Only capture trace errors within the Apigee system.",
              "Only capture trace errors from target server."
            ],
            "enum": [
              "ERROR_SOURCE_UNSPECIFIED",
              "APIGEE",
              "TARGET"
            ]
          }
        },
        "responseCodeRanges": {
          "description": "List of response code ranges.",
          "items": {
            "$ref": "GoogleCloudApigeeV1RuntimeTraceSamplingConfigResponseCodeRange"
          },
          "type": "array"
        },
        "sampler": {
          "enum": [
            "SAMPLER_UNSPECIFIED",
            "OFF",
            "ON",
            "PROBABILITY"
          ],
          "type": "string",
          "description": "Sampler of distributed tracing. OFF is the default value.",
          "enumDescriptions": [
            "Sampler unspecified.",
            "OFF means distributed trace is disabled, or the sampling probability is 0.",
            "ON means distributed trace is enabled always for all api calls, and sampling probability is 0.5.",
            "PROBABILITY means traces are captured on a probability that defined by sampling_rate. The sampling rate is limited to 0 to 0.5 when this is set."
          ]
        },
        "responseCodes": {
          "items": {
            "type": "integer",
            "format": "int32"
          },
          "type": "array",
          "description": "List of single response codes."
        },
        "samplingRate": {
          "description": "Field sampling rate. This value is only valid when is only applicable when sampling value is probabilistic(PROBABILITY). The supported values are \u003e 0 and \u003c= 0.5.",
          "format": "float",
          "type": "number"
        }
      },
      "description": "NEXT ID: 6 RuntimeTraceSamplingConfig represents the detail settings of distributed tracing. Only the fields that are defined in the distributed trace configuration can be overridden using the distribute trace configuration override APIs.",
      "id": "GoogleCloudApigeeV1RuntimeTraceSamplingConfig",
      "type": "object"
    },
    "GoogleCloudApigeeV1DateRange": {
      "description": "Date range of the data to export.",
      "id": "GoogleCloudApigeeV1DateRange",
      "properties": {
        "end": {
          "type": "string",
          "description": "Required. End date (exclusive) of the data to export in the format `yyyy-mm-dd`. The date range ends at 00:00:00 UTC on the end date- which will not be in the output."
        },
        "start": {
          "type": "string",
          "description": "Required. Start date of the data to export in the format `yyyy-mm-dd`. The date range begins at 00:00:00 UTC on the start date."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1SharedFlowRevision": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of policy names included in this shared flow revision."
        },
        "type": {
          "type": "string",
          "description": "The string \"Application\""
        },
        "displayName": {
          "type": "string",
          "description": "The human readable name of this shared flow."
        },
        "resources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of the resources included in this shared flow revision formatted as \"{type}://{name}\"."
        },
        "createdAt": {
          "type": "string",
          "description": "Time at which this shared flow revision was created, in milliseconds since epoch.",
          "format": "int64"
        },
        "sharedFlows": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of the shared flow names included in this shared flow revision."
        },
        "entityMetaDataAsProperties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "A Key-Value map of metadata about this shared flow revision."
        },
        "contextInfo": {
          "type": "string",
          "description": "A textual description of the shared flow revision."
        },
        "configurationVersion": {
          "$ref": "GoogleCloudApigeeV1ConfigVersion",
          "description": "The version of the configuration schema to which this shared flow conforms. The only supported value currently is majorVersion 4 and minorVersion 0. This setting may be used in the future to enable evolution of the shared flow format."
        },
        "lastModifiedAt": {
          "description": "Time at which this shared flow revision was most recently modified, in milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string",
          "description": "Description of the shared flow revision."
        },
        "name": {
          "description": "The resource ID of the parent shared flow.",
          "type": "string"
        },
        "resourceFiles": {
          "description": "The resource files included in this shared flow revision.",
          "$ref": "GoogleCloudApigeeV1ResourceFiles"
        },
        "revision": {
          "description": "The resource ID of this revision.",
          "type": "string"
        }
      },
      "description": "The metadata describing a shared flow revision.",
      "id": "GoogleCloudApigeeV1SharedFlowRevision"
    },
    "GoogleCloudApigeeV1AccessRemove": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "description": "Remove action. For example, \"Remove\" : { \"name\" : \"target.name\", \"success\" : true }",
      "id": "GoogleCloudApigeeV1AccessRemove"
    },
    "GoogleCloudApigeeV1SharedFlow": {
      "properties": {
        "latestRevisionId": {
          "description": "The id of the most recently created revision for this shared flow.",
          "type": "string"
        },
        "revision": {
          "items": {
            "type": "string"
          },
          "description": "A list of revisions of this shared flow.",
          "type": "array"
        },
        "metaData": {
          "description": "Metadata describing the shared flow.",
          "$ref": "GoogleCloudApigeeV1EntityMetadata"
        },
        "name": {
          "type": "string",
          "description": "The ID of the shared flow."
        }
      },
      "description": "The metadata describing a shared flow",
      "type": "object",
      "id": "GoogleCloudApigeeV1SharedFlow"
    },
    "GoogleRpcStatus": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "GoogleRpcStatus",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        }
      }
    },
    "GoogleCloudApigeeV1Result": {
      "id": "GoogleCloudApigeeV1Result",
      "properties": {
        "verb": {
          "type": "string",
          "description": "HTTP method verb"
        },
        "timestamp": {
          "type": "string",
          "description": "Timestamp of when the result is recorded. Its format is dd-mm-yy hh:mm:ss:xxx. For example, `\"timestamp\" : \"12-08-19 00:31:59:960\"`"
        },
        "uRI": {
          "description": "The relative path of the api proxy. for example, `\"uRI\" : \"/iloveapis\"`",
          "type": "string"
        },
        "headers": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Property"
          },
          "type": "array",
          "description": "A list of HTTP headers. for example, '\"headers\" : [ { \"name\" : \"Content-Length\", \"value\" : \"83\" }, { \"name\" : \"Content-Type\", \"value\" : \"application/json\" } ]'"
        },
        "reasonPhrase": {
          "description": "HTTP response phrase",
          "type": "string"
        },
        "content": {
          "description": "Error message content. for example, \"content\" : \"{\\\"fault\\\":{\\\"faultstring\\\":\\\"API timed out\\\",\\\"detail\\\":{\\\"errorcode\\\":\\\"flow.APITimedOut\\\"}}}\"",
          "type": "string"
        },
        "accessList": {
          "description": "A list of variable access actions agaist the api proxy. Supported values: Get, Set, Remove.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Access"
          }
        },
        "ActionResult": {
          "type": "string",
          "description": "Type of the action result. Can be one of the five: DebugInfo, RequestMessage, ResponseMessage, ErrorMessage, VariableAccess"
        },
        "statusCode": {
          "description": "HTTP response code",
          "type": "string"
        },
        "properties": {
          "$ref": "GoogleCloudApigeeV1Properties",
          "description": "Name value pairs used for DebugInfo ActionResult."
        }
      },
      "description": "Result is short for \"action result\", could be different types identified by \"action_result\" field. Supported types: 1. DebugInfo : generic debug info collected by runtime recorded as a list of properties. For example, the contents could be virtual host info, state change result, or execution metadata. Required fields : properties, timestamp 2. RequestMessage: information of a http request. Contains headers, request URI and http methods type.Required fields : headers, uri, verb 3. ResponseMessage: information of a http response. Contains headers, reason phrase and http status code. Required fields : headers, reasonPhrase, statusCode 4. ErrorMessage: information of a http error message. Contains detail error message, reason phrase and status code. Required fields : content, headers, reasonPhrase, statusCode 5. VariableAccess: a list of variable access actions, can be Get, Set and Remove. Required fields : accessList",
      "type": "object"
    },
    "GoogleCloudApigeeV1ListOfDevelopersResponse": {
      "id": "GoogleCloudApigeeV1ListOfDevelopersResponse",
      "type": "object",
      "properties": {
        "developer": {
          "description": "List of developers.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Developer"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1ListApiProductsResponse": {
      "properties": {
        "apiProduct": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProduct"
          },
          "type": "array",
          "description": "Lists all API product names defined for an organization."
        }
      },
      "id": "GoogleCloudApigeeV1ListApiProductsResponse",
      "type": "object"
    },
    "GoogleCloudApigeeV1ConfigVersion": {
      "type": "object",
      "properties": {
        "minorVersion": {
          "type": "integer",
          "description": "Minor version of the API proxy configuration schema.",
          "format": "int32"
        },
        "majorVersion": {
          "description": "Major version of the API proxy configuration schema.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Version of the API proxy configuration schema. Currently, only 4.0 is supported.",
      "id": "GoogleCloudApigeeV1ConfigVersion"
    },
    "GoogleCloudApigeeV1EnvironmentGroup": {
      "type": "object",
      "description": "EnvironmentGroup configuration. An environment group is used to group one or more Apigee environments under a single host name.",
      "properties": {
        "name": {
          "type": "string",
          "description": "ID of the environment group."
        },
        "hostnames": {
          "items": {
            "type": "string"
          },
          "description": "Required. Host names for this environment group.",
          "type": "array"
        },
        "createdAt": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. The time at which the environment group was created as milliseconds since epoch.",
          "type": "string"
        },
        "lastModifiedAt": {
          "description": "Output only. The time at which the environment group was last updated as milliseconds since epoch.",
          "format": "int64",
          "type": "string",
          "readOnly": true
        }
      },
      "id": "GoogleCloudApigeeV1EnvironmentGroup"
    },
    "GoogleCloudApigeeV1Developer": {
      "id": "GoogleCloudApigeeV1Developer",
      "properties": {
        "apps": {
          "description": "List of apps associated with the developer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string",
          "description": "Required. Email address of the developer. This value is used to uniquely identify the developer in Apigee hybrid."
        },
        "attributes": {
          "type": "array",
          "description": "Optional. Developer attributes (name/value pairs). The custom attribute limit is 18.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          }
        },
        "userName": {
          "type": "string",
          "description": "Required. User name of the developer. Not used by Apigee hybrid."
        },
        "lastModifiedAt": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Time at which the developer was last modified in milliseconds since epoch.",
          "type": "string"
        },
        "companies": {
          "description": "List of companies associated with the developer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "developerId": {
          "type": "string",
          "description": "ID of the developer. **Note**: IDs are generated internally by Apigee and are not guaranteed to stay the same over time."
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. Status of the developer. Valid values are `active` and `inactive`."
        },
        "createdAt": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. Time at which the developer was created in milliseconds since epoch."
        },
        "accessType": {
          "description": "Access type.",
          "type": "string"
        },
        "appFamily": {
          "type": "string",
          "description": "Developer app family."
        },
        "firstName": {
          "type": "string",
          "description": "Required. First name of the developer."
        },
        "lastName": {
          "description": "Required. Last name of the developer.",
          "type": "string"
        },
        "organizationName": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Name of the Apigee organization in which the developer resides."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1EntityMetadata": {
      "type": "object",
      "id": "GoogleCloudApigeeV1EntityMetadata",
      "properties": {
        "createdAt": {
          "description": "Time at which the API proxy was created, in milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "subType": {
          "description": "The type of entity described",
          "type": "string"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "int64",
          "description": "Time at which the API proxy was most recently modified, in milliseconds since epoch."
        }
      },
      "description": "Metadata common to many entities in this API."
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "GoogleLongrunningListOperationsResponse",
      "type": "object",
      "properties": {
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array",
          "description": "A list of operations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "GoogleIamV1AuditConfig": {
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "auditLogConfigs": {
          "items": {
            "$ref": "GoogleIamV1AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission.",
          "type": "array"
        }
      },
      "id": "GoogleIamV1AuditConfig",
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
    },
    "GoogleCloudApigeeV1ResourceFile": {
      "description": "Metadata about a resource file.",
      "type": "object",
      "id": "GoogleCloudApigeeV1ResourceFile",
      "properties": {
        "name": {
          "description": "ID of the resource file.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Resource file type. {{ resource_file_type }}"
        }
      }
    },
    "GoogleIamV1Binding": {
      "type": "object",
      "description": "Associates `members` with a `role`.",
      "id": "GoogleIamV1Binding",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "GoogleTypeExpr"
        }
      }
    },
    "GoogleCloudApigeeV1TlsInfoCommonName": {
      "id": "GoogleCloudApigeeV1TlsInfoCommonName",
      "type": "object",
      "properties": {
        "value": {
          "description": "The TLS Common Name string of the certificate.",
          "type": "string"
        },
        "wildcardMatch": {
          "type": "boolean",
          "description": "Indicates whether the cert should be matched against as a wildcard cert."
        }
      }
    },
    "GoogleCloudApigeeV1ListAsyncQueriesResponse": {
      "type": "object",
      "description": "The response for ListAsyncQueries.",
      "id": "GoogleCloudApigeeV1ListAsyncQueriesResponse",
      "properties": {
        "queries": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1AsyncQuery"
          },
          "description": "The asynchronous queries belong to requested resource name."
        }
      }
    },
    "GoogleCloudApigeeV1SchemaSchemaProperty": {
      "id": "GoogleCloudApigeeV1SchemaSchemaProperty",
      "properties": {
        "type": {
          "type": "string",
          "description": "Data type of the field."
        },
        "custom": {
          "type": "string",
          "description": "Custom is a flag signifying if the field was provided as part of the standard dataset or a custom field created by the customer"
        },
        "createTime": {
          "description": "Creation time of the field",
          "type": "string"
        }
      },
      "description": "Message type for schema property",
      "type": "object"
    },
    "GoogleCloudApigeeV1RoutingRule": {
      "id": "GoogleCloudApigeeV1RoutingRule",
      "type": "object",
      "properties": {
        "environment": {
          "type": "string",
          "description": "Name of an environment bound to the environment group in the following format: `organizations/{org}/environments/{env}`."
        },
        "receiver": {
          "description": "The resource name of the proxy revision that is receiving this basepath in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with debug=true.",
          "type": "string"
        },
        "envGroupRevision": {
          "description": "The env group config revision_id when this rule was added or last updated. This value is set when the rule is created and will only update if the the environment_id changes. It is used to determine if the runtime is up to date with respect to this rule. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with debug=true.",
          "type": "string",
          "format": "int64"
        },
        "updateTime": {
          "description": "The unix timestamp when this rule was updated. This is updated whenever env_group_revision is updated. This field is omitted from the IngressConfig unless the GetDeployedIngressConfig API is called with debug=true.",
          "format": "google-datetime",
          "type": "string"
        },
        "basepath": {
          "type": "string",
          "description": "URI path prefix used to route to the specified environment. May contain one or more wildcards. For example, path segments consisting of a single `*` character will match any string."
        }
      }
    },
    "GoogleCloudApigeeV1ApiCategory": {
      "id": "GoogleCloudApigeeV1ApiCategory",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "GoogleCloudApigeeV1ApiCategoryData",
          "description": "Details of category."
        },
        "status": {
          "type": "string",
          "description": "Status of the operation."
        },
        "message": {
          "description": "Description of the operation.",
          "type": "string"
        },
        "errorCode": {
          "type": "string",
          "description": "ID that can be used to find errors in the log files."
        },
        "requestId": {
          "type": "string",
          "description": "ID that can be used to find request details in the log files."
        }
      },
      "description": "the Api category resource wrapped with response status, error_code etc."
    },
    "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment": {
      "properties": {
        "apiProxy": {
          "type": "string",
          "description": "The name of the deployed proxy revision containing the basepath."
        },
        "revision": {
          "type": "string",
          "description": "The name of the deployed proxy revision containing the basepath."
        },
        "environment": {
          "type": "string",
          "description": "The name of the environment in which the proxy is deployed."
        },
        "basepath": {
          "type": "string",
          "description": "The basepath receiving traffic."
        }
      },
      "type": "object",
      "description": "A tuple representing a basepath and the deployment containing it.",
      "id": "GoogleCloudApigeeV1DeploymentChangeReportRoutingDeployment"
    },
    "GoogleCloudApigeeV1DataCollectorConfig": {
      "id": "GoogleCloudApigeeV1DataCollectorConfig",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "INTEGER",
            "FLOAT",
            "STRING",
            "BOOLEAN",
            "DATETIME"
          ],
          "enumDescriptions": [
            "For future compatibility.",
            "For integer values.",
            "For float values.",
            "For string values.",
            "For boolean values.",
            "For datetime values."
          ],
          "description": "Data type accepted by the data collector."
        },
        "name": {
          "type": "string",
          "description": "Name of the data collector in the following format: `organizations/{org}/datacollectors/{datacollector}`"
        }
      },
      "description": "Data collector and its configuration.",
      "type": "object"
    },
    "GoogleCloudApigeeV1AsyncQuery": {
      "id": "GoogleCloudApigeeV1AsyncQuery",
      "properties": {
        "result": {
          "$ref": "GoogleCloudApigeeV1AsyncQueryResult",
          "description": "Result is available only after the query is completed."
        },
        "state": {
          "description": "Query state could be \"enqueued\", \"running\", \"completed\", \"failed\".",
          "type": "string"
        },
        "error": {
          "type": "string",
          "description": "Error is set when query fails."
        },
        "created": {
          "type": "string",
          "description": "Creation time of the query."
        },
        "name": {
          "type": "string",
          "description": "Asynchronous Query Name."
        },
        "self": {
          "description": "Self link of the query. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd`",
          "type": "string"
        },
        "reportDefinitionId": {
          "description": "Asynchronous Report ID.",
          "type": "string"
        },
        "queryParams": {
          "description": "Contains information like metrics, dimenstions etc of the AsyncQuery.",
          "$ref": "GoogleCloudApigeeV1QueryMetadata"
        },
        "resultRows": {
          "description": "ResultRows is available only after the query is completed.",
          "format": "int64",
          "type": "string"
        },
        "updated": {
          "description": "Last updated timestamp for the query.",
          "type": "string"
        },
        "executionTime": {
          "type": "string",
          "description": "ExecutionTime is available only after the query is completed."
        },
        "resultFileSize": {
          "type": "string",
          "description": "ResultFileSize is available only after the query is completed."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1KeyAliasReference": {
      "properties": {
        "aliasId": {
          "description": "Alias ID. Must exist in the keystore referred to by the reference.",
          "type": "string"
        },
        "reference": {
          "description": "Reference name in the following format: `organizations/{org}/environments/{env}/references/{reference}`",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1KeyAliasReference",
      "type": "object"
    },
    "GoogleCloudApigeeV1Credential": {
      "properties": {
        "expiresAt": {
          "description": "Time the credential will expire in milliseconds since epoch.",
          "type": "string",
          "format": "int64"
        },
        "scopes": {
          "description": "List of scopes to apply to the app. Specified scopes must already exist on the API product that you associate with the app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "apiProducts": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiProductRef"
          },
          "type": "array",
          "description": "List of API products this credential can be used for."
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "type": "array",
          "description": "List of attributes associated with this credential."
        },
        "issuedAt": {
          "type": "string",
          "description": "Time the credential was issued in milliseconds since epoch.",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "description": "Status of the credential."
        },
        "consumerKey": {
          "type": "string",
          "description": "Consumer key."
        },
        "consumerSecret": {
          "type": "string",
          "description": "Secret key."
        }
      },
      "id": "GoogleCloudApigeeV1Credential",
      "type": "object"
    },
    "GoogleCloudApigeeV1CertInfo": {
      "type": "object",
      "properties": {
        "publicKey": {
          "type": "string",
          "description": "The public key component of the X.509 subject public key info."
        },
        "version": {
          "format": "int32",
          "description": "The X.509 version.",
          "type": "integer"
        },
        "expiryDate": {
          "format": "int64",
          "description": "The X.509 validity / notAfter in milliseconds since the epoch.",
          "type": "string"
        },
        "subject": {
          "type": "string",
          "description": "The X.509 subject."
        },
        "isValid": {
          "description": "\"Yes\" if certificate is valid, \"No\" if expired and \"Not yet\" if not yet valid.",
          "type": "string"
        },
        "issuer": {
          "type": "string",
          "description": "The X.509 issuer."
        },
        "basicConstraints": {
          "description": "The X.509 basic constraints extension.",
          "type": "string"
        },
        "validFrom": {
          "format": "int64",
          "type": "string",
          "description": "The X.509 validity / notBefore in milliseconds since the epoch."
        },
        "serialNumber": {
          "description": "The X.509 serial number.",
          "type": "string"
        },
        "subjectAlternativeNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The X.509 subject alternative names (SANs) extension."
        },
        "sigAlgName": {
          "type": "string",
          "description": "The X.509 signatureAlgorithm."
        }
      },
      "id": "GoogleCloudApigeeV1CertInfo",
      "description": "An X.509 certificate as defined in RFC 5280."
    },
    "GoogleCloudApigeeV1Session": {
      "description": "Session carries the debug session id and its creation time.",
      "type": "object",
      "id": "GoogleCloudApigeeV1Session",
      "properties": {
        "timestampMs": {
          "format": "int64",
          "description": "The first transaction creation timestamp in millisecond, recoreded by UAP.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The debug session ID."
        }
      }
    },
    "GoogleCloudApigeeV1ListDeploymentsResponse": {
      "type": "object",
      "properties": {
        "deployments": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Deployment"
          },
          "description": "List of deployments.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListDeploymentsResponse"
    },
    "GoogleCloudApigeeV1Certificate": {
      "properties": {
        "certInfo": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1CertInfo"
          },
          "description": "The chain of certificates under this name."
        }
      },
      "id": "GoogleCloudApigeeV1Certificate",
      "type": "object"
    },
    "GoogleRpcPreconditionFailureViolation": {
      "type": "object",
      "description": "A message type used to describe a single precondition failure.",
      "properties": {
        "type": {
          "type": "string",
          "description": "The type of PreconditionFailure. We recommend using a service-specific enum type to define the supported precondition violation subjects. For example, \"TOS\" for \"Terms of Service violation\"."
        },
        "description": {
          "type": "string",
          "description": "A description of how the precondition failed. Developers can use this description to understand how to fix the failure. For example: \"Terms of service not accepted\"."
        },
        "subject": {
          "description": "The subject, relative to the type, that failed. For example, \"google.com/cloud\" relative to the \"TOS\" type would indicate which terms of service is being referenced.",
          "type": "string"
        }
      },
      "id": "GoogleRpcPreconditionFailureViolation"
    },
    "GoogleCloudApigeeV1Instance": {
      "properties": {
        "createdAt": {
          "format": "int64",
          "readOnly": true,
          "description": "Output only. Time the instance was created in milliseconds since epoch.",
          "type": "string"
        },
        "lastModifiedAt": {
          "description": "Output only. Time the instance was last modified in milliseconds since epoch.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        },
        "diskEncryptionKeyName": {
          "type": "string",
          "description": "Optional. Customer Managed Encryption Key (CMEK) used for disk & volume encryption."
        },
        "host": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Hostname or IP address of the exposed Apigee endpoint used by clients to connect to the service."
        },
        "name": {
          "description": "Required. Resource ID of the instance. Values must match the regular expression `^a-z{0,30}[a-z\\d]$`.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Required. Compute Engine location where the instance resides."
        },
        "displayName": {
          "type": "string",
          "description": "Optional. Display name for the instance."
        },
        "state": {
          "enumDescriptions": [
            "Resource is in an unspecified state.",
            "Resource is being created.",
            "Resource is provisioned and ready to use.",
            "The resource is being deleted."
          ],
          "type": "string",
          "description": "Output only. State of the instance. Values other than ACTIVE means the resource is not ready to use.",
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "DELETING"
          ],
          "readOnly": true
        },
        "description": {
          "description": "Optional. Description of the instance.",
          "type": "string"
        },
        "port": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Port number of the exposed Apigee endpoint."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1Instance",
      "description": "Apigee runtime instance."
    },
    "GoogleCloudApigeeV1EnvironmentConfig": {
      "properties": {
        "name": {
          "description": "Name of the environment configuration in the following format: `organizations/{org}/environments/{env}/configs/{config}`",
          "type": "string"
        },
        "featureFlags": {
          "description": "Feature flags inherited from the organization and environment.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "uid": {
          "type": "string",
          "description": "Unique ID for the environment configuration. The ID will only change if the environment is deleted and recreated."
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceConfig"
          },
          "description": "List of resource versions in the environment."
        },
        "pubsubTopic": {
          "description": "Name of the PubSub topic for the environment.",
          "type": "string"
        },
        "resourceReferences": {
          "type": "array",
          "description": "List of resource references in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1ReferenceConfig"
          }
        },
        "keystores": {
          "type": "array",
          "description": "List of keystores in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1KeystoreConfig"
          }
        },
        "debugMask": {
          "description": "Debug mask that applies to all deployments in the environment.",
          "$ref": "GoogleCloudApigeeV1DebugMask"
        },
        "revisionId": {
          "format": "int64",
          "type": "string",
          "description": "Revision ID of the environment configuration. The higher the value, the more recently the configuration was deployed."
        },
        "dataCollectors": {
          "items": {
            "$ref": "GoogleCloudApigeeV1DataCollectorConfig"
          },
          "description": "List of data collectors used by the deployments in the environment.",
          "type": "array"
        },
        "targets": {
          "description": "List of target servers in the environment. Disabled target servers are not displayed.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1TargetServerConfig"
          }
        },
        "flowhooks": {
          "items": {
            "$ref": "GoogleCloudApigeeV1FlowHookConfig"
          },
          "type": "array",
          "description": "List of flow hooks in the environment."
        },
        "traceConfig": {
          "description": "Trace configurations. Contains config for the environment and config overrides for specific API proxies.",
          "$ref": "GoogleCloudApigeeV1RuntimeTraceConfig"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Time that the environment configuration was created."
        },
        "deployments": {
          "description": "List of deployments in the environment.",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentConfig"
          },
          "type": "array"
        },
        "provider": {
          "description": "Used by the Control plane to add context information to help detect the source of the document during diagnostics and debugging.",
          "type": "string"
        },
        "sequenceNumber": {
          "format": "int64",
          "type": "string",
          "description": "DEPRECATED: Use revision_id."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1EnvironmentConfig"
    },
    "GoogleCloudApigeeV1ReportProperty": {
      "properties": {
        "value": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "description": "property values",
          "type": "array"
        },
        "property": {
          "description": "name of the property",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1ReportProperty",
      "type": "object"
    },
    "GoogleCloudApigeeV1GetSyncAuthorizationRequest": {
      "properties": {},
      "type": "object",
      "id": "GoogleCloudApigeeV1GetSyncAuthorizationRequest",
      "description": "Request for GetSyncAuthorization."
    },
    "GoogleCloudApigeeV1DimensionMetric": {
      "properties": {
        "name": {
          "type": "string",
          "description": "This field contains the name of the dimension."
        },
        "metrics": {
          "description": "This field contains a list of metrics.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1Metric"
          }
        }
      },
      "id": "GoogleCloudApigeeV1DimensionMetric",
      "type": "object",
      "description": "This message type encapsulates a metric grouped by dimension."
    },
    "GoogleCloudApigeeV1EnvironmentGroupAttachment": {
      "description": "EnvironmentGroupAttachment is a resource which defines an attachment of an environment to an environment group.",
      "type": "object",
      "id": "GoogleCloudApigeeV1EnvironmentGroupAttachment",
      "properties": {
        "name": {
          "description": "ID of the environment group attachment.",
          "type": "string"
        },
        "environment": {
          "type": "string",
          "description": "Required. ID of the attached environment."
        },
        "createdAt": {
          "format": "int64",
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which the environment group attachment was created as milliseconds since epoch."
        }
      }
    },
    "GoogleRpcPreconditionFailure": {
      "type": "object",
      "description": "Describes what preconditions have failed. For example, if an RPC failed because it required the Terms of Service to be acknowledged, it could list the terms of service violation in the PreconditionFailure message.",
      "properties": {
        "violations": {
          "items": {
            "$ref": "GoogleRpcPreconditionFailureViolation"
          },
          "description": "Describes all precondition violations.",
          "type": "array"
        }
      },
      "id": "GoogleRpcPreconditionFailure"
    },
    "GoogleCloudApigeeV1EnvironmentGroupConfig": {
      "id": "GoogleCloudApigeeV1EnvironmentGroupConfig",
      "type": "object",
      "description": "EnvironmentGroupConfig is a revisioned snapshot of an EnvironmentGroup and its associated routing rules.",
      "properties": {
        "revisionId": {
          "description": "Revision id that defines the ordering of the EnvironmentGroupConfig resource. The higher the revision, the more recently the configuration was deployed.",
          "type": "string",
          "format": "int64"
        },
        "uid": {
          "type": "string",
          "description": "A unique id for the environment group config that will only change if the environment group is deleted and recreated."
        },
        "hostnames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Host names for the environment group."
        },
        "routingRules": {
          "items": {
            "$ref": "GoogleCloudApigeeV1RoutingRule"
          },
          "type": "array",
          "description": "Ordered list of routing rules defining how traffic to this environment group's hostnames should be routed to different environments."
        },
        "name": {
          "description": "Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1ListEnvironmentGroupsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Page token that you can include in a ListEnvironmentGroups request to retrieve the next page. If omitted, no subsequent pages exist.",
          "type": "string"
        },
        "environmentGroups": {
          "items": {
            "$ref": "GoogleCloudApigeeV1EnvironmentGroup"
          },
          "description": "EnvironmentGroups in the specified organization.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1ListEnvironmentGroupsResponse",
      "description": "Response for ListEnvironmentGroups."
    },
    "GoogleCloudApigeeV1ListEnvironmentResourcesResponse": {
      "description": "Response for ListEnvironmentResources",
      "id": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse",
      "properties": {
        "resourceFile": {
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceFile"
          },
          "description": "List of resources files.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1KeyValueMap": {
      "id": "GoogleCloudApigeeV1KeyValueMap",
      "description": "A collection of key, value string pairs",
      "properties": {
        "encrypted": {
          "description": "Optional. If `true` entry values will be encrypted.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Required. The id of the key value map."
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1Point": {
      "id": "GoogleCloudApigeeV1Point",
      "type": "object",
      "properties": {
        "results": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Result"
          },
          "description": "List of results extracted from a given debug point.",
          "type": "array"
        },
        "id": {
          "type": "string",
          "description": "Name of a step in the transaction."
        }
      },
      "description": "Point is a group of information collected by runtime plane at critical points of the message flow of the processed API request. This is a list of supported point IDs, categorized to three major buckets. For each category, debug points that we are currently supporting are listed below: - Flow status debug points: StateChange FlowInfo Condition Execution DebugMask Error - Flow control debug points: FlowCallout Paused Resumed FlowReturn BreakFlow Error - Runtime debug points: ScriptExecutor FlowCalloutStepDefinition CustomTarget StepDefinition Oauth2ServicePoint RaiseFault NodeJS The detail information of the given debug point is stored in a list of results."
    },
    "GoogleCloudApigeeV1OptimizedStats": {
      "id": "GoogleCloudApigeeV1OptimizedStats",
      "properties": {
        "Response": {
          "description": "This field wraps the stats response for Js Optimized Scenario with a Response key. E.g. { \"Response\": { \"TimeUnit\": [], \"metaData\": { \"errors\": [], \"notices\": [ \"Source:Postgres\", \"Table used: edge.api.aaxgroup001.agg_api\", \"PG Host:ruappg08-ro.production.apigeeks.net\", \"query served by:80c4ebca-6a10-4a2e-8faf-c60c1ee306ca\" ] }, \"resultTruncated\": false, \"stats\": { \"data\": [ { \"identifier\": { \"names\": [ \"apiproxy\" ], \"values\": [ \"sirjee\" ] }, \"metric\": [ { \"env\": \"prod\", \"name\": \"sum(message_count)\", \"values\": [ 36.0 ] }, { \"env\": \"prod\", \"name\": \"sum(is_error)\", \"values\": [ 36.0 ] } ] } ] } } }",
          "$ref": "GoogleCloudApigeeV1OptimizedStatsResponse"
        }
      },
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "error": {
          "$ref": "GoogleRpcStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      }
    },
    "GoogleCloudApigeeV1DeploymentConfig": {
      "type": "object",
      "properties": {
        "basePath": {
          "description": "Base path where the application will be hosted. Defaults to \"/\".",
          "type": "string"
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional key-value metadata for the deployment."
        },
        "proxyUid": {
          "description": "Unique ID of the API proxy revision.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Location of the API proxy bundle as a URI."
        },
        "uid": {
          "type": "string",
          "description": "Unique ID. The ID will only change if the deployment is deleted and recreated."
        },
        "name": {
          "description": "Name of the API or shared flow revision to be deployed in the following format: `organizations/{org}/apis/{api}/revisions/{rev}` or `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DeploymentConfig"
    },
    "GoogleCloudApigeeV1ReportInstanceStatusRequest": {
      "properties": {
        "resources": {
          "description": "Status for config resources",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1ResourceStatus"
          }
        },
        "instanceUid": {
          "type": "string",
          "description": "A unique ID for the instance which is guaranteed to be unique in case the user installs multiple hybrid runtimes with the same instance ID."
        },
        "reportTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the report was generated in the runtime. Used to prevent an old status from overwriting a newer one. An instance should space out it's status reports so that clock skew does not play a factor."
        }
      },
      "id": "GoogleCloudApigeeV1ReportInstanceStatusRequest",
      "type": "object",
      "description": "Request for ReportInstanceStatus."
    },
    "GoogleCloudApigeeV1ExportRequest": {
      "id": "GoogleCloudApigeeV1ExportRequest",
      "type": "object",
      "properties": {
        "outputFormat": {
          "description": "Optional. Output format of the export. Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the `csvDelimiter` property.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the export job."
        },
        "datastoreName": {
          "type": "string",
          "description": "Required. Name of the preconfigured datastore."
        },
        "dateRange": {
          "$ref": "GoogleCloudApigeeV1DateRange",
          "description": "Required. Date range of the data to export."
        },
        "name": {
          "type": "string",
          "description": "Required. Display name of the export job."
        },
        "csvDelimiter": {
          "description": "Optional. Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\\t`).",
          "type": "string"
        }
      },
      "description": "Request body for [CreateExportRequest]"
    },
    "GoogleCloudApigeeV1AliasRevisionConfig": {
      "id": "GoogleCloudApigeeV1AliasRevisionConfig",
      "properties": {
        "type": {
          "enum": [
            "ALIAS_TYPE_UNSPECIFIED",
            "CERT",
            "KEY_CERT"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "location": {
          "description": "Location of the alias file. For example, a Google Cloud Storage URI.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the alias revision included in the keystore in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}/aliases/{alias}/revisions/{rev}`"
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1CommonNameConfig": {
      "properties": {
        "name": {
          "type": "string"
        },
        "matchWildCards": {
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1CommonNameConfig"
    },
    "GoogleCloudApigeeV1FlowHookConfig": {
      "type": "object",
      "id": "GoogleCloudApigeeV1FlowHookConfig",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the flow hook in the following format: `organizations/{org}/environments/{env}/flowhooks/{point}`. Valid `point` values include: `PreProxyFlowHook`, `PostProxyFlowHook`, `PreTargetFlowHook`, and `PostTargetFlowHook`"
        },
        "sharedFlowName": {
          "type": "string",
          "description": "Name of the shared flow to invoke in the following format: `organizations/{org}/sharedflows/{sharedflow}`"
        },
        "continueOnError": {
          "description": "Flag that specifies whether the flow should abort after an error in the flow hook. Defaults to `true` (continue on error).",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudApigeeV1UpdateError": {
      "id": "GoogleCloudApigeeV1UpdateError",
      "type": "object",
      "description": "Details on why a resource update failed in the runtime.",
      "properties": {
        "type": {
          "type": "string",
          "description": "A string that uniquely identifies the type of error. This provides a more reliable means to deduplicate errors across revisions and instances."
        },
        "code": {
          "enum": [
            "OK",
            "CANCELLED",
            "UNKNOWN",
            "INVALID_ARGUMENT",
            "DEADLINE_EXCEEDED",
            "NOT_FOUND",
            "ALREADY_EXISTS",
            "PERMISSION_DENIED",
            "UNAUTHENTICATED",
            "RESOURCE_EXHAUSTED",
            "FAILED_PRECONDITION",
            "ABORTED",
            "OUT_OF_RANGE",
            "UNIMPLEMENTED",
            "INTERNAL",
            "UNAVAILABLE",
            "DATA_LOSS"
          ],
          "type": "string",
          "description": "Status code.",
          "enumDescriptions": [
            "Not an error; returned on success HTTP Mapping: 200 OK",
            "The operation was cancelled, typically by the caller. HTTP Mapping: 499 Client Closed Request",
            "Unknown error. For example, this error may be returned when a `Status` value received from another address space belongs to an error space that is not known in this address space. Also errors raised by APIs that do not return enough error information may be converted to this error. HTTP Mapping: 500 Internal Server Error",
            "The client specified an invalid argument. Note that this differs from `FAILED_PRECONDITION`. `INVALID_ARGUMENT` indicates arguments that are problematic regardless of the state of the system (e.g., a malformed file name). HTTP Mapping: 400 Bad Request",
            "The deadline expired before the operation could complete. For operations that change the state of the system, this error may be returned even if the operation has completed successfully. For example, a successful response from a server could have been delayed long enough for the deadline to expire. HTTP Mapping: 504 Gateway Timeout",
            "Some requested entity (e.g., file or directory) was not found. Note to server developers: if a request is denied for an entire class of users, such as gradual feature rollout or undocumented allowlist, `NOT_FOUND` may be used. If a request is denied for some users within a class of users, such as user-based access control, `PERMISSION_DENIED` must be used. HTTP Mapping: 404 Not Found",
            "The entity that a client attempted to create (e.g., file or directory) already exists. HTTP Mapping: 409 Conflict",
            "The caller does not have permission to execute the specified operation. `PERMISSION_DENIED` must not be used for rejections caused by exhausting some resource (use `RESOURCE_EXHAUSTED` instead for those errors). `PERMISSION_DENIED` must not be used if the caller can not be identified (use `UNAUTHENTICATED` instead for those errors). This error code does not imply the request is valid or the requested entity exists or satisfies other pre-conditions. HTTP Mapping: 403 Forbidden",
            "The request does not have valid authentication credentials for the operation. HTTP Mapping: 401 Unauthorized",
            "Some resource has been exhausted, perhaps a per-user quota, or perhaps the entire file system is out of space. HTTP Mapping: 429 Too Many Requests",
            "The operation was rejected because the system is not in a state required for the operation's execution. For example, the directory to be deleted is non-empty, an rmdir operation is applied to a non-directory, etc. Service implementors can use the following guidelines to decide between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`: (a) Use `UNAVAILABLE` if the client can retry just the failing call. (b) Use `ABORTED` if the client should retry at a higher level (e.g., when a client-specified test-and-set fails, indicating the client should restart a read-modify-write sequence). (c) Use `FAILED_PRECONDITION` if the client should not retry until the system state has been explicitly fixed. E.g., if an \"rmdir\" fails because the directory is non-empty, `FAILED_PRECONDITION` should be returned since the client should not retry unless the files are deleted from the directory. HTTP Mapping: 400 Bad Request",
            "The operation was aborted, typically due to a concurrency issue such as a sequencer check failure or transaction abort. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 409 Conflict",
            "The operation was attempted past the valid range. E.g., seeking or reading past end-of-file. Unlike `INVALID_ARGUMENT`, this error indicates a problem that may be fixed if the system state changes. For example, a 32-bit file system will generate `INVALID_ARGUMENT` if asked to read at an offset that is not in the range [0,2^32-1], but it will generate `OUT_OF_RANGE` if asked to read from an offset past the current file size. There is a fair bit of overlap between `FAILED_PRECONDITION` and `OUT_OF_RANGE`. We recommend using `OUT_OF_RANGE` (the more specific error) when it applies so that callers who are iterating through a space can easily look for an `OUT_OF_RANGE` error to detect when they are done. HTTP Mapping: 400 Bad Request",
            "The operation is not implemented or is not supported/enabled in this service. HTTP Mapping: 501 Not Implemented",
            "Internal errors. This means that some invariants expected by the underlying system have been broken. This error code is reserved for serious errors. HTTP Mapping: 500 Internal Server Error",
            "The service is currently unavailable. This is most likely a transient condition, which can be corrected by retrying with a backoff. Note that it is not always safe to retry non-idempotent operations. See the guidelines above for deciding between `FAILED_PRECONDITION`, `ABORTED`, and `UNAVAILABLE`. HTTP Mapping: 503 Service Unavailable",
            "Unrecoverable data loss or corruption. HTTP Mapping: 500 Internal Server Error"
          ]
        },
        "resource": {
          "type": "string",
          "description": "The sub resource specific to this error (e.g. a proxy deployed within the EnvironmentConfig). If empty the error refers to the top level resource."
        },
        "message": {
          "type": "string",
          "description": "User-friendly error message."
        }
      }
    },
    "GoogleCloudApigeeV1Access": {
      "type": "object",
      "properties": {
        "Remove": {
          "$ref": "GoogleCloudApigeeV1AccessRemove"
        },
        "Set": {
          "$ref": "GoogleCloudApigeeV1AccessSet"
        },
        "Get": {
          "$ref": "GoogleCloudApigeeV1AccessGet"
        }
      },
      "id": "GoogleCloudApigeeV1Access"
    },
    "GoogleApiHttpBody": {
      "type": "object",
      "description": "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
      "id": "GoogleApiHttpBody",
      "properties": {
        "contentType": {
          "description": "The HTTP Content-Type header value specifying the content type of the body.",
          "type": "string"
        },
        "data": {
          "description": "The HTTP request/response body as raw binary.",
          "format": "byte",
          "type": "string"
        },
        "extensions": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "description": "Application specific response metadata. Must be set in the first response for streaming APIs."
        }
      }
    },
    "GoogleCloudApigeeV1Properties": {
      "description": "Message for compatibility with legacy Edge specification for Java Properties object in JSON.",
      "type": "object",
      "properties": {
        "property": {
          "description": "List of all properties in the object",
          "items": {
            "$ref": "GoogleCloudApigeeV1Property"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1Properties"
    },
    "GoogleCloudApigeeV1Attribute": {
      "type": "object",
      "description": "Key-value pair to store extra metadata.",
      "id": "GoogleCloudApigeeV1Attribute",
      "properties": {
        "name": {
          "description": "API key of the attribute.",
          "type": "string"
        },
        "value": {
          "description": "Value of the attribute.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision": {
      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRevision",
      "type": "object",
      "description": "Revisions deployed in the MPs.",
      "properties": {
        "percentage": {
          "format": "int32",
          "type": "integer",
          "description": "The percentage of MP replicas reporting this revision"
        },
        "revision": {
          "description": "The proxy revision reported as deployed.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse": {
      "properties": {
        "environmentGroupAttachments": {
          "description": "EnvironmentGroupAttachments for the specified environment group.",
          "items": {
            "$ref": "GoogleCloudApigeeV1EnvironmentGroupAttachment"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token that you can include in a ListEnvironmentGroupAttachments request to retrieve the next page. If omitted, no subsequent pages exist."
        }
      },
      "id": "GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse",
      "type": "object",
      "description": "Response for ListEnvironmentGroupAttachments."
    },
    "GoogleCloudApigeeV1Deployment": {
      "properties": {
        "environment": {
          "description": "Environment.",
          "type": "string"
        },
        "pods": {
          "items": {
            "$ref": "GoogleCloudApigeeV1PodStatus"
          },
          "description": "Status reported by runtime pods. This field is not populated for List APIs.",
          "type": "array"
        },
        "apiProxy": {
          "description": "API proxy.",
          "type": "string"
        },
        "instances": {
          "description": "Status reported by each runtime instance. This field is not populated in List APIs.",
          "items": {
            "$ref": "GoogleCloudApigeeV1InstanceDeploymentStatus"
          },
          "type": "array"
        },
        "errors": {
          "description": "Errors reported for this deployment. Populated only when state == ERROR. This field is not populated in List APIs.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "routeConflicts": {
          "type": "array",
          "description": "Conflicts in the desired state routing configuration. The presence of conflicts does not cause the state to be ERROR, but it will mean that some of the deployments basepaths are not routed to its environment. If the conflicts change, the state will transition to PROGRESSING until the latest configuration is rolled out to all instances. This field is not populated in List APIs.",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict"
          }
        },
        "deployStartTime": {
          "type": "string",
          "description": "Time the API proxy was marked `deployed` in the control plane in millisconds since epoch.",
          "format": "int64"
        },
        "revision": {
          "type": "string",
          "description": "API proxy revision."
        },
        "state": {
          "enumDescriptions": [
            "This value should never be returned.",
            "The runtime has loaded the deployment.",
            "The deployment is not fully ready in the runtime.",
            "There is an error with the deployment that requires intervention."
          ],
          "description": "Current state of the deployment. This field is not populated in List APIs.",
          "enum": [
            "RUNTIME_STATE_UNSPECIFIED",
            "READY",
            "PROGRESSING",
            "ERROR"
          ],
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1Deployment"
    },
    "GoogleCloudApigeeV1Property": {
      "id": "GoogleCloudApigeeV1Property",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The property value"
        },
        "name": {
          "type": "string",
          "description": "The property key"
        }
      },
      "description": "A single property entry in the Properties message."
    },
    "GoogleCloudApigeeV1AsyncQueryResult": {
      "type": "object",
      "id": "GoogleCloudApigeeV1AsyncQueryResult",
      "properties": {
        "self": {
          "type": "string",
          "description": "Self link of the query results. Example: `/organizations/myorg/environments/myenv/queries/9cfc0d85-0f30-46d6-ae6f-318d0cb961bd/result`"
        },
        "expires": {
          "description": "Query result will be unaccessable after this time.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1DeploymentChangeReport": {
      "type": "object",
      "description": "Response for GenerateDeployChangeReport and GenerateUndeployChangeReport. This report contains any validation failures that would cause the deployment to be rejected, as well changes and conflicts in routing that may occur due to the new deployment. The existence of a routing warning does not necessarily imply that the deployment request is bad, if the desired state of the deployment request is to effect a routing change. The primary purposes of the routing messages are: 1) To inform users of routing changes that may have an effect on traffic currently being routed to other existing deployments. 2) To warn users if some basepath in the proxy will not receive traffic due to an existing deployment having already claimed that basepath. The presence of routing conflicts/changes will not cause non-dry-run DeployApiProxy/UndeployApiProxy requests to be rejected.",
      "properties": {
        "routingConflicts": {
          "description": "All basepath conflicts detected for a deployment request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingConflict"
          }
        },
        "validationErrors": {
          "description": "Validation errors that would cause the deployment change request to be rejected.",
          "$ref": "GoogleRpcPreconditionFailure"
        },
        "routingChanges": {
          "items": {
            "$ref": "GoogleCloudApigeeV1DeploymentChangeReportRoutingChange"
          },
          "description": "All routing changes that may result from a deployment request.",
          "type": "array"
        }
      },
      "id": "GoogleCloudApigeeV1DeploymentChangeReport"
    },
    "GoogleCloudApigeeV1PodStatus": {
      "id": "GoogleCloudApigeeV1PodStatus",
      "type": "object",
      "properties": {
        "podName": {
          "type": "string",
          "description": "Name of the pod which is reporting the status."
        },
        "podStatusTime": {
          "description": "Time the pod status was reported in milliseconds since epoch.",
          "format": "int64",
          "type": "string"
        },
        "appVersion": {
          "type": "string",
          "description": "Version of the application running in the pod."
        },
        "statusCodeDetails": {
          "type": "string",
          "description": "Human-readable message associated with the status code."
        },
        "statusCode": {
          "type": "string",
          "description": "Code associated with the deployment status."
        },
        "deploymentStatusTime": {
          "type": "string",
          "format": "int64",
          "description": "Time the deployment status was reported in milliseconds since epoch."
        },
        "deploymentStatus": {
          "type": "string",
          "description": "Status of the deployment. Valid values include: - `deployed`: Successful. - `error` : Failed. - `pending` : Pod has not yet reported on the deployment."
        },
        "deploymentTime": {
          "format": "int64",
          "type": "string",
          "description": "Time the proxy was deployed in milliseconds since epoch."
        },
        "podStatus": {
          "description": "Overall status of the pod (not this specific deployment). Valid values include: - `active`: Up to date. - `stale` : Recently out of date. Pods that have not reported status in a long time are excluded from the output.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1TlsInfo": {
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Required. Enables TLS. If false, neither one-way nor two-way TLS will be enabled."
        },
        "protocols": {
          "description": "The TLS versioins to be used.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "trustStore": {
          "description": "The resource ID of the truststore. References not yet supported.",
          "type": "string"
        },
        "clientAuthEnabled": {
          "description": "Optional. Enables two-way TLS.",
          "type": "boolean"
        },
        "ciphers": {
          "description": "The SSL/TLS cipher suites to be used. Must be one of the cipher suite names listed in: http://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html#ciphersuites",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keyStore": {
          "type": "string",
          "description": "Required if `client_auth_enabled` is true. The resource ID of the keystore. References not yet supported."
        },
        "keyAlias": {
          "type": "string",
          "description": "Required if `client_auth_enabled` is true. The resource ID for the alias containing the private key and cert."
        },
        "ignoreValidationErrors": {
          "type": "boolean",
          "description": "If true, Edge ignores TLS certificate errors. Valid when configuring TLS for target servers and target endpoints, and when configuring virtual hosts that use 2-way TLS. When used with a target endpoint/target server, if the backend system uses SNI and returns a cert with a subject Distinguished Name (DN) that does not match the hostname, there is no way to ignore the error and the connection fails."
        },
        "commonName": {
          "description": "The TLS Common Name of the certificate.",
          "$ref": "GoogleCloudApigeeV1TlsInfoCommonName"
        }
      },
      "description": "TLS configuration information for VirtualHosts and TargetServers.",
      "id": "GoogleCloudApigeeV1TlsInfo",
      "type": "object"
    },
    "GoogleCloudApigeeV1ListInstancesResponse": {
      "id": "GoogleCloudApigeeV1ListInstancesResponse",
      "description": "Response for ListInstances.",
      "type": "object",
      "properties": {
        "instances": {
          "description": "Instances in the specified organization.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Instance"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token that you can include in a ListInstance request to retrieve the next page of content. If omitted, no subsequent pages exist.",
          "type": "string"
        }
      }
    },
    "GoogleCloudApigeeV1ProvisionOrganizationRequest": {
      "id": "GoogleCloudApigeeV1ProvisionOrganizationRequest",
      "type": "object",
      "description": "Request for ProvisionOrganization.",
      "properties": {
        "authorizedNetwork": {
          "description": "Name of the customer project's VPC network. If provided, the network needs to be peered through Service Networking. If none is provided, the organization will have access only to the public internet.",
          "type": "string"
        },
        "runtimeLocation": {
          "type": "string",
          "description": "Cloud Platform location for the runtime instance. Defaults to us-west1-a."
        },
        "analyticsRegion": {
          "type": "string",
          "description": "Primary Cloud Platform region for analytics data storage. For valid values, see [Create an organization](https://docs.apigee.com/hybrid/latest/precog-provision). Defaults to us-west1."
        }
      }
    },
    "GoogleCloudApigeeV1DeveloperApp": {
      "type": "object",
      "properties": {
        "createdAt": {
          "description": "Output only. Time the developer app was created in milliseconds since epoch.",
          "type": "string",
          "readOnly": true,
          "format": "int64"
        },
        "developerId": {
          "description": "ID of the developer.",
          "type": "string"
        },
        "appId": {
          "type": "string",
          "description": "ID of the developer app."
        },
        "apiProducts": {
          "description": "List of API products associated with the developer app.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "lastModifiedAt": {
          "type": "string",
          "description": "Output only. Time the developer app was modified in milliseconds since epoch.",
          "readOnly": true,
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Name of the developer app."
        },
        "attributes": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "description": "List of attributes for the developer app.",
          "type": "array"
        },
        "callbackUrl": {
          "type": "string",
          "description": "Callback URL used by OAuth 2.0 authorization servers to communicate authorization codes back to developer apps."
        },
        "appFamily": {
          "type": "string",
          "description": "Developer app family."
        },
        "keyExpiresIn": {
          "type": "string",
          "format": "int64",
          "description": "Expiration time, in milliseconds, for the consumer key that is generated for the developer app. If not set or left to the default value of `-1`, the API key never expires. The expiration time can't be updated after it is set."
        },
        "credentials": {
          "type": "array",
          "readOnly": true,
          "description": "Output only. Set of credentials for the developer app consisting of the consumer key/secret pairs associated with the API products.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Credential"
          }
        },
        "scopes": {
          "description": "Scopes to apply to the developer app. The specified scopes must already exist for the API product that you associate with the developer app.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "description": "Status of the credential. Valid values include `approved` or `revoked`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1DeveloperApp"
    },
    "GoogleCloudApigeeV1ReferenceConfig": {
      "id": "GoogleCloudApigeeV1ReferenceConfig",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the reference in the following format: `organizations/{org}/environments/{env}/references/{reference}`",
          "type": "string"
        },
        "resourceName": {
          "type": "string",
          "description": "Name of the referenced resource in the following format: `organizations/{org}/environments/{env}/keystores/{keystore}` Only references to keystore resources are supported."
        }
      }
    },
    "GoogleCloudApigeeV1ListCustomReportsResponse": {
      "properties": {
        "qualifier": {
          "items": {
            "$ref": "GoogleCloudApigeeV1CustomReport"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ListCustomReportsResponse",
      "description": "This message encapsulates a list of custom report definitions"
    },
    "GoogleCloudApigeeV1AccessSet": {
      "id": "GoogleCloudApigeeV1AccessSet",
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "description": "Set action. For example, \"Set\" : { \"name\" : \"target.name\", \"success\" : true, \"value\" : \"default\" }"
    },
    "GoogleCloudApigeeV1SyncAuthorization": {
      "type": "object",
      "properties": {
        "identities": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. Array of service accounts to grant access to control plane resources, each specified using the following format: `serviceAccount:` service-account-name. The service-account-name is formatted like an email address. For example: `my-synchronizer-manager-service_account@my_project_id.iam.gserviceaccount.com` You might specify multiple service accounts, for example, if you have multiple environments and wish to assign a unique service account to each one. The service accounts must have **Apigee Synchronizer Manager** role. See also [Create service accounts](https://cloud.google.com/apigee/docs/hybrid/latest/sa-about#create-the-service-accounts)."
        },
        "etag": {
          "description": "Entity tag (ETag) used for optimistic concurrency control as a way to help prevent simultaneous updates from overwriting each other. For example, when you call [getSyncAuthorization](getSyncAuthorization) an ETag is returned in the response. Pass that ETag when calling the [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. **Note**: We strongly recommend that you use the ETag in the read-modify-write cycle to avoid race conditions.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "GoogleCloudApigeeV1SyncAuthorization"
    },
    "GoogleIamV1TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "GoogleIamV1TestIamPermissionsRequest"
    },
    "GoogleCloudApigeeV1Datastore": {
      "id": "GoogleCloudApigeeV1Datastore",
      "description": "The data store defines the connection to export data repository (Cloud Storage, BigQuery), including the credentials used to access the data repository.",
      "type": "object",
      "properties": {
        "createTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Datastore create time, in milliseconds since the epoch of 1970-01-01T00:00:00Z",
          "format": "int64"
        },
        "self": {
          "readOnly": true,
          "description": "Output only. Resource link of Datastore. Example: `/organizations/{org}/analytics/datastores/{uuid}`",
          "type": "string"
        },
        "targetType": {
          "description": "Destination storage type. Supported types `gcs` or `bigquery`.",
          "type": "string"
        },
        "datastoreConfig": {
          "description": "Datastore Configurations.",
          "$ref": "GoogleCloudApigeeV1DatastoreConfig"
        },
        "org": {
          "readOnly": true,
          "description": "Output only. Organization that the datastore belongs to",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Required. Display name in UI"
        },
        "lastUpdateTime": {
          "format": "int64",
          "readOnly": true,
          "type": "string",
          "description": "Output only. Datastore last update time, in milliseconds since the epoch of 1970-01-01T00:00:00Z"
        }
      }
    },
    "GoogleCloudApigeeV1ListInstanceAttachmentsResponse": {
      "description": "Response for ListInstanceAttachments.",
      "id": "GoogleCloudApigeeV1ListInstanceAttachmentsResponse",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1InstanceAttachment"
          },
          "description": "Attachments for the instance."
        },
        "nextPageToken": {
          "description": "Page token that you can include in a ListInstanceAttachments request to retrieve the next page of content. If omitted, no subsequent pages exist.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleIamV1SetIamPolicyRequest": {
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        },
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "GoogleIamV1Policy"
        }
      },
      "type": "object",
      "description": "Request message for `SetIamPolicy` method.",
      "id": "GoogleIamV1SetIamPolicyRequest"
    },
    "GoogleCloudApigeeV1InstanceAttachment": {
      "type": "object",
      "description": "InstanceAttachment represents the installation of an environment onto an instance.",
      "properties": {
        "environment": {
          "description": "ID of the attached environment.",
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "readOnly": true,
          "format": "int64",
          "description": "Output only. Time the attachment was created in milliseconds since epoch."
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. ID of the attachment."
        }
      },
      "id": "GoogleCloudApigeeV1InstanceAttachment"
    },
    "GoogleCloudApigeeV1ReportInstanceStatusResponse": {
      "description": "Placeholder for future enhancements to status reporting protocol",
      "id": "GoogleCloudApigeeV1ReportInstanceStatusResponse",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudApigeeV1ListSharedFlowsResponse": {
      "id": "GoogleCloudApigeeV1ListSharedFlowsResponse",
      "type": "object",
      "properties": {
        "sharedFlows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1SharedFlow"
          }
        }
      }
    },
    "GoogleCloudApigeeV1Query": {
      "id": "GoogleCloudApigeeV1Query",
      "type": "object",
      "properties": {
        "metrics": {
          "type": "array",
          "description": "A list of Metrics.",
          "items": {
            "$ref": "GoogleCloudApigeeV1QueryMetric"
          }
        },
        "filter": {
          "type": "string",
          "description": "Boolean expression that can be used to filter data. Filter expressions can be combined using AND/OR terms and should be fully parenthesized to avoid ambiguity. See Analytics metrics, dimensions, and filters reference https://docs.apigee.com/api-platform/analytics/analytics-reference for more information on the fields available to filter on. For more information on the tokens that you use to build filter expressions, see Filter expression syntax. https://docs.apigee.com/api-platform/analytics/asynch-reports-api#filter-expression-syntax"
        },
        "groupByTimeUnit": {
          "description": "Time unit used to group the result set. Valid values include: second, minute, hour, day, week, or month. If a query includes groupByTimeUnit, then the result is an aggregation based on the specified time unit and the resultant timestamp does not include milliseconds precision. If a query omits groupByTimeUnit, then the resultant timestamp includes milliseconds precision.",
          "type": "string"
        },
        "timeRange": {
          "type": "any",
          "description": "Required. Time range for the query. Can use the following predefined strings to specify the time range: `last60minutes` `last24hours` `last7days` Or, specify the timeRange as a structure describing start and end timestamps in the ISO format: yyyy-mm-ddThh:mm:ssZ. Example: \"timeRange\": { \"start\": \"2018-07-29T00:13:00Z\", \"end\": \"2018-08-01T00:18:00Z\" }"
        },
        "csvDelimiter": {
          "description": "Delimiter used in the CSV file, if `outputFormat` is set to `csv`. Defaults to the `,` (comma) character. Supported delimiter characters include comma (`,`), pipe (`|`), and tab (`\\t`).",
          "type": "string"
        },
        "limit": {
          "format": "int32",
          "description": "Maximum number of rows that can be returned in the result.",
          "type": "integer"
        },
        "outputFormat": {
          "description": "Valid values include: `csv` or `json`. Defaults to `json`. Note: Configure the delimiter for CSV output using the csvDelimiter property.",
          "type": "string"
        },
        "name": {
          "description": "Asynchronous Query Name.",
          "type": "string"
        },
        "dimensions": {
          "type": "array",
          "description": "A list of dimensions. https://docs.apigee.com/api-platform/analytics/analytics-reference#dimensions",
          "items": {
            "type": "string"
          }
        },
        "reportDefinitionId": {
          "type": "string",
          "description": "Asynchronous Report ID."
        }
      }
    },
    "GoogleCloudApigeeV1ServiceIssuersMapping": {
      "properties": {
        "emailIds": {
          "type": "array",
          "description": "List of trusted issuer email ids.",
          "items": {
            "type": "string"
          }
        },
        "service": {
          "type": "string",
          "description": "String indicating the Apigee service name."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ServiceIssuersMapping"
    },
    "GoogleCloudApigeeV1AccessGet": {
      "description": "Get action. For example, \"Get\" : { \"name\" : \"target.name\", \"value\" : \"default\" }",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1AccessGet",
      "type": "object"
    },
    "GoogleCloudApigeeV1QueryMetadata": {
      "type": "object",
      "properties": {
        "startTimestamp": {
          "type": "string",
          "description": "Start timestamp of the query range."
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Metrics of the AsyncQuery. Example: [\"name:message_count,func:sum,alias:sum_message_count\"]"
        },
        "dimensions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Dimensions of the AsyncQuery."
        },
        "endTimestamp": {
          "type": "string",
          "description": "End timestamp of the query range."
        },
        "timeUnit": {
          "description": "Query GroupBy time unit.",
          "type": "string"
        },
        "outputFormat": {
          "type": "string",
          "description": "Output format."
        }
      },
      "id": "GoogleCloudApigeeV1QueryMetadata"
    },
    "GoogleCloudApigeeV1ListExportsResponse": {
      "description": "The response for ListExports",
      "id": "GoogleCloudApigeeV1ListExportsResponse",
      "properties": {
        "exports": {
          "type": "array",
          "description": "Details of the export jobs.",
          "items": {
            "$ref": "GoogleCloudApigeeV1Export"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ApiCategoryData": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the category."
        },
        "updateTime": {
          "type": "string",
          "description": "Time the category was last modified in milliseconds since epoch.",
          "format": "int64"
        },
        "id": {
          "description": "ID of the category (a UUID).",
          "type": "string"
        },
        "siteId": {
          "type": "string",
          "description": "Name of the portal."
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1ApiCategoryData",
      "description": "the Api category resource."
    },
    "GoogleIamV1AuditLogConfig": {
      "id": "GoogleIamV1AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudApigeeV1ApiProxyRevision": {
      "id": "GoogleCloudApigeeV1ApiProxyRevision",
      "type": "object",
      "properties": {
        "sharedFlows": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of the shared flows included in the API proxy revision."
        },
        "basepaths": {
          "description": "Base URL of the API proxy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targets": {
          "items": {
            "type": "string"
          },
          "description": "List of the targets included in the API proxy revision.",
          "type": "array"
        },
        "resources": {
          "type": "array",
          "description": "List of the resources included in the API proxy revision formatted as \"{type}://{name}\".",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "Name of the API proxy.",
          "type": "string"
        },
        "entityMetaDataAsProperties": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Metadata describing the API proxy revision as a key-value map."
        },
        "proxyEndpoints": {
          "description": "List of ProxyEndpoints in the `/proxies` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "configurationVersion": {
          "$ref": "GoogleCloudApigeeV1ConfigVersion",
          "description": "Version of the API proxy configuration schema to which the API proxy conforms. Currently, the only supported value is 4.0 (`majorVersion.minorVersion`). This setting may be used in the future to track the evolution of the API proxy format."
        },
        "teams": {
          "items": {
            "type": "string"
          },
          "description": "List of the teams included in the API proxy revision.",
          "type": "array"
        },
        "description": {
          "description": "Description of the API proxy revision.",
          "type": "string"
        },
        "revision": {
          "description": "API proxy revision.",
          "type": "string"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "int64",
          "description": "Time that the API proxy revision was last modified in milliseconds since epoch."
        },
        "proxies": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of proxy names included in the API proxy revision."
        },
        "createdAt": {
          "description": "Time that the API proxy revision was created in milliseconds since epoch.",
          "format": "int64",
          "type": "string"
        },
        "policies": {
          "description": "List of policy names included in the API proxy revision..",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetEndpoints": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of TargetEndpoints in the `/targets` directory of the API proxy. Typically, this element is included only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
        },
        "displayName": {
          "type": "string",
          "description": "Human-readable name of the API proxy."
        },
        "type": {
          "description": "Type. Set to `Application`. Maintained for compatibility with the Apigee Edge API.",
          "type": "string"
        },
        "spec": {
          "description": "OpenAPI Specification that is associated with the API proxy. The value is set to a URL or to a path in the specification store.",
          "type": "string"
        },
        "contextInfo": {
          "description": "Revision number, app name, and organization for the API proxy.",
          "type": "string"
        },
        "targetServers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of TargetServers referenced in any TargetEndpoint in the API proxy. Typically, you will see this element only when the API proxy was created using the Edge UI. This is a 'manifest' setting designed to provide visibility into the contents of the API proxy."
        },
        "resourceFiles": {
          "description": "List of resource files included in the API proxy revision.",
          "$ref": "GoogleCloudApigeeV1ResourceFiles"
        }
      },
      "description": "API proxy revision."
    },
    "GoogleCloudApigeeV1OrganizationProjectMapping": {
      "properties": {
        "projectIds": {
          "type": "array",
          "description": "List of GCP projects associated with the Apigee organization.",
          "items": {
            "type": "string"
          }
        },
        "organization": {
          "description": "Name of the Apigee organization.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudApigeeV1OrganizationProjectMapping"
    },
    "GoogleCloudApigeeV1ListApiCategoriesResponse": {
      "properties": {
        "message": {
          "type": "string",
          "description": "Description of the operation."
        },
        "data": {
          "description": "Details of categories.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1ApiCategoryData"
          }
        },
        "status": {
          "type": "string",
          "description": "Status of the operation."
        },
        "errorCode": {
          "type": "string",
          "description": "ID that can be used to find errors in the log files."
        },
        "requestId": {
          "description": "ID that can be used to find request details in the log files.",
          "type": "string"
        }
      },
      "description": "the response for ListApiCategoriesRequest.",
      "id": "GoogleCloudApigeeV1ListApiCategoriesResponse",
      "type": "object"
    },
    "GoogleCloudApigeeV1RevisionStatus": {
      "properties": {
        "jsonSpec": {
          "type": "string",
          "description": "The json content of the resource revision."
        },
        "revisionId": {
          "type": "string",
          "description": "The revision of the resource."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudApigeeV1UpdateError"
          },
          "description": "Errors reported when attempting to load this revision."
        },
        "replicas": {
          "format": "int32",
          "type": "integer",
          "description": "The number of replicas that have successfully loaded this revision."
        }
      },
      "description": "The status of a specific resource revision.",
      "id": "GoogleCloudApigeeV1RevisionStatus",
      "type": "object"
    },
    "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute": {
      "type": "object",
      "description": "A route deployed in the ingress routing table.",
      "properties": {
        "basepath": {
          "description": "The basepath in the routing table.",
          "type": "string"
        },
        "envgroup": {
          "type": "string",
          "description": "The envgroup where this route is installed."
        },
        "percentage": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of ingress replicas reporting this route."
        },
        "environment": {
          "description": "The destination environment. This will be empty if the route is not yet reported.",
          "type": "string"
        }
      },
      "id": "GoogleCloudApigeeV1InstanceDeploymentStatusDeployedRoute"
    },
    "GoogleCloudApigeeV1ApiProxy": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the API proxy.",
          "type": "string"
        },
        "revision": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of revisons defined for the API proxy."
        },
        "latestRevisionId": {
          "description": "The id of the most recently created revision for this api proxy.",
          "type": "string"
        },
        "metaData": {
          "$ref": "GoogleCloudApigeeV1EntityMetadata",
          "description": "Metadata describing the API proxy."
        }
      },
      "description": "Metadata describing the API proxy",
      "id": "GoogleCloudApigeeV1ApiProxy"
    },
    "GoogleCloudApigeeV1OperationMetadata": {
      "description": "Metadata describing an Operation.",
      "type": "object",
      "id": "GoogleCloudApigeeV1OperationMetadata",
      "properties": {
        "operationType": {
          "enum": [
            "OPERATION_TYPE_UNSPECIFIED",
            "INSERT",
            "DELETE",
            "UPDATE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "targetResourceName": {
          "type": "string",
          "description": "Name of the resource for which the operation is operating on."
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "NOT_STARTED",
            "IN_PROGRESS",
            "FINISHED"
          ]
        }
      }
    },
    "GoogleCloudApigeeV1DebugMask": {
      "type": "object",
      "properties": {
        "requestXPaths": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of XPaths that specify the XML elements to be filtered from XML request message payloads."
        },
        "faultJSONPaths": {
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON payloads in error flows.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespaces": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of namespaces to URIs.",
          "type": "object"
        },
        "faultXPaths": {
          "items": {
            "type": "string"
          },
          "description": "List of XPaths that specify the XML elements to be filtered from XML payloads in error flows.",
          "type": "array"
        },
        "responseJSONPaths": {
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON response message payloads.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Name of the debug mask.",
          "type": "string"
        },
        "responseXPaths": {
          "items": {
            "type": "string"
          },
          "description": "List of XPaths that specify the XML elements to be filtered from XML response message payloads.",
          "type": "array"
        },
        "variables": {
          "description": "List of variables that should be masked from the debug output.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "requestJSONPaths": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of JSON paths that specify the JSON elements to be filtered from JSON request message payloads."
        }
      },
      "id": "GoogleCloudApigeeV1DebugMask"
    },
    "GoogleCloudApigeeV1Attributes": {
      "id": "GoogleCloudApigeeV1Attributes",
      "type": "object",
      "properties": {
        "attribute": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Attribute"
          },
          "description": "List of attributes.",
          "type": "array"
        }
      }
    },
    "GoogleCloudApigeeV1DebugSessionTransaction": {
      "type": "object",
      "description": "A transaction contains all of the debug information of the entire message flow of an API call processed by the runtime plane. The information is collected and recorded at critical points of the message flow in the runtime apiproxy.",
      "properties": {
        "completed": {
          "description": "Flag indicating whether a transaction is completed or not",
          "type": "boolean"
        },
        "point": {
          "items": {
            "$ref": "GoogleCloudApigeeV1Point"
          },
          "type": "array",
          "description": "List of debug data collected by runtime plane at various defined points in the flow."
        }
      },
      "id": "GoogleCloudApigeeV1DebugSessionTransaction"
    }
  },
  "resources": {
    "organizations": {
      "methods": {
        "update": {
          "id": "apigee.organizations.update",
          "request": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "response": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "name": {
              "location": "path",
              "description": "Required. Apigee organization name in the following format: `organizations/{org}`",
              "pattern": "^organizations/[^/]+$",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "PUT",
          "description": "Updates the properties for an Apigee organization. No other fields in the organization profile will be updated.",
          "path": "v1/{+name}",
          "flatPath": "v1/organizations/{organizationsId}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "setSyncAuthorization": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "request": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "id": "apigee.organizations.setSyncAuthorization",
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^organizations/[^/]+$",
              "description": "Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "v1/organizations/{organizationsId}:setSyncAuthorization",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}:setSyncAuthorization",
          "response": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "description": "Sets the permissions required to allow the Synchronizer to download environment data from the control plane. You must call this API to enable proper functioning of hybrid. Pass the ETag when calling `setSyncAuthorization` to ensure that you are updating the correct version. To get an ETag, call [getSyncAuthorization](getSyncAuthorization). If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only."
        },
        "create": {
          "parameters": {
            "parent": {
              "location": "query",
              "description": "Required. Name of the GCP project in which to associate the Apigee organization. Pass the information as a query parameter using the following structure in your request: `projects/`",
              "type": "string"
            }
          },
          "path": "v1/organizations",
          "request": {
            "$ref": "GoogleCloudApigeeV1Organization"
          },
          "id": "apigee.organizations.create",
          "flatPath": "v1/organizations",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameterOrder": [],
          "description": "Creates an Apigee organization. See [Create an Apigee organization](https://cloud.google.com/apigee/docs/api-platform/get-started/create-org).",
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "httpMethod": "POST"
        },
        "list": {
          "path": "v1/{+parent}",
          "parameterOrder": [
            "parent"
          ],
          "description": "Lists the Apigee organizations and associated GCP projects that you have permission to access. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).",
          "response": {
            "$ref": "GoogleCloudApigeeV1ListOrganizationsResponse"
          },
          "flatPath": "v1/organizations",
          "parameters": {
            "parent": {
              "location": "path",
              "pattern": "^organizations$",
              "description": "Required. Use the following structure in your request: `organizations`",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "apigee.organizations.list",
          "httpMethod": "GET"
        },
        "getSyncAuthorization": {
          "path": "v1/{+name}:getSyncAuthorization",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists the service accounts with the permissions required to allow the Synchronizer to download environment data from the control plane. An ETag is returned in the response to `getSyncAuthorization`. Pass that ETag when calling [setSyncAuthorization](setSyncAuthorization) to ensure that you are updating the correct version. If you don't pass the ETag in the call to `setSyncAuthorization`, then the existing authorization is overwritten indiscriminately. For more information, see [Configure the Synchronizer](https://cloud.google.com/apigee/docs/hybrid/latest/synchronizer-access). **Note**: Available to Apigee hybrid only.",
          "id": "apigee.organizations.getSyncAuthorization",
          "response": {
            "$ref": "GoogleCloudApigeeV1SyncAuthorization"
          },
          "flatPath": "v1/organizations/{organizationsId}:getSyncAuthorization",
          "parameters": {
            "name": {
              "description": "Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`",
              "pattern": "^organizations/[^/]+$",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "request": {
            "$ref": "GoogleCloudApigeeV1GetSyncAuthorizationRequest"
          },
          "parameterOrder": [
            "name"
          ]
        },
        "get": {
          "id": "apigee.organizations.get",
          "httpMethod": "GET",
          "flatPath": "v1/organizations/{organizationsId}",
          "parameterOrder": [
            "name"
          ],
          "description": "Gets the profile for an Apigee organization. See [Understanding organizations](https://cloud.google.com/apigee/docs/api-platform/fundamentals/organization-structure).",
          "parameters": {
            "name": {
              "description": "Required. Apigee organization name in the following format: `organizations/{org}`",
              "pattern": "^organizations/[^/]+$",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+name}",
          "response": {
            "$ref": "GoogleCloudApigeeV1Organization"
          }
        },
        "getDeployedIngressConfig": {
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^organizations/[^/]+/deployedIngressConfig$",
              "description": "Required. Name of the deployed configuration for the organization in the following format: 'organizations/{org}/deployedIngressConfig'.",
              "location": "path",
              "type": "string"
            },
            "view": {
              "type": "string",
              "description": "When set to FULL, additional details about the specific deployments receiving traffic will be included in the IngressConfig response's RoutingRules.",
              "location": "query",
              "enum": [
                "INGRESS_CONFIG_VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "The default/unset value. The API will default to the BASIC view.",
                "Include all ingress config data necessary for the runtime to configure ingress, but no more. Routing rules will include only basepath and destination environment. This the default value.",
                "Include all ingress config data, including internal debug info for each routing rule such as the proxy claiming a particular basepath and when the routing rule first appeared in the env group."
              ]
            }
          },
          "response": {
            "$ref": "GoogleCloudApigeeV1IngressConfig"
          },
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1/organizations/{organizationsId}/deployedIngressConfig",
          "path": "v1/{+name}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "apigee.organizations.getDeployedIngressConfig",
          "description": "Gets the deployed ingress configuration for an organization."
        }
      },
      "resources": {
        "apis": {
          "resources": {
            "keyvaluemaps": {
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "description": "Delete a key value map in an api proxy.",
                  "id": "apigee.organizations.apis.keyvaluemaps.delete",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/keyvaluemaps/{keyvaluemapsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/apis/[^/]+/keyvaluemaps/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the key value map. Must be of the form `organizations/{organization}/apis/{api}/keyvaluemaps/{keyvaluemap}`.",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}"
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a key value map in an api proxy.",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the environment in which to create the key value map. Must be of the form `organizations/{organization}/apis/{api}`.",
                      "pattern": "^organizations/[^/]+/apis/[^/]+$"
                    }
                  },
                  "id": "apigee.organizations.apis.keyvaluemaps.create",
                  "path": "v1/{+parent}/keyvaluemaps",
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/keyvaluemaps",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "request": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  }
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "id": "apigee.organizations.apis.deployments.list",
                  "path": "v1/{+parent}/deployments",
                  "httpMethod": "GET",
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists all deployments of an API proxy.",
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the API proxy for which to return deployment information in the following format: `organizations/{org}/apis/{api}`",
                      "pattern": "^organizations/[^/]+/apis/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  }
                }
              }
            },
            "revisions": {
              "methods": {
                "updateApiProxyRevision": {
                  "id": "apigee.organizations.apis.revisions.updateApiProxyRevision",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
                  },
                  "path": "v1/{+name}",
                  "description": "Updates an existing API proxy revision by uploading the API proxy configuration bundle as a zip file from your local machine. You can update only API proxy revisions that have never been deployed. After deployment, an API proxy revision becomes immutable, even if it is undeployed. Set the `Content-Type` header to either `multipart/form-data` or `application/octet-stream`.",
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. API proxy revision to update in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`"
                    },
                    "validate": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets an API proxy revision. To download the API proxy configuration bundle for the specified revision as a zip file, do the following: * Set the `format` query parameter to `bundle`. * Set the `Accept` header to `application/zip`. If you are using curl, specify `-o filename.zip` to save the output to a file; otherwise, it displays to `stdout`. Then, develop the API proxy configuration locally and upload the updated API proxy configuration revision, as described in [updateApiProxyRevision](updateApiProxyRevision).",
                  "id": "apigee.organizations.apis.revisions.get",
                  "parameters": {
                    "format": {
                      "location": "query",
                      "type": "string",
                      "description": "Format used when downloading the API proxy configuration revision. Set to `bundle` to download the API proxy configuration revision as a zip file."
                    },
                    "name": {
                      "description": "Required. API proxy revision in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}",
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "apigee.organizations.apis.revisions.delete",
                  "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$",
                      "description": "Required. API proxy revision in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an API proxy revision and all policies, resources, endpoints, and revisions associated with it. The API proxy revision must be undeployed before you can delete it.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
                  }
                }
              },
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.apis.revisions.deployments.list",
                      "description": "Lists all deployments of an API proxy revision.",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/apis/{api}/revisions/{rev}`.",
                          "pattern": "^organizations/[^/]+/apis/[^/]+/revisions/[^/]+$"
                        }
                      },
                      "path": "v1/{+parent}/deployments"
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "httpMethod": "GET",
              "id": "apigee.organizations.apis.get",
              "description": "Gets an API proxy including a list of existing revisions.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxy"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^organizations/[^/]+/apis/[^/]+$",
                  "description": "Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`"
                }
              }
            },
            "create": {
              "flatPath": "v1/organizations/{organizationsId}/apis",
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxyRevision"
              },
              "description": "Creates an API proxy. The API proxy created will not be accessible at runtime until it is deployed to an environment. Create a new API proxy by setting the `name` query parameter to the name of the API proxy. Import an API proxy configuration bundle stored in zip format on your local machine to your organization by doing the following: * Set the `name` query parameter to the name of the API proxy. * Set the `action` query parameter to `import`. * Set the `Content-Type` header to `multipart/form-data`. * Pass as a file the name of API proxy configuration bundle stored in zip format on your local machine using the `file` form field. **Note**: To validate the API proxy configuration bundle only without importing it, set the `action` query parameter to `validate`. When importing an API proxy configuration bundle, if the API proxy does not exist, it will be created. If the API proxy exists, then a new revision is created. Invalid API proxy configurations are rejected, and a list of validation errors is returned to the client.",
              "request": {
                "$ref": "GoogleApiHttpBody"
              },
              "id": "apigee.organizations.apis.create",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. Name of the organization in the following format: `organizations/{org}`",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+$"
                },
                "name": {
                  "description": "Name of the API proxy. Restrict the characters used to: A-Za-z0-9._-",
                  "location": "query",
                  "type": "string"
                },
                "action": {
                  "location": "query",
                  "type": "string",
                  "description": "Action to perform when importing an API proxy configuration bundle. Set this parameter to one of the following values: * `import` to import the API proxy configuration bundle. * `validate` to validate the API proxy configuration bundle without importing it."
                },
                "validate": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Ignored. All uploads are validated regardless of the value of this field. Maintained for compatibility with Apigee Edge API."
                }
              },
              "path": "v1/{+parent}/apis",
              "httpMethod": "POST"
            },
            "delete": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProxy"
              },
              "httpMethod": "DELETE",
              "flatPath": "v1/organizations/{organizationsId}/apis/{apisId}",
              "id": "apigee.organizations.apis.delete",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes an API proxy and all associated endpoints, policies, resources, and revisions. The API proxy must be undeployed before you can delete it.",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/apis/[^/]+$",
                  "description": "Required. Name of the API proxy in the following format: `organizations/{org}/apis/{api}`",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              }
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apis",
              "description": "Lists the names of all API proxies in an organization. The names returned correspond to the names defined in the configuration files for each API proxy.",
              "parameters": {
                "includeMetaData": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Flag that specifies whether to include API proxy metadata in the response."
                },
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. Name of the organization in the following format: `organizations/{org}`",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "includeRevisions": {
                  "type": "boolean",
                  "description": "Flag that specifies whether to include a list of revisions in the response.",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListApiProxiesResponse"
              },
              "id": "apigee.organizations.apis.list",
              "path": "v1/{+parent}/apis",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "sites": {
          "resources": {
            "apicategories": {
              "methods": {
                "get": {
                  "id": "apigee.organizations.sites.apicategories.get",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets a category on the portal.",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiCategory"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories/{apicategoriesId}"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists the categories on the portal.",
                  "path": "v1/{+parent}/apicategories",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListApiCategoriesResponse"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/sites/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`"
                    }
                  },
                  "id": "apigee.organizations.sites.apicategories.list"
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudApigeeV1ApiCategoryData"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.sites.apicategories.patch",
                  "httpMethod": "PATCH",
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories/{apicategoriesId}",
                  "description": "Updates a category on the portal.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiCategory"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`",
                      "pattern": "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$"
                    }
                  }
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiCategory"
                  },
                  "httpMethod": "POST",
                  "id": "apigee.organizations.sites.apicategories.create",
                  "path": "v1/{+parent}/apicategories",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1ApiCategoryData"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new category on the portal.",
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/sites/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the portal. Use the following structure in your request: `organizations/{org}/sites/{site}`",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "delete": {
                  "id": "apigee.organizations.sites.apicategories.delete",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/sites/[^/]+/apicategories/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the category. Use the following structure in your request: `organizations/{org}/sites/{site}/apicategories/{apicategory}`",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "description": "Deletes a category from the portal.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ApiResponseWrapper"
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/sites/{sitesId}/apicategories/{apicategoriesId}"
                }
              }
            }
          }
        },
        "analytics": {
          "resources": {
            "datastores": {
              "methods": {
                "test": {
                  "description": "Test if Datastore configuration is correct. This includes checking if credentials provided by customer have required permissions in target destination storage",
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores:test",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/analytics/datastores:test",
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+$",
                      "description": "Required. The parent organization name Must be of the form `organizations/{org}`",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "apigee.organizations.analytics.datastores.test",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TestDatastoreResponse"
                  }
                },
                "update": {
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "httpMethod": "PUT",
                  "description": "Update a Datastore",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/analytics/datastores/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name of datastore to be updated. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores/{datastoresId}",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "id": "apigee.organizations.analytics.datastores.update",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List Datastores",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/analytics/datastores",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^organizations/[^/]+$",
                      "description": "Required. The parent organization name. Must be of the form `organizations/{org}`."
                    },
                    "targetType": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. TargetType is used to fetch all Datastores that match the type"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDatastoresResponse"
                  },
                  "id": "apigee.organizations.analytics.datastores.list",
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores"
                },
                "delete": {
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores/{datastoresId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "description": "Delete a Datastore from an org.",
                  "httpMethod": "DELETE",
                  "id": "apigee.organizations.analytics.datastores.delete",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^organizations/[^/]+/analytics/datastores/[^/]+$",
                      "description": "Required. Resource name of the Datastore to be deleted. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                },
                "create": {
                  "id": "apigee.organizations.analytics.datastores.create",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent organization name. Must be of the form `organizations/{org}`.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^organizations/[^/]+$"
                    }
                  },
                  "description": "Create a Datastore for an org",
                  "path": "v1/{+parent}/analytics/datastores",
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "httpMethod": "POST"
                },
                "get": {
                  "description": "Get a Datastore",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/analytics/datastores/{datastoresId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Resource name of the Datastore to be get. Must be of the form `organizations/{org}/analytics/datastores/{datastoreId}`",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/analytics/datastores/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Datastore"
                  },
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.analytics.datastores.get",
                  "httpMethod": "GET"
                }
              }
            }
          }
        },
        "operations": {
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/operations",
              "id": "apigee.organizations.operations.list",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "path": "v1/{+name}/operations",
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The standard list filter."
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The standard list page token."
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "The name of the operation's parent resource.",
                  "required": true,
                  "pattern": "^organizations/[^/]+$"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The standard list page size."
                }
              }
            },
            "get": {
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "flatPath": "v1/organizations/{organizationsId}/operations/{operationsId}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.operations.get",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "description": "The name of the operation resource.",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/operations/[^/]+$",
                  "type": "string"
                }
              },
              "path": "v1/{+name}"
            }
          }
        },
        "deployments": {
          "methods": {
            "list": {
              "path": "v1/{+parent}/deployments",
              "flatPath": "v1/organizations/{organizationsId}/deployments",
              "description": "Lists all deployments of API proxies or shared flows.",
              "httpMethod": "GET",
              "id": "apigee.organizations.deployments.list",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
              },
              "parameters": {
                "parent": {
                  "description": "Required. Name of the organization for which to return deployment information in the following format: `organizations/{org}`",
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "required": true,
                  "location": "path"
                },
                "sharedFlows": {
                  "description": "Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true` to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to `false`.",
                  "location": "query",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "apps": {
          "methods": {
            "list": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ListAppsResponse"
              },
              "flatPath": "v1/organizations/{organizationsId}/apps",
              "description": "Lists IDs of apps within an organization that have the specified app status (approved or revoked) or are of the specified app type (developer or company).",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "apigee.organizations.apps.list",
              "path": "v1/{+parent}/apps",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "expand": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Optional. Flag that specifies whether to return an expanded list of apps for the organization. Defaults to `false`."
                },
                "startKey": {
                  "type": "string",
                  "description": "Returns the list of apps starting from the specified app ID.",
                  "location": "query"
                },
                "ids": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Comma-separated list of app IDs on which to filter."
                },
                "keyStatus": {
                  "type": "string",
                  "description": "Optional. Key status of the app. Valid values include `approved` or `revoked`. Defaults to `approved`.",
                  "location": "query"
                },
                "apiProduct": {
                  "description": "API product.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "description": "Required. Resource path of the parent in the following format: `organizations/{org}`",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$"
                },
                "status": {
                  "location": "query",
                  "description": "Optional. Filter by the status of the app. Valid values are `approved` or `revoked`. Defaults to `approved`.",
                  "type": "string"
                },
                "includeCred": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Optional. Flag that specifies whether to include credentials in the response."
                },
                "rows": {
                  "type": "string",
                  "format": "int64",
                  "location": "query",
                  "description": "Optional. Maximum number of app IDs to return. Defaults to 10000."
                },
                "apptype": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. Filter by the type of the app. Valid values are `company` or `developer`. Defaults to `developer`."
                }
              }
            },
            "get": {
              "id": "apigee.organizations.apps.get",
              "description": "Gets the app profile for the specified app ID.",
              "response": {
                "$ref": "GoogleCloudApigeeV1App"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. App ID in the following format: `organizations/{org}/apps/{app}`",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apps/[^/]+$"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/apps/{appsId}",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "developers": {
          "methods": {
            "attributes": {
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes",
              "id": "apigee.organizations.developers.attributes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates developer attributes. This API replaces the existing attributes with those specified in the request. Add new attributes, and include or exclude any existing attributes that you want to retain or remove, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
              "path": "v1/{+parent}/attributes",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. Email address of the developer for which attributes are being updated in the following format: `organizations/{org}/developers/{developer_email}`"
                }
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              }
            },
            "get": {
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "action": {
                  "type": "string",
                  "location": "query",
                  "description": "Status of the developer. Valid values are `active` or `inactive`."
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "required": true
                }
              },
              "description": "Returns the developer details, including the developer's name, email address, apps, and other information. **Note**: The response includes only the first 100 developer apps.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "apigee.organizations.developers.get",
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}"
            },
            "create": {
              "request": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+parent}/developers",
              "httpMethod": "POST",
              "id": "apigee.organizations.developers.create",
              "description": "Creates a developer. Once created, the developer can register an app and obtain an API key. At creation time, a developer is set as `active`. To change the developer status, use the SetDeveloperStatus API.",
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^organizations/[^/]+$",
                  "required": true,
                  "description": "Required. Name of the Apigee organization in which the developer is created. Use the following structure in your request: `organizations/{org}`.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/organizations/{organizationsId}/developers"
            },
            "update": {
              "parameters": {
                "name": {
                  "description": "Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+/developers/[^/]+$"
                }
              },
              "id": "apigee.organizations.developers.update",
              "description": "Updates a developer. This API replaces the existing developer details with those specified in the request. Include or exclude any existing details that you want to retain or delete, respectively. The custom attribute limit is 18. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PUT",
              "request": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              }
            },
            "delete": {
              "id": "apigee.organizations.developers.delete",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                  "pattern": "^organizations/[^/]+/developers/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1Developer"
              },
              "path": "v1/{+name}",
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a developer. All apps and API keys associated with the developer are also removed. **Warning**: This API will permanently delete the developer and related artifacts. To avoid permanently deleting developers and their artifacts, set the developer status to `inactive` using the SetDeveloperStatus API. **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its associated resources, such as apps and API keys, may take anywhere from a few seconds to a few minutes to be deleted.",
              "httpMethod": "DELETE"
            },
            "setDeveloperStatus": {
              "parameters": {
                "action": {
                  "type": "string",
                  "location": "query",
                  "description": "Status of the developer. Valid values are `active` and `inactive`."
                },
                "name": {
                  "location": "path",
                  "description": "Required. Email address of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/developers/[^/]+$"
                }
              },
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}",
              "description": "Sets the status of a developer. Valid values are `active` or `inactive`. A developer is `active` by default. If you set a developer's status to `inactive`, the API keys assigned to the developer apps are no longer valid even though the API keys are set to `approved`. Inactive developers can still sign in to the developer portal and create apps; however, any new API keys generated during app creation won't work. If successful, the API call returns the following HTTP status code: `204 No Content`",
              "id": "apigee.organizations.developers.setDeveloperStatus",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "httpMethod": "POST"
            },
            "list": {
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListOfDevelopersResponse"
              },
              "parameters": {
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "required": true,
                  "description": "Required. Name of the Apigee organization. Use the following structure in your request: `organizations/{org}`.",
                  "type": "string",
                  "location": "path"
                },
                "count": {
                  "description": "Optional. Number of developers to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.",
                  "format": "int64",
                  "location": "query",
                  "type": "string"
                },
                "ids": {
                  "description": "Optional. List of IDs to include, separated by commas.",
                  "type": "string",
                  "location": "query"
                },
                "startKey": {
                  "location": "query",
                  "type": "string",
                  "description": "**Note**: Must be used in conjunction with the `count` parameter. Email address of the developer from which to start displaying the list of developers. For example, if the an unfiltered list returns: ``` westley@example.com fezzik@example.com buttercup@example.com ``` and your `startKey` is `fezzik@example.com`, the list returned will be ``` fezzik@example.com buttercup@example.com ```"
                },
                "includeCompany": {
                  "location": "query",
                  "description": "Flag that specifies whether to include company details in the response.",
                  "type": "boolean"
                },
                "expand": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters."
                }
              },
              "path": "v1/{+parent}/developers",
              "description": "Lists all developers in an organization by email address. By default, the response does not include company developers. Set the `includeCompany` query parameter to `true` to include company developers. **Note**: A maximum of 1000 developers are returned in the response. You paginate the list of developers returned using the `startKey` and `count` query parameters.",
              "flatPath": "v1/organizations/{organizationsId}/developers",
              "id": "apigee.organizations.developers.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ]
            }
          },
          "resources": {
            "attributes": {
              "methods": {
                "get": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}",
                  "id": "apigee.organizations.developers.attributes.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "description": "Returns the value of the specified developer attribute.",
                  "path": "v1/{+name}"
                },
                "updateDeveloperAttribute": {
                  "description": "Updates a developer attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}",
                  "id": "apigee.organizations.developers.attributes.updateDeveloperAttribute",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes/{attributesId}",
                  "id": "apigee.organizations.developers.attributes.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Deletes a developer attribute.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the developer attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/attributes/{attribute}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/attributes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "apigee.organizations.developers.attributes.list",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/attributes",
                  "description": "Returns a list of all developer attributes.",
                  "parameters": {
                    "parent": {
                      "description": "Required. Email address of the developer for which attributes are being listed in the following format: `organizations/{org}/developers/{developer_email}`",
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/attributes"
                }
              }
            },
            "apps": {
              "resources": {
                "keys": {
                  "resources": {
                    "apiproducts": {
                      "methods": {
                        "updateDeveloperAppKeyApiProduct": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}/apiproducts/{apiproductsId}",
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST",
                          "id": "apigee.organizations.developers.apps.keys.apiproducts.updateDeveloperAppKeyApiProduct",
                          "path": "v1/{+name}",
                          "parameters": {
                            "action": {
                              "type": "string",
                              "location": "query",
                              "description": "Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively."
                            },
                            "name": {
                              "description": "Name of the API product in the developer app key in the following format: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`",
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            }
                          },
                          "description": "Approve or revoke an app's consumer key. After a consumer key is approved, the app can use it to access APIs. A consumer key that is revoked or pending cannot be used to access an API. Any access tokens associated with a revoked consumer key will remain active. However, Apigee hybrid checks the status of the consumer key and if set to `revoked` will not allow access to the API.",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          }
                        },
                        "delete": {
                          "httpMethod": "DELETE",
                          "description": "Removes an API product from an app's consumer key. After the API product is removed, the app cannot access the API resources defined in that API product. **Note**: The consumer key is not removed, only its association with the API product.",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "id": "apigee.organizations.developers.apps.keys.apiproducts.delete",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}/apiproducts/{apiproductsId}",
                          "path": "v1/{+name}",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "required": true,
                              "location": "path",
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+/apiproducts/[^/]+$",
                              "description": "Name of the API product in the developer app key in the following format: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}/apiproducts/{apiproduct}`"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ]
                        }
                      }
                    },
                    "create": {
                      "methods": {
                        "create": {
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "description": "Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`",
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$"
                            }
                          },
                          "path": "v1/{+parent}/keys/create",
                          "request": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "id": "apigee.organizations.developers.apps.keys.create.create",
                          "description": "Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee hybrid from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/create"
                        }
                      }
                    }
                  },
                  "methods": {
                    "get": {
                      "description": "Returns details for a consumer key for a developer app, including the key and secret value, associated API products, and other information.",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "path": "v1/{+name}",
                      "httpMethod": "GET",
                      "id": "apigee.organizations.developers.apps.keys.get",
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "description": "Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "location": "path",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "description": "Deletes an app's consumer key and removes all API products associated with the app. After the consumer key is deleted, it cannot be used to access any APIs. **Note**: After you delete a consumer key, you may want to: 1. Create a new consumer key and secret for the developer app using the CreateDeveloperAppKey API, and subsequently add an API product to the key using the UpdateDeveloperAppKey API. 2. Delete the developer app, if it is no longer required.",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "httpMethod": "DELETE",
                      "id": "apigee.organizations.developers.apps.keys.delete"
                    },
                    "updateDeveloperAppKey": {
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "description": "Adds an API product to a developer app key, enabling the app that holds the key to access the API resources bundled in the API product. In addition, you can add attributes to a developer app key. This API replaces the existing attributes with those specified in the request. Include or exclude any existing attributes that you want to retain or delete, respectively. You can use the same key to access all API products associated with the app.",
                      "parameters": {
                        "action": {
                          "type": "string",
                          "location": "query",
                          "description": "Approve or revoke the consumer key by setting this value to `approve` or `revoke`, respectively."
                        },
                        "name": {
                          "required": true,
                          "description": "Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "id": "apigee.organizations.developers.apps.keys.updateDeveloperAppKey",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "replaceDeveloperAppKey": {
                      "parameters": {
                        "name": {
                          "description": "Name of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/keys/{key}`",
                          "type": "string",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/keys/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys/{keysId}",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "description": "Updates the scope of an app. This API replaces the existing scopes with those specified in the request. Include or exclude any existing scopes that you want to retain or delete, respectively. The specified scopes must already be defined for the API products associated with the app. This API sets the `scopes` element under the `apiProducts` element in the attributes of the app.",
                      "id": "apigee.organizations.developers.apps.keys.replaceDeveloperAppKey",
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PUT"
                    },
                    "create": {
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/keys",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/keys",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "description": "Creates a custom consumer key and secret for a developer app. This is particularly useful if you want to migrate existing consumer keys and secrets to Apigee hybrid from another system. Consumer keys and secrets can contain letters, numbers, underscores, and hyphens. No other special characters are allowed. To avoid service disruptions, a consumer key and secret should not exceed 2 KBs each. **Note**: When creating the consumer key and secret, an association to API products will not be made. Therefore, you should not specify the associated API products in your request. Instead, use the UpdateDeveloperAppKey API to make the association after the consumer key and secret are created. If a consumer key and secret already exist, you can keep them or delete them using the DeleteDeveloperAppKey API.",
                      "id": "apigee.organizations.developers.apps.keys.create",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1DeveloperAppKey"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                          "type": "string",
                          "description": "Parent of the developer app key. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps`"
                        }
                      }
                    }
                  }
                },
                "attributes": {
                  "methods": {
                    "get": {
                      "path": "v1/{+name}",
                      "id": "apigee.organizations.developers.apps.attributes.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "description": "Returns a developer app attribute.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`",
                          "type": "string",
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}"
                    },
                    "updateDeveloperAppAttribute": {
                      "description": "Updates a developer app attribute. **Note**: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with these entities are cached for at least 180 seconds after the entity is accessed at runtime. Therefore, an `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "path": "v1/{+name}",
                      "id": "apigee.organizations.developers.apps.attributes.updateDeveloperAppAttribute",
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`",
                          "required": true
                        }
                      },
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "list": {
                      "id": "apigee.organizations.developers.apps.attributes.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns a list of all developer app attributes.",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                          "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/{+parent}/attributes",
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attributes"
                      }
                    },
                    "delete": {
                      "description": "Deletes a developer app attribute.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Attribute"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. Name of the developer app attribute. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}/attributes/{attribute}`",
                          "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+/attributes/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "httpMethod": "DELETE",
                      "id": "apigee.organizations.developers.apps.attributes.delete",
                      "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes/{attributesId}",
                      "path": "v1/{+name}"
                    }
                  }
                }
              },
              "methods": {
                "generateKeyPairOrUpdateDeveloperAppStatus": {
                  "httpMethod": "POST",
                  "id": "apigee.organizations.developers.apps.generateKeyPairOrUpdateDeveloperAppStatus",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "required": true
                    },
                    "action": {
                      "location": "query",
                      "type": "string",
                      "description": "Action. Valid values are `approve` or `revoke`."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "description": "Manages access to a developer app by enabling you to: * Approve or revoke a developer app * Generate a new consumer key and secret for a developer app To approve or revoke a developer app, set the `action` query parameter to `approved` or `revoked`, respectively, and the `Content-Type` header to `application/octet-stream`. If a developer app is revoked, none of its API keys are valid for API calls even though the keys are still `approved`. If successful, the API call returns the following HTTP status code: `204 No Content` To generate a new consumer key and secret for a developer app, pass the new key/secret details. Rather than replace an existing key, this API generates a new key. In this case, multiple key pairs may be associated with a single developer app. Each key pair has an independent status (`approved` or `revoked`) and expiration time. Any approved, non-expired key can be used in an API call. For example, if you're using API key rotation, you can generate new keys with expiration times that overlap keys that are going to expire. You might also generate a new consumer key/secret if the security of the original key/secret is compromised. The `keyExpiresIn` property defines the expiration time for the API key in milliseconds. If you don't set this property or set it to `-1`, the API key never expires. **Notes**: * When generating a new key/secret, this API replaces the existing attributes, notes, and callback URLs with those specified in the request. Include or exclude any existing information that you want to retain or delete, respectively. * To migrate existing consumer keys and secrets to hybrid from another system, see the CreateDeveloperAppKey API.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "httpMethod": "GET",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "id": "apigee.organizations.developers.apps.get",
                  "description": "Returns the details for a developer app.",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`"
                    },
                    "entity": {
                      "location": "query",
                      "type": "string",
                      "description": "**Note**: Must be used in conjunction with the `query` parameter. Set to `apiresources` to return the number of API resources that have been approved for access by a developer app in the specified Apigee organization."
                    },
                    "query": {
                      "description": "**Note**: Must be used in conjunction with the `entity` parameter. Set to `count` to return the number of API resources that have been approved for access by a developer app in the specified Apigee organization.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes a developer app. **Note**: The delete operation is asynchronous. The developer app is deleted immediately, but its associated resources, such as app keys or access tokens, may take anywhere from a few seconds to a few minutes to be deleted.",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}",
                  "id": "apigee.organizations.developers.apps.delete"
                },
                "attributes": {
                  "id": "apigee.organizations.developers.apps.attributes",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "path": "v1/{+name}/attributes",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}/attributes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates attributes for a developer app. This API replaces the current attributes with those specified in the request.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "id": "apigee.organizations.developers.apps.create",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps",
                  "path": "v1/{+parent}/apps",
                  "description": "Creates an app associated with a developer. This API associates the developer app with the specified API product and auto-generates an API key for the app to use in calls to API proxies inside that API product. The `name` is the unique ID of the app that you can use in API calls. The `DisplayName` (set as an attribute) appears in the UI. If you don't set the `DisplayName` attribute, the `name` appears in the UI.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/developers/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  }
                },
                "list": {
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps",
                  "id": "apigee.organizations.developers.apps.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/apps",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the developer. Use the following structure in your request: `organizations/{org}/developers/{developer_email}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+$",
                      "type": "string"
                    },
                    "count": {
                      "format": "int64",
                      "type": "string",
                      "description": "Number of developer apps to return in the API call. Use with the `startKey` parameter to provide more targeted filtering. The limit is 1000.",
                      "location": "query"
                    },
                    "expand": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Optional. Specifies whether to expand the results. Set to `true` to expand the results. This query parameter is not valid if you use the `count` or `startKey` query parameters."
                    },
                    "shallowExpand": {
                      "description": "Optional. Specifies whether to expand the results in shallow mode. Set to `true` to expand the results in shallow mode.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "startKey": {
                      "location": "query",
                      "description": "**Note**: Must be used in conjunction with the `count` parameter. Name of the developer app from which to start displaying the list of developer apps. For example, if you're returning 50 developer apps at a time (using the `count` query parameter), you can view developer apps 50-99 by entering the name of the 50th developer app. The developer app name is case sensitive.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists all apps created by a developer in an Apigee organization. Optionally, you can request an expanded view of the developer apps. A maximum of 100 developer apps are returned per API call. You can paginate the list of deveoper apps returned using the `startKey` and `count` query parameters.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeveloperAppsResponse"
                  }
                },
                "update": {
                  "httpMethod": "PUT",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. Name of the developer app. Use the following structure in your request: `organizations/{org}/developers/{developer_email}/apps/{app}`",
                      "pattern": "^organizations/[^/]+/developers/[^/]+/apps/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1DeveloperApp"
                  },
                  "description": "Updates the details for a developer app. In addition, you can add an API product to a developer app and automatically generate an API key for the app to use when calling APIs in the API product. If you want to use an existing API key for the API product, add the API product to the API key using the UpdateDeveloperAppKey API. Using this API, you cannot update the following: * App name as it is the primary key used to identify the app and cannot be changed. * Scopes associated with the app. Instead, use the ReplaceDeveloperAppKey API. This API replaces the existing attributes with those specified in the request. Include or exclude any existing attributes that you want to retain or delete, respectively.",
                  "id": "apigee.organizations.developers.apps.update",
                  "flatPath": "v1/organizations/{organizationsId}/developers/{developersId}/apps/{appsId}"
                }
              }
            }
          }
        },
        "envgroups": {
          "methods": {
            "delete": {
              "httpMethod": "DELETE",
              "description": "Deletes an environment group.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`.",
                  "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "id": "apigee.organizations.envgroups.delete",
              "path": "v1/{+name}",
              "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}"
            },
            "patch": {
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "request": {
                "$ref": "GoogleCloudApigeeV1EnvironmentGroup"
              },
              "id": "apigee.organizations.envgroups.patch",
              "path": "v1/{+name}",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates an environment group.",
              "parameters": {
                "updateMask": {
                  "location": "query",
                  "format": "google-fieldmask",
                  "description": "List of fields to be updated.",
                  "type": "string"
                },
                "name": {
                  "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                  "type": "string",
                  "description": "Required. Name of the environment group to update in the format: `organizations/{org}/envgroups/{envgroup}.",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "description": "Gets an environment group.",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`.",
                  "required": true,
                  "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1EnvironmentGroup"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "apigee.organizations.envgroups.get"
            },
            "list": {
              "flatPath": "v1/organizations/{organizationsId}/envgroups",
              "path": "v1/{+parent}/envgroups",
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "Maximum number of environment groups to return. The page size defaults to 25.",
                  "format": "int32",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. Name of the organization for which to list environment groups in the following format: `organizations/{org}`.",
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Page token, returned from a previous ListEnvironmentGroups call, that you can use to retrieve the next page."
                }
              },
              "description": "Lists all environment groups.",
              "id": "apigee.organizations.envgroups.list",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListEnvironmentGroupsResponse"
              }
            },
            "create": {
              "flatPath": "v1/organizations/{organizationsId}/envgroups",
              "path": "v1/{+parent}/envgroups",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "ID of the environment group. Overrides any ID in the environment_group resource.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "required": true,
                  "description": "Required. Name of the organization in which to create the environment group in the following format: `organizations/{org}`.",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "GoogleCloudApigeeV1EnvironmentGroup"
              },
              "id": "apigee.organizations.envgroups.create",
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates a new environment group.",
              "httpMethod": "POST"
            }
          },
          "resources": {
            "attachments": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.envgroups.attachments.get",
                  "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}/attachments/{attachmentsId}",
                  "description": "Gets an environment group attachment.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1EnvironmentGroupAttachment"
                  },
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. Name of the environment group attachment in the following format: `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`",
                      "pattern": "^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "path": "v1/{+name}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.envgroups.attachments.delete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/envgroups/[^/]+/attachments/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the environment group attachment to delete in the following format: `organizations/{org}/envgroups/{envgroup}/attachments/{attachment}`."
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}/attachments/{attachmentsId}",
                  "description": "Deletes an environment group attachment."
                },
                "list": {
                  "path": "v1/{+parent}/attachments",
                  "description": "Lists all attachments of an environment group.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}/attachments",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListEnvironmentGroupAttachmentsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "Page token, returned by a previous ListEnvironmentGroupAttachments call, that you can use to retrieve the next page.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Maximum number of environment group attachments to return. The page size defaults to 25.",
                      "format": "int32",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                      "description": "Required. Name of the environment group in the following format: `organizations/{org}/envgroups/{envgroup}`."
                    }
                  },
                  "id": "apigee.organizations.envgroups.attachments.list"
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/envgroups/[^/]+$",
                      "type": "string",
                      "description": "Required. EnvironmentGroup under which to create the attachment in the following format: `organizations/{org}/envgroups/{envgroup}`.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.envgroups.attachments.create",
                  "description": "Creates a new attachment of an environment to an environment group.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1EnvironmentGroupAttachment"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/envgroups/{envgroupsId}/attachments",
                  "path": "v1/{+parent}/attachments",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        },
        "reports": {
          "methods": {
            "delete": {
              "path": "v1/{+name}",
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}",
              "parameters": {
                "name": {
                  "description": "Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`",
                  "required": true,
                  "pattern": "^organizations/[^/]+/reports/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1DeleteCustomReportResponse"
              },
              "id": "apigee.organizations.reports.delete",
              "description": "Deletes an existing custom report definition",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "update": {
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "httpMethod": "PUT",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`",
                  "pattern": "^organizations/[^/]+/reports/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "description": "Update an existing custom report definition",
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.reports.update",
              "request": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              }
            },
            "list": {
              "id": "apigee.organizations.reports.list",
              "response": {
                "$ref": "GoogleCloudApigeeV1ListCustomReportsResponse"
              },
              "description": "Return a list of Custom Reports",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1/organizations/{organizationsId}/reports",
              "httpMethod": "GET",
              "path": "v1/{+parent}/reports",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "expand": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to 'true' to get expanded details about each custom report."
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. The parent organization name under which the API product will be listed `organizations/{organization_id}/reports`",
                  "type": "string"
                }
              }
            },
            "get": {
              "id": "apigee.organizations.reports.get",
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "description": "Retrieve a custom report definition.",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/reports/[^/]+$",
                  "description": "Required. Custom Report name of the form: `organizations/{organization_id}/reports/{report_name}`",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "flatPath": "v1/organizations/{organizationsId}/reports/{reportsId}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "id": "apigee.organizations.reports.create",
              "request": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/reports",
              "description": "Creates a Custom Report for an Organization. A Custom Report provides Apigee Customers to create custom dashboards in addition to the standard dashboards which are provided. The Custom Report in its simplest form contains specifications about metrics, dimensions and filters. It is important to note that the custom report by itself does not provide an executable entity. The Edge UI converts the custom report definition into an analytics query and displays the result in a chart.",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "required": true,
                  "description": "Required. The parent organization name under which the Custom Report will be created. Must be of the form: `organizations/{organization_id}/reports`",
                  "location": "path"
                }
              },
              "path": "v1/{+parent}/reports",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1CustomReport"
              }
            }
          }
        },
        "instances": {
          "methods": {
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/instances/[^/]+$",
                  "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instance/{instance}`.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "DELETE",
              "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}",
              "id": "apigee.organizations.instances.delete",
              "description": "Deletes an Apigee runtime instance. The instance stops serving requests and the runtime data is deleted. **Note:** Not supported for Apigee hybrid."
            },
            "list": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ListInstancesResponse"
              },
              "flatPath": "v1/organizations/{organizationsId}/instances",
              "description": "Lists all Apigee runtime instances for the organization. **Note:** Not supported for Apigee hybrid.",
              "parameters": {
                "pageToken": {
                  "description": "Page token, returned from a previous ListInstances call, that you can use to retrieve the next page of content.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}`."
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "description": "Maximum number of instances to return. Defaults to 25.",
                  "format": "int32"
                }
              },
              "path": "v1/{+parent}/instances",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.instances.list"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/instances",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1/{+parent}/instances",
              "id": "apigee.organizations.instances.create",
              "request": {
                "$ref": "GoogleCloudApigeeV1Instance"
              },
              "description": "Creates an Apigee runtime instance. The instance is accessible from the authorized network configured on the organization. **Note:** Not supported for Apigee hybrid.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}`.",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleLongrunningOperation"
              }
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "id": "apigee.organizations.instances.get",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1Instance"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/instances/[^/]+$",
                  "required": true,
                  "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
                }
              },
              "description": "Gets the details for an Apigee runtime instance. **Note:** Not supported for Apigee hybrid.",
              "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}",
              "httpMethod": "GET"
            },
            "reportStatus": {
              "path": "v1/{+instance}:reportStatus",
              "httpMethod": "POST",
              "parameterOrder": [
                "instance"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1ReportInstanceStatusRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ReportInstanceStatusResponse"
              },
              "id": "apigee.organizations.instances.reportStatus",
              "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}:reportStatus",
              "parameters": {
                "instance": {
                  "required": true,
                  "pattern": "^organizations/[^/]+/instances/[^/]+$",
                  "type": "string",
                  "description": "The name of the instance reporting this status. For SaaS the request will be rejected if no instance exists under this name. Format is organizations/{org}/instances/{instance}",
                  "location": "path"
                }
              },
              "description": "Reports the latest status for a runtime instance."
            }
          },
          "resources": {
            "attachments": {
              "methods": {
                "list": {
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/attachments",
                  "id": "apigee.organizations.instances.attachments.list",
                  "path": "v1/{+parent}/attachments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Lists all attachments to an instance. **Note:** Not supported for Apigee hybrid.",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the organization. Use the following structure in your request: `organizations/{org}/instances/{instance}`",
                      "pattern": "^organizations/[^/]+/instances/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Page token, returned by a previous ListInstanceAttachments call, that you can use to retrieve the next page of content.",
                      "location": "query"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of instance attachments to return. Defaults to 25.",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListInstanceAttachmentsResponse"
                  }
                },
                "get": {
                  "description": "Gets an attachment. **Note:** Not supported for Apigee hybrid.",
                  "id": "apigee.organizations.instances.attachments.get",
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the attachment. Use the following structure in your request: `organizations/{org}/instances/{instance}/attachments/{attachment}`"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1InstanceAttachment"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/attachments/{attachmentsId}"
                },
                "create": {
                  "path": "v1/{+parent}/attachments",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1InstanceAttachment"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/attachments",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^organizations/[^/]+/instances/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. Name of the instance. Use the following structure in your request: `organizations/{org}/instances/{instance}`."
                    }
                  },
                  "description": "Creates a new attachment of an environment to an instance. **Note:** Not supported for Apigee hybrid.",
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "apigee.organizations.instances.attachments.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "flatPath": "v1/organizations/{organizationsId}/instances/{instancesId}/attachments/{attachmentsId}",
                  "parameters": {
                    "name": {
                      "description": "Required. Name of the attachment. Use the following structure in your request: `organizations/{org}/instances/{instance}/attachments/{attachment}`.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/instances/[^/]+/attachments/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigee.organizations.instances.attachments.delete",
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes an attachment. **Note:** Not supported for Apigee hybrid."
                }
              }
            }
          }
        },
        "keyvaluemaps": {
          "methods": {
            "delete": {
              "flatPath": "v1/organizations/{organizationsId}/keyvaluemaps/{keyvaluemapsId}",
              "id": "apigee.organizations.keyvaluemaps.delete",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Delete a key value map in an organization.",
              "response": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              },
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the key value map. Must be of the form `organizations/{organization}/keyvaluemaps/{keyvaluemap}`.",
                  "pattern": "^organizations/[^/]+/keyvaluemaps/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The name of the organization in which to create the key value map file. Must be of the form `organizations/{organization}`.",
                  "pattern": "^organizations/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/keyvaluemaps",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1KeyValueMap"
              },
              "description": "Creates a key value map in an organization.",
              "id": "apigee.organizations.keyvaluemaps.create",
              "path": "v1/{+parent}/keyvaluemaps"
            }
          }
        },
        "apiproducts": {
          "resources": {
            "attributes": {
              "methods": {
                "delete": {
                  "description": "Deletes an API product attribute.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "required": true,
                      "description": "**Required.** API product name in the following form: organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name "
                    }
                  },
                  "id": "apigee.organizations.apiproducts.attributes.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "list": {
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent organization name. Must be in the following form: organizations/organization_ID/apiproducts/api_product_name ",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                      "required": true
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attributes"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/attributes",
                  "description": "Returns a list of all API product attributes.",
                  "id": "apigee.organizations.apiproducts.attributes.list",
                  "httpMethod": "GET"
                },
                "get": {
                  "path": "v1/{+name}",
                  "description": "Returns the value of an API product attribute.",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "type": "string",
                      "description": "**Required.** API product name in the following form: organizations/organization_ID/apiproducts/api_product_name/attributes/attribute_name ",
                      "required": true
                    }
                  },
                  "id": "apigee.organizations.apiproducts.attributes.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "updateApiProductAttribute": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "id": "apigee.organizations.apiproducts.attributes.updateApiProductAttribute",
                  "description": "Updates the value of an API product attribute. Limitations are: OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with entities also get cached for at least 180 seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Attribute"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/apiproducts/[^/]+/attributes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "**Required.** API product name in the following form: organizations/organization_ID/apiproducts/api_product_name "
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes/{attributesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            }
          },
          "methods": {
            "create": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "httpMethod": "POST",
              "path": "v1/{+parent}/apiproducts",
              "flatPath": "v1/organizations/{organizationsId}/apiproducts",
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates an API product in an organization. You create API products after you have proxied backend services using API proxies. An API product is a collection of API resources combined with quota settings and metadata that you can use to deliver customized and productized API bundles to your developer community. This metadata can include: - Scope - Environments - API proxies - Extensible profile API products enable you repackage APIs on-the-fly, without having to do any additional coding or configuration. Apigee recommends that you start with a simple API product including only required elements. You then provision credentials to apps to enable them to start testing your APIs. After you have authentication and authorization working against a simple API product, you can iterate to create finer grained API products, defining different sets of API resources for each API product. *WARNING:* - If you don't specify an API proxy in the request body, *any* app associated with the product can make calls to *any* API in your entire organization. - If you don't specify an environment in the request body, the product allows access to all environments. For more information, see {{what_api_product}}",
              "request": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. The parent organization name under which the API product will be created. Must be in the following form: organizations/organization_ID ",
                  "location": "path",
                  "required": true
                }
              },
              "id": "apigee.organizations.apiproducts.create"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ListApiProductsResponse"
              },
              "path": "v1/{+parent}/apiproducts",
              "httpMethod": "GET",
              "description": "Lists all API product names for an organization. Filter the list by passing an `attributename` and `attibutevalue`. The limit on the number of API products returned by the API is 1000. You can paginate the list of API products returned using the `startKey` and `count` query parameters.",
              "id": "apigee.organizations.apiproducts.list",
              "parameters": {
                "attributevalue": {
                  "location": "query",
                  "description": "The value of the attribute.",
                  "type": "string"
                },
                "attributename": {
                  "description": "The name of the attribute to search.",
                  "location": "query",
                  "type": "string"
                },
                "startKey": {
                  "description": "Gets a list of API products starting with a specific API product in the list. For example, if you're returning 50 API products at a time (using the `count` query parameter), you can view products 50-99 by entering the name of the 50th API product in the first API (without using `startKey`). Product name is case sensitive.",
                  "location": "query",
                  "type": "string"
                },
                "expand": {
                  "description": "Set to `true` to get expanded details about each API.",
                  "location": "query",
                  "type": "boolean"
                },
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "description": "**Required.** The parent organization name in the following form: organizations/organization_ID ",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "count": {
                  "description": "Enter the number of API products you want returned in the API call. The limit is 1000.",
                  "location": "query",
                  "type": "string",
                  "format": "int64"
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/apiproducts"
            },
            "attributes": {
              "response": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "path": "v1/{+name}/attributes",
              "parameters": {
                "name": {
                  "description": "**Required.** API product name in the following form: organizations/organization_ID/apiproducts/api_product_name ",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "description": "Updates or creates API product attributes. This API **replaces** the current list of attributes with the attributes specified in the request body. In this way, you can update existing attributes, add new attributes, or delete existing attributes by omitting them from the request body. OAuth access tokens and Key Management Service (KMS) entities (apps, developers, and API products) are cached for 180 seconds (current default). Any custom attributes associated with entities also get cached for at least 180 seconds after entity is accessed during runtime. In this case, the `ExpiresIn` element on the OAuthV2 policy won't be able to expire an access token in less than 180 seconds.",
              "parameterOrder": [
                "name"
              ],
              "id": "apigee.organizations.apiproducts.attributes",
              "request": {
                "$ref": "GoogleCloudApigeeV1Attributes"
              },
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}/attributes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "delete": {
              "path": "v1/{+name}",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.apiproducts.delete",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. API product name in the following form: organizations/organization_ID/apiproducts/api_product_name ",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "description": "Deletes an API product from an organization. Deleting an API product causes app requests to the resource URIs defined in the API product to fail. Ensure that you create a new API product to serve existing apps, unless your intention is to disable access to the resources defined in the API product. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via the UI or the API. View the list of API products to verify the internal name.",
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}"
            },
            "update": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "id": "apigee.organizations.apiproducts.update",
              "httpMethod": "PUT",
              "description": "Updates an existing API product. You must include all required values, whether or not you are updating them, as well as any optional values that you are updating. The API product name required in the request URL is the internal name of the product, not the Display Name. While they may be the same, it depends on whether the API product was created via UI or API. View the list of API products to identify their internal names.",
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}",
              "request": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$",
                  "description": "**Required.** API product name in the following form: organizations/organization_ID/apiproducts/api_product_name "
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1ApiProduct"
              },
              "id": "apigee.organizations.apiproducts.get",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/apiproducts/{apiproductsId}",
              "description": "Gets configuration details for an API product. The API product name required in the request URL is the internal name of the product, not the display name. While they may be the same, it depends on whether the API product was created via the UI or the API. View the list of API products to verify the internal name.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "**Required.** API product name in the following form: organizations/organization_ID/apiproducts/api_product_name ",
                  "type": "string",
                  "required": true,
                  "pattern": "^organizations/[^/]+/apiproducts/[^/]+$"
                }
              }
            }
          }
        },
        "sharedflows": {
          "resources": {
            "revisions": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "parameters": {
                        "parent": {
                          "description": "Required. Name of the API proxy revision for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`.",
                          "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "path": "v1/{+parent}/deployments",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "apigee.organizations.sharedflows.revisions.deployments.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "httpMethod": "GET",
                      "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "description": "Lists all deployments of a shared flow revision."
                    }
                  }
                }
              },
              "methods": {
                "updateSharedFlowRevision": {
                  "id": "apigee.organizations.sharedflows.revisions.updateSharedFlowRevision",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the shared flow revision to update. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`"
                    },
                    "validate": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Ignored. All uploads are validated regardless of the value of this field. It is kept for compatibility with existing APIs. Must be `true` or `false` if provided."
                    }
                  },
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "description": "Updates a shared flow revision. This operation is only allowed on revisions which have never been deployed. After deployment a revision becomes immutable, even if it becomes undeployed. The payload is a ZIP-formatted shared flow. Content type must be either multipart/form-data or application/octet-stream.",
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
                  }
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the shared flow revision to get. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$"
                    },
                    "format": {
                      "type": "string",
                      "location": "query",
                      "description": "Specify `bundle` to export the contents of the shared flow bundle. Otherwise, the bundle metadata is returned."
                    }
                  },
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "path": "v1/{+name}",
                  "description": "Gets a revision of a shared flow. If `format=bundle` is passed, it instead outputs a shared flow revision as a ZIP-formatted bundle of code and config files.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.sharedflows.revisions.get",
                  "httpMethod": "GET",
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the shared flow revision to delete. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}/revisions/{revision_id}`",
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}",
                  "description": "Deletes a shared flow and all associated policies, resources, and revisions. You must undeploy the shared flow before deleting it.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
                  },
                  "id": "apigee.organizations.sharedflows.revisions.delete"
                }
              }
            },
            "deployments": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/deployments",
                  "description": "Lists all deployments of a shared flow.",
                  "httpMethod": "GET",
                  "id": "apigee.organizations.sharedflows.deployments.list",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the shared flow for which to return deployment information in the following format: `organizations/{org}/sharedflows/{sharedflow}`"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}/deployments"
                }
              }
            }
          },
          "methods": {
            "create": {
              "description": "Uploads a ZIP-formatted shared flow configuration bundle to an organization. If the shared flow already exists, this creates a new revision of it. If the shared flow does not exist, this creates it. Once imported, the shared flow revision must be deployed before it can be accessed at runtime. The size limit of a shared flow bundle is 15 MB.",
              "request": {
                "$ref": "GoogleApiHttpBody"
              },
              "parameters": {
                "action": {
                  "location": "query",
                  "description": "Required. Must be set to either `import` or `validate`.",
                  "type": "string"
                },
                "name": {
                  "description": "Required. The name to give the shared flow",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the parent organization under which to create the shared flow. Must be of the form: `organizations/{organization_id}`"
                }
              },
              "path": "v1/{+parent}/sharedflows",
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlowRevision"
              },
              "flatPath": "v1/organizations/{organizationsId}/sharedflows",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.sharedflows.create",
              "httpMethod": "POST"
            },
            "list": {
              "httpMethod": "GET",
              "description": "Lists all shared flows in the organization.",
              "parameters": {
                "includeMetaData": {
                  "description": "Indicates whether to include shared flow metadata in the response.",
                  "type": "boolean",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^organizations/[^/]+$",
                  "description": "Required. The name of the parent organization under which to get shared flows. Must be of the form: `organizations/{organization_id}`",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "includeRevisions": {
                  "location": "query",
                  "description": "Indicates whether to include a list of revisions in the response.",
                  "type": "boolean"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1ListSharedFlowsResponse"
              },
              "path": "v1/{+parent}/sharedflows",
              "id": "apigee.organizations.sharedflows.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/sharedflows",
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}",
              "path": "v1/{+name}",
              "description": "Deletes a shared flow and all it's revisions. The shared flow must be undeployed before you can delete it.",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlow"
              },
              "id": "apigee.organizations.sharedflows.delete",
              "parameters": {
                "name": {
                  "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. shared flow name of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`"
                }
              }
            },
            "get": {
              "description": "Gets a shared flow by name, including a list of its revisions.",
              "flatPath": "v1/organizations/{organizationsId}/sharedflows/{sharedflowsId}",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "id": "apigee.organizations.sharedflows.get",
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudApigeeV1SharedFlow"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the shared flow to get. Must be of the form: `organizations/{organization_id}/sharedflows/{shared_flow_id}`",
                  "pattern": "^organizations/[^/]+/sharedflows/[^/]+$",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "environments": {
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "id": "apigee.organizations.environments.get",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$"
                }
              },
              "description": "Gets environment details.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "httpMethod": "GET",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              }
            },
            "unsubscribe": {
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:unsubscribe",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "GoogleCloudApigeeV1Subscription"
              },
              "id": "apigee.organizations.environments.unsubscribe",
              "path": "v1/{+parent}:unsubscribe",
              "description": "Deletes a subscription for the environment's Pub/Sub topic.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            },
            "create": {
              "parameters": {
                "parent": {
                  "required": true,
                  "pattern": "^organizations/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the organization in which the environment will be created. Use the following structure in your request: `organizations/{org}`",
                  "type": "string"
                },
                "name": {
                  "description": "Optional. Name of the environment. Alternatively, the name may be specified in the request body in the name field.",
                  "location": "query",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates an environment in an organization.",
              "path": "v1/{+parent}/environments",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "flatPath": "v1/organizations/{organizationsId}/environments",
              "httpMethod": "POST",
              "id": "apigee.organizations.environments.create"
            },
            "setIamPolicy": {
              "httpMethod": "POST",
              "id": "apigee.organizations.environments.setIamPolicy",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:setIamPolicy",
              "request": {
                "$ref": "GoogleIamV1SetIamPolicyRequest"
              },
              "parameterOrder": [
                "resource"
              ],
              "parameters": {
                "resource": {
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+resource}:setIamPolicy",
              "description": "Sets the IAM policy on an environment, if the policy already exists it will be replaced. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.setIamPolicy` permission to call this API."
            },
            "getDebugmask": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.environments.getDebugmask",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+/debugmask$",
                  "description": "Required. Name of the debug mask. Use the following structure in your request: `organizations/{org}/environments/{env}/debugmask`."
                }
              },
              "httpMethod": "GET",
              "description": "Gets the debug mask singleton resource for an environment.",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/debugmask",
              "path": "v1/{+name}",
              "response": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "apigee.organizations.environments.delete",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "required": true
                }
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes an environment from an organization.",
              "httpMethod": "DELETE"
            },
            "getIamPolicy": {
              "description": "Gets the IAM policy on an environment. For more information, see [Manage users, roles, and permissions using the API](https://cloud.google.com/apigee/docs/api-platform/system-administration/manage-users-roles). You must have the `apigee.environments.getIamPolicy` permission to call this API.",
              "parameters": {
                "resource": {
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                  "type": "string",
                  "location": "path"
                },
                "options.requestedPolicyVersion": {
                  "location": "query",
                  "type": "integer",
                  "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                  "format": "int32"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:getIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "response": {
                "$ref": "GoogleIamV1Policy"
              },
              "path": "v1/{+resource}:getIamPolicy",
              "id": "apigee.organizations.environments.getIamPolicy",
              "httpMethod": "GET"
            },
            "update": {
              "path": "v1/{+name}",
              "id": "apigee.organizations.environments.update",
              "description": "Updates an existing environment. When updating properties, you must pass all existing properties to the API, even if they are not being changed. If you omit properties from the payload, the properties are removed. To get the current list of properties for the environment, use the [Get Environment API](get).",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
                }
              },
              "httpMethod": "PUT",
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "testIamPermissions": {
              "parameterOrder": [
                "resource"
              ],
              "id": "apigee.organizations.environments.testIamPermissions",
              "path": "v1/{+resource}:testIamPermissions",
              "parameters": {
                "resource": {
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "description": "Tests the permissions of a user on an environment, and returns a subset of permissions that the user has on the environment. If the environment does not exist, an empty permission set is returned (a NOT_FOUND error is not returned).",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:testIamPermissions",
              "response": {
                "$ref": "GoogleIamV1TestIamPermissionsResponse"
              },
              "request": {
                "$ref": "GoogleIamV1TestIamPermissionsRequest"
              }
            },
            "subscribe": {
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1Subscription"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "id": "apigee.organizations.environments.subscribe",
              "httpMethod": "POST",
              "description": "Creates a subscription for the environment's Pub/Sub topic. The server will assign a random name for this subscription. The \"name\" and \"push_config\" must *not* be specified.",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}:subscribe",
              "path": "v1/{+parent}:subscribe"
            },
            "updateDebugmask": {
              "id": "apigee.organizations.environments.updateDebugmask",
              "httpMethod": "PATCH",
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/debugmask",
              "description": "Updates the debug mask singleton resource for an environment.",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+/debugmask$",
                  "description": "Name of the debug mask.",
                  "required": true,
                  "location": "path"
                },
                "updateMask": {
                  "description": "Field debug mask to support partial updates.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                },
                "replaceRepeatedFields": {
                  "description": "Boolean flag that specifies whether to replace existing values in the debug mask when doing an update. Set to true to replace existing values. The default behavior is to append the values (false).",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "response": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1DebugMask"
              },
              "path": "v1/{+name}"
            },
            "getDeployedConfig": {
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/deployedConfig",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets the deployed configuration for an environment.",
              "httpMethod": "GET",
              "path": "v1/{+name}",
              "id": "apigee.organizations.environments.getDeployedConfig",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudApigeeV1EnvironmentConfig"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^organizations/[^/]+/environments/[^/]+/deployedConfig$",
                  "description": "Required. Name of the environment deployed configuration resource. Use the following structure in your request: `organizations/{org}/environments/{env}/deployedConfig`"
                }
              }
            },
            "updateEnvironment": {
              "description": "Updates an existing environment. When updating properties, you must pass all existing properties to the API, even if they are not being changed. If you omit properties from the payload, the properties are removed. To get the current list of properties for the environment, use the [Get Environment API](get).",
              "httpMethod": "POST",
              "response": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}",
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "description": "Required. Name of the environment. Use the following structure in your request: `organizations/{org}/environments/{env}`",
                  "required": true,
                  "pattern": "^organizations/[^/]+/environments/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudApigeeV1Environment"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "apigee.organizations.environments.updateEnvironment"
            }
          },
          "resources": {
            "deployments": {
              "methods": {
                "list": {
                  "description": "Lists all deployments of API proxies or shared flows in an environment.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "id": "apigee.organizations.environments.deployments.list",
                  "path": "v1/{+parent}/deployments",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/deployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the environment for which to return deployment information in the following format: `organizations/{org}/environments/{env}`"
                    },
                    "sharedFlows": {
                      "description": "Optional. Flag that specifies whether to return shared flow or API proxy deployments. Set to `true` to return shared flow deployments; set to `false` to return API proxy deployments. Defaults to `false`.",
                      "location": "query",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "references": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the Reference to get. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`.",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}",
                  "id": "apigee.organizations.environments.references.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "description": "Gets a Reference resource."
                },
                "update": {
                  "id": "apigee.organizations.environments.references.update",
                  "httpMethod": "PUT",
                  "path": "v1/{+name}",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the Reference to update. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`."
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "description": "Updates an existing Reference. Note that this operation has PUT semantics; it will replace the entirety of the existing Reference with the resource in the request body.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent environment name under which the Reference will be created. Must be of the form `organizations/{org}/environments/{env}`.",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$"
                    }
                  },
                  "id": "apigee.organizations.environments.references.create",
                  "description": "Creates a Reference in the specified environment.",
                  "path": "v1/{+parent}/references",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references",
                  "httpMethod": "POST"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/references/{referencesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "description": "Deletes a Reference from an environment. Returns the deleted Reference resource.",
                  "id": "apigee.organizations.environments.references.delete",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Reference"
                  },
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the Reference to delete. Must be of the form `organizations/{org}/environments/{env}/references/{ref}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/references/[^/]+$",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "resourcefiles": {
              "methods": {
                "listEnvironmentResources": {
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/resourcefiles/{type}",
                  "id": "apigee.organizations.environments.resourcefiles.listEnvironmentResources",
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$"
                    },
                    "type": {
                      "type": "string",
                      "required": true,
                      "description": "Optional. Type of resource files to list. {{ resource_file_type }}",
                      "location": "path"
                    }
                  },
                  "description": "Lists all resource files. For more information about resource files, see [Resource files](/api-platform/develop/resource-files).",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse"
                  },
                  "parameterOrder": [
                    "parent",
                    "type"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "update": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "id": "apigee.organizations.environments.resourcefiles.update",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. ID of the resource file to update. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}",
                      "location": "path",
                      "required": true
                    },
                    "type": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "required": true
                    },
                    "parent": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "description": "Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PUT",
                  "description": "Updates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](/api-platform/develop/resource-files).",
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  }
                },
                "get": {
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "id": "apigee.organizations.environments.resourcefiles.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "description": "Gets the contents of a resource file. For more information about resource files, see [Resource files](/api-platform/develop/resource-files).",
                  "parameters": {
                    "type": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "location": "path"
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. ID of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
                    },
                    "parent": {
                      "description": "Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`.",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "apigee.organizations.environments.resourcefiles.delete",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "type": {
                      "type": "string",
                      "required": true,
                      "description": "Required. Resource file type. {{ resource_file_type }}",
                      "location": "path"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "required": true,
                      "description": "Required. Name of the environment in the following format: `organizations/{org}/environments/{env}`."
                    },
                    "name": {
                      "description": "Required. ID of the resource file to delete. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "description": "Deletes a resource file. For more information about resource files, see [Resource files](/api-platform/develop/resource-files).",
                  "path": "v1/{+parent}/resourcefiles/{type}/{name}",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles/{type}/{name}",
                  "parameterOrder": [
                    "parent",
                    "type",
                    "name"
                  ]
                },
                "list": {
                  "path": "v1/{+parent}/resourcefiles",
                  "description": "Lists all resource files. For more information about resource files, see [Resource files](/api-platform/develop/resource-files).",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. Name of the environment in which to list resource files in the following format: `organizations/{org}/environments/{env}`.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$"
                    },
                    "type": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Type of resource files to list. {{ resource_file_type }}"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListEnvironmentResourcesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles",
                  "id": "apigee.organizations.environments.resourcefiles.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ResourceFile"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "type": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Resource file type. {{ resource_file_type }}"
                    },
                    "parent": {
                      "description": "Required. Name of the environment in which to create the resource file in the following format: `organizations/{org}/environments/{env}`.",
                      "location": "path",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "required": true
                    },
                    "name": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Name of the resource file. Must match the regular expression: [a-zA-Z0-9:/\\\\!@#$%^&{}\\[\\]()+\\-=,.~'` ]{1,255}"
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/resourcefiles",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "description": "Creates a resource file. Specify the `Content-Type` as `application/octet-stream` or `multipart/form-data`. For more information about resource files, see [Resource files](/api-platform/develop/resource-files).",
                  "path": "v1/{+parent}/resourcefiles",
                  "id": "apigee.organizations.environments.resourcefiles.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "apis": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "description": "Lists all deployments of an API proxy in an environment.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/deployments",
                      "path": "v1/{+parent}/deployments",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "id": "apigee.organizations.environments.apis.deployments.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "description": "Required. Name representing an API proxy in an environment in the following format: `organizations/{org}/environments/{env}/apis/{api}`",
                          "required": true,
                          "type": "string",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+$"
                        }
                      }
                    }
                  }
                },
                "revisions": {
                  "methods": {
                    "undeploy": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1/{+name}/deployments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.environments.apis.revisions.undeploy",
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                          "location": "path",
                          "description": "Required. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                          "type": "string",
                          "required": true
                        },
                        "sequencedRollout": {
                          "type": "boolean",
                          "location": "query",
                          "description": "If true, a best-effort attempt will be made to remove the environment group routing rules corresponding to this deployment before removing the deployment from the runtime. This is likely to be a rare use case; it is only needed when the intended effect of undeploying this proxy is to cause the traffic it currently handles to be rerouted to some other existing proxy in the environment group. The GenerateUndeployChangeReport API may be used to examine routing changes before issuing the undeployment request, and its response will indicate if a sequenced rollout is recommended for the undeployment."
                        }
                      },
                      "description": "Undeploys an API proxy revision from an environment. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`",
                      "httpMethod": "DELETE"
                    },
                    "deploy": {
                      "id": "apigee.organizations.environments.apis.revisions.deploy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "sequencedRollout": {
                          "location": "query",
                          "type": "boolean",
                          "description": "If true, a best-effort attempt will be made to roll out the routing rules corresponding to this deployment and the environment changes to add this deployment in a safe order. This reduces the risk of downtime that could be caused by changing the environment group's routing before the new destination for the affected traffic is ready to receive it. This should only be necessary if the new deployment will be capturing traffic from another environment under a shared environment group or if traffic will be rerouted to a different environment due to a basepath removal. The GenerateDeployChangeReport API may be used to examine routing changes before issuing the deployment request, and its response will indicate if a sequenced rollout is recommended for the deployment."
                        },
                        "override": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Flag that specifies whether the new deployment replaces other deployed revisions of the API proxy in the environment. Set override to true to replace other deployed revisions. By default, override is false and the deployment is rejected if other revisions of the API proxy are deployed in the environment."
                        },
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                          "type": "string",
                          "required": true,
                          "description": "Required. Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                          "location": "path"
                        }
                      },
                      "httpMethod": "POST",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "path": "v1/{+name}/deployments",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Deploys a revision of an API proxy. If another revision of the same API proxy revision is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot invoke an API proxy until it has been deployed to an environment. After you deploy an API proxy revision, you cannot edit it. To edit the API proxy, you must create and deploy a new revision. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}` ",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      }
                    },
                    "getDeployments": {
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "id": "apigee.organizations.environments.apis.revisions.getDeployments",
                      "description": "Gets the deployment of an API proxy revision and actual state reported by runtime pods.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                          "description": "Required. Name representing an API proxy revision in an environment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments",
                      "path": "v1/{+name}/deployments",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      }
                    }
                  },
                  "resources": {
                    "deployments": {
                      "methods": {
                        "generateUndeployChangeReport": {
                          "id": "apigee.organizations.environments.apis.revisions.deployments.generateUndeployChangeReport",
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments:generateUndeployChangeReport",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "POST",
                          "path": "v1/{+name}/deployments:generateUndeployChangeReport",
                          "description": "Generates a report for a dry run analysis of an UndeployApiProxy request without committing the undeploy. In addition to the standard validations performed when removing deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being removed. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run UndeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateUndeployChangeReport`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.undeploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeploymentChangeReport"
                          },
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "description": "Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                              "location": "path",
                              "type": "string"
                            }
                          }
                        },
                        "generateDeployChangeReport": {
                          "httpMethod": "POST",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DeploymentChangeReport"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "description": "Name of the API proxy revision deployment in the following format: `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}`",
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            },
                            "override": {
                              "description": "Flag that specifies whether to force the deployment of the new revision over the currently deployed revision by overriding conflict checks.",
                              "location": "query",
                              "type": "boolean"
                            }
                          },
                          "path": "v1/{+name}/deployments:generateDeployChangeReport",
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/deployments:generateDeployChangeReport",
                          "id": "apigee.organizations.environments.apis.revisions.deployments.generateDeployChangeReport",
                          "description": "Generates a report for a dry run analysis of a DeployApiProxy request without committing the deployment. In addition to the standard validations performed when adding deployments, additional analysis will be done to detect possible traffic routing changes that would result from this deployment being created. Any potential routing conflicts or unsafe changes will be reported in the response. This routing analysis is not performed for a non-dry-run DeployApiProxy request. For a request path `organizations/{org}/environments/{env}/apis/{api}/revisions/{rev}/deployments:generateDeployChangeReport`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.proxyrevisions.deploy` on the resource `organizations/{org}/apis/{api}/revisions/{rev}`",
                          "parameterOrder": [
                            "name"
                          ]
                        }
                      }
                    },
                    "debugsessions": {
                      "resources": {
                        "data": {
                          "methods": {
                            "get": {
                              "path": "v1/{+name}",
                              "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions/{debugsessionsId}/data/{dataId}",
                              "response": {
                                "$ref": "GoogleCloudApigeeV1DebugSessionTransaction"
                              },
                              "description": "Gets the debug data from a transaction.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "httpMethod": "GET",
                              "parameterOrder": [
                                "name"
                              ],
                              "id": "apigee.organizations.environments.apis.revisions.debugsessions.data.get",
                              "parameters": {
                                "name": {
                                  "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+/data/[^/]+$",
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. The name of the debug session transaction. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}/data/{transaction}`.",
                                  "required": true
                                }
                              }
                            }
                          }
                        }
                      },
                      "methods": {
                        "deleteData": {
                          "description": "Deletes the data from a debug session. This does not cancel the debug session or prevent further data from being collected if the session is still active in runtime pods.",
                          "parameters": {
                            "name": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$",
                              "description": "Required. The name of the debug session to delete. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{debugsession}`."
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "httpMethod": "DELETE",
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.deleteData",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "path": "v1/{+name}/data",
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions/{debugsessionsId}/data"
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1ListDebugSessionsResponse"
                          },
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.list",
                          "parameterOrder": [
                            "parent"
                          ],
                          "parameters": {
                            "pageToken": {
                              "description": "Page token, returned from a previous ListDebugSessions call, that you can use to retrieve the next page.",
                              "type": "string",
                              "location": "query"
                            },
                            "pageSize": {
                              "location": "query",
                              "format": "int32",
                              "type": "integer",
                              "description": "Maximum number of debug sessions to return. The page size defaults to 25."
                            },
                            "parent": {
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "location": "path",
                              "description": "Required. The name of the API Proxy revision deployment for which to list debug sessions. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.",
                              "type": "string",
                              "required": true
                            }
                          },
                          "description": "Lists debug sessions that are currently active in the given API Proxy revision.",
                          "httpMethod": "GET",
                          "path": "v1/{+parent}/debugsessions"
                        },
                        "get": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.get",
                          "parameters": {
                            "name": {
                              "required": true,
                              "location": "path",
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+/debugsessions/[^/]+$",
                              "type": "string",
                              "description": "Required. The name of the debug session to retrieve. Must be of the form: `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}/debugsessions/{session}`."
                            }
                          },
                          "description": "Retrieves a debug session.",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DebugSession"
                          },
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions/{debugsessionsId}",
                          "path": "v1/{+name}",
                          "httpMethod": "GET"
                        },
                        "create": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "POST",
                          "request": {
                            "$ref": "GoogleCloudApigeeV1DebugSession"
                          },
                          "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/apis/{apisId}/revisions/{revisionsId}/debugsessions",
                          "path": "v1/{+parent}/debugsessions",
                          "id": "apigee.organizations.environments.apis.revisions.debugsessions.create",
                          "description": "Creates a debug session for a deployed API Proxy revision.",
                          "response": {
                            "$ref": "GoogleCloudApigeeV1DebugSession"
                          },
                          "parameters": {
                            "timeout": {
                              "format": "int64",
                              "type": "string",
                              "location": "query",
                              "description": "Optional. The time in seconds after which this DebugSession should end. A timeout specified in DebugSession will overwrite this value."
                            },
                            "parent": {
                              "location": "path",
                              "required": true,
                              "description": "Required. The resource name of the API Proxy revision deployment for which to create the DebugSession. Must be of the form `organizations/{organization}/environments/{environment}/apis/{api}/revisions/{revision}`.",
                              "pattern": "^organizations/[^/]+/environments/[^/]+/apis/[^/]+/revisions/[^/]+$",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "queries": {
              "methods": {
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/queries",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Query"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries",
                  "id": "apigee.organizations.environments.queries.create",
                  "description": "Submit a query to be processed in the background. If the submission of the query succeeds, the API returns a 201 status and an ID that refer to the query. In addition to the HTTP status 201, the `state` of \"enqueued\" means that the request succeeded.",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1AsyncQuery"
                  }
                },
                "get": {
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries/{queriesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. Name of the asynchronous query to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}`.",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/queries/[^/]+$",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1AsyncQuery"
                  },
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.queries.get",
                  "httpMethod": "GET",
                  "description": "Get query status If the query is still in progress, the `state` is set to \"running\" After the query has completed successfully, `state` is set to \"completed\"",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "path": "v1/{+parent}/queries",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "from": {
                      "type": "string",
                      "description": "Filter response list by returning asynchronous queries that created after this date time. Time must be in ISO date-time format like '2011-12-03T10:15:30Z'.",
                      "location": "query"
                    },
                    "submittedBy": {
                      "location": "query",
                      "description": "Filter response list by user who submitted queries.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. The parent resource name. Must be of the form `organizations/{org}/environments/{env}`.",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "to": {
                      "type": "string",
                      "description": "Filter response list by returning asynchronous queries that created before this date time. Time must be in ISO date-time format like '2011-12-03T10:16:30Z'.",
                      "location": "query"
                    },
                    "status": {
                      "type": "string",
                      "location": "query",
                      "description": "Filter response list by asynchronous query status."
                    },
                    "dataset": {
                      "location": "query",
                      "type": "string",
                      "description": "Filter response list by dataset. Example: `api`, `mint`"
                    },
                    "inclQueriesWithoutReport": {
                      "type": "string",
                      "description": "Flag to include asynchronous queries that don't have a report denifition.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "id": "apigee.organizations.environments.queries.list",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries",
                  "description": "Return a list of Asynchronous Queries",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1ListAsyncQueriesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getResult": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/queries/{queriesId}/result",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "description": "After the query is completed, use this API to retrieve the results. If the request succeeds, and there is a non-zero result set, the result is downloaded to the client as a zipped JSON file. The name of the downloaded file will be: OfflineQueryResult-.zip Example: `OfflineQueryResult-9cfc0d85-0f30-46d6-ae6f-318d0cb961bd.zip`",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/queries/[^/]+/result$",
                      "type": "string",
                      "description": "Required. Name of the asynchronous query result to get. Must be of the form `organizations/{org}/environments/{env}/queries/{queryId}/result`.",
                      "required": true
                    }
                  },
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleApiHttpBody"
                  },
                  "id": "apigee.organizations.environments.queries.getResult"
                }
              }
            },
            "optimizedStats": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/optimizedStats/{optimizedStatsId}",
                  "parameters": {
                    "accuracy": {
                      "location": "query",
                      "type": "string",
                      "description": "Legacy field: not used anymore."
                    },
                    "sortby": {
                      "type": "string",
                      "description": "Comma separated list of columns to sort the final result.",
                      "location": "query"
                    },
                    "topk": {
                      "type": "string",
                      "location": "query",
                      "description": "Take 'top k' results from results, for example, to return the top 5 results 'topk=5'."
                    },
                    "timeRange": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. Time interval for the interactive query. Time range is specified as start~end E.g. 04/15/2017 00:00~05/15/2017 23:59"
                    },
                    "realtime": {
                      "description": "Legacy field: not used anymore.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "offset": {
                      "type": "string",
                      "location": "query",
                      "description": "Use offset with limit to enable pagination of results. For example, to display results 11-20, set limit to '10' and offset to '10'."
                    },
                    "limit": {
                      "location": "query",
                      "description": "This parameter is used to limit the number of result items. Default and the max value is 14400.",
                      "type": "string"
                    },
                    "sonar": {
                      "location": "query",
                      "type": "boolean",
                      "description": "This parameter routes the query to api monitoring service for last hour."
                    },
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name for which the interactive query will be executed. Must be of the form `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}` Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host. The value of dimensions should be comma separated list as shown below `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/optimizedStats/.*$",
                      "location": "path"
                    },
                    "timeUnit": {
                      "type": "string",
                      "description": "A value of second, minute, hour, day, week, month. Time Unit specifies the granularity of metrics returned.",
                      "location": "query"
                    },
                    "sort": {
                      "location": "query",
                      "description": "This parameter specifies if the sort order should be ascending or descending Supported values are DESC and ASC.",
                      "type": "string"
                    },
                    "aggTable": {
                      "location": "query",
                      "description": "If customers want to query custom aggregate tables, then this parameter can be used to specify the table name. If this parameter is skipped, then Edge Query will try to retrieve the data from fact tables which will be expensive.",
                      "type": "string"
                    },
                    "tzo": {
                      "description": "This parameters contains the timezone offset value.",
                      "type": "string",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Enables drill-down on specific dimension values.",
                      "type": "string",
                      "location": "query"
                    },
                    "tsAscending": {
                      "location": "query",
                      "description": "Lists timestamps in ascending order if set to true. Recommend setting this value to true if you are using sortby with sort=DESC.",
                      "type": "boolean"
                    },
                    "select": {
                      "type": "string",
                      "description": "Required. The select parameter contains a comma separated list of metrics. E.g. sum(message_count),sum(error_count)",
                      "location": "query"
                    }
                  },
                  "id": "apigee.organizations.environments.optimizedStats.get",
                  "httpMethod": "GET",
                  "description": "This api is similar to GetStats except that the response is less verbose. In the current scheme, a query parameter _optimized instructs Edge Analytics to change the response but since this behavior is not possible with protocol buffer and since this parameter is predominantly used by Edge UI, we are introducing a separate api.",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudApigeeV1OptimizedStats"
                  }
                }
              }
            },
            "sharedflows": {
              "resources": {
                "deployments": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListDeploymentsResponse"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+$",
                          "location": "path",
                          "description": "Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}`",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/deployments",
                      "path": "v1/{+parent}/deployments",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.environments.sharedflows.deployments.list",
                      "description": "Lists all deployments of a shared flow in an environment.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                },
                "revisions": {
                  "methods": {
                    "getDeployments": {
                      "httpMethod": "GET",
                      "description": "Gets the deployment of a shared flow revision and actual state reported by runtime pods.",
                      "id": "apigee.organizations.environments.sharedflows.revisions.getDeployments",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. Name representing a shared flow in an environment in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "path": "v1/{+name}/deployments"
                    },
                    "undeploy": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}/deployments",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "id": "apigee.organizations.environments.sharedflows.revisions.undeploy",
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. Name of the shared flow revision to undeploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`"
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "description": "Undeploys a shared flow revision from an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.delete` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.undeploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`",
                      "httpMethod": "DELETE",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "deploy": {
                      "path": "v1/{+name}/deployments",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "apigee.organizations.environments.sharedflows.revisions.deploy",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/sharedflows/{sharedflowsId}/revisions/{revisionsId}/deployments",
                      "description": "Deploys a revision of a shared flow. If another revision of the same shared flow is currently deployed, set the `override` parameter to `true` to have this revision replace the currently deployed revision. You cannot use a shared flow until it has been deployed to an environment. For a request path `organizations/{org}/environments/{env}/sharedflows/{sf}/revisions/{rev}/deployments`, two permissions are required: * `apigee.deployments.create` on the resource `organizations/{org}/environments/{env}` * `apigee.sharedflowrevisions.deploy` on the resource `organizations/{org}/sharedflows/{sf}/revisions/{rev}`",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Deployment"
                      },
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/sharedflows/[^/]+/revisions/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. Name of the shared flow revision to deploy in the following format: `organizations/{org}/environments/{env}/sharedflows/{sharedflow}/revisions/{rev}`",
                          "required": true
                        },
                        "override": {
                          "description": "Flag that specifies whether to force the deployment of the new revision over the currently deployed revision by overriding conflict checks. If an existing shared flow revision is deployed, to ensure seamless deployment with no downtime, set this parameter to `true`. In this case, hybrid deploys the new revision fully before undeploying the existing revision. If set to `false`, you must undeploy the existing revision before deploying the new revision.",
                          "location": "query",
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            },
            "targetservers": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.targetservers.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the TargetServer to get. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Gets a TargetServer resource.",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  }
                },
                "create": {
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent environment name under which the TargetServer will be created. Must be of the form `organizations/{org}/environments/{env}`.",
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "name": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The ID to give the TargetServer. This will overwrite the value in TargetServer."
                    }
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers",
                  "path": "v1/{+parent}/targetservers",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "description": "Creates a TargetServer in the specified environment.",
                  "id": "apigee.organizations.environments.targetservers.create",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "path": "v1/{+name}",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "description": "Deletes a TargetServer from an environment. Returns the deleted TargetServer resource.",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the TargetServer to delete. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.environments.targetservers.delete",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "update": {
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "httpMethod": "PUT",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1TargetServer"
                  },
                  "path": "v1/{+name}",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/targetservers/{targetserversId}",
                  "id": "apigee.organizations.environments.targetservers.update",
                  "description": "Updates an existing TargetServer. Note that this operation has PUT semantics; it will replace the entirety of the existing TargetServer with the resource in the request body.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the TargetServer to replace. Must be of the form `organizations/{org}/environments/{env}/targetservers/{target_server_id}`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/targetservers/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "analytics": {
              "resources": {
                "admin": {
                  "methods": {
                    "getSchemav2": {
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+name}",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/admin/schemav2",
                      "description": "Get a list of metrics and dimensions which can be used for creating analytics queries and reports. Each schema element contains the name of the field with its associated type and if it is either custom field or standard field.",
                      "id": "apigee.organizations.environments.analytics.admin.getSchemav2",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Schema"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "description": "Required. The parent organization and environment names. Must be of the form `organizations/{org}/environments/{env}/analytics/admin/schemav2`.",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/analytics/admin/schemav2$",
                          "location": "path"
                        },
                        "type": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. Type refers to the dataset name whose schema needs to be retrieved E.g. type=fact or type=agg_cus1"
                        }
                      },
                      "httpMethod": "GET"
                    }
                  }
                },
                "exports": {
                  "methods": {
                    "list": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/exports",
                      "id": "apigee.organizations.environments.analytics.exports.list",
                      "path": "v1/{+parent}/analytics/exports",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1ListExportsResponse"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists the details and status of all analytics export jobs belonging to the parent organization and environment.",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "required": true,
                          "description": "Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`.",
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/analytics/exports/[^/]+$",
                          "description": "Required. Resource name of the export to get.",
                          "location": "path",
                          "type": "string"
                        }
                      },
                      "description": "Gets the details and status of an analytics export job. If the export job is still in progress, its `state` is set to \"running\". After the export job has completed successfully, its `state` is set to \"completed\". If the export job fails, its `state` is set to `failed`.",
                      "httpMethod": "GET",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/exports/{exportsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.environments.analytics.exports.get",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Export"
                      },
                      "path": "v1/{+name}"
                    },
                    "create": {
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/analytics/exports",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^organizations/[^/]+/environments/[^/]+$",
                          "required": true,
                          "description": "Required. Names of the parent organization and environment. Must be of the form `organizations/{org}/environments/{env}`."
                        }
                      },
                      "description": "Submit a data export job to be processed in the background. If the request is successful, the API returns a 201 status, a URI that can be used to retrieve the status of the export job, and the `state` value of \"enqueued\".",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1/{+parent}/analytics/exports",
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GoogleCloudApigeeV1ExportRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Export"
                      },
                      "id": "apigee.organizations.environments.analytics.exports.create",
                      "parameterOrder": [
                        "parent"
                      ]
                    }
                  }
                }
              }
            },
            "keyvaluemaps": {
              "methods": {
                "delete": {
                  "id": "apigee.organizations.environments.keyvaluemaps.delete",
                  "path": "v1/{+name}",
                  "description": "Delete a key value map in an environment.",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keyvaluemaps/{keyvaluemapsId}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keyvaluemaps/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the key value map. Must be of the form `organizations/{organization}/environments/{environment}/keyvaluemaps/{keyvaluemap}`."
                    }
                  }
                },
                "create": {
                  "id": "apigee.organizations.environments.keyvaluemaps.create",
                  "path": "v1/{+parent}/keyvaluemaps",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a key value map in an environment.",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keyvaluemaps",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1KeyValueMap"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the environment in which to create the key value map. Must be of the form `organizations/{organization}/environments/{environment}`.",
                      "location": "path"
                    }
                  }
                }
              }
            },
            "flowhooks": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the flow hook in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns the name of the shared flow attached to the specified flow hook. If there's no shared flow attached to the flow hook, the API does not return an error; it simply does not return a name in the response.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "id": "apigee.organizations.environments.flowhooks.get",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}"
                },
                "detachSharedFlowFromFlowHook": {
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the flow hook to detach in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "path": "v1/{+name}",
                  "description": "Detaches a shared flow from a flow hook.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigee.organizations.environments.flowhooks.detachSharedFlowFromFlowHook",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}",
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "attachSharedFlowToFlowHook": {
                  "httpMethod": "PUT",
                  "path": "v1/{+name}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Attaches a shared flow to a flow hook.",
                  "id": "apigee.organizations.environments.flowhooks.attachSharedFlowToFlowHook",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/flowhooks/{flowhooksId}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. Name of the flow hook to which the shared flow should be attached in the following format: `organizations/{org}/environments/{env}/flowhooks/{flowhook}`",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/flowhooks/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudApigeeV1FlowHook"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "stats": {
              "methods": {
                "get": {
                  "httpMethod": "GET",
                  "description": "Retrieve metrics grouped by dimensions. The types of metrics you can retrieve include traffic, message counts, API call latency, response size, and cache hits and counts. Dimensions let you view metrics in meaningful groups. The stats api does accept dimensions as path params. The dimensions are optional in which case the metrics are computed on the entire data for the given timerange.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "apigee.organizations.environments.stats.get",
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/stats/{statsId}",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Stats"
                  },
                  "path": "v1/{+name}",
                  "parameters": {
                    "tsAscending": {
                      "type": "boolean",
                      "description": "Lists timestamps in ascending order if set to true. Recommend setting this value to true if you are using sortby with sort=DESC.",
                      "location": "query"
                    },
                    "tzo": {
                      "type": "string",
                      "location": "query",
                      "description": "This parameters contains the timezone offset value."
                    },
                    "timeUnit": {
                      "location": "query",
                      "type": "string",
                      "description": "A value of second, minute, hour, day, week, month. Time Unit specifies the granularity of metrics returned."
                    },
                    "sonar": {
                      "location": "query",
                      "type": "boolean",
                      "description": "This parameter routes the query to api monitoring service for last hour."
                    },
                    "topk": {
                      "description": "Take 'top k' results from results, for example, to return the top 5 results 'topk=5'.",
                      "type": "string",
                      "location": "query"
                    },
                    "sort": {
                      "description": "This parameter specifies if the sort order should be ascending or descending Supported values are DESC and ASC.",
                      "type": "string",
                      "location": "query"
                    },
                    "limit": {
                      "type": "string",
                      "location": "query",
                      "description": "This parameter is used to limit the number of result items. Default and the max value is 14400."
                    },
                    "sortby": {
                      "description": "Comma separated list of columns to sort the final result.",
                      "type": "string",
                      "location": "query"
                    },
                    "offset": {
                      "description": "Use offset with limit to enable pagination of results. For example, to display results 11-20, set limit to '10' and offset to '10'.",
                      "type": "string",
                      "location": "query"
                    },
                    "accuracy": {
                      "type": "string",
                      "location": "query",
                      "description": "Legacy field: not used anymore. This field is present to support UI calls which still use this parameter."
                    },
                    "filter": {
                      "type": "string",
                      "description": "Enables drill-down on specific dimension values",
                      "location": "query"
                    },
                    "aggTable": {
                      "type": "string",
                      "location": "query",
                      "description": "If customers want to query custom aggregate tables, then this parameter can be used to specify the table name. If this parameter is skipped, then Edge Query will try to retrieve the data from fact tables which will be expensive."
                    },
                    "realtime": {
                      "description": "Legacy field: not used anymore.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/stats/.*$",
                      "description": "Required. The resource name for which the interactive query will be executed. Must be of the form `organizations/{organization_id}/environments/{environment_id/stats/{dimensions}` Dimensions let you view metrics in meaningful groupings. E.g. apiproxy, target_host. The value of dimensions should be comma separated list as shown below `organizations/{org}/environments/{env}/stats/apiproxy,request_verb`",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "timeRange": {
                      "type": "string",
                      "location": "query",
                      "description": "Time interval for the interactive query. Time range is specified as start~end E.g. 04/15/2017 00:00~05/15/2017 23:59"
                    },
                    "select": {
                      "description": "The select parameter contains a comma separated list of metrics. E.g. sum(message_count),sum(error_count)",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "caches": {
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Cache resource name of the form: `organizations/{organization_id}/environments/{environment_id}/caches/{cache_id}`",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/caches/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/caches/{cachesId}",
                  "httpMethod": "DELETE",
                  "id": "apigee.organizations.environments.caches.delete",
                  "path": "v1/{+name}",
                  "description": "Deletes a cache.",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  }
                }
              }
            },
            "keystores": {
              "methods": {
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "id": "apigee.organizations.environments.keystores.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Optional. Overrides the value in Keystore.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the environment in which to create the keystore. Must be of the form `organizations/{organization}/environments/{environment}`.",
                      "required": true
                    }
                  },
                  "path": "v1/{+parent}/keystores",
                  "request": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores",
                  "description": "Creates a keystore or truststore: * Keystore: Contains certificates and their associated keys. * Truststore: Contains trusted certificates used to validate a server's certificate. These certificates are typically self-signed certificates or certificates that are not signed by a trusted CA."
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}",
                  "description": "Deletes a keystore or truststore.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "id": "apigee.organizations.environments.keystores.delete",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of keystore to delete. Must be of the form `organizations/{organization}/environments/{environment}/keystores/{keystore}`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$",
                      "location": "path"
                    }
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "apigee.organizations.environments.keystores.get",
                  "description": "Gets a keystore or truststore.",
                  "response": {
                    "$ref": "GoogleCloudApigeeV1Keystore"
                  },
                  "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}",
                  "parameters": {
                    "name": {
                      "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of keystore. Must be of the form `organizations/{organization}/environments/{environment}/keystores/{keystore}`.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "httpMethod": "GET"
                }
              },
              "resources": {
                "aliases": {
                  "methods": {
                    "update": {
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the alias. Must be of the form `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$"
                        },
                        "ignoreNewlineValidation": {
                          "type": "boolean",
                          "description": "If `true`, do not throw an error when the file contains a chain with no newline between each certificate. By default, a newline is needed between each certificate in a chain.",
                          "location": "query"
                        },
                        "ignoreExpiryValidation": {
                          "location": "query",
                          "type": "boolean",
                          "description": "Required. If `true`, no expiry validation will be performed."
                        }
                      },
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "id": "apigee.organizations.environments.keystores.aliases.update",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PUT",
                      "description": "Updates the certificate in an alias."
                    },
                    "get": {
                      "description": "Gets an alias.",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "id": "apigee.organizations.environments.keystores.aliases.get",
                      "path": "v1/{+name}",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "description": "Required. The name of the alias. Must be of the form `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`."
                        }
                      }
                    },
                    "csr": {
                      "parameters": {
                        "name": {
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the alias. Must be of the form `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "path": "v1/{+name}/csr",
                      "description": "Generates a PKCS #10 Certificate Signing Request for the private key in an alias.",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "apigee.organizations.environments.keystores.aliases.csr",
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}/csr"
                    },
                    "getCertificate": {
                      "description": "Gets the certificate from an alias in PEM-encoded form.",
                      "id": "apigee.organizations.environments.keystores.aliases.getCertificate",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "type": "string",
                          "description": "Required. The name of the alias. Must be of the form `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`."
                        }
                      },
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}/certificate",
                      "path": "v1/{+name}/certificate"
                    },
                    "create": {
                      "description": "Creates an alias from a key, certificate pair. The structure of the request is controlled by the `format` query parameter: * `keycertfile` - Separate PEM-encoded key and certificate files are uploaded. The request must have `Content-Type: multipart/form-data` and include fields `keyFile` and `certFile`. If uploading to a truststore, omit `keyFile`. * `pkcs12` - A PKCS12 file is uploaded. The request must have `Content-Type: multipart/form-data` with the file provided in the only field. * `selfsignedcert` - A new private key and certificate are generated. The request must have `Content-Type: application/json` and a body of CertificateGenerationSpec.",
                      "parameters": {
                        "ignoreExpiryValidation": {
                          "description": "If `true`, no expiry validation will be performed.",
                          "location": "query",
                          "type": "boolean"
                        },
                        "alias": {
                          "description": "The alias for the key, certificate pair. Values must match regular expression `[\\w\\s-.]{1,255}`. This must be provided for all formats except 'selfsignedcert'; self-signed certs may specify the alias in either this parameter or the JSON body.",
                          "type": "string",
                          "location": "query"
                        },
                        "ignoreNewlineValidation": {
                          "description": "If `true`, do not throw an error when the file contains a chain with no newline between each certificate. By default, a newline is needed between each certificate in a chain.",
                          "type": "boolean",
                          "location": "query"
                        },
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the keystore. Must be of the form `organizations/{organization}/environments/{environment}/keystores/{keystore}`.",
                          "required": true,
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+$"
                        },
                        "_password": {
                          "description": "The password for the private key file, if it exists.",
                          "location": "query",
                          "type": "string"
                        },
                        "format": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The format of the data. Must be either `selfsignedcert`, `keycertfile`, or `pkcs12`."
                        }
                      },
                      "id": "apigee.organizations.environments.keystores.aliases.create",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "httpMethod": "POST",
                      "path": "v1/{+parent}/aliases",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases",
                      "request": {
                        "$ref": "GoogleApiHttpBody"
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "delete": {
                      "path": "v1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/organizations/{organizationsId}/environments/{environmentsId}/keystores/{keystoresId}/aliases/{aliasesId}",
                      "response": {
                        "$ref": "GoogleCloudApigeeV1Alias"
                      },
                      "description": "Deletes an alias.",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the alias. Must be of the form `organizations/{organization}/environments/{environment}/keystores/{keystore}/aliases/{alias}`.",
                          "required": true,
                          "location": "path",
                          "pattern": "^organizations/[^/]+/environments/[^/]+/keystores/[^/]+/aliases/[^/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "id": "apigee.organizations.environments.keystores.aliases.delete"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "methods": {
        "provisionOrganization": {
          "parameterOrder": [
            "project"
          ],
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "location": "path",
              "required": true,
              "pattern": "^projects/[^/]+$",
              "type": "string",
              "description": "Required. Name of the GCP project with which to associate the Apigee organization."
            }
          },
          "response": {
            "$ref": "GoogleLongrunningOperation"
          },
          "id": "apigee.projects.provisionOrganization",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "path": "v1/{+project}:provisionOrganization",
          "request": {
            "$ref": "GoogleCloudApigeeV1ProvisionOrganizationRequest"
          },
          "flatPath": "v1/projects/{projectsId}:provisionOrganization",
          "description": "Provisions a new Apigee organization with a functioning runtime. This is the standard way to create trial organizations for a free Apigee trial."
        }
      }
    },
    "hybrid": {
      "resources": {
        "issuers": {
          "methods": {
            "list": {
              "response": {
                "$ref": "GoogleCloudApigeeV1ListHybridIssuersResponse"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^hybrid/issuers$",
                  "description": "Required. Must be of the form `hybrid/issuers`.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "apigee.hybrid.issuers.list",
              "path": "v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists hybrid services and its trusted issuers service account ids. This api is authenticated and unauthorized(allow all the users) and used by runtime authn-authz service to query control plane's issuer service account ids.",
              "flatPath": "v1/hybrid/issuers"
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "basePath": "",
  "version": "v1"
}
