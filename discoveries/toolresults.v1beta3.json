{
  "servicePath": "",
  "kind": "discovery#restDescription",
  "description": "API to publish and access results from developer tools.",
  "title": "Cloud Tool Results API",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "basePath": "",
  "documentationLink": "https://firebase.google.com/docs/test-lab/",
  "version": "v1beta3",
  "id": "toolresults:v1beta3",
  "parameters": {
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "location": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "description": "Data format for response."
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    }
  },
  "revision": "20200709",
  "rootUrl": "https://www.googleapis.com/",
  "schemas": {
    "FailureDetail": {
      "description": "Details for an outcome with a FAILURE outcome summary.",
      "type": "object",
      "properties": {
        "crashed": {
          "type": "boolean",
          "description": "If the failure was severe because the system (app) under test crashed."
        },
        "unableToCrawl": {
          "description": "If the robo was unable to crawl the app; perhaps because the app did not\nstart.",
          "type": "boolean"
        },
        "otherNativeCrash": {
          "type": "boolean",
          "description": "If a native process (including any other than the app) crashed."
        },
        "timedOut": {
          "description": "If the test overran some time limit, and that is why it failed.",
          "type": "boolean"
        },
        "notInstalled": {
          "description": "If an app is not installed and thus no test can be run with the app.\nThis might be caused by trying to run a test on an unsupported platform.",
          "type": "boolean"
        }
      },
      "id": "FailureDetail"
    },
    "TestSuiteOverview": {
      "id": "TestSuiteOverview",
      "type": "object",
      "properties": {
        "errorCount": {
          "type": "integer",
          "description": "Number of test cases in error, typically set by the service by parsing the\nxml_source.\n\n- In create/response: always set\n- In update request: never",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "The name of the test suite.\n\n- In create/response: always set\n- In update request: never"
        },
        "flakyCount": {
          "format": "int32",
          "type": "integer",
          "description": "Number of flaky test cases, set by the service by rolling up flaky test\nattempts.\n\nPresent only for rollup test suite overview at environment level. A step\ncannot have flaky test cases."
        },
        "xmlSource": {
          "$ref": "FileReference",
          "description": "If this test suite was parsed from XML, this is the URI where the original\nXML file is stored.\n\nNote: Multiple test suites can share the same xml_source\n\nReturns INVALID_ARGUMENT if the uri format is not supported.\n\n- In create/response: optional\n- In update request: never"
        },
        "totalCount": {
          "format": "int32",
          "description": "Number of test cases, typically set by the service by parsing the\nxml_source.\n\n- In create/response: always set\n- In update request: never",
          "type": "integer"
        },
        "elapsedTime": {
          "description": "Elapsed time of test suite.",
          "$ref": "Duration"
        },
        "failureCount": {
          "description": "Number of failed test cases, typically set by the service by parsing the\nxml_source. May also be set by the user.\n\n- In create/response: always set\n- In update request: never",
          "type": "integer",
          "format": "int32"
        },
        "skippedCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of test cases not run, typically set by the service by parsing the\nxml_source.\n\n- In create/response: always set\n- In update request: never"
        }
      },
      "description": "A summary of a test suite result either parsed from XML or uploaded\ndirectly by a user.\n\nNote: the API related comments are for StepService only. This message is\nalso being used in ExecutionService in a read only mode for the corresponding\nstep."
    },
    "PerfSampleSeries": {
      "type": "object",
      "id": "PerfSampleSeries",
      "description": "Resource representing a collection of performance samples (or data points)",
      "properties": {
        "historyId": {
          "description": "A tool results history ID.\n@OutputOnly",
          "type": "string"
        },
        "stepId": {
          "type": "string",
          "description": "A tool results step ID.\n@OutputOnly"
        },
        "executionId": {
          "description": "A tool results execution ID.\n@OutputOnly",
          "type": "string"
        },
        "sampleSeriesId": {
          "type": "string",
          "description": "A sample series id\n@OutputOnly"
        },
        "projectId": {
          "type": "string",
          "description": "The cloud project\n@OutputOnly"
        },
        "basicPerfSampleSeries": {
          "description": "Basic series represented by a line chart",
          "$ref": "BasicPerfSampleSeries"
        }
      }
    },
    "EnvironmentDimensionValueEntry": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "id": "EnvironmentDimensionValueEntry",
      "type": "object"
    },
    "ToolExecutionStep": {
      "id": "ToolExecutionStep",
      "properties": {
        "toolExecution": {
          "$ref": "ToolExecution",
          "description": "A Tool execution.\n\n- In response: present if set by create/update request\n- In create/update request: optional"
        }
      },
      "type": "object",
      "description": "Generic tool step to be used for binaries we do not explicitly support.\nFor example: running cp to copy artifacts from one location to another."
    },
    "MergedResult": {
      "type": "object",
      "description": "Merged test result for environment.\n\nIf the environment has only one step (no reruns or shards), then the merged\nresult is the same as the step result. If the environment has multiple shards\nand/or reruns, then the results of shards and reruns that belong to the same\nenvironment are merged into one environment result.",
      "id": "MergedResult",
      "properties": {
        "outcome": {
          "description": "Outcome of the resource",
          "$ref": "Outcome"
        },
        "state": {
          "enumDescriptions": [
            "Should never be in this state. Exists for proto deserialization backward\ncompatibility.",
            "The Execution/Step is created, ready to run, but not running yet.\nIf an Execution/Step is created without initial state, it is assumed\nthat the Execution/Step is in PENDING state.",
            "The Execution/Step is in progress.",
            "The finalized, immutable state. Steps/Executions in this state cannot be\nmodified."
          ],
          "description": "State of the resource",
          "type": "string",
          "enum": [
            "UNKNOWN_STATE",
            "PENDING",
            "IN_PROGRESS",
            "COMPLETE"
          ]
        },
        "testSuiteOverviews": {
          "description": "The combined and rolled-up result of each test suite that was run as part\n of this environment.\n\n Combining:\n When the test cases from a suite are run in different steps (sharding),\n the results are added back together in one overview. (e.g., if shard1 has\n 2 failures and shard2 has 1 failure than the overview failure_count = 3).\n\n Rollup:\n When test cases from the same suite are run multiple times (flaky), the\n results are combined (e.g., if testcase1.run1 fails, testcase1.run2\n passes, and both testcase2.run1 and testcase2.run2 fail then the overview\n flaky_count = 1 and failure_count = 1).",
          "items": {
            "$ref": "TestSuiteOverview"
          },
          "type": "array"
        }
      }
    },
    "BatchCreatePerfSamplesRequest": {
      "properties": {
        "perfSamples": {
          "items": {
            "$ref": "PerfSample"
          },
          "type": "array",
          "description": "The set of PerfSamples to create should not include existing timestamps"
        }
      },
      "type": "object",
      "id": "BatchCreatePerfSamplesRequest",
      "description": "The request must provide up to a maximum of 5000 samples to be\ncreated; a larger sample size will cause an INVALID_ARGUMENT error"
    },
    "MemoryInfo": {
      "type": "object",
      "id": "MemoryInfo",
      "properties": {
        "memoryTotalInKibibyte": {
          "description": "Total memory available on the device in KiB",
          "type": "string",
          "format": "int64"
        },
        "memoryCapInKibibyte": {
          "description": "Maximum memory that can be allocated to the process in KiB",
          "format": "int64",
          "type": "string"
        }
      }
    },
    "Execution": {
      "properties": {
        "creationTime": {
          "$ref": "Timestamp",
          "description": "The time when the Execution was created.\n\nThis value will be set automatically when CreateExecution is called.\n\n- In response: always set\n- In create/update request: never set"
        },
        "testExecutionMatrixId": {
          "type": "string",
          "description": "TestExecution Matrix ID that the TestExecutionService uses.\n\n- In response: present if set by create\n- In create: optional\n- In update: never set"
        },
        "completionTime": {
          "$ref": "Timestamp",
          "description": "The time when the Execution status transitioned to COMPLETE.\n\nThis value will be set automatically when state transitions to\nCOMPLETE.\n\n- In response: set if the execution state is COMPLETE.\n- In create/update request: never set"
        },
        "outcome": {
          "description": "Classify the result, for example into SUCCESS or FAILURE\n\n- In response: present if set by create/update request\n- In create/update request: optional",
          "$ref": "Outcome"
        },
        "dimensionDefinitions": {
          "items": {
            "$ref": "MatrixDimensionDefinition"
          },
          "description": "The dimensions along which different steps in this execution may vary.\nThis must remain fixed over the life of the execution.\n\nReturns INVALID_ARGUMENT if this field is set in an update request.\n\nReturns INVALID_ARGUMENT if the same name occurs in more than one\ndimension_definition.\n\nReturns INVALID_ARGUMENT if the size of the list is over 100.\n\n- In response: present if set by create\n- In create request: optional\n- In update request: never set",
          "type": "array"
        },
        "executionId": {
          "type": "string",
          "description": "A unique identifier within a History for this Execution.\n\nReturns INVALID_ARGUMENT if this field is set or overwritten by the caller.\n\n- In response always set\n- In create/update request: never set"
        },
        "specification": {
          "description": "Lightweight information about execution request.\n\n- In response: present if set by create\n- In create: optional\n- In update: optional",
          "$ref": "Specification"
        },
        "state": {
          "enum": [
            "UNKNOWN_STATE",
            "PENDING",
            "IN_PROGRESS",
            "COMPLETE"
          ],
          "enumDescriptions": [
            "Should never be in this state. Exists for proto deserialization backward\ncompatibility.",
            "The Execution/Step is created, ready to run, but not running yet.\nIf an Execution/Step is created without initial state, it is assumed\nthat the Execution/Step is in PENDING state.",
            "The Execution/Step is in progress.",
            "The finalized, immutable state. Steps/Executions in this state cannot be\nmodified."
          ],
          "type": "string",
          "description": "The initial state is IN_PROGRESS.\n\nThe only legal state transitions is from IN_PROGRESS to COMPLETE.\n\nA PRECONDITION_FAILED will be returned if an invalid transition is\nrequested.\n\nThe state can only be set to COMPLETE once. A FAILED_PRECONDITION will be\nreturned if the state is set to COMPLETE multiple times.\n\nIf the state is set to COMPLETE, all the in-progress steps within the\nexecution will be set as COMPLETE. If the outcome of the step is not set,\nthe outcome will be set to INCONCLUSIVE.\n\n- In response always set\n- In create/update request: optional"
        }
      },
      "type": "object",
      "id": "Execution",
      "description": "An Execution represents a collection of Steps. For instance, it could\nrepresent:\n   - a mobile test executed across a range of device configurations\n   - a jenkins job with a build step followed by a test step\n\nThe maximum size of an execution message is 1 MiB.\n\nAn Execution can be updated until its state is set to COMPLETE at which\npoint it becomes immutable."
    },
    "InAppPurchasesFound": {
      "properties": {
        "inAppPurchasesFlowsExplored": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of in-app purchases flows explored: how many times the\nrobo tries to buy a SKU."
        },
        "inAppPurchasesFlowsStarted": {
          "description": "The total number of in-app purchases flows started.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Additional details of in-app purchases encountered during the crawl.",
      "id": "InAppPurchasesFound",
      "type": "object"
    },
    "ListStepsResponse": {
      "type": "object",
      "id": "ListStepsResponse",
      "description": "Response message for StepService.List.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A continuation token to resume the query at the next item.\n\nIf set, indicates that there are more steps to read, by calling list again\nwith this value in the page_token field."
        },
        "steps": {
          "type": "array",
          "description": "Steps.",
          "items": {
            "$ref": "Step"
          }
        }
      }
    },
    "Step": {
      "type": "object",
      "id": "Step",
      "description": "A Step represents a single operation performed as part of\nExecution. A step can be used to represent the execution of a tool (\nfor example a test runner execution or an execution of a compiler).\n\nSteps can overlap (for instance two steps might have the same\nstart time if some operations are done in parallel).\n\nHere is an example, let's consider that we have a continuous build is\nexecuting a test runner for each iteration. The workflow would look like:\n- user creates a Execution with id 1\n- user creates an TestExecutionStep with id 100 for Execution 1\n- user update TestExecutionStep with id 100 to add a raw xml log\n    + the service parses the xml logs and returns a TestExecutionStep with\n     updated TestResult(s).\n- user update the status of TestExecutionStep with id 100 to COMPLETE\n\nA Step can be updated until its state is set to COMPLETE at which\npoints it becomes immutable.\n\nNext tag: 27",
      "properties": {
        "state": {
          "enum": [
            "UNKNOWN_STATE",
            "PENDING",
            "IN_PROGRESS",
            "COMPLETE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Should never be in this state. Exists for proto deserialization backward\ncompatibility.",
            "The Execution/Step is created, ready to run, but not running yet.\nIf an Execution/Step is created without initial state, it is assumed\nthat the Execution/Step is in PENDING state.",
            "The Execution/Step is in progress.",
            "The finalized, immutable state. Steps/Executions in this state cannot be\nmodified."
          ],
          "description": "The initial state is IN_PROGRESS.\nThe only legal state transitions are\n* IN_PROGRESS -\u003e COMPLETE\n\nA PRECONDITION_FAILED will be returned if an invalid transition is\nrequested.\n\nIt is valid to create Step with a state set to COMPLETE.\nThe state can only be set to COMPLETE once. A PRECONDITION_FAILED will be\nreturned if the state is set to COMPLETE multiple times.\n\n- In response: always set\n- In create/update request: optional"
        },
        "multiStep": {
          "$ref": "MultiStep",
          "description": "Details when multiple steps are run with the same configuration as a group.\nThese details can be used identify which group this step is part of.\nIt also identifies the groups 'primary step' which indexes all the group\nmembers.\n\n- In response: present if previously set.\n- In create request: optional, set iff this step was performed more than\nonce.\n- In update request: optional"
        },
        "description": {
          "type": "string",
          "description": "A description of this tool\nFor example: mvn clean package -D skipTests=true\n\n- In response: present if set by create/update request\n- In create/update request: optional"
        },
        "hasImages": {
          "description": "Whether any of the outputs of this step are images whose\nthumbnails can be fetched with ListThumbnails.\n\n- In response: always set\n- In create/update request: never set",
          "type": "boolean"
        },
        "toolExecutionStep": {
          "description": "An execution of a tool (used for steps we don't explicitly support).",
          "$ref": "ToolExecutionStep"
        },
        "labels": {
          "description": "Arbitrary user-supplied key/value pairs that are associated with the\nstep.\n\nUsers are responsible for managing the key namespace such that keys\ndon't accidentally collide.\n\nAn INVALID_ARGUMENT will be returned if the number of labels exceeds 100 or\nif the length of any of the keys or values exceeds 100 characters.\n\n- In response: always set\n- In create request: optional\n- In update request: optional; any new key/value pair will be added to the\n  map, and any new value for an existing key will update that key's value",
          "items": {
            "$ref": "StepLabelsEntry"
          },
          "type": "array"
        },
        "creationTime": {
          "$ref": "Timestamp",
          "description": "The time when the step was created.\n\n- In response: always set\n- In create/update request: never set"
        },
        "stepId": {
          "description": "A unique identifier within a Execution for this Step.\n\nReturns INVALID_ARGUMENT if this field is set or overwritten by the caller.\n\n- In response: always set\n- In create/update request: never set",
          "type": "string"
        },
        "testExecutionStep": {
          "$ref": "TestExecutionStep",
          "description": "An execution of a test runner."
        },
        "dimensionValue": {
          "items": {
            "$ref": "StepDimensionValueEntry"
          },
          "description": "If the execution containing this step has any dimension_definition set,\nthen this field allows the child to specify the values of the dimensions.\n\nThe keys must exactly match the dimension_definition of the execution.\n\nFor example, if the execution has\n`dimension_definition = ['attempt', 'device']`\nthen a step must define values for those dimensions, eg.\n`dimension_value = ['attempt': '1', 'device': 'Nexus 6']`\n\nIf a step does not participate in one dimension of the matrix,\nthe value for that dimension should be empty string.\nFor example, if one of the tests is executed by a runner which\ndoes not support retries, the step could have\n`dimension_value = ['attempt': '', 'device': 'Nexus 6']`\n\nIf the step does not participate in any dimensions of the matrix,\nit may leave dimension_value unset.\n\nA PRECONDITION_FAILED will be returned if any of the keys do not exist\nin the dimension_definition of the execution.\n\nA PRECONDITION_FAILED will be returned if another step in this execution\nalready has the same name and dimension_value, but differs on other data\nfields, for example, step field is different.\n\nA PRECONDITION_FAILED will be returned if dimension_value is set, and\nthere is a dimension_definition in the execution which is not specified\nas one of the keys.\n\n- In response: present if set by create\n- In create request: optional\n- In update request: never set",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "A short human-readable name to display in the UI.\nMaximum of 100 characters.\nFor example: Clean build\n\nA PRECONDITION_FAILED will be returned upon creating a new step if it\nshares its name and dimension_value with an existing step. If two steps\nrepresent a similar action, but have different dimension values, they\nshould share the same name. For instance, if the same set of tests is\nrun on two different platforms, the two steps should have the same name.\n\n- In response: always set\n- In create request: always set\n- In update request: never set"
        },
        "completionTime": {
          "$ref": "Timestamp",
          "description": "The time when the step status was set to complete.\n\nThis value will be set automatically when state transitions to\nCOMPLETE.\n\n- In response: set if the execution state is COMPLETE.\n- In create/update request: never set"
        },
        "outcome": {
          "$ref": "Outcome",
          "description": "Classification of the result, for example into SUCCESS or FAILURE\n\n- In response: present if set by create/update request\n- In create/update request: optional"
        },
        "deviceUsageDuration": {
          "$ref": "Duration",
          "description": "How much the device resource is used to perform the test.\n\nThis is the device usage used for billing purpose, which is different from\nthe run_duration, for example, infrastructure failure won't be charged for\ndevice usage.\n\nPRECONDITION_FAILED will be returned if one attempts to set a\ndevice_usage on a step which already has this field set.\n\n- In response: present if previously set.\n- In create request: optional\n- In update request: optional"
        },
        "runDuration": {
          "$ref": "Duration",
          "description": "How long it took for this step to run.\n\nIf unset, this is set to the difference between creation_time and\ncompletion_time when the step is set to the COMPLETE state. In some cases,\nit is appropriate to set this value separately: For instance, if a step is\ncreated, but the operation it represents is queued for a few minutes before\nit executes, it would be appropriate not to include the time spent queued\nin its run_duration.\n\nPRECONDITION_FAILED will be returned if one attempts to set a\nrun_duration on a step which already has this field set.\n\n- In response: present if previously set; always present on COMPLETE step\n- In create request: optional\n- In update request: optional"
        }
      }
    },
    "ScreenshotCluster": {
      "type": "object",
      "id": "ScreenshotCluster",
      "properties": {
        "clusterId": {
          "description": "A unique identifier for the cluster.\n@OutputOnly",
          "type": "string"
        },
        "activity": {
          "description": "A string that describes the activity of every screen in the cluster.",
          "type": "string"
        },
        "screens": {
          "description": "Full list of screens.",
          "type": "array",
          "items": {
            "$ref": "Screen"
          }
        },
        "keyScreen": {
          "description": "A singular screen that represents the cluster as a whole. This screen will\nact as the \"cover\" of the entire cluster. When users look at the clusters,\nonly the key screen from each cluster will be shown. Which screen is the\nkey screen is determined by the ClusteringAlgorithm",
          "$ref": "Screen"
        }
      }
    },
    "UnspecifiedWarning": {
      "type": "object",
      "properties": {},
      "id": "UnspecifiedWarning",
      "description": "Default unspecified warning."
    },
    "InsufficientCoverage": {
      "description": "A warning that Robo did not crawl potentially important parts of the app.",
      "properties": {},
      "type": "object",
      "id": "InsufficientCoverage"
    },
    "FileReference": {
      "type": "object",
      "id": "FileReference",
      "properties": {
        "fileUri": {
          "description": "The URI of a file stored in Google Cloud Storage.\n\nFor example: http://storage.googleapis.com/mybucket/path/to/test.xml\nor in gsutil format: gs://mybucket/path/to/test.xml\nwith version-specific info,\ngs://mybucket/path/to/test.xml#1360383693690000\n\nAn INVALID_ARGUMENT error will be returned if the URI format is not\nsupported.\n\n- In response: always set\n- In create/update request: always set",
          "type": "string"
        }
      },
      "description": "A reference to a file."
    },
    "AvailableDeepLinks": {
      "description": "A suggestion to use deep links for a Robo run.",
      "properties": {},
      "type": "object",
      "id": "AvailableDeepLinks"
    },
    "ListPerfSampleSeriesResponse": {
      "type": "object",
      "id": "ListPerfSampleSeriesResponse",
      "properties": {
        "perfSampleSeries": {
          "items": {
            "$ref": "PerfSampleSeries"
          },
          "type": "array",
          "description": "The resulting PerfSampleSeries sorted by id"
        }
      }
    },
    "StackTrace": {
      "id": "StackTrace",
      "description": "A stacktrace.",
      "type": "object",
      "properties": {
        "exception": {
          "type": "string",
          "description": "The stack trace message.\n\nRequired"
        }
      }
    },
    "RoboScriptExecution": {
      "id": "RoboScriptExecution",
      "type": "object",
      "description": "Execution stats for a user-provided Robo script.",
      "properties": {
        "totalActions": {
          "description": "The total number of actions in the Robo script.",
          "format": "int32",
          "type": "integer"
        },
        "successfulActions": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Robo script actions executed successfully."
        }
      }
    },
    "StepLabelsEntry": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "id": "StepLabelsEntry",
      "type": "object"
    },
    "PrimaryStep": {
      "description": "Stores rollup test status of multiple steps that were run as a group and\noutcome of each individual step.",
      "type": "object",
      "properties": {
        "individualOutcome": {
          "items": {
            "$ref": "IndividualOutcome"
          },
          "type": "array",
          "description": "Step Id and outcome of each individual step."
        },
        "rollUp": {
          "enumDescriptions": [
            "Do not use. For proto versioning only.",
            "The test matrix run was successful, for instance:\n- All the test cases passed.\n- Robo did not detect a crash of the application under test.",
            "A run failed, for instance:\n- One or more test case failed.\n- A test timed out.\n- The application under test crashed.",
            "Something unexpected happened. The run should still be considered\nunsuccessful but this is likely a transient problem and re-running the\ntest might be successful.",
            "All tests were skipped, for instance:\n- All device configurations were incompatible.",
            "A group of steps that were run with the same configuration had both\nfailure and success outcomes."
          ],
          "description": "Rollup test status of multiple steps that were run with the same\nconfiguration as a group.",
          "enum": [
            "UNSET",
            "SUCCESS",
            "FAILURE",
            "INCONCLUSIVE",
            "SKIPPED",
            "FLAKY"
          ],
          "type": "string"
        }
      },
      "id": "PrimaryStep"
    },
    "UsedRoboIgnoreDirective": {
      "properties": {
        "resourceName": {
          "description": "The name of the resource that was ignored.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Additional details of a used Robo directive with an ignore action.\nNote: This is a different scenario than unused directive.",
      "id": "UsedRoboIgnoreDirective"
    },
    "TestCase": {
      "type": "object",
      "properties": {
        "startTime": {
          "$ref": "Timestamp",
          "description": "The start time of the test case."
        },
        "testCaseReference": {
          "description": "Test case reference, e.g. name, class name and test suite name.\n\nRequired.",
          "$ref": "TestCaseReference"
        },
        "testCaseId": {
          "description": "A unique identifier within a Step for this Test Case.",
          "type": "string"
        },
        "toolOutputs": {
          "type": "array",
          "description": "References to opaque files of any format output by the tool execution.\n\n@OutputOnly",
          "items": {
            "$ref": "ToolOutputReference"
          }
        },
        "skippedMessage": {
          "description": "Why the test case was skipped.\n\nPresent only for skipped test case",
          "type": "string"
        },
        "stackTraces": {
          "description": "The stack trace details if the test case failed or encountered an error.\n\nThe maximum size of the stack traces is 100KiB, beyond which the stack\ntrack will be truncated.\n\nZero if the test case passed.",
          "items": {
            "$ref": "StackTrace"
          },
          "type": "array"
        },
        "status": {
          "type": "string",
          "description": "The status of the test case.\n\nRequired.",
          "enumDescriptions": [
            "Test passed.",
            "Test failed.",
            "Test encountered an error",
            "Test skipped",
            "Test flaked.\n\nPresent only for rollup test cases; test cases from steps that were run\nwith the same configuration had both failure and success outcomes."
          ],
          "enum": [
            "PASSED",
            "FAILED",
            "ERROR",
            "SKIPPED",
            "FLAKY"
          ]
        },
        "endTime": {
          "$ref": "Timestamp",
          "description": "The end time of the test case."
        },
        "elapsedTime": {
          "description": "The elapsed run time of the test case.\n\nRequired.",
          "$ref": "Duration"
        }
      },
      "id": "TestCase"
    },
    "ListStepThumbnailsResponse": {
      "description": "A response containing the thumbnails in a step.",
      "id": "ListStepThumbnailsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A continuation token to resume the query at the next item.\n\nIf set, indicates that there are more thumbnails to read, by calling list\nagain with this value in the page_token field.",
          "type": "string"
        },
        "thumbnails": {
          "type": "array",
          "description": "A list of image data.\n\nImages are returned in a deterministic order; they are ordered by these\nfactors, in order of\nimportance:\n* First, by their associated test case. Images without a test case are\n  considered greater than images with one.\n* Second, by their creation time. Images without a creation time are\n  greater than images with one.\n* Third, by the order in which they were added to the step (by calls to\n  CreateStep or UpdateStep).",
          "items": {
            "$ref": "Image"
          }
        }
      }
    },
    "SkippedDetail": {
      "id": "SkippedDetail",
      "properties": {
        "incompatibleAppVersion": {
          "description": "If the App doesn't support the specific API level.",
          "type": "boolean"
        },
        "incompatibleArchitecture": {
          "type": "boolean",
          "description": "If the App doesn't run on the specific architecture, for example, x86."
        },
        "incompatibleDevice": {
          "type": "boolean",
          "description": "If the requested OS version doesn't run on the specific device model."
        }
      },
      "description": "Details for an outcome with a SKIPPED outcome summary.",
      "type": "object"
    },
    "PerfMetricsSummary": {
      "properties": {
        "graphicsStats": {
          "$ref": "GraphicsStats",
          "description": "Graphics statistics for the entire run. Statistics are reset at the\nbeginning of the run and collected at the end of the run."
        },
        "projectId": {
          "description": "The cloud project\n@OutputOnly",
          "type": "string"
        },
        "perfEnvironment": {
          "description": "Describes the environment in which the performance metrics were collected",
          "$ref": "PerfEnvironment"
        },
        "stepId": {
          "type": "string",
          "description": "A tool results step ID.\n@OutputOnly"
        },
        "executionId": {
          "description": "A tool results execution ID.\n@OutputOnly",
          "type": "string"
        },
        "appStartTime": {
          "$ref": "AppStartTime"
        },
        "historyId": {
          "type": "string",
          "description": "A tool results history ID.\n@OutputOnly"
        },
        "perfMetrics": {
          "items": {
            "type": "string",
            "enum": [
              "PERF_METRIC_TYPE_UNSPECIFIED",
              "MEMORY",
              "CPU",
              "NETWORK",
              "GRAPHICS"
            ]
          },
          "type": "array",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Set of resource collected"
        }
      },
      "id": "PerfMetricsSummary",
      "description": "A summary of perf metrics collected and performance environment info",
      "type": "object"
    },
    "UpgradeInsight": {
      "type": "object",
      "id": "UpgradeInsight",
      "description": "This insight is a recommendation to upgrade a given library to the specified\nversion, in order to avoid dependencies on non-SDK APIs.",
      "properties": {
        "packageName": {
          "type": "string",
          "description": "The name of the package to be upgraded."
        },
        "upgradeToVersion": {
          "description": "The suggested version to upgrade to.\nOptional: In case we are not sure which version solves this problem",
          "type": "string"
        }
      }
    },
    "Timestamp": {
      "properties": {
        "seconds": {
          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive.",
          "format": "int64",
          "type": "string"
        },
        "nanos": {
          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object",
      "description": "A Timestamp represents a point in time independent of any time zone or local\ncalendar, encoded as a count of seconds and fractions of seconds at\nnanosecond resolution. The count is relative to an epoch at UTC midnight on\nJanuary 1, 1970, in the proleptic Gregorian calendar which extends the\nGregorian calendar backwards to year one.\n\nAll minutes are 60 seconds long. Leap seconds are \"smeared\" so that no leap\nsecond table is needed for interpretation, using a [24-hour linear\nsmear](https://developers.google.com/time/smear).\n\nThe range is from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59.999999999Z. By\nrestricting to that range, we ensure that we can convert to and from [RFC\n3339](https://www.ietf.org/rfc/rfc3339.txt) date strings.",
      "id": "Timestamp"
    },
    "CPUInfo": {
      "type": "object",
      "id": "CPUInfo",
      "properties": {
        "cpuSpeedInGhz": {
          "type": "number",
          "description": "the CPU clock speed in GHz",
          "format": "float"
        },
        "cpuProcessor": {
          "description": "description of the device processor ie '1.8 GHz hexa core 64-bit ARMv8-A'",
          "type": "string"
        },
        "numberOfCores": {
          "format": "int32",
          "description": "the number of CPU cores",
          "type": "integer"
        }
      }
    },
    "AndroidTest": {
      "properties": {
        "androidAppInfo": {
          "description": "Information about the application under test.",
          "$ref": "AndroidAppInfo"
        },
        "androidRoboTest": {
          "description": "An Android robo test.",
          "$ref": "AndroidRoboTest"
        },
        "androidTestLoop": {
          "$ref": "AndroidTestLoop",
          "description": "An Android test loop."
        },
        "testTimeout": {
          "description": "Max time a test is allowed to run before it is\nautomatically cancelled.",
          "$ref": "Duration"
        },
        "androidInstrumentationTest": {
          "$ref": "AndroidInstrumentationTest",
          "description": "An Android instrumentation test."
        }
      },
      "type": "object",
      "id": "AndroidTest",
      "description": "An Android mobile test specification."
    },
    "SuggestionClusterProto": {
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "SuggestionProto"
          },
          "type": "array",
          "description": "A sequence of suggestions. All of the suggestions within a cluster must\nhave the same SuggestionPriority and belong to the same SuggestionCategory.\nSuggestions with the same screenshot URL should be adjacent."
        },
        "category": {
          "enum": [
            "UNKNOWN_CATEGORY",
            "CONTENT_LABELING",
            "TOUCH_TARGET_SIZE",
            "LOW_CONTRAST",
            "IMPLEMENTATION"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Category in which these types of suggestions should appear.\nAlways set."
        }
      },
      "id": "SuggestionClusterProto",
      "type": "object",
      "description": "A set of similar suggestions that we suspect are closely related.\n\nThis proto and most of the nested protos are branched from\nfoxandcrown.prelaunchreport.service.SuggestionClusterProto, replacing PLR's\ndependencies with FTL's."
    },
    "ListHistoriesResponse": {
      "id": "ListHistoriesResponse",
      "type": "object",
      "description": "Response message for HistoryService.List",
      "properties": {
        "nextPageToken": {
          "description": "A continuation token to resume the query at the next item.\n\nWill only be set if there are more histories to fetch.\n\nTokens are valid for up to one hour from the time of the first list\nrequest. For instance, if you make a list request at 1PM and use the token\nfrom this first request 10 minutes later, the token from this second\nresponse will only be valid for 50 minutes.",
          "type": "string"
        },
        "histories": {
          "items": {
            "$ref": "History"
          },
          "type": "array",
          "description": "Histories."
        }
      }
    },
    "EncounteredNonAndroidUiWidgetScreen": {
      "description": "Additional details about encountered screens with elements that are not\nAndroid UI widgets.",
      "properties": {
        "distinctScreens": {
          "format": "int32",
          "description": "Number of encountered distinct screens with non Android UI widgets.",
          "type": "integer"
        },
        "screenIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Subset of screens which contain non Android UI widgets."
        }
      },
      "id": "EncounteredNonAndroidUiWidgetScreen",
      "type": "object"
    },
    "StepSummary": {
      "properties": {},
      "id": "StepSummary",
      "description": "Lightweight summary of a step within this execution.",
      "type": "object"
    },
    "TestTiming": {
      "description": "Testing timing break down to know phases.",
      "type": "object",
      "id": "TestTiming",
      "properties": {
        "testProcessDuration": {
          "$ref": "Duration",
          "description": "How long it took to run the test process.\n\n- In response: present if previously set.\n- In create/update request: optional"
        }
      }
    },
    "History": {
      "id": "History",
      "type": "object",
      "description": "A History represents a sorted list of Executions ordered by the\nstart_timestamp_millis field (descending). It can be used to group all the\nExecutions of a continuous build.\n\nNote that the ordering only operates on one-dimension. If a repository has\nmultiple branches, it means that multiple histories will need to be\nused in order to order Executions per branch.",
      "properties": {
        "displayName": {
          "description": "A short human-readable (plain text) name to display in the UI.\nMaximum of 100 characters.\n\n- In response: present if set during create.\n- In create request: optional",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "A name to uniquely identify a history within a project.\nMaximum of 200 characters.\n\n- In response always set\n- In create request: always set"
        },
        "testPlatform": {
          "type": "string",
          "enum": [
            "UNKNOWN_PLATFORM",
            "ANDROID",
            "IOS"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "The platform of the test history.\n\n- In response: always set. Returns the platform of the last execution if\nunknown."
        },
        "historyId": {
          "type": "string",
          "description": "A unique identifier within a project for this History.\n\nReturns INVALID_ARGUMENT if this field is set or overwritten by the caller.\n\n- In response always set\n- In create request: never set"
        }
      }
    },
    "FailedToInstall": {
      "properties": {},
      "description": "Failed to install the APK.",
      "type": "object",
      "id": "FailedToInstall"
    },
    "ListStepAccessibilityClustersResponse": {
      "properties": {
        "name": {
          "type": "string",
          "description": "A full resource name of the step.\nFor example, projects/my-project/histories/bh.1234567890abcdef/executions/\n1234567890123456789/steps/bs.1234567890abcdef\n\nAlways presents."
        },
        "clusters": {
          "items": {
            "$ref": "SuggestionClusterProto"
          },
          "description": "A sequence of accessibility suggestions, grouped into clusters.\nWithin the sequence, clusters that belong to the same SuggestionCategory\nshould be adjacent.\nWithin each category, clusters should be ordered by their\nSuggestionPriority (ERRORs first).\nThe categories should be ordered by their highest priority cluster.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListStepAccessibilityClustersResponse",
      "description": "Response message for AccessibilityService.ListStepAccessibilityClusters."
    },
    "Screen": {
      "type": "object",
      "properties": {
        "version": {
          "description": "OS version of the device that the screenshot was taken on.\nRequired.",
          "type": "string"
        },
        "fileReference": {
          "description": "File reference of the png file.\nRequired.",
          "type": "string"
        },
        "model": {
          "description": "Model of the device that the screenshot was taken on.\nRequired.",
          "type": "string"
        },
        "locale": {
          "type": "string",
          "description": "Locale of the device that the screenshot was taken on.\nRequired."
        }
      },
      "id": "Screen"
    },
    "AndroidRoboTest": {
      "properties": {
        "bootstrapRunnerClass": {
          "description": "The runner class for the bootstrap.\nOptional",
          "type": "string"
        },
        "maxDepth": {
          "description": "The max depth of the traversal stack Robo can explore.\nOptional",
          "type": "integer",
          "format": "int32"
        },
        "maxSteps": {
          "type": "integer",
          "description": "The max number of steps/actions Robo can execute.\nDefault is no limit (0).\nOptional",
          "format": "int32"
        },
        "appInitialActivity": {
          "description": "The initial activity that should be used to start the app.\nOptional",
          "type": "string"
        },
        "bootstrapPackageId": {
          "type": "string",
          "description": "The java package for the bootstrap.\nOptional"
        }
      },
      "id": "AndroidRoboTest",
      "type": "object",
      "description": "A test of an android application that explores the application on a virtual\nor physical Android device, finding culprits and crashes as it goes."
    },
    "AndroidAppInfo": {
      "description": "Android app information.",
      "id": "AndroidAppInfo",
      "type": "object",
      "properties": {
        "versionCode": {
          "type": "string",
          "description": "The internal version code of the app.\nOptional."
        },
        "versionName": {
          "type": "string",
          "description": "The version name of the app.\nOptional."
        },
        "name": {
          "type": "string",
          "description": "The name of the app.\nOptional"
        },
        "packageName": {
          "description": "The package name of the app.\nRequired.",
          "type": "string"
        }
      }
    },
    "CrashDialogError": {
      "type": "object",
      "id": "CrashDialogError",
      "description": "Crash dialog was detected during the test execution",
      "properties": {
        "crashPackage": {
          "type": "string",
          "description": "The name of the package that caused the dialog."
        }
      }
    },
    "IosAppInfo": {
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the app.\nRequired"
        }
      },
      "type": "object",
      "id": "IosAppInfo",
      "description": "iOS app information"
    },
    "PerfSample": {
      "properties": {
        "value": {
          "type": "number",
          "description": "Value observed",
          "format": "double"
        },
        "sampleTime": {
          "$ref": "Timestamp",
          "description": "Timestamp of collection."
        }
      },
      "id": "PerfSample",
      "description": "Resource representing a single performance measure or data point",
      "type": "object"
    },
    "BasicPerfSampleSeries": {
      "properties": {
        "sampleSeriesLabel": {
          "type": "string",
          "enumDescriptions": [
            "",
            "Memory sample series",
            "",
            "",
            "",
            "CPU sample series",
            "",
            "",
            "Network sample series",
            "",
            "",
            "",
            "Graphics sample series"
          ],
          "enum": [
            "SAMPLE_SERIES_TYPE_UNSPECIFIED",
            "MEMORY_RSS_PRIVATE",
            "MEMORY_RSS_SHARED",
            "MEMORY_RSS_TOTAL",
            "MEMORY_TOTAL",
            "CPU_USER",
            "CPU_KERNEL",
            "CPU_TOTAL",
            "NT_BYTES_TRANSFERRED",
            "NT_BYTES_RECEIVED",
            "NETWORK_SENT",
            "NETWORK_RECEIVED",
            "GRAPHICS_FRAME_RATE"
          ]
        },
        "perfMetricType": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            ""
          ],
          "enum": [
            "PERF_METRIC_TYPE_UNSPECIFIED",
            "MEMORY",
            "CPU",
            "NETWORK",
            "GRAPHICS"
          ],
          "type": "string"
        },
        "perfUnit": {
          "type": "string",
          "enum": [
            "PERF_UNIT_UNSPECIFIED",
            "KIBIBYTE",
            "PERCENT",
            "BYTES_PER_SECOND",
            "FRAMES_PER_SECOND",
            "BYTE"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        }
      },
      "description": "Encapsulates the metadata for basic sample series represented by a line chart",
      "type": "object",
      "id": "BasicPerfSampleSeries"
    },
    "ResultsStorage": {
      "description": "The storage for test results.",
      "id": "ResultsStorage",
      "type": "object",
      "properties": {
        "xunitXmlFile": {
          "description": "The path to the Xunit XML file.",
          "$ref": "FileReference"
        },
        "resultsStoragePath": {
          "description": "The root directory for test results.",
          "$ref": "FileReference"
        }
      }
    },
    "StartActivityNotFound": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "id": "StartActivityNotFound",
      "description": "User provided intent failed to resolve to an activity."
    },
    "Duration": {
      "type": "object",
      "properties": {
        "seconds": {
          "format": "int64",
          "type": "string",
          "description": "Signed seconds of the span of time. Must be from -315,576,000,000\nto +315,576,000,000 inclusive. Note: these bounds are computed from:\n60 sec/min * 60 min/hr * 24 hr/day * 365.25 days/year * 10000 years"
        },
        "nanos": {
          "description": "Signed fractions of a second at nanosecond resolution of the span\nof time. Durations less than one second are represented with a 0\n`seconds` field and a positive or negative `nanos` field. For durations\nof one second or more, a non-zero value for the `nanos` field must be\nof the same sign as the `seconds` field. Must be from -999,999,999\nto +999,999,999 inclusive.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "Duration",
      "description": "\nA Duration represents a signed, fixed-length span of time represented\nas a count of seconds and fractions of seconds at nanosecond\nresolution. It is independent of any calendar and concepts like \"day\"\nor \"month\". It is related to Timestamp in that the difference between\ntwo Timestamp values is a Duration and it can be added or subtracted\nfrom a Timestamp. Range is approximately +-10,000 years."
    },
    "ToolOutputReference": {
      "id": "ToolOutputReference",
      "properties": {
        "creationTime": {
          "$ref": "Timestamp",
          "description": "The creation time of the file.\n\n- In response: present if set by create/update request\n- In create/update request: optional"
        },
        "output": {
          "description": "A FileReference to an output file.\n\n- In response: always set\n- In create/update request: always set",
          "$ref": "FileReference"
        },
        "testCase": {
          "description": "The test case to which this output file belongs.\n\n- In response: present if set by create/update request\n- In create/update request: optional",
          "$ref": "TestCaseReference"
        }
      },
      "type": "object",
      "description": "A reference to a ToolExecution output file."
    },
    "SuccessDetail": {
      "description": "Details for an outcome with a SUCCESS outcome summary.\nLINT.IfChange",
      "type": "object",
      "properties": {
        "otherNativeCrash": {
          "description": "If a native process other than the app crashed.",
          "type": "boolean"
        }
      },
      "id": "SuccessDetail"
    },
    "BatchCreatePerfSamplesResponse": {
      "id": "BatchCreatePerfSamplesResponse",
      "properties": {
        "perfSamples": {
          "items": {
            "$ref": "PerfSample"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "ToolExecution": {
      "properties": {
        "toolOutputs": {
          "items": {
            "$ref": "ToolOutputReference"
          },
          "description": "References to opaque files of any format output by the tool execution.\n\nThe maximum allowed number of tool outputs per step is 1000.\n\n- In response: present if set by create/update request\n- In create request: optional\n- In update request: optional, any value provided will be appended to the\n  existing list",
          "type": "array"
        },
        "commandLineArguments": {
          "type": "array",
          "description": "The full tokenized command line including the program name (equivalent to\nargv in a C program).\n\n- In response: present if set by create request\n- In create request: optional\n- In update request: never set",
          "items": {
            "type": "string"
          }
        },
        "toolLogs": {
          "description": "References to any plain text logs output the tool execution.\n\nThis field can be set before the tool has exited in order to be able to\nhave access to a live view of the logs while the tool is running.\n\nThe maximum allowed number of tool logs per step is 1000.\n\n- In response: present if set by create/update request\n- In create request: optional\n- In update request: optional, any value provided will be appended to the\n  existing list",
          "items": {
            "$ref": "FileReference"
          },
          "type": "array"
        },
        "exitCode": {
          "$ref": "ToolExitCode",
          "description": "Tool execution exit code. This field will be set once the tool has\nexited.\n\n- In response: present if set by create/update request\n- In create request: optional\n- In update request: optional, a FAILED_PRECONDITION error will be\n  returned if an exit_code is already set."
        }
      },
      "type": "object",
      "id": "ToolExecution",
      "description": "An execution of an arbitrary tool. It could be a test runner or a tool\ncopying artifacts or deploying code."
    },
    "TestIssue": {
      "id": "TestIssue",
      "description": "An issue detected occurring during a test execution.",
      "type": "object",
      "properties": {
        "category": {
          "enum": [
            "UNSPECIFIED_CATEGORY",
            "COMMON",
            "ROBO"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default unspecified category.\nDo not use. For versioning only.",
            "Issue is not specific to a particular test kind (e.g., a native crash).",
            "Issue is specific to Robo run."
          ],
          "description": "Category of issue.\nRequired."
        },
        "warning": {
          "$ref": "Any",
          "description": "Warning message with additional details of the issue.\nShould always be a message from com.google.devtools.toolresults.v1.warnings"
        },
        "stackTrace": {
          "description": "Deprecated in favor of stack trace fields inside specific warnings.",
          "$ref": "StackTrace"
        },
        "errorMessage": {
          "type": "string",
          "description": "A brief human-readable message describing the issue.\nRequired."
        },
        "type": {
          "description": "Type of issue.\nRequired.",
          "type": "string",
          "enumDescriptions": [
            "Default unspecified type.\nDo not use. For versioning only.",
            "Issue is a fatal exception.",
            "Issue is a native crash.",
            "Issue is an ANR crash.",
            "Issue is an unused robo directive.",
            "Issue is a suggestion to use orchestrator.",
            "Issue with finding a launcher activity",
            "Issue with resolving a user-provided intent to start an activity",
            "A Robo script was not fully executed.",
            "A Robo script was fully and successfully executed.",
            "The APK failed to install.",
            "The app-under-test has deep links, but none were provided to Robo.",
            "App accessed a non-sdk Api.",
            "App accessed a non-sdk Api (new detailed report)",
            "Robo crawl encountered at least one screen with elements that are not\nAndroid UI widgets.",
            "Robo crawl encountered at least one probable login screen.",
            "Robo signed in with Google.",
            "iOS App crashed with an exception.",
            "iOS App crashed without an exception (e.g. killed).",
            "Robo crawl involved performing some monkey actions.",
            "Robo crawl used a Robo directive.",
            "Robo crawl used a Robo directive to ignore an UI element.",
            "Robo did not crawl some potentially important parts of the app.",
            "Robo crawl involved some in-app purchases.",
            "Crash dialog was detected during the test execution",
            "UI element depth is greater than the threshold",
            "Blank screen is found in the Robo crawl",
            "Overlapping UI elements are found in the Robo crawl",
            "An uncaught Unity exception was detected (these don't crash apps)."
          ],
          "enum": [
            "UNSPECIFIED_TYPE",
            "FATAL_EXCEPTION",
            "NATIVE_CRASH",
            "ANR",
            "UNUSED_ROBO_DIRECTIVE",
            "COMPATIBLE_WITH_ORCHESTRATOR",
            "LAUNCHER_ACTIVITY_NOT_FOUND",
            "START_ACTIVITY_NOT_FOUND",
            "INCOMPLETE_ROBO_SCRIPT_EXECUTION",
            "COMPLETE_ROBO_SCRIPT_EXECUTION",
            "FAILED_TO_INSTALL",
            "AVAILABLE_DEEP_LINKS",
            "NON_SDK_API_USAGE_VIOLATION",
            "NON_SDK_API_USAGE_REPORT",
            "ENCOUNTERED_NON_ANDROID_UI_WIDGET_SCREEN",
            "ENCOUNTERED_LOGIN_SCREEN",
            "PERFORMED_GOOGLE_LOGIN",
            "IOS_EXCEPTION",
            "IOS_CRASH",
            "PERFORMED_MONKEY_ACTIONS",
            "USED_ROBO_DIRECTIVE",
            "USED_ROBO_IGNORE_DIRECTIVE",
            "INSUFFICIENT_COVERAGE",
            "IN_APP_PURCHASES",
            "CRASH_DIALOG_ERROR",
            "UI_ELEMENTS_TOO_DEEP",
            "BLANK_SCREEN",
            "OVERLAPPING_UI_ELEMENTS",
            "UNITY_EXCEPTION"
          ]
        },
        "severity": {
          "enumDescriptions": [
            "Default unspecified severity.\nDo not use. For versioning only.",
            "Non critical issue, providing users with some info about the test run.",
            "Non critical issue, providing users with some hints on improving their\ntesting experience, e.g., suggesting to use Game Loops.",
            "Potentially critical issue.",
            "Critical issue."
          ],
          "type": "string",
          "enum": [
            "UNSPECIFIED_SEVERITY",
            "INFO",
            "SUGGESTION",
            "WARNING",
            "SEVERE"
          ],
          "description": "Severity of issue.\nRequired."
        }
      }
    },
    "SuggestionProto": {
      "type": "object",
      "id": "SuggestionProto",
      "properties": {
        "title": {
          "type": "string",
          "description": "General title for the suggestion, in the user's language, without markup.\nAlways set."
        },
        "pseudoResourceId": {
          "description": "A somewhat human readable identifier of the source view, if it does not\nhave a resource_name. This is a path within the accessibility hierarchy,\nan element with resource name; similar to an XPath.",
          "type": "string"
        },
        "region": {
          "description": "Region within the screenshot that is relevant to this suggestion.\nOptional.",
          "$ref": "RegionProto"
        },
        "shortMessage": {
          "description": "Concise message, in the user's language, representing the suggestion,\nwhich may contain markup.\nAlways set.",
          "$ref": "SafeHtmlProto"
        },
        "longMessage": {
          "$ref": "SafeHtmlProto",
          "description": "Message, in the user's language, explaining the suggestion, which may\ncontain markup.\nAlways set."
        },
        "priority": {
          "type": "string",
          "enum": [
            "UNKNOWN_PRIORITY",
            "ERROR",
            "WARNING",
            "INFO"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "Relative importance of a suggestion.\nAlways set."
        },
        "resourceName": {
          "type": "string",
          "description": "Reference to a view element, identified by its resource name, if it has\none."
        },
        "secondaryPriority": {
          "description": "Relative importance of a suggestion as compared with other suggestions\nthat have the same priority and category.\nThis is a meaningless value that can be used to order suggestions that are\nin the same category and have the same priority.\nThe larger values have higher priority (i.e., are more important).\nOptional.",
          "type": "number",
          "format": "double"
        },
        "screenId": {
          "description": "ID of the screen for the suggestion.\nIt is used for getting the corresponding screenshot path. For example,\nscreen_id \"1\" corresponds to \"1.png\" file in GCS.\nAlways set.",
          "type": "string"
        },
        "helpUrl": {
          "type": "string",
          "description": "Reference to a help center article concerning this type of suggestion.\nAlways set."
        }
      }
    },
    "IosAppCrashed": {
      "description": "Additional details for an iOS app crash.",
      "id": "IosAppCrashed",
      "properties": {
        "stackTrace": {
          "description": "The stack trace, if one is available.\nOptional.",
          "$ref": "StackTrace"
        }
      },
      "type": "object"
    },
    "EncounteredLoginScreen": {
      "id": "EncounteredLoginScreen",
      "properties": {
        "distinctScreens": {
          "type": "integer",
          "format": "int32",
          "description": "Number of encountered distinct login screens."
        },
        "screenIds": {
          "description": "Subset of login screens.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Additional details about encountered login screens.",
      "type": "object"
    },
    "ANR": {
      "type": "object",
      "id": "ANR",
      "description": "Additional details for an ANR crash.",
      "properties": {
        "stackTrace": {
          "description": "The stack trace of the ANR crash.\nOptional.",
          "$ref": "StackTrace"
        }
      }
    },
    "MultiStep": {
      "description": "Details when multiple steps are run with the same configuration as a group.",
      "type": "object",
      "id": "MultiStep",
      "properties": {
        "primaryStepId": {
          "description": "Step Id of the primary (original) step, which might be this step.",
          "type": "string"
        },
        "primaryStep": {
          "description": "Present if it is a primary (original) step.",
          "$ref": "PrimaryStep"
        },
        "multistepNumber": {
          "format": "int32",
          "description": "Unique int given to each step.\nRanges from 0(inclusive) to total number of steps(exclusive).\nThe primary step is 0.",
          "type": "integer"
        }
      }
    },
    "ListExecutionsResponse": {
      "properties": {
        "nextPageToken": {
          "description": "A continuation token to resume the query at the next item.\n\nWill only be set if there are more Executions to fetch.",
          "type": "string"
        },
        "executions": {
          "items": {
            "$ref": "Execution"
          },
          "description": "Executions.\n\nAlways set.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListExecutionsResponse"
    },
    "ListPerfSamplesResponse": {
      "type": "object",
      "id": "ListPerfSamplesResponse",
      "properties": {
        "nextPageToken": {
          "description": "Optional, returned if result size exceeds the page size specified in the\nrequest (or the default page size, 500, if unspecified). It indicates the\nlast sample timestamp to be used as page_token in subsequent request",
          "type": "string"
        },
        "perfSamples": {
          "type": "array",
          "items": {
            "$ref": "PerfSample"
          }
        }
      }
    },
    "IndividualOutcome": {
      "type": "object",
      "id": "IndividualOutcome",
      "properties": {
        "multistepNumber": {
          "description": "Unique int given to each step.\nRanges from 0(inclusive) to total number of steps(exclusive).\nThe primary step is 0.",
          "format": "int32",
          "type": "integer"
        },
        "outcomeSummary": {
          "enumDescriptions": [
            "Do not use. For proto versioning only.",
            "The test matrix run was successful, for instance:\n- All the test cases passed.\n- Robo did not detect a crash of the application under test.",
            "A run failed, for instance:\n- One or more test case failed.\n- A test timed out.\n- The application under test crashed.",
            "Something unexpected happened. The run should still be considered\nunsuccessful but this is likely a transient problem and re-running the\ntest might be successful.",
            "All tests were skipped, for instance:\n- All device configurations were incompatible.",
            "A group of steps that were run with the same configuration had both\nfailure and success outcomes."
          ],
          "enum": [
            "UNSET",
            "SUCCESS",
            "FAILURE",
            "INCONCLUSIVE",
            "SKIPPED",
            "FLAKY"
          ],
          "type": "string"
        },
        "runDuration": {
          "description": "How long it took for this step to run.",
          "$ref": "Duration"
        },
        "stepId": {
          "type": "string"
        }
      },
      "description": "Step Id and outcome of each individual step that was run as a group with\nother steps with the same configuration."
    },
    "Outcome": {
      "id": "Outcome",
      "type": "object",
      "properties": {
        "successDetail": {
          "$ref": "SuccessDetail",
          "description": "More information about a SUCCESS outcome.\n\nReturns INVALID_ARGUMENT if this field is set\nbut the summary is not SUCCESS.\n\nOptional"
        },
        "failureDetail": {
          "$ref": "FailureDetail",
          "description": "More information about a FAILURE outcome.\n\nReturns INVALID_ARGUMENT if this field is set\nbut the summary is not FAILURE.\n\nOptional"
        },
        "inconclusiveDetail": {
          "description": "More information about an INCONCLUSIVE outcome.\n\nReturns INVALID_ARGUMENT if this field is set\nbut the summary is not INCONCLUSIVE.\n\nOptional",
          "$ref": "InconclusiveDetail"
        },
        "skippedDetail": {
          "$ref": "SkippedDetail",
          "description": "More information about a SKIPPED outcome.\n\nReturns INVALID_ARGUMENT if this field is set\nbut the summary is not SKIPPED.\n\nOptional"
        },
        "summary": {
          "type": "string",
          "enum": [
            "UNSET",
            "SUCCESS",
            "FAILURE",
            "INCONCLUSIVE",
            "SKIPPED",
            "FLAKY"
          ],
          "description": "The simplest way to interpret a result.\n\nRequired",
          "enumDescriptions": [
            "Do not use. For proto versioning only.",
            "The test matrix run was successful, for instance:\n- All the test cases passed.\n- Robo did not detect a crash of the application under test.",
            "A run failed, for instance:\n- One or more test case failed.\n- A test timed out.\n- The application under test crashed.",
            "Something unexpected happened. The run should still be considered\nunsuccessful but this is likely a transient problem and re-running the\ntest might be successful.",
            "All tests were skipped, for instance:\n- All device configurations were incompatible.",
            "A group of steps that were run with the same configuration had both\nfailure and success outcomes."
          ]
        }
      },
      "description": "Interprets a result so that humans and machines can act on it."
    },
    "NonSdkApi": {
      "properties": {
        "exampleStackTraces": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Example stack traces of this API being called."
        },
        "invocationCount": {
          "description": "The total number of times this API was observed to have been called.",
          "type": "integer",
          "format": "int32"
        },
        "apiSignature": {
          "type": "string",
          "description": "The signature of the Non-SDK API"
        },
        "list": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "description": "Which list this API appears on",
          "enum": [
            "NONE",
            "WHITE",
            "BLACK",
            "GREY",
            "GREY_MAX_O",
            "GREY_MAX_P",
            "GREY_MAX_Q"
          ],
          "type": "string"
        },
        "insights": {
          "description": "Optional debugging insights for non-SDK API violations.",
          "items": {
            "$ref": "NonSdkApiInsight"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "NonSdkApi",
      "description": "A non-sdk API and examples of it being called along with other metadata\nSee\nhttps://developer.android.com/distribute/best-practices/develop/restrictions-non-sdk-interfaces"
    },
    "NativeCrash": {
      "type": "object",
      "id": "NativeCrash",
      "properties": {
        "stackTrace": {
          "description": "The stack trace of the native crash.\nOptional.",
          "$ref": "StackTrace"
        }
      },
      "description": "Additional details for a native crash."
    },
    "TestExecutionStep": {
      "id": "TestExecutionStep",
      "properties": {
        "testSuiteOverviews": {
          "items": {
            "$ref": "TestSuiteOverview"
          },
          "type": "array",
          "description": "List of test suite overview contents. This could be parsed from xUnit XML\nlog by server, or uploaded directly by user. This references should only be\ncalled when test suites are fully parsed or uploaded.\n\nThe maximum allowed number of test suite overviews per step is 1000.\n\n- In response: always set\n- In create request: optional\n- In update request: never (use publishXunitXmlFiles custom method instead)"
        },
        "testTiming": {
          "description": "The timing break down of the test execution.\n\n- In response: present if set by create or update\n- In create/update request: optional",
          "$ref": "TestTiming"
        },
        "toolExecution": {
          "description": "Represents the execution of the test runner.\n\nThe exit code of this tool will be used to determine if the test passed.\n\n- In response: always set\n- In create/update request: optional",
          "$ref": "ToolExecution"
        },
        "testIssues": {
          "type": "array",
          "description": "Issues observed during the test execution.\n\nFor example, if the mobile app under test crashed during the test,\nthe error message and the stack trace content can be recorded here\nto assist debugging.\n\n- In response: present if set by create or update\n- In create/update request: optional",
          "items": {
            "$ref": "TestIssue"
          }
        }
      },
      "description": "A step that represents running tests.\n\nIt accepts ant-junit xml files which will be parsed into structured test\nresults by the service. Xml file paths are updated in order to append more\nfiles, however they can't be deleted.\n\nUsers can also add test results manually by using the test_result field.",
      "type": "object"
    },
    "LauncherActivityNotFound": {
      "properties": {},
      "type": "object",
      "id": "LauncherActivityNotFound",
      "description": "Failed to find the launcher activity of an app."
    },
    "Any": {
      "description": "\n`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := &pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := &pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\n# JSON\n\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message google.protobuf.Duration):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }",
      "type": "object",
      "properties": {
        "value": {
          "description": "Must be a valid serialized protocol buffer of the above specified type.",
          "type": "string",
          "format": "byte"
        },
        "typeUrl": {
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a google.protobuf.Type\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics.",
          "type": "string"
        }
      },
      "id": "Any"
    },
    "ShardSummary": {
      "description": "Result summary for a shard in an environment.",
      "type": "object",
      "id": "ShardSummary",
      "properties": {
        "runs": {
          "type": "array",
          "description": "Summaries of the steps belonging to the shard.\n\nWith flaky_test_attempts enabled from TestExecutionService, more than one\nrun (Step) can present. And the runs will be sorted by multistep_number.",
          "items": {
            "$ref": "StepSummary"
          }
        },
        "shardResult": {
          "$ref": "MergedResult",
          "description": "Merged result of the shard."
        }
      }
    },
    "IosTestLoop": {
      "properties": {
        "bundleId": {
          "type": "string",
          "description": "Bundle ID of the app."
        }
      },
      "type": "object",
      "id": "IosTestLoop",
      "description": "A game loop test of an iOS application."
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."
        },
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "id": "Status"
    },
    "AndroidTestLoop": {
      "description": "Test Loops are tests that can be launched by the app itself, determining\nwhen to run by listening for an intent.",
      "properties": {},
      "type": "object",
      "id": "AndroidTestLoop"
    },
    "PerformedGoogleLogin": {
      "type": "object",
      "id": "PerformedGoogleLogin",
      "properties": {},
      "description": "A notification that Robo signed in with Google."
    },
    "GraphicsStatsBucket": {
      "type": "object",
      "properties": {
        "frameCount": {
          "type": "string",
          "description": "Number of frames in the bucket.",
          "format": "int64"
        },
        "renderMillis": {
          "type": "string",
          "format": "int64",
          "description": "Lower bound of render time in milliseconds."
        }
      },
      "id": "GraphicsStatsBucket"
    },
    "Image": {
      "type": "object",
      "id": "Image",
      "properties": {
        "thumbnail": {
          "$ref": "Thumbnail",
          "description": "The thumbnail."
        },
        "stepId": {
          "type": "string",
          "description": "The step to which the image is attached.\n\nAlways set."
        },
        "sourceImage": {
          "$ref": "ToolOutputReference",
          "description": "A reference to the full-size, original image.\n\nThis is the same as the tool_outputs entry for the image under its Step.\n\nAlways set."
        },
        "error": {
          "description": "An error explaining why the thumbnail could not be rendered.",
          "$ref": "Status"
        }
      },
      "description": "An image, with a link to the main image and a thumbnail."
    },
    "OverlappingUIElements": {
      "id": "OverlappingUIElements",
      "properties": {
        "resourceName": {
          "type": "array",
          "description": "Resource names of the overlapping screen elements",
          "items": {
            "type": "string"
          }
        },
        "screenId": {
          "description": "The screen id of the elements",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A warning that Robo encountered a screen that has overlapping clickable\nelements; this may indicate a potential UI issue."
    },
    "NonSdkApiInsight": {
      "type": "object",
      "properties": {
        "pendingGoogleUpdateInsight": {
          "description": "An insight indicating that the hidden API usage originates from a\nGoogle-provided library.",
          "$ref": "PendingGoogleUpdateInsight"
        },
        "matcherId": {
          "description": "A unique ID, to be used for determining the effectiveness of this\nparticular insight in the context of a matcher. (required)",
          "type": "string"
        },
        "upgradeInsight": {
          "description": "An insight indicating that the hidden API usage originates from the\nuse of a library that needs to be upgraded.",
          "$ref": "UpgradeInsight"
        },
        "exampleTraceMessages": {
          "description": "Optional sample stack traces, for which this insight applies (there\nshould be at least one).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Non-SDK API insights (to address debugging solutions).",
      "id": "NonSdkApiInsight"
    },
    "GraphicsStats": {
      "id": "GraphicsStats",
      "description": "Graphics statistics for the App.\nThe information is collected from 'adb shell dumpsys graphicsstats'.\nFor more info see:\nhttps://developer.android.com/training/testing/performance.html\nStatistics will only be present for API 23+.",
      "properties": {
        "p90Millis": {
          "format": "int64",
          "description": "90th percentile frame render time in milliseconds.",
          "type": "string"
        },
        "p95Millis": {
          "format": "int64",
          "description": "95th percentile frame render time in milliseconds.",
          "type": "string"
        },
        "jankyFrames": {
          "description": "Total frames with slow render time. Should be \u003c= total_frames.",
          "type": "string",
          "format": "int64"
        },
        "slowDrawCount": {
          "type": "string",
          "description": "Total \"slow draw\" events.",
          "format": "int64"
        },
        "p50Millis": {
          "type": "string",
          "format": "int64",
          "description": "50th percentile frame render time in milliseconds."
        },
        "slowUiThreadCount": {
          "format": "int64",
          "description": "Total \"slow UI thread\" events.",
          "type": "string"
        },
        "buckets": {
          "items": {
            "$ref": "GraphicsStatsBucket"
          },
          "description": "Histogram of frame render times. There should be 154 buckets ranging from\n[5ms, 6ms) to [4950ms, infinity)",
          "type": "array"
        },
        "totalFrames": {
          "format": "int64",
          "description": "Total frames rendered by package.",
          "type": "string"
        },
        "slowBitmapUploadCount": {
          "type": "string",
          "format": "int64",
          "description": "Total \"slow bitmap upload\" events."
        },
        "p99Millis": {
          "format": "int64",
          "type": "string",
          "description": "99th percentile frame render time in milliseconds."
        },
        "highInputLatencyCount": {
          "format": "int64",
          "type": "string",
          "description": "Total \"high input latency\" events."
        },
        "missedVsyncCount": {
          "type": "string",
          "description": "Total \"missed vsync\" events.",
          "format": "int64"
        }
      },
      "type": "object"
    },
    "TestCaseReference": {
      "description": "A reference to a test case.\n\nTest case references are canonically ordered lexicographically by these three\nfactors:\n* First, by test_suite_name.\n* Second, by class_name.\n* Third, by name.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the test case.\n\nRequired.",
          "type": "string"
        },
        "className": {
          "type": "string",
          "description": "The name of the class."
        },
        "testSuiteName": {
          "description": "The name of the test suite to which this test case belongs.",
          "type": "string"
        }
      },
      "id": "TestCaseReference"
    },
    "PublishXunitXmlFilesRequest": {
      "description": "Request message for StepService.PublishXunitXmlFiles.",
      "properties": {
        "xunitXmlFiles": {
          "description": "URI of the Xunit XML files to publish.\n\nThe maximum size of the file this reference is pointing to is 50MB.\n\nRequired.",
          "type": "array",
          "items": {
            "$ref": "FileReference"
          }
        }
      },
      "id": "PublishXunitXmlFilesRequest",
      "type": "object"
    },
    "IosXcTest": {
      "type": "object",
      "properties": {
        "xcodeVersion": {
          "type": "string",
          "description": "Xcode version that the test was run with."
        },
        "bundleId": {
          "description": "Bundle ID of the app.",
          "type": "string"
        }
      },
      "description": "A test of an iOS application that uses the XCTest framework.",
      "id": "IosXcTest"
    },
    "UsedRoboDirective": {
      "id": "UsedRoboDirective",
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The name of the resource that was used."
        }
      },
      "description": "Additional details of a used Robo directive."
    },
    "ToolExitCode": {
      "type": "object",
      "properties": {
        "number": {
          "description": "Tool execution exit code. A value of 0 means that the execution was\nsuccessful.\n\n- In response: always set\n- In create/update request: always set",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Exit code from a tool execution.",
      "id": "ToolExitCode"
    },
    "SafeHtmlProto": {
      "type": "object",
      "properties": {
        "privateDoNotAccessOrElseSafeHtmlWrappedValue": {
          "description": "IMPORTANT: Never set or read this field, even from tests, it is private.\nSee documentation at the top of .proto file for programming language\npackages with which to create or read this message.",
          "type": "string"
        }
      },
      "description": "IMPORTANT: It is unsafe to accept this message from an untrusted source,\nsince it's trivial for an attacker to forge serialized messages that\ndon't fulfill the type's safety contract -- for example, it could contain\nattacker controlled script. A system which receives a SafeHtmlProto\nimplicitly trusts the producer of the SafeHtmlProto. So, it's generally safe\nto return this message in RPC responses, but generally unsafe to accept it\nin RPC requests.",
      "id": "SafeHtmlProto"
    },
    "ListScreenshotClustersResponse": {
      "properties": {
        "clusters": {
          "items": {
            "$ref": "ScreenshotCluster"
          },
          "type": "array",
          "description": "The set of clusters associated with an execution\nAlways set"
        }
      },
      "type": "object",
      "id": "ListScreenshotClustersResponse"
    },
    "InconclusiveDetail": {
      "type": "object",
      "description": "Details for an outcome with an INCONCLUSIVE outcome summary.",
      "id": "InconclusiveDetail",
      "properties": {
        "infrastructureFailure": {
          "type": "boolean",
          "description": "If the test runner could not determine success or failure because the test\ndepends on a component other than the system under test which failed.\n\nFor example, a mobile test requires provisioning a device where the test\nexecutes, and that provisioning can fail."
        },
        "hasErrorLogs": {
          "description": "If results are being provided to the user in certain cases of\ninfrastructure failures",
          "type": "boolean"
        },
        "abortedByUser": {
          "description": "If the end user aborted the test execution before a pass or fail could be\ndetermined.\nFor example, the user pressed ctrl-c which sent a kill signal to the test\nrunner while the test was running.",
          "type": "boolean"
        }
      }
    },
    "PerfEnvironment": {
      "properties": {
        "memoryInfo": {
          "$ref": "MemoryInfo",
          "description": "Memory related environment info"
        },
        "cpuInfo": {
          "$ref": "CPUInfo",
          "description": "CPU related environment info"
        }
      },
      "description": "Encapsulates performance environment info",
      "id": "PerfEnvironment",
      "type": "object"
    },
    "UnusedRoboDirective": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "The name of the resource that was unused."
        }
      },
      "description": "Additional details of an unused robodirective.",
      "id": "UnusedRoboDirective"
    },
    "MatrixDimensionDefinition": {
      "id": "MatrixDimensionDefinition",
      "type": "object",
      "properties": {},
      "description": "One dimension of the matrix of different runs of a step."
    },
    "ListTestCasesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string"
        },
        "testCases": {
          "description": "List of test cases.",
          "items": {
            "$ref": "TestCase"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Response message for StepService.ListTestCases.",
      "id": "ListTestCasesResponse"
    },
    "Thumbnail": {
      "properties": {
        "contentType": {
          "description": "The thumbnail's content type, i.e. \"image/png\".\n\nAlways set.",
          "type": "string"
        },
        "data": {
          "format": "byte",
          "description": "The thumbnail file itself.\n\nThat is, the bytes here are precisely the bytes that make up the thumbnail\nfile; they can be served as an image as-is (with the appropriate content\ntype.)\n\nAlways set.",
          "type": "string"
        },
        "widthPx": {
          "format": "int32",
          "description": "The width of the thumbnail, in pixels.\n\nAlways set.",
          "type": "integer"
        },
        "heightPx": {
          "format": "int32",
          "description": "The height of the thumbnail, in pixels.\n\nAlways set.",
          "type": "integer"
        }
      },
      "id": "Thumbnail",
      "type": "object",
      "description": "A single thumbnail, with its size and format."
    },
    "NonSdkApiUsageViolation": {
      "description": "Additional details for a non-sdk API usage violation.",
      "properties": {
        "uniqueApis": {
          "description": "Total number of unique hidden API's accessed.",
          "format": "int32",
          "type": "integer"
        },
        "apiSignatures": {
          "description": "Signatures of a subset of those hidden API's.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "NonSdkApiUsageViolation",
      "type": "object"
    },
    "FatalException": {
      "properties": {
        "stackTrace": {
          "$ref": "StackTrace",
          "description": "The stack trace of the fatal exception.\nOptional."
        }
      },
      "type": "object",
      "description": "Additional details for a fatal exception.",
      "id": "FatalException"
    },
    "NonSdkApiUsageViolationReport": {
      "type": "object",
      "id": "NonSdkApiUsageViolationReport",
      "description": "Contains a summary and examples of non-sdk API usage violations.",
      "properties": {
        "targetSdkVersion": {
          "type": "integer",
          "format": "int32",
          "description": "Specifies the API Level on which the application is designed to run."
        },
        "uniqueApis": {
          "type": "integer",
          "description": "Total number of unique Non-SDK API's accessed.",
          "format": "int32"
        },
        "minSdkVersion": {
          "description": "Minimum API level required for the application to run.",
          "type": "integer",
          "format": "int32"
        },
        "exampleApis": {
          "type": "array",
          "items": {
            "$ref": "NonSdkApi"
          },
          "description": "Examples of the detected API usages."
        }
      }
    },
    "RegionProto": {
      "properties": {
        "widthPx": {
          "type": "integer",
          "description": "The width, in pixels.\nAlways set.",
          "format": "int32"
        },
        "topPx": {
          "description": "The top of the rectangle, in pixels.\nAlways set.",
          "format": "int32",
          "type": "integer"
        },
        "leftPx": {
          "type": "integer",
          "format": "int32",
          "description": "The left side of the rectangle, in pixels.\nAlways set."
        },
        "heightPx": {
          "type": "integer",
          "format": "int32",
          "description": "The height, in pixels.\nAlways set."
        }
      },
      "description": "A rectangular region.",
      "id": "RegionProto",
      "type": "object"
    },
    "BlankScreen": {
      "type": "object",
      "properties": {
        "screenId": {
          "type": "string",
          "description": "The screen id of the element"
        }
      },
      "id": "BlankScreen",
      "description": "A warning that Robo encountered a screen that was mostly blank; this may\nindicate a problem with the app."
    },
    "Environment": {
      "description": "An Environment represents the set of test runs (Steps) from the parent\nExecution that are configured with the same set of dimensions (Model,\nVersion, Locale, and Orientation). Multiple such runs occur particularly\nbecause of features like sharding (splitting up a test suite to run in\nparallel across devices) and reruns (running a test multiple times to check\nfor different outcomes).",
      "properties": {
        "completionTime": {
          "$ref": "Timestamp",
          "description": "Output only. The time when the Environment status was set to complete.\n\nThis value will be set automatically when state transitions to\nCOMPLETE."
        },
        "shardSummaries": {
          "type": "array",
          "description": "Output only. Summaries of shards.\n\nOnly one shard will present unless sharding feature is enabled in\nTestExecutionService.",
          "items": {
            "$ref": "ShardSummary"
          }
        },
        "resultsStorage": {
          "$ref": "ResultsStorage",
          "description": "The location where output files are stored in the user bucket."
        },
        "environmentResult": {
          "description": "Merged result of the environment.",
          "$ref": "MergedResult"
        },
        "dimensionValue": {
          "type": "array",
          "items": {
            "$ref": "EnvironmentDimensionValueEntry"
          },
          "description": "Dimension values describing the environment. Dimension values always\nconsist of \"Model\", \"Version\", \"Locale\", and \"Orientation\".\n\n- In response: always set\n- In create request: always set\n- In update request: never set"
        },
        "projectId": {
          "type": "string",
          "description": "Output only. A Project id."
        },
        "executionId": {
          "description": "Output only. An Execution id.",
          "type": "string"
        },
        "historyId": {
          "description": "Output only. A History id.",
          "type": "string"
        },
        "displayName": {
          "description": "A short human-readable name to display in the UI.\nMaximum of 100 characters.\nFor example: Nexus 5, API 27.",
          "type": "string"
        },
        "creationTime": {
          "$ref": "Timestamp",
          "description": "Output only. The time when the Environment was created."
        },
        "environmentId": {
          "type": "string",
          "description": "Output only. An Environment id."
        }
      },
      "id": "Environment",
      "type": "object"
    },
    "IosRoboTest": {
      "type": "object",
      "description": "A Robo test for an iOS application.",
      "id": "IosRoboTest",
      "properties": {}
    },
    "ProjectSettings": {
      "properties": {
        "name": {
          "description": "The name of the project's settings.\n\nAlways of the form:\nprojects/{project-id}/settings\n\nIn update request: never set\nIn response: always set",
          "type": "string"
        },
        "defaultBucket": {
          "description": "The name of the Google Cloud Storage bucket to which results are written.\n\nBy default, this is unset.\n\nIn update request: optional\nIn response: optional",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ProjectSettings",
      "description": "Per-project settings for the Tool Results service."
    },
    "UIElementTooDeep": {
      "description": "A warning that the screen hierarchy is deeper than the recommended threshold.",
      "properties": {
        "screenId": {
          "description": "The screen id of the element",
          "type": "string"
        },
        "screenStateId": {
          "description": "The screen state id of the element",
          "type": "string"
        },
        "depth": {
          "format": "int32",
          "type": "integer",
          "description": "The depth of the screen element"
        }
      },
      "type": "object",
      "id": "UIElementTooDeep"
    },
    "ListEnvironmentsResponse": {
      "type": "object",
      "description": "Response message for EnvironmentService.ListEnvironments.",
      "properties": {
        "environments": {
          "type": "array",
          "items": {
            "$ref": "Environment"
          },
          "description": "Environments.\n\nAlways set."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A continuation token to resume the query at the next item.\n\nWill only be set if there are more Environments to fetch."
        },
        "executionId": {
          "description": "A Execution id\n\nAlways set.",
          "type": "string"
        },
        "historyId": {
          "type": "string",
          "description": "A History id.\n\nAlways set."
        },
        "projectId": {
          "description": "A Project id.\n\nAlways set.",
          "type": "string"
        }
      },
      "id": "ListEnvironmentsResponse"
    },
    "Specification": {
      "id": "Specification",
      "type": "object",
      "properties": {
        "androidTest": {
          "description": "An Android mobile test execution specification.",
          "$ref": "AndroidTest"
        },
        "iosTest": {
          "$ref": "IosTest",
          "description": "An iOS mobile test execution specification."
        }
      },
      "description": "The details about how to run the execution."
    },
    "PerformedMonkeyActions": {
      "properties": {
        "totalActions": {
          "description": "The total number of monkey actions performed during the crawl.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "A notification that Robo performed some monkey actions.",
      "type": "object",
      "id": "PerformedMonkeyActions"
    },
    "IosTest": {
      "properties": {
        "iosXcTest": {
          "$ref": "IosXcTest",
          "description": "An iOS XCTest."
        },
        "testTimeout": {
          "description": "Max time a test is allowed to run before it is\nautomatically cancelled.",
          "$ref": "Duration"
        },
        "iosAppInfo": {
          "description": "Information about the application under test.",
          "$ref": "IosAppInfo"
        },
        "iosRoboTest": {
          "$ref": "IosRoboTest",
          "description": "An iOS Robo test."
        },
        "iosTestLoop": {
          "$ref": "IosTestLoop",
          "description": "An iOS test loop."
        }
      },
      "type": "object",
      "id": "IosTest",
      "description": "A iOS mobile test specification"
    },
    "PendingGoogleUpdateInsight": {
      "properties": {
        "nameOfGoogleLibrary": {
          "type": "string",
          "description": "The name of the Google-provided library with the non-SDK API dependency."
        }
      },
      "description": "This insight indicates that the hidden API usage originates from a\nGoogle-provided library. Users need not take any action.",
      "id": "PendingGoogleUpdateInsight",
      "type": "object"
    },
    "AppStartTime": {
      "type": "object",
      "properties": {
        "initialDisplayTime": {
          "description": "The time from app start to the first displayed activity being drawn,\nas reported in Logcat. See\nhttps://developer.android.com/topic/performance/launch-time.html#time-initial",
          "$ref": "Duration"
        },
        "fullyDrawnTime": {
          "$ref": "Duration",
          "description": "Optional. The time from app start to reaching the developer-reported\n\"fully drawn\" time. This is only stored if the app includes a call to\nActivity.reportFullyDrawn(). See\nhttps://developer.android.com/topic/performance/launch-time.html#time-full"
        }
      },
      "id": "AppStartTime"
    },
    "AndroidInstrumentationTest": {
      "description": "A test of an Android application that can control an Android component\nindependently of its normal lifecycle.\n\nSee \u003chttp://developer.android.com/tools/testing/testing_android.html\u003e for\nmore information on types of Android tests.",
      "type": "object",
      "id": "AndroidInstrumentationTest",
      "properties": {
        "testRunnerClass": {
          "type": "string",
          "description": "The InstrumentationTestRunner class.\nRequired"
        },
        "useOrchestrator": {
          "description": "The flag indicates whether Android Test Orchestrator will be used to run\ntest or not.",
          "type": "boolean"
        },
        "testTargets": {
          "items": {
            "type": "string"
          },
          "description": "Each target must be fully qualified with the package name or class name,\nin one of these formats:\n - \"package package_name\"\n - \"class package_name.class_name\"\n - \"class package_name.class_name#method_name\"\n\nIf empty, all targets in the module will be run.",
          "type": "array"
        },
        "testPackageId": {
          "type": "string",
          "description": "The java package for the test to be executed.\nRequired"
        }
      }
    },
    "StepDimensionValueEntry": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "type": "object",
      "id": "StepDimensionValueEntry"
    }
  },
  "ownerName": "Google",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "name": "toolresults",
  "discoveryVersion": "v1",
  "mtlsRootUrl": "https://www.mtls.googleapis.com/",
  "batchPath": "batch/toolresults/v1beta3",
  "ownerDomain": "google.com",
  "canonicalName": "Tool Results",
  "baseUrl": "https://www.googleapis.com/",
  "resources": {
    "projects": {
      "resources": {
        "histories": {
          "resources": {
            "executions": {
              "methods": {
                "create": {
                  "parameterOrder": [
                    "projectId",
                    "historyId"
                  ],
                  "request": {
                    "$ref": "Execution"
                  },
                  "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions",
                  "id": "toolresults.projects.histories.executions.create",
                  "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions",
                  "response": {
                    "$ref": "Execution"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates an Execution.\n\nThe returned Execution will have the id set.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the containing History does not exist",
                  "httpMethod": "POST",
                  "parameters": {
                    "historyId": {
                      "location": "path",
                      "type": "string",
                      "description": "A History id.\n\nRequired.",
                      "required": true
                    },
                    "projectId": {
                      "type": "string",
                      "description": "A Project id.\n\nRequired.",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "type": "string",
                      "description": "A unique request ID for server to detect duplicated requests.\nFor example, a UUID.\n\nOptional, but strongly recommended.",
                      "location": "query"
                    }
                  }
                },
                "list": {
                  "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions",
                  "id": "toolresults.projects.histories.executions.list",
                  "httpMethod": "GET",
                  "description": "Lists Executions for a given History.\n\nThe executions are sorted by creation_time in descending order. The\nexecution_id key will be used to order the executions with the same\ncreation_time.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the containing History does not exist",
                  "response": {
                    "$ref": "ListExecutionsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "description": "A continuation token to resume the query at the next item.\n\nOptional.",
                      "location": "query",
                      "type": "string"
                    },
                    "historyId": {
                      "description": "A History id.\n\nRequired.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "projectId": {
                      "location": "path",
                      "type": "string",
                      "description": "A Project id.\n\nRequired.",
                      "required": true
                    },
                    "pageSize": {
                      "description": "The maximum number of Executions to fetch.\n\nDefault value: 25. The server will use this default if the field is not set\nor has a value of 0.\n\nOptional.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    }
                  },
                  "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "projectId",
                    "historyId"
                  ]
                },
                "patch": {
                  "request": {
                    "$ref": "Execution"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PATCH",
                  "description": "Updates an existing Execution with the supplied partial entity.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed\n- FAILED_PRECONDITION - if the requested state transition is illegal\n- NOT_FOUND - if the containing History does not exist",
                  "response": {
                    "$ref": "Execution"
                  },
                  "id": "toolresults.projects.histories.executions.patch",
                  "parameterOrder": [
                    "projectId",
                    "historyId",
                    "executionId"
                  ],
                  "parameters": {
                    "executionId": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required."
                    },
                    "projectId": {
                      "type": "string",
                      "required": true,
                      "description": "A Project id.\nRequired.",
                      "location": "path"
                    },
                    "historyId": {
                      "required": true,
                      "type": "string",
                      "description": "Required.",
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "A unique request ID for server to detect duplicated requests.\nFor example, a UUID.\n\nOptional, but strongly recommended."
                    }
                  },
                  "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}",
                  "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}"
                },
                "get": {
                  "description": "Gets an Execution.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the Execution does not exist",
                  "httpMethod": "GET",
                  "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}",
                  "response": {
                    "$ref": "Execution"
                  },
                  "id": "toolresults.projects.histories.executions.get",
                  "parameterOrder": [
                    "projectId",
                    "historyId",
                    "executionId"
                  ],
                  "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "historyId": {
                      "type": "string",
                      "required": true,
                      "description": "A History id.\n\nRequired.",
                      "location": "path"
                    },
                    "executionId": {
                      "description": "An Execution id.\n\nRequired.",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    },
                    "projectId": {
                      "type": "string",
                      "location": "path",
                      "description": "A Project id.\n\nRequired.",
                      "required": true
                    }
                  }
                }
              },
              "resources": {
                "steps": {
                  "methods": {
                    "get": {
                      "id": "toolresults.projects.histories.executions.steps.get",
                      "description": "Gets a Step.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the Step does not exist",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId",
                        "stepId"
                      ],
                      "parameters": {
                        "executionId": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "A Execution id.\n\nRequired."
                        },
                        "historyId": {
                          "location": "path",
                          "description": "A History id.\n\nRequired.",
                          "type": "string",
                          "required": true
                        },
                        "stepId": {
                          "description": "A Step id.\n\nRequired.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "projectId": {
                          "location": "path",
                          "description": "A Project id.\n\nRequired.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}",
                      "response": {
                        "$ref": "Step"
                      },
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}",
                      "httpMethod": "GET"
                    },
                    "create": {
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId"
                      ],
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps",
                      "request": {
                        "$ref": "Step"
                      },
                      "response": {
                        "$ref": "Step"
                      },
                      "description": "Creates a Step.\n\nThe returned Step will have the id set.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed\n- FAILED_PRECONDITION - if the step is too large (more than 10Mib)\n- NOT_FOUND - if the containing Execution does not exist",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "parameters": {
                        "requestId": {
                          "description": "A unique request ID for server to detect duplicated requests.\nFor example, a UUID.\n\nOptional, but strongly recommended.",
                          "type": "string",
                          "location": "query"
                        },
                        "historyId": {
                          "description": "Required. A History id.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "projectId": {
                          "required": true,
                          "description": "Required. A Project id.",
                          "type": "string",
                          "location": "path"
                        },
                        "executionId": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. An Execution id."
                        }
                      },
                      "id": "toolresults.projects.histories.executions.steps.create",
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps"
                    },
                    "accessibilityClusters": {
                      "path": "toolresults/v1beta3/{+name}:accessibilityClusters",
                      "id": "toolresults.projects.histories.executions.steps.accessibilityClusters",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "toolresults/v1beta3/projects/{projectsId}/histories/{historiesId}/executions/{executionsId}/steps/{stepsId}:accessibilityClusters",
                      "parameters": {
                        "locale": {
                          "description": "The accepted format is the canonical Unicode format with hyphen as a\ndelimiter. Language must be lowercase, Language Script - Capitalized,\nRegion - UPPERCASE.\nSee http://www.unicode.org/reports/tr35/#Unicode_locale_identifier for\ndetails.\n\nRequired.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "location": "path",
                          "description": "A full resource name of the step.\nFor example, projects/my-project/histories/bh.1234567890abcdef/executions/\n1234567890123456789/steps/bs.1234567890abcdef\n\nRequired.",
                          "pattern": "^projects/[^/]+/histories/[^/]+/executions/[^/]+/steps/[^/]+$",
                          "required": true
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "ListStepAccessibilityClustersResponse"
                      },
                      "description": "Lists accessibility clusters for a given Step\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- FAILED_PRECONDITION - if an argument in the request happens to be\n                        invalid; e.g. if the locale format is incorrect\n- NOT_FOUND - if the containing Step does not exist"
                    },
                    "publishXunitXmlFiles": {
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}:publishXunitXmlFiles",
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}:publishXunitXmlFiles",
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId",
                        "stepId"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "projectId": {
                          "type": "string",
                          "description": "A Project id.\n\nRequired.",
                          "location": "path",
                          "required": true
                        },
                        "historyId": {
                          "description": "A History id.\n\nRequired.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "stepId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "A Step id.\nNote: This step must include a TestExecutionStep.\n\nRequired."
                        },
                        "executionId": {
                          "type": "string",
                          "description": "A Execution id.\n\nRequired.",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "request": {
                        "$ref": "PublishXunitXmlFilesRequest"
                      },
                      "response": {
                        "$ref": "Step"
                      },
                      "description": "Publish xml files to an existing Step.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write project\n- INVALID_ARGUMENT - if the request is malformed\n- FAILED_PRECONDITION - if the requested state transition is illegal,\ne.g try to upload a duplicate xml file or a file too large.\n- NOT_FOUND - if the containing Execution does not exist",
                      "id": "toolresults.projects.histories.executions.steps.publishXunitXmlFiles",
                      "httpMethod": "POST"
                    },
                    "patch": {
                      "description": "Updates an existing Step with the supplied partial entity.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write project\n- INVALID_ARGUMENT - if the request is malformed\n- FAILED_PRECONDITION - if the requested state transition is illegal\n                        (e.g try to upload a duplicate xml file), if the\n                        updated step is too large (more than 10Mib)\n- NOT_FOUND - if the containing Execution does not exist",
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}",
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId",
                        "stepId"
                      ],
                      "response": {
                        "$ref": "Step"
                      },
                      "id": "toolresults.projects.histories.executions.steps.patch",
                      "parameters": {
                        "historyId": {
                          "type": "string",
                          "description": "A History id.\n\nRequired.",
                          "location": "path",
                          "required": true
                        },
                        "stepId": {
                          "description": "A Step id.\n\nRequired.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "requestId": {
                          "type": "string",
                          "description": "A unique request ID for server to detect duplicated requests.\nFor example, a UUID.\n\nOptional, but strongly recommended.",
                          "location": "query"
                        },
                        "executionId": {
                          "description": "A Execution id.\n\nRequired.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        },
                        "projectId": {
                          "description": "A Project id.\n\nRequired.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}",
                      "request": {
                        "$ref": "Step"
                      },
                      "httpMethod": "PATCH"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "location": "query",
                          "description": "A continuation token to resume the query at the next item.\n\nOptional."
                        },
                        "historyId": {
                          "description": "A History id.\n\nRequired.",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "executionId": {
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "A Execution id.\n\nRequired."
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "The maximum number of Steps to fetch.\n\nDefault value: 25. The server will use this default if the field is not set\nor has a value of 0.\n\nOptional.",
                          "format": "int32"
                        },
                        "projectId": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "A Project id.\n\nRequired."
                        }
                      },
                      "id": "toolresults.projects.histories.executions.steps.list",
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps",
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId"
                      ],
                      "response": {
                        "$ref": "ListStepsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Steps for a given Execution.\n\nThe steps are sorted by creation_time in descending order. The\nstep_id key will be used to order the steps with the same\ncreation_time.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- FAILED_PRECONDITION - if an argument in the request happens to be\n                        invalid; e.g. if an attempt is made to list the\n                        children of a nonexistent Step\n- NOT_FOUND - if the containing Execution does not exist",
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps"
                    },
                    "getPerfMetricsSummary": {
                      "id": "toolresults.projects.histories.executions.steps.getPerfMetricsSummary",
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfMetricsSummary",
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId",
                        "stepId"
                      ],
                      "description": "Retrieves a PerfMetricsSummary.\n\nMay return any of the following error code(s):\n- NOT_FOUND - The specified PerfMetricsSummary does not exist",
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfMetricsSummary",
                      "parameters": {
                        "projectId": {
                          "type": "string",
                          "required": true,
                          "description": "The cloud project",
                          "location": "path"
                        },
                        "executionId": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "A tool results execution ID."
                        },
                        "historyId": {
                          "type": "string",
                          "location": "path",
                          "description": "A tool results history ID.",
                          "required": true
                        },
                        "stepId": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "A tool results step ID."
                        }
                      },
                      "response": {
                        "$ref": "PerfMetricsSummary"
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  },
                  "resources": {
                    "perfMetricsSummary": {
                      "methods": {
                        "create": {
                          "id": "toolresults.projects.histories.executions.steps.perfMetricsSummary.create",
                          "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfMetricsSummary",
                          "response": {
                            "$ref": "PerfMetricsSummary"
                          },
                          "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfMetricsSummary",
                          "httpMethod": "POST",
                          "parameters": {
                            "stepId": {
                              "location": "path",
                              "description": "A tool results step ID.",
                              "required": true,
                              "type": "string"
                            },
                            "historyId": {
                              "required": true,
                              "type": "string",
                              "description": "A tool results history ID.",
                              "location": "path"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "The cloud project",
                              "location": "path",
                              "required": true
                            },
                            "executionId": {
                              "required": true,
                              "type": "string",
                              "description": "A tool results execution ID.",
                              "location": "path"
                            }
                          },
                          "parameterOrder": [
                            "projectId",
                            "historyId",
                            "executionId",
                            "stepId"
                          ],
                          "description": "Creates a PerfMetricsSummary resource. Returns the existing one if it has\nalready been created.\n\nMay return any of the following error code(s):\n- NOT_FOUND - The containing Step does not exist",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "request": {
                            "$ref": "PerfMetricsSummary"
                          }
                        }
                      }
                    },
                    "thumbnails": {
                      "methods": {
                        "list": {
                          "id": "toolresults.projects.histories.executions.steps.thumbnails.list",
                          "description": "Lists thumbnails of images attached to a step.\n\nMay return any of the following canonical error codes:\n- PERMISSION_DENIED - if the user is not authorized to read from the\n                      project, or from any of the images\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the step does not exist, or if any of the images\n              do not exist",
                          "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/thumbnails",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "projectId",
                            "historyId",
                            "executionId",
                            "stepId"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/thumbnails",
                          "response": {
                            "$ref": "ListStepThumbnailsResponse"
                          },
                          "parameters": {
                            "pageToken": {
                              "type": "string",
                              "description": "A continuation token to resume the query at the next item.\n\nOptional.",
                              "location": "query"
                            },
                            "pageSize": {
                              "format": "int32",
                              "type": "integer",
                              "description": "The maximum number of thumbnails to fetch.\n\nDefault value: 50. The server will use this default if the field is not set\nor has a value of 0.\n\nOptional.",
                              "location": "query"
                            },
                            "executionId": {
                              "type": "string",
                              "description": "An Execution id.\n\nRequired.",
                              "required": true,
                              "location": "path"
                            },
                            "projectId": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "A Project id.\n\nRequired."
                            },
                            "stepId": {
                              "description": "A Step id.\n\nRequired.",
                              "location": "path",
                              "type": "string",
                              "required": true
                            },
                            "historyId": {
                              "location": "path",
                              "required": true,
                              "type": "string",
                              "description": "A History id.\n\nRequired."
                            }
                          }
                        }
                      }
                    },
                    "perfSampleSeries": {
                      "methods": {
                        "list": {
                          "id": "toolresults.projects.histories.executions.steps.perfSampleSeries.list",
                          "parameters": {
                            "historyId": {
                              "location": "path",
                              "description": "A tool results history ID.",
                              "type": "string",
                              "required": true
                            },
                            "stepId": {
                              "location": "path",
                              "required": true,
                              "description": "A tool results step ID.",
                              "type": "string"
                            },
                            "projectId": {
                              "description": "The cloud project",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            },
                            "executionId": {
                              "location": "path",
                              "description": "A tool results execution ID.",
                              "type": "string",
                              "required": true
                            },
                            "filter": {
                              "enum": [
                                "PERF_METRIC_TYPE_UNSPECIFIED",
                                "MEMORY",
                                "CPU",
                                "NETWORK",
                                "GRAPHICS"
                              ],
                              "location": "query",
                              "repeated": true,
                              "type": "string",
                              "description": "Specify one or more PerfMetricType values such as CPU to filter the result"
                            }
                          },
                          "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists PerfSampleSeries for a given Step.\n\nThe request provides an optional filter which specifies one or more\nPerfMetricsType to include in the result; if none returns all.\nThe resulting PerfSampleSeries are sorted by ids.\n\nMay return any of the following canonical error codes:\n- NOT_FOUND - The containing Step does not exist",
                          "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "projectId",
                            "historyId",
                            "executionId",
                            "stepId"
                          ],
                          "response": {
                            "$ref": "ListPerfSampleSeriesResponse"
                          }
                        },
                        "create": {
                          "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries",
                          "id": "toolresults.projects.histories.executions.steps.perfSampleSeries.create",
                          "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries",
                          "httpMethod": "POST",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "executionId": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "A tool results execution ID."
                            },
                            "stepId": {
                              "required": true,
                              "type": "string",
                              "description": "A tool results step ID.",
                              "location": "path"
                            },
                            "projectId": {
                              "required": true,
                              "description": "The cloud project",
                              "location": "path",
                              "type": "string"
                            },
                            "historyId": {
                              "description": "A tool results history ID.",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "description": "Creates a PerfSampleSeries.\n\nMay return any of the following error code(s):\n- ALREADY_EXISTS - PerfMetricSummary already exists for the given Step\n- NOT_FOUND - The containing Step does not exist",
                          "response": {
                            "$ref": "PerfSampleSeries"
                          },
                          "request": {
                            "$ref": "PerfSampleSeries"
                          },
                          "parameterOrder": [
                            "projectId",
                            "historyId",
                            "executionId",
                            "stepId"
                          ]
                        },
                        "get": {
                          "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "projectId",
                            "historyId",
                            "executionId",
                            "stepId",
                            "sampleSeriesId"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "PerfSampleSeries"
                          },
                          "parameters": {
                            "sampleSeriesId": {
                              "required": true,
                              "type": "string",
                              "description": "A sample series id",
                              "location": "path"
                            },
                            "executionId": {
                              "description": "A tool results execution ID.",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            },
                            "projectId": {
                              "type": "string",
                              "required": true,
                              "description": "The cloud project",
                              "location": "path"
                            },
                            "historyId": {
                              "required": true,
                              "description": "A tool results history ID.",
                              "location": "path",
                              "type": "string"
                            },
                            "stepId": {
                              "type": "string",
                              "location": "path",
                              "required": true,
                              "description": "A tool results step ID."
                            }
                          },
                          "description": "Gets a PerfSampleSeries.\n\nMay return any of the following error code(s):\n- NOT_FOUND - The specified PerfSampleSeries does not exist",
                          "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}",
                          "id": "toolresults.projects.histories.executions.steps.perfSampleSeries.get"
                        }
                      },
                      "resources": {
                        "samples": {
                          "methods": {
                            "list": {
                              "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}/samples",
                              "response": {
                                "$ref": "ListPerfSamplesResponse"
                              },
                              "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}/samples",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "description": "Lists the Performance Samples of a given Sample Series\n- The list results are sorted by timestamps ascending\n- The default page size is 500 samples; and maximum size allowed 5000\n- The response token indicates the last returned PerfSample timestamp\n- When the results size exceeds the page size, submit a subsequent request\nincluding the page token to return the rest of the samples up to the\npage limit\n\nMay return any of the following canonical error codes:\n- OUT_OF_RANGE - The specified request page_token is out of valid range\n- NOT_FOUND - The containing PerfSampleSeries does not exist",
                              "httpMethod": "GET",
                              "parameters": {
                                "pageSize": {
                                  "description": "The default page size is 500 samples, and the maximum size is 5000. If\nthe page_size is greater than 5000, the effective page size will be 5000",
                                  "format": "int32",
                                  "type": "integer",
                                  "location": "query"
                                },
                                "historyId": {
                                  "required": true,
                                  "location": "path",
                                  "type": "string",
                                  "description": "A tool results history ID."
                                },
                                "executionId": {
                                  "required": true,
                                  "type": "string",
                                  "description": "A tool results execution ID.",
                                  "location": "path"
                                },
                                "stepId": {
                                  "location": "path",
                                  "description": "A tool results step ID.",
                                  "required": true,
                                  "type": "string"
                                },
                                "projectId": {
                                  "type": "string",
                                  "location": "path",
                                  "description": "The cloud project",
                                  "required": true
                                },
                                "pageToken": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "Optional, the next_page_token returned in the previous response"
                                },
                                "sampleSeriesId": {
                                  "location": "path",
                                  "type": "string",
                                  "required": true,
                                  "description": "A sample series id"
                                }
                              },
                              "id": "toolresults.projects.histories.executions.steps.perfSampleSeries.samples.list",
                              "parameterOrder": [
                                "projectId",
                                "historyId",
                                "executionId",
                                "stepId",
                                "sampleSeriesId"
                              ]
                            },
                            "batchCreate": {
                              "httpMethod": "POST",
                              "description": "Creates a batch of PerfSamples\n- a client can submit multiple batches of Perf Samples through repeated\ncalls to this method in order to split up a large request payload\n- duplicates and existing timestamp entries will be ignored.\n- the batch operation may partially succeed\n- the set of elements successfully inserted is returned in the response\n(omits items which already existed in the database).\n\nMay return any of the following canonical error codes:\n- NOT_FOUND - The containing PerfSampleSeries does not exist",
                              "parameters": {
                                "stepId": {
                                  "required": true,
                                  "description": "A tool results step ID.",
                                  "location": "path",
                                  "type": "string"
                                },
                                "projectId": {
                                  "description": "The cloud project",
                                  "type": "string",
                                  "location": "path",
                                  "required": true
                                },
                                "executionId": {
                                  "required": true,
                                  "location": "path",
                                  "type": "string",
                                  "description": "A tool results execution ID."
                                },
                                "sampleSeriesId": {
                                  "description": "A sample series id",
                                  "type": "string",
                                  "location": "path",
                                  "required": true
                                },
                                "historyId": {
                                  "description": "A tool results history ID.",
                                  "required": true,
                                  "type": "string",
                                  "location": "path"
                                }
                              },
                              "id": "toolresults.projects.histories.executions.steps.perfSampleSeries.samples.batchCreate",
                              "request": {
                                "$ref": "BatchCreatePerfSamplesRequest"
                              },
                              "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}/samples:batchCreate",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform"
                              ],
                              "parameterOrder": [
                                "projectId",
                                "historyId",
                                "executionId",
                                "stepId",
                                "sampleSeriesId"
                              ],
                              "response": {
                                "$ref": "BatchCreatePerfSamplesResponse"
                              },
                              "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/perfSampleSeries/{sampleSeriesId}/samples:batchCreate"
                            }
                          }
                        }
                      }
                    },
                    "testCases": {
                      "methods": {
                        "list": {
                          "response": {
                            "$ref": "ListTestCasesResponse"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "httpMethod": "GET",
                          "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/testCases",
                          "id": "toolresults.projects.histories.executions.steps.testCases.list",
                          "parameterOrder": [
                            "projectId",
                            "historyId",
                            "executionId",
                            "stepId"
                          ],
                          "description": "Lists Test Cases attached to a Step.\nExperimental test cases API. Still in active development.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the containing Step does not exist",
                          "parameters": {
                            "stepId": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "A Step id.\nNote: This step must include a TestExecutionStep.\n\nRequired."
                            },
                            "executionId": {
                              "type": "string",
                              "description": "A Execution id\n\nRequired.",
                              "required": true,
                              "location": "path"
                            },
                            "historyId": {
                              "location": "path",
                              "type": "string",
                              "required": true,
                              "description": "A History id.\n\nRequired."
                            },
                            "pageSize": {
                              "description": "The maximum number of TestCases to fetch.\n\nDefault value: 100. The server will use this default if the field is not\nset or has a value of 0.\n\nOptional.",
                              "format": "int32",
                              "type": "integer",
                              "location": "query"
                            },
                            "projectId": {
                              "type": "string",
                              "description": "A Project id.\n\nRequired.",
                              "location": "path",
                              "required": true
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "A continuation token to resume the query at the next item.\n\nOptional.",
                              "location": "query"
                            }
                          },
                          "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/testCases"
                        },
                        "get": {
                          "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/testCases/{testCaseId}",
                          "parameterOrder": [
                            "projectId",
                            "historyId",
                            "executionId",
                            "stepId",
                            "testCaseId"
                          ],
                          "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/steps/{stepId}/testCases/{testCaseId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "response": {
                            "$ref": "TestCase"
                          },
                          "id": "toolresults.projects.histories.executions.steps.testCases.get",
                          "httpMethod": "GET",
                          "parameters": {
                            "executionId": {
                              "description": "A Execution id\n\nRequired.",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            },
                            "stepId": {
                              "location": "path",
                              "description": "A Step id.\nNote: This step must include a TestExecutionStep.\n\nRequired.",
                              "required": true,
                              "type": "string"
                            },
                            "historyId": {
                              "type": "string",
                              "description": "A History id.\n\nRequired.",
                              "location": "path",
                              "required": true
                            },
                            "testCaseId": {
                              "required": true,
                              "type": "string",
                              "location": "path",
                              "description": "A Test Case id.\n\nRequired."
                            },
                            "projectId": {
                              "required": true,
                              "location": "path",
                              "type": "string",
                              "description": "A Project id.\n\nRequired."
                            }
                          },
                          "description": "Gets details of a Test Case for a Step.\nExperimental test cases API. Still in active development.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the containing Test Case does not exist"
                        }
                      }
                    }
                  }
                },
                "clusters": {
                  "methods": {
                    "list": {
                      "description": "Lists Screenshot Clusters\n\nReturns the list of screenshot clusters corresponding to an execution.\nScreenshot clusters are created after the execution is finished.\nClusters are created from a set of screenshots. Between any two\nscreenshots, a matching score is calculated based off their metadata\nthat determines how similar they are. Screenshots are placed\nin the cluster that has screens which have the highest matching\nscores.",
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId"
                      ],
                      "parameters": {
                        "projectId": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "A Project id.\n\nRequired."
                        },
                        "executionId": {
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "An Execution id.\n\nRequired."
                        },
                        "historyId": {
                          "location": "path",
                          "description": "A History id.\n\nRequired.",
                          "required": true,
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "ListScreenshotClustersResponse"
                      },
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/clusters",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "toolresults.projects.histories.executions.clusters.list",
                      "httpMethod": "GET",
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/clusters"
                    },
                    "get": {
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId",
                        "clusterId"
                      ],
                      "id": "toolresults.projects.histories.executions.clusters.get",
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/clusters/{clusterId}",
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/clusters/{clusterId}",
                      "description": "Retrieves a single screenshot cluster by its ID",
                      "response": {
                        "$ref": "ScreenshotCluster"
                      },
                      "parameters": {
                        "executionId": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "An Execution id.\n\nRequired."
                        },
                        "clusterId": {
                          "location": "path",
                          "description": "A Cluster id\n\nRequired.",
                          "type": "string",
                          "required": true
                        },
                        "projectId": {
                          "required": true,
                          "type": "string",
                          "description": "A Project id.\n\nRequired.",
                          "location": "path"
                        },
                        "historyId": {
                          "type": "string",
                          "required": true,
                          "description": "A History id.\n\nRequired.",
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                },
                "environments": {
                  "methods": {
                    "list": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId"
                      ],
                      "id": "toolresults.projects.histories.executions.environments.list",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListEnvironmentsResponse"
                      },
                      "description": "Lists Environments for a given Execution.\n\nThe Environments are sorted by display name.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the containing Execution does not exist",
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/environments",
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/environments",
                      "parameters": {
                        "projectId": {
                          "description": "Required. A Project id.",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "historyId": {
                          "type": "string",
                          "location": "path",
                          "description": "Required. A History id.",
                          "required": true
                        },
                        "executionId": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. An Execution id."
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "The maximum number of Environments to fetch.\n\nDefault value: 25. The server will use this default if the field is not set\nor has a value of 0.",
                          "format": "int32",
                          "location": "query"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "A continuation token to resume the query at the next item."
                        }
                      }
                    },
                    "get": {
                      "parameters": {
                        "projectId": {
                          "required": true,
                          "description": "Required. A Project id.",
                          "location": "path",
                          "type": "string"
                        },
                        "executionId": {
                          "required": true,
                          "description": "Required. An Execution id.",
                          "type": "string",
                          "location": "path"
                        },
                        "environmentId": {
                          "type": "string",
                          "description": "Required. An Environment id.",
                          "required": true,
                          "location": "path"
                        },
                        "historyId": {
                          "description": "Required. A History id.",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "parameterOrder": [
                        "projectId",
                        "historyId",
                        "executionId",
                        "environmentId"
                      ],
                      "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/environments/{environmentId}",
                      "id": "toolresults.projects.histories.executions.environments.get",
                      "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}/executions/{executionId}/environments/{environmentId}",
                      "response": {
                        "$ref": "Environment"
                      },
                      "httpMethod": "GET",
                      "description": "Gets an Environment.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the Environment does not exist",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "get": {
              "flatPath": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}",
              "httpMethod": "GET",
              "parameterOrder": [
                "projectId",
                "historyId"
              ],
              "parameters": {
                "historyId": {
                  "required": true,
                  "type": "string",
                  "description": "A History id.\n\nRequired.",
                  "location": "path"
                },
                "projectId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "A Project id.\n\nRequired."
                }
              },
              "id": "toolresults.projects.histories.get",
              "description": "Gets a History.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the History does not exist",
              "response": {
                "$ref": "History"
              },
              "path": "toolresults/v1beta3/projects/{projectId}/histories/{historyId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "response": {
                "$ref": "History"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "History"
              },
              "httpMethod": "POST",
              "description": "Creates a History.\n\nThe returned History will have the id set.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the containing project does not exist",
              "id": "toolresults.projects.histories.create",
              "path": "toolresults/v1beta3/projects/{projectId}/histories",
              "parameters": {
                "requestId": {
                  "description": "A unique request ID for server to detect duplicated requests.\nFor example, a UUID.\n\nOptional, but strongly recommended.",
                  "location": "query",
                  "type": "string"
                },
                "projectId": {
                  "required": true,
                  "location": "path",
                  "description": "A Project id.\n\nRequired.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "projectId"
              ],
              "flatPath": "toolresults/v1beta3/projects/{projectId}/histories"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists Histories for a given Project.\n\nThe histories are sorted by modification time in descending order. The\nhistory_id key will be used to order the history with the same\nmodification time.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read project\n- INVALID_ARGUMENT - if the request is malformed\n- NOT_FOUND - if the History does not exist",
              "flatPath": "toolresults/v1beta3/projects/{projectId}/histories",
              "parameterOrder": [
                "projectId"
              ],
              "id": "toolresults.projects.histories.list",
              "path": "toolresults/v1beta3/projects/{projectId}/histories",
              "httpMethod": "GET",
              "parameters": {
                "projectId": {
                  "location": "path",
                  "description": "A Project id.\n\nRequired.",
                  "required": true,
                  "type": "string"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A continuation token to resume the query at the next item.\n\nOptional."
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of Histories to fetch.\n\nDefault value: 20. The server will use this default if the field is not set\nor has a value of 0. Any value greater than 100 will be treated as 100.\n\nOptional.",
                  "type": "integer"
                },
                "filterByName": {
                  "type": "string",
                  "description": "If set, only return histories with the given name.\n\nOptional.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListHistoriesResponse"
              }
            }
          }
        }
      },
      "methods": {
        "getSettings": {
          "response": {
            "$ref": "ProjectSettings"
          },
          "parameters": {
            "projectId": {
              "required": true,
              "description": "A Project id.\n\nRequired.",
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "projectId"
          ],
          "description": "Gets the Tool Results settings for a project.\n\nMay return any of the following canonical error codes:\n\n- PERMISSION_DENIED - if the user is not authorized to read from project",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "id": "toolresults.projects.getSettings",
          "path": "toolresults/v1beta3/projects/{projectId}/settings",
          "flatPath": "toolresults/v1beta3/projects/{projectId}/settings",
          "httpMethod": "GET"
        },
        "initializeSettings": {
          "path": "toolresults/v1beta3/projects/{projectId}:initializeSettings",
          "id": "toolresults.projects.initializeSettings",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {
            "projectId": {
              "description": "A Project id.\n\nRequired.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "description": "Creates resources for settings which have not yet been set.\n\nCurrently, this creates a single resource: a Google Cloud Storage bucket,\nto be used as the default bucket for this project. The bucket is created\nin an FTL-own storage project. Except for in rare cases, calling this\nmethod in parallel from multiple clients will only create a single bucket.\nIn order to avoid unnecessary storage charges, the bucket is configured to\nautomatically delete objects older than 90 days.\n\nThe bucket is created with the following permissions:\n- Owner access for owners of central storage project (FTL-owned)\n- Writer access for owners/editors of customer project\n- Reader access for viewers of customer project\nThe default ACL on objects created in the bucket is:\n- Owner access for owners of central storage project\n- Reader access for owners/editors/viewers of customer project\nSee Google Cloud Storage documentation for more details.\n\nIf there is already a default bucket set and the project can access the\nbucket, this call does nothing. However, if the project doesn't have the\npermission to access the bucket or the bucket is deleted, a new bucket\nwill be created.\n\nMay return any canonical error codes, including the following:\n\n- PERMISSION_DENIED - if the user is not authorized to write to project\n- Any error code raised by Google Cloud Storage",
          "response": {
            "$ref": "ProjectSettings"
          },
          "flatPath": "toolresults/v1beta3/projects/{projectId}:initializeSettings",
          "httpMethod": "POST",
          "parameterOrder": [
            "projectId"
          ]
        }
      }
    }
  }
}
