{
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "baseUrl": "https://vault.googleapis.com/",
  "resources": {
    "operations": {
      "methods": {
        "delete": {
          "flatPath": "v1/operations/{operationsId}",
          "id": "vault.operations.delete",
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "response": {
            "$ref": "Empty"
          },
          "parameters": {
            "name": {
              "location": "path",
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource to be deleted.",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "DELETE",
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
        },
        "list": {
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The standard list page token."
            },
            "filter": {
              "type": "string",
              "description": "The standard list filter.",
              "location": "query"
            },
            "name": {
              "type": "string",
              "pattern": "^operations$",
              "location": "path",
              "required": true,
              "description": "The name of the operation's parent resource."
            },
            "pageSize": {
              "type": "integer",
              "description": "The standard list page size.",
              "format": "int32",
              "location": "query"
            }
          },
          "path": "v1/{+name}",
          "flatPath": "v1/operations",
          "id": "vault.operations.list"
        },
        "cancel": {
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Empty"
          },
          "id": "vault.operations.cancel",
          "httpMethod": "POST",
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "path": "v1/{+name}:cancel",
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "location": "path",
              "description": "The name of the operation resource to be cancelled.",
              "required": true,
              "type": "string"
            }
          },
          "flatPath": "v1/operations/{operationsId}:cancel"
        },
        "get": {
          "path": "v1/{+name}",
          "flatPath": "v1/operations/{operationsId}",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "id": "vault.operations.get",
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "GET",
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "pattern": "^operations/.*$",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "name"
          ]
        }
      }
    },
    "matters": {
      "resources": {
        "exports": {
          "methods": {
            "create": {
              "parameters": {
                "matterId": {
                  "type": "string",
                  "description": "The matter ID.",
                  "location": "path",
                  "required": true
                }
              },
              "response": {
                "$ref": "Export"
              },
              "id": "vault.matters.exports.create",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "request": {
                "$ref": "Export"
              },
              "httpMethod": "POST",
              "path": "v1/matters/{matterId}/exports",
              "description": "Creates an Export.",
              "flatPath": "v1/matters/{matterId}/exports",
              "parameterOrder": [
                "matterId"
              ]
            },
            "delete": {
              "httpMethod": "DELETE",
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "id": "vault.matters.exports.delete",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "required": true,
                  "location": "path",
                  "description": "The matter ID.",
                  "type": "string"
                },
                "exportId": {
                  "type": "string",
                  "description": "The export ID.",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "description": "Deletes an Export.",
              "response": {
                "$ref": "Empty"
              }
            },
            "list": {
              "id": "vault.matters.exports.list",
              "response": {
                "$ref": "ListExportsResponse"
              },
              "flatPath": "v1/matters/{matterId}/exports",
              "path": "v1/matters/{matterId}/exports",
              "description": "Lists Exports.",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The pagination token as returned in the response.",
                  "type": "string"
                },
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The number of exports to return in the response.",
                  "type": "integer"
                }
              },
              "parameterOrder": [
                "matterId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "httpMethod": "GET"
            },
            "get": {
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "exportId": {
                  "required": true,
                  "description": "The export ID.",
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "response": {
                "$ref": "Export"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "id": "vault.matters.exports.get",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "description": "Gets an Export.",
              "httpMethod": "GET"
            }
          }
        },
        "savedQueries": {
          "methods": {
            "delete": {
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "parameters": {
                "savedQueryId": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of the saved query to be deleted.",
                  "required": true
                },
                "matterId": {
                  "description": "The matter ID of the parent matter for which the saved query is to be deleted.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Deletes a saved query by Id.",
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "id": "vault.matters.savedQueries.delete",
              "httpMethod": "DELETE"
            },
            "list": {
              "description": "Lists saved queries within a matter. An empty page token in ListSavedQueriesResponse denotes no more saved queries to list.",
              "id": "vault.matters.savedQueries.list",
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/savedQueries",
              "parameters": {
                "pageSize": {
                  "description": "The maximum number of saved queries to return.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "pageToken": {
                  "description": "The pagination token as returned in the previous response. An empty token means start from the beginning.",
                  "type": "string",
                  "location": "query"
                },
                "matterId": {
                  "location": "path",
                  "description": "The matter ID of the parent matter for which the saved queries are to be retrieved.",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "matterId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "response": {
                "$ref": "ListSavedQueriesResponse"
              }
            },
            "get": {
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "id": "vault.matters.savedQueries.get",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "response": {
                "$ref": "SavedQuery"
              },
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "parameters": {
                "matterId": {
                  "required": true,
                  "description": "The matter ID of the parent matter for which the saved query is to be retrieved.",
                  "location": "path",
                  "type": "string"
                },
                "savedQueryId": {
                  "description": "ID of the saved query to be retrieved.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Retrieves a saved query by Id.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "create": {
              "request": {
                "$ref": "SavedQuery"
              },
              "parameters": {
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The matter ID of the parent matter for which the saved query is to be created."
                }
              },
              "response": {
                "$ref": "SavedQuery"
              },
              "path": "v1/matters/{matterId}/savedQueries",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "id": "vault.matters.savedQueries.create",
              "httpMethod": "POST",
              "description": "Creates a saved query.",
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "parameterOrder": [
                "matterId"
              ]
            }
          }
        },
        "holds": {
          "resources": {
            "accounts": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "description": "Lists HeldAccounts for a hold. This will only list individually specified held accounts. If the hold is on an OU, then use Admin SDK to enumerate its members.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ],
                  "parameters": {
                    "holdId": {
                      "description": "The hold ID.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "matterId": {
                      "type": "string",
                      "description": "The matter ID.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "vault.matters.holds.accounts.list"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "id": "vault.matters.holds.accounts.delete",
                  "httpMethod": "DELETE",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "holdId": {
                      "description": "The hold ID.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "matterId": {
                      "location": "path",
                      "type": "string",
                      "description": "The matter ID.",
                      "required": true
                    },
                    "accountId": {
                      "type": "string",
                      "required": true,
                      "description": "The ID of the account to remove from the hold.",
                      "location": "path"
                    }
                  },
                  "description": "Removes a HeldAccount from a hold. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ]
                },
                "create": {
                  "id": "vault.matters.holds.accounts.create",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "response": {
                    "$ref": "HeldAccount"
                  },
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "description": "Adds a HeldAccount to a hold. Accounts can only be added to a hold that has no held_org_unit set. Attempting to add an account to an OU-based hold will result in an error.",
                  "parameters": {
                    "matterId": {
                      "type": "string",
                      "description": "The matter ID.",
                      "required": true,
                      "location": "path"
                    },
                    "holdId": {
                      "description": "The hold ID.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts"
                }
              }
            }
          },
          "methods": {
            "update": {
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Hold"
              },
              "description": "Updates the OU and/or query parameters of a hold. You cannot add accounts to a hold that covers an OU, nor can you add OUs to a hold that covers individual accounts. Accounts listed in the hold will be ignored.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "holdId": {
                  "required": true,
                  "type": "string",
                  "description": "The ID of the hold.",
                  "location": "path"
                },
                "matterId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The matter ID."
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "httpMethod": "PUT",
              "request": {
                "$ref": "Hold"
              },
              "id": "vault.matters.holds.update"
            },
            "delete": {
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "httpMethod": "DELETE",
              "id": "vault.matters.holds.delete",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "parameters": {
                "holdId": {
                  "description": "The hold ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "matterId": {
                  "type": "string",
                  "description": "The matter ID.",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Removes a hold by ID. This will release any HeldAccounts on this Hold.",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "response": {
                "$ref": "Empty"
              }
            },
            "create": {
              "path": "v1/matters/{matterId}/holds",
              "id": "vault.matters.holds.create",
              "response": {
                "$ref": "Hold"
              },
              "httpMethod": "POST",
              "description": "Creates a hold in the given matter.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "request": {
                "$ref": "Hold"
              },
              "parameters": {
                "matterId": {
                  "location": "path",
                  "description": "The matter ID.",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "matterId"
              ],
              "flatPath": "v1/matters/{matterId}/holds"
            },
            "addHeldAccounts": {
              "request": {
                "$ref": "AddHeldAccountsRequest"
              },
              "parameters": {
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The matter ID."
                },
                "holdId": {
                  "description": "The hold ID.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "response": {
                "$ref": "AddHeldAccountsResponse"
              },
              "description": "Adds HeldAccounts to a hold. Returns a list of accounts that have been successfully added. Accounts can only be added to an existing account-based hold.",
              "id": "vault.matters.holds.addHeldAccounts",
              "path": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "httpMethod": "POST",
              "parameterOrder": [
                "matterId",
                "holdId"
              ]
            },
            "get": {
              "response": {
                "$ref": "Hold"
              },
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "description": "Gets a hold by ID.",
              "httpMethod": "GET",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "id": "vault.matters.holds.get",
              "parameters": {
                "matterId": {
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string",
                  "location": "path"
                },
                "holdId": {
                  "type": "string",
                  "description": "The hold ID.",
                  "location": "path",
                  "required": true
                },
                "view": {
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ],
                  "description": "Specifies which parts of the Hold to return."
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            },
            "removeHeldAccounts": {
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "response": {
                "$ref": "RemoveHeldAccountsResponse"
              },
              "id": "vault.matters.holds.removeHeldAccounts",
              "parameters": {
                "holdId": {
                  "location": "path",
                  "description": "The hold ID.",
                  "type": "string",
                  "required": true
                },
                "matterId": {
                  "required": true,
                  "type": "string",
                  "description": "The matter ID.",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "description": "Removes HeldAccounts from a hold. Returns a list of statuses in the same order as the request. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
              "request": {
                "$ref": "RemoveHeldAccountsRequest"
              },
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "httpMethod": "POST"
            },
            "list": {
              "path": "v1/matters/{matterId}/holds",
              "httpMethod": "GET",
              "parameterOrder": [
                "matterId"
              ],
              "description": "Lists holds within a matter. An empty page token in ListHoldsResponse denotes no more holds to list.",
              "id": "vault.matters.holds.list",
              "parameters": {
                "view": {
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ],
                  "description": "Specifies which parts of the Hold to return.",
                  "location": "query",
                  "type": "string",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ]
                },
                "matterId": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The matter ID."
                },
                "pageToken": {
                  "type": "string",
                  "description": "The pagination token as returned in the response. An empty token means start from the beginning.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as page_size = 100.",
                  "location": "query",
                  "format": "int32"
                }
              },
              "response": {
                "$ref": "ListHoldsResponse"
              },
              "flatPath": "v1/matters/{matterId}/holds",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ]
            }
          }
        }
      },
      "methods": {
        "addPermissions": {
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "POST",
          "id": "vault.matters.addPermissions",
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "flatPath": "v1/matters/{matterId}:addPermissions",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "v1/matters/{matterId}:addPermissions",
          "description": "Adds an account as a matter collaborator.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "MatterPermission"
          }
        },
        "list": {
          "path": "v1/matters",
          "flatPath": "v1/matters",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "description": "Lists matters the user has access to.",
          "httpMethod": "GET",
          "parameterOrder": [],
          "id": "vault.matters.list",
          "response": {
            "$ref": "ListMattersResponse"
          },
          "parameters": {
            "state": {
              "enumDescriptions": [
                "The matter has no specified state.",
                "This matter is open.",
                "This matter is closed.",
                "This matter is deleted."
              ],
              "type": "string",
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ],
              "location": "query",
              "description": "If set, list only matters with that specific state. The default is listing matters of all states."
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "description": "The number of matters to return in the response. Default and maximum are 100.",
              "type": "integer"
            },
            "view": {
              "type": "string",
              "location": "query",
              "description": "Specifies which parts of the matter to return in response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ]
            },
            "pageToken": {
              "type": "string",
              "description": "The pagination token as returned in the response.",
              "location": "query"
            }
          }
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "id": "vault.matters.delete",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID",
              "required": true,
              "location": "path"
            }
          },
          "description": "Deletes the specified matter. Returns matter with updated state.",
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "DELETE",
          "response": {
            "$ref": "Matter"
          },
          "path": "v1/matters/{matterId}"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "response": {
            "$ref": "Matter"
          },
          "parameters": {
            "view": {
              "type": "string",
              "description": "Specifies which parts of the Matter to return in the response.",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ],
              "location": "query"
            },
            "matterId": {
              "type": "string",
              "required": true,
              "description": "The matter ID.",
              "location": "path"
            }
          },
          "httpMethod": "GET",
          "flatPath": "v1/matters/{matterId}",
          "id": "vault.matters.get",
          "description": "Gets the specified matter.",
          "path": "v1/matters/{matterId}",
          "parameterOrder": [
            "matterId"
          ]
        },
        "close": {
          "request": {
            "$ref": "CloseMatterRequest"
          },
          "parameters": {
            "matterId": {
              "location": "path",
              "description": "The matter ID.",
              "required": true,
              "type": "string"
            }
          },
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "POST",
          "path": "v1/matters/{matterId}:close",
          "flatPath": "v1/matters/{matterId}:close",
          "response": {
            "$ref": "CloseMatterResponse"
          },
          "id": "vault.matters.close",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "description": "Closes the specified matter. Returns matter with updated state."
        },
        "undelete": {
          "request": {
            "$ref": "UndeleteMatterRequest"
          },
          "httpMethod": "POST",
          "parameterOrder": [
            "matterId"
          ],
          "response": {
            "$ref": "Matter"
          },
          "id": "vault.matters.undelete",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "path": "v1/matters/{matterId}:undelete",
          "parameters": {
            "matterId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The matter ID."
            }
          },
          "description": "Undeletes the specified matter. Returns matter with updated state.",
          "flatPath": "v1/matters/{matterId}:undelete"
        },
        "create": {
          "id": "vault.matters.create",
          "parameterOrder": [],
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "request": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters",
          "httpMethod": "POST",
          "response": {
            "$ref": "Matter"
          },
          "description": "Creates a new matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.",
          "path": "v1/matters"
        },
        "count": {
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "v1/matters/{matterId}:count",
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID.",
              "location": "path",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "description": "Counts the artifacts within the context of a matter and returns a detailed breakdown of metrics.",
          "request": {
            "$ref": "CountArtifactsRequest"
          },
          "path": "v1/matters/{matterId}:count",
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "POST",
          "id": "vault.matters.count"
        },
        "removePermissions": {
          "path": "v1/matters/{matterId}:removePermissions",
          "flatPath": "v1/matters/{matterId}:removePermissions",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "id": "vault.matters.removePermissions",
          "parameterOrder": [
            "matterId"
          ],
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          },
          "description": "Removes an account as a matter collaborator.",
          "httpMethod": "POST",
          "parameters": {
            "matterId": {
              "required": true,
              "location": "path",
              "description": "The matter ID.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Empty"
          }
        },
        "update": {
          "flatPath": "v1/matters/{matterId}",
          "parameters": {
            "matterId": {
              "location": "path",
              "type": "string",
              "description": "The matter ID.",
              "required": true
            }
          },
          "response": {
            "$ref": "Matter"
          },
          "request": {
            "$ref": "Matter"
          },
          "id": "vault.matters.update",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "path": "v1/matters/{matterId}",
          "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "PUT"
        },
        "reopen": {
          "flatPath": "v1/matters/{matterId}:reopen",
          "parameters": {
            "matterId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The matter ID."
            }
          },
          "id": "vault.matters.reopen",
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "parameterOrder": [
            "matterId"
          ],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "path": "v1/matters/{matterId}:reopen",
          "request": {
            "$ref": "ReopenMatterRequest"
          },
          "description": "Reopens the specified matter. Returns matter with updated state."
        }
      }
    }
  },
  "version": "v1",
  "canonicalName": "Vault",
  "parameters": {
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ]
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "version_module": true,
  "id": "vault:v1",
  "documentationLink": "https://developers.google.com/vault",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "schemas": {
    "ReopenMatterRequest": {
      "description": "Reopen a matter by ID.",
      "properties": {},
      "type": "object",
      "id": "ReopenMatterRequest"
    },
    "MatterPermission": {
      "id": "MatterPermission",
      "properties": {
        "accountId": {
          "description": "The account ID, as provided by Admin SDK.",
          "type": "string"
        },
        "role": {
          "type": "string",
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator to the matter.",
            "The owner of the matter."
          ],
          "description": "The user's role in this matter.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ]
        }
      },
      "description": "Currently each matter only has one owner, and all others are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.",
      "type": "object"
    },
    "CountArtifactsMetadata": {
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Creation time of count operation."
        },
        "query": {
          "$ref": "Query",
          "description": "The search query from the request."
        },
        "matterId": {
          "description": "The matter ID of the associated matter.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "description": "End time of count operation. Available when operation is done.",
          "format": "google-datetime"
        }
      },
      "id": "CountArtifactsMetadata",
      "description": "Long running operation metadata for CountArtifacts.",
      "type": "object"
    },
    "HangoutsChatOptions": {
      "properties": {
        "includeRooms": {
          "description": "Set to true to include rooms.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "HangoutsChatOptions",
      "description": "Hangouts chat search advanced options"
    },
    "AddMatterPermissionsRequest": {
      "type": "object",
      "properties": {
        "ccMe": {
          "type": "boolean",
          "description": "Only relevant if send_emails is true. True to CC requestor in the email message. False to not CC requestor."
        },
        "sendEmails": {
          "description": "True to send notification email to the added account. False to not send notification email.",
          "type": "boolean"
        },
        "matterPermission": {
          "$ref": "MatterPermission",
          "description": "The MatterPermission to add."
        }
      },
      "id": "AddMatterPermissionsRequest",
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, it will be overwritten."
    },
    "SharedDriveInfo": {
      "type": "object",
      "description": "Shared drives to search",
      "id": "SharedDriveInfo",
      "properties": {
        "sharedDriveIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of Shared drive IDs, as provided by Drive API."
        }
      }
    },
    "AccountCountError": {
      "type": "object",
      "description": "An error that occurred when querying a specific account",
      "properties": {
        "account": {
          "description": "Account owner.",
          "$ref": "UserInfo"
        },
        "errorType": {
          "type": "string",
          "enumDescriptions": [
            "Default.",
            "Permanent - prefix terms expanded to too many query terms.",
            "Permanent - query contains too many terms.",
            "Transient - data in transit between storage replicas, temporarily unavailable.",
            "Unrecognized error.",
            "Deadline exceeded when querying the account."
          ],
          "description": "Account query error.",
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ]
        }
      },
      "id": "AccountCountError"
    },
    "AccountInfo": {
      "properties": {
        "emails": {
          "description": "A set of accounts to search.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Accounts to search",
      "type": "object",
      "id": "AccountInfo"
    },
    "HeldGroupsQuery": {
      "type": "object",
      "properties": {
        "endTime": {
          "type": "string",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime"
        },
        "terms": {
          "type": "string",
          "description": "The search terms for the hold."
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."
        }
      },
      "id": "HeldGroupsQuery",
      "description": "Query options for group holds."
    },
    "ListMattersResponse": {
      "properties": {
        "matters": {
          "type": "array",
          "items": {
            "$ref": "Matter"
          },
          "description": "List of matters."
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      },
      "id": "ListMattersResponse",
      "description": "Provides the list of matters.",
      "type": "object"
    },
    "HeldAccount": {
      "type": "object",
      "properties": {
        "lastName": {
          "description": "Output only. The last name of the account holder.",
          "type": "string"
        },
        "firstName": {
          "type": "string",
          "description": "Output only. The first name of the account holder."
        },
        "accountId": {
          "type": "string",
          "description": "The account's ID as provided by the Admin SDK."
        },
        "holdTime": {
          "type": "string",
          "description": "Output only. When the account was put on hold.",
          "format": "google-datetime"
        },
        "email": {
          "description": "The primary email address of the account. If used as an input, this takes precedence over account ID.",
          "type": "string"
        }
      },
      "id": "HeldAccount",
      "description": "An account being held in a particular hold. This structure is immutable. This can be either a single user or a google group, depending on the corpus."
    },
    "ListSavedQueriesResponse": {
      "type": "object",
      "description": "Definition of the response for method ListSaveQuery.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."
        },
        "savedQueries": {
          "type": "array",
          "items": {
            "$ref": "SavedQuery"
          },
          "description": "List of output saved queries."
        }
      },
      "id": "ListSavedQueriesResponse"
    },
    "Query": {
      "type": "object",
      "id": "Query",
      "properties": {
        "timeZone": {
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see Time Zone.",
          "type": "string"
        },
        "orgUnitInfo": {
          "description": "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs to be specified.",
          "$ref": "OrgUnitInfo"
        },
        "terms": {
          "type": "string",
          "description": "The corpus-specific search operators used to generate search results."
        },
        "teamDriveInfo": {
          "$ref": "TeamDriveInfo",
          "description": "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be specified."
        },
        "driveOptions": {
          "description": "For Drive search, specify more options in this field.",
          "$ref": "DriveOptions"
        },
        "hangoutsChatInfo": {
          "$ref": "HangoutsChatInfo",
          "description": "When 'ROOM' is chosen as search method, hangout_chats_info needs to be specified. (read-only)"
        },
        "startTime": {
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string",
          "format": "google-datetime"
        },
        "hangoutsChatOptions": {
          "$ref": "HangoutsChatOptions",
          "description": "For hangouts chat search, specify more options in this field. (read-only)"
        },
        "sharedDriveInfo": {
          "description": "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs to be specified.",
          "$ref": "SharedDriveInfo"
        },
        "corpus": {
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat."
          ],
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT"
          ],
          "description": "The corpus to search.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime"
        },
        "dataScope": {
          "enumDescriptions": [
            "No data scope specified.",
            "All available data.",
            "Data on hold.",
            "Data not processed."
          ],
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ],
          "type": "string",
          "description": "The data source to search from."
        },
        "searchMethod": {
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "type": "string",
          "description": "The search method to use.",
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ]
        },
        "accountInfo": {
          "$ref": "AccountInfo",
          "description": "When 'ACCOUNT' is chosen as search method, account_info needs to be specified."
        },
        "method": {
          "type": "string",
          "description": "The search method to use. This field is similar to the search_method field but is introduced to support shared drives. It supports all search method types. In case the search_method is TEAM_DRIVE the response of this field will be SHARED_DRIVE only.",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ]
        },
        "mailOptions": {
          "$ref": "MailOptions",
          "description": "For mail search, specify more options in this field."
        }
      },
      "description": "A query definition relevant for search & export."
    },
    "CountArtifactsResponse": {
      "type": "object",
      "properties": {
        "groupsCountResult": {
          "$ref": "GroupsCountResult",
          "description": "Count metrics of Groups."
        },
        "totalCount": {
          "description": "Total count of artifacts. For mail and groups, artifacts refers to messages.",
          "type": "string",
          "format": "int64"
        },
        "mailCountResult": {
          "description": "Count metrics of Mail.",
          "$ref": "MailCountResult"
        }
      },
      "description": "Definition of the response for method CountArtifacts.",
      "id": "CountArtifactsResponse"
    },
    "CountArtifactsRequest": {
      "description": "Count artifacts request.",
      "type": "object",
      "id": "CountArtifactsRequest",
      "properties": {
        "view": {
          "description": "Specifies the granularity of the count result returned in response.",
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default. It works the same as TOTAL_COUNT.",
            "Response includes: total count, queried accounts count, matching accounts count, non-queryable accounts, queried account errors.",
            "Response includes additional breakdown of account count."
          ]
        },
        "query": {
          "description": "The search query.",
          "$ref": "Query"
        }
      }
    },
    "UserInfo": {
      "description": "User's information.",
      "type": "object",
      "properties": {
        "email": {
          "description": "The email address of the user.",
          "type": "string"
        },
        "displayName": {
          "description": "The displayed name of the user.",
          "type": "string"
        }
      },
      "id": "UserInfo"
    },
    "GroupsCountResult": {
      "properties": {
        "nonQueryableAccounts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set."
        },
        "accountCountErrors": {
          "description": "Error occurred when querying these accounts.",
          "items": {
            "$ref": "AccountCountError"
          },
          "type": "array"
        },
        "matchingAccountsCount": {
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "format": "int64",
          "type": "string"
        },
        "accountCounts": {
          "description": "Subtotal count per matching account that have more than zero messages.",
          "items": {
            "$ref": "AccountCount"
          },
          "type": "array"
        },
        "queriedAccountsCount": {
          "type": "string",
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64"
        }
      },
      "description": "Groups specific count metrics.",
      "type": "object",
      "id": "GroupsCountResult"
    },
    "HangoutsChatInfo": {
      "id": "HangoutsChatInfo",
      "description": "Accounts to search",
      "type": "object",
      "properties": {
        "roomId": {
          "type": "array",
          "description": "A set of rooms to search.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "HeldMailQuery": {
      "properties": {
        "endTime": {
          "type": "string",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime"
        },
        "terms": {
          "description": "The search terms for the hold.",
          "type": "string"
        },
        "startTime": {
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "HeldMailQuery",
      "description": "Query options for mail holds.",
      "type": "object"
    },
    "AddHeldAccountResult": {
      "description": "A status detailing the status of each account creation, and the HeldAccount, if successful.",
      "id": "AddHeldAccountResult",
      "type": "object",
      "properties": {
        "account": {
          "$ref": "HeldAccount",
          "description": "If present, this account was successfully created."
        },
        "status": {
          "description": "This represents the success status. If failed, check message.",
          "$ref": "Status"
        }
      }
    },
    "OrgUnitInfo": {
      "id": "OrgUnitInfo",
      "type": "object",
      "description": "Org Unit to search",
      "properties": {
        "orgUnitId": {
          "description": "Org unit to search, as provided by the Admin SDK Directory API.",
          "type": "string"
        }
      }
    },
    "AddHeldAccountsRequest": {
      "description": "Add a list of accounts to a hold.",
      "id": "AddHeldAccountsRequest",
      "type": "object",
      "properties": {
        "emails": {
          "description": "Emails to identify which accounts to add. Only emails or only account_ids should be specified, but not both.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "accountIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Account IDs to identify which accounts to add. Only account_ids or only emails should be specified, but not both."
        }
      }
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation",
      "properties": {
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      }
    },
    "DriveOptions": {
      "properties": {
        "includeTeamDrives": {
          "type": "boolean",
          "description": "Set to true to include Team Drive."
        },
        "includeSharedDrives": {
          "description": "Set to true to include shared drive.",
          "type": "boolean"
        },
        "versionDate": {
          "type": "string",
          "format": "google-datetime",
          "description": "Search the versions of the Drive file as of the reference date. These timestamps are in GMT and rounded down to the given date."
        }
      },
      "id": "DriveOptions",
      "description": "Drive search advanced options",
      "type": "object"
    },
    "RemoveHeldAccountsRequest": {
      "id": "RemoveHeldAccountsRequest",
      "description": "Remove a list of accounts from a hold.",
      "type": "object",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Account IDs to identify HeldAccounts to remove."
        }
      }
    },
    "Hold": {
      "id": "Hold",
      "properties": {
        "orgUnit": {
          "description": "If set, the hold applies to all members of the organizational unit and accounts must be empty. This property is mutable. For groups holds, set the accounts field.",
          "$ref": "HeldOrgUnit"
        },
        "name": {
          "type": "string",
          "description": "The name of the hold."
        },
        "holdId": {
          "description": "The unique immutable ID of the hold. Assigned during creation.",
          "type": "string"
        },
        "corpus": {
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT"
          ],
          "description": "The corpus to be searched.",
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat."
          ],
          "type": "string"
        },
        "accounts": {
          "items": {
            "$ref": "HeldAccount"
          },
          "description": "If set, the hold applies to the enumerated accounts and org_unit must be empty.",
          "type": "array"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The last time this hold was modified."
        },
        "query": {
          "$ref": "CorpusQuery",
          "description": "The corpus-specific query. If set, the corpusQuery must match corpus type."
        }
      },
      "description": "Represents a hold within Vault. A hold restricts purging of artifacts based on the combination of the query and accounts restrictions. A hold can be configured to either apply to an explicitly configured set of accounts, or can be applied to all members of an organizational unit.",
      "type": "object"
    },
    "ListHeldAccountsResponse": {
      "id": "ListHeldAccountsResponse",
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "HeldAccount"
          },
          "description": "The held accounts on a hold."
        }
      },
      "description": "Returns a list of held accounts for a hold."
    },
    "ExportOptions": {
      "description": "Export advanced options",
      "id": "ExportOptions",
      "properties": {
        "mailOptions": {
          "description": "Option available for mail export.",
          "$ref": "MailExportOptions"
        },
        "driveOptions": {
          "$ref": "DriveExportOptions",
          "description": "Option available for Drive export."
        },
        "groupsOptions": {
          "$ref": "GroupsExportOptions",
          "description": "Option available for groups export."
        },
        "region": {
          "type": "string",
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ],
          "enumDescriptions": [
            "The region is unspecified. Will be treated the same as ANY.",
            "Any region.",
            "US region.",
            "Europe region."
          ],
          "description": "The requested export location."
        },
        "hangoutsChatOptions": {
          "description": "Option available for hangouts chat export.",
          "$ref": "HangoutsChatExportOptions"
        }
      },
      "type": "object"
    },
    "CloseMatterResponse": {
      "description": "Response to a CloseMatterRequest.",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state CLOSED."
        }
      },
      "id": "CloseMatterResponse",
      "type": "object"
    },
    "SavedQuery": {
      "properties": {
        "createTime": {
          "description": "Output only. The server generated timestamp at which saved query was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "matterId": {
          "description": "Output only. The matter ID of the associated matter. The server does not look at this field during create and always uses matter id in the URL.",
          "type": "string"
        },
        "displayName": {
          "description": "Name of the saved query.",
          "type": "string"
        },
        "savedQueryId": {
          "description": "A unique identifier for the saved query.",
          "type": "string"
        },
        "query": {
          "$ref": "Query",
          "description": "The underlying Query object which contains all the information of the saved query."
        }
      },
      "id": "SavedQuery",
      "description": "Definition of the saved query.",
      "type": "object"
    },
    "HeldOrgUnit": {
      "id": "HeldOrgUnit",
      "description": "A organizational unit being held in a particular hold. This structure is immutable.",
      "type": "object",
      "properties": {
        "holdTime": {
          "description": "When the org unit was put on hold. This property is immutable.",
          "type": "string",
          "format": "google-datetime"
        },
        "orgUnitId": {
          "type": "string",
          "description": "The org unit's immutable ID as provided by the Admin SDK."
        }
      }
    },
    "HeldDriveQuery": {
      "properties": {
        "includeSharedDriveFiles": {
          "description": "If true, include files in shared drives in the hold.",
          "type": "boolean"
        },
        "includeTeamDriveFiles": {
          "type": "boolean",
          "description": "If true, include files in Team Drives in the hold."
        }
      },
      "id": "HeldDriveQuery",
      "type": "object",
      "description": "Query options for Drive holds."
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "type": "array",
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request."
        }
      }
    },
    "Matter": {
      "type": "object",
      "description": "Represents a matter.",
      "properties": {
        "name": {
          "description": "The name of the matter.",
          "type": "string"
        },
        "state": {
          "enumDescriptions": [
            "The matter has no specified state.",
            "This matter is open.",
            "This matter is closed.",
            "This matter is deleted."
          ],
          "description": "The state of the matter.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ]
        },
        "matterPermissions": {
          "description": "List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
          "type": "array",
          "items": {
            "$ref": "MatterPermission"
          }
        },
        "matterId": {
          "description": "The matter ID which is generated by the server. Should be blank when creating a new matter.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "The description of the matter."
        }
      },
      "id": "Matter"
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "type": "object",
      "properties": {},
      "description": "The request message for Operations.CancelOperation."
    },
    "RemoveMatterPermissionsRequest": {
      "description": "Remove an account as a matter collaborator.",
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The account ID."
        }
      },
      "id": "RemoveMatterPermissionsRequest"
    },
    "ListHoldsResponse": {
      "id": "ListHoldsResponse",
      "description": "The holds for a matter.",
      "properties": {
        "holds": {
          "type": "array",
          "items": {
            "$ref": "Hold"
          },
          "description": "The list of holds."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list."
        }
      },
      "type": "object"
    },
    "Empty": {
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty"
    },
    "Export": {
      "properties": {
        "requester": {
          "description": "Output only. The requester of the export.",
          "$ref": "UserInfo"
        },
        "name": {
          "description": "The export name.",
          "type": "string"
        },
        "stats": {
          "description": "Output only. Export statistics.",
          "$ref": "ExportStats"
        },
        "status": {
          "type": "string",
          "description": "Output only. The export status.",
          "enumDescriptions": [
            "The status is unspecified.",
            "The export completed.",
            "The export failed.",
            "The export is still being executed."
          ],
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ]
        },
        "matterId": {
          "description": "Output only. The matter ID.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Output only. The generated export ID."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time when the export was created."
        },
        "cloudStorageSink": {
          "$ref": "CloudStorageSink",
          "description": "Output only. Export sink for cloud storage files."
        },
        "query": {
          "$ref": "Query",
          "description": "The search query being exported."
        },
        "exportOptions": {
          "$ref": "ExportOptions",
          "description": "Advanced options of the export."
        }
      },
      "type": "object",
      "id": "Export",
      "description": "An export"
    },
    "CloudStorageSink": {
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "$ref": "CloudStorageFile"
          },
          "description": "Output only. The exported files on cloud storage."
        }
      },
      "id": "CloudStorageSink",
      "description": "Export sink for cloud storage files.",
      "type": "object"
    },
    "MailExportOptions": {
      "properties": {
        "showConfidentialModeContent": {
          "type": "boolean",
          "description": "Set to true to export confidential mode content."
        },
        "exportFormat": {
          "description": "The export file format.",
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ]
        }
      },
      "description": "The options for mail export.",
      "id": "MailExportOptions",
      "type": "object"
    },
    "ExportStats": {
      "type": "object",
      "id": "ExportStats",
      "properties": {
        "exportedArtifactCount": {
          "format": "int64",
          "description": "The number of documents already processed by the export.",
          "type": "string"
        },
        "totalArtifactCount": {
          "format": "int64",
          "type": "string",
          "description": "The number of documents to be exported."
        },
        "sizeInBytes": {
          "format": "int64",
          "type": "string",
          "description": "The size of export in bytes."
        }
      },
      "description": "Stats of an export."
    },
    "CloseMatterRequest": {
      "properties": {},
      "description": "Close a matter by ID.",
      "type": "object",
      "id": "CloseMatterRequest"
    },
    "AccountCount": {
      "id": "AccountCount",
      "type": "object",
      "description": "Count number for each account.",
      "properties": {
        "account": {
          "description": "Account owner.",
          "$ref": "UserInfo"
        },
        "count": {
          "format": "int64",
          "description": "The number of artifacts found for this account.",
          "type": "string"
        }
      }
    },
    "HeldHangoutsChatQuery": {
      "properties": {
        "includeRooms": {
          "description": "If true, include rooms the user has participated in.",
          "type": "boolean"
        }
      },
      "description": "Query options for hangouts chat holds.",
      "id": "HeldHangoutsChatQuery",
      "type": "object"
    },
    "TeamDriveInfo": {
      "description": "Team Drives to search",
      "properties": {
        "teamDriveIds": {
          "description": "List of Team Drive IDs, as provided by Drive API.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "TeamDriveInfo",
      "type": "object"
    },
    "AddHeldAccountsResponse": {
      "type": "object",
      "description": "Response for batch create held accounts.",
      "id": "AddHeldAccountsResponse",
      "properties": {
        "responses": {
          "description": "The list of responses, in the same order as the batch request.",
          "type": "array",
          "items": {
            "$ref": "AddHeldAccountResult"
          }
        }
      }
    },
    "HangoutsChatExportOptions": {
      "type": "object",
      "id": "HangoutsChatExportOptions",
      "description": "The options for hangouts chat export.",
      "properties": {
        "exportFormat": {
          "description": "The export format for hangouts chat export.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ]
        }
      }
    },
    "ReopenMatterResponse": {
      "id": "ReopenMatterResponse",
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state OPEN."
        }
      },
      "type": "object",
      "description": "Response to a ReopenMatterRequest."
    },
    "CloudStorageFile": {
      "type": "object",
      "properties": {
        "objectName": {
          "description": "The cloud storage object name of this export file. Can be used in cloud storage JSON/XML API.",
          "type": "string"
        },
        "md5Hash": {
          "type": "string",
          "description": "The md5 hash of the file."
        },
        "size": {
          "type": "string",
          "format": "int64",
          "description": "The size of the export file."
        },
        "bucketName": {
          "type": "string",
          "description": "The cloud storage bucket name of this export file. Can be used in cloud storage JSON/XML API, but not to list the bucket contents. Instead, you can get individual export files by object name."
        }
      },
      "id": "CloudStorageFile",
      "description": "An export file on cloud storage"
    },
    "MailCountResult": {
      "id": "MailCountResult",
      "type": "object",
      "properties": {
        "accountCounts": {
          "type": "array",
          "items": {
            "$ref": "AccountCount"
          },
          "description": "Subtotal count per matching account that have more than zero messages."
        },
        "queriedAccountsCount": {
          "description": "Total number of accounts involved in this count operation.",
          "type": "string",
          "format": "int64"
        },
        "nonQueryableAccounts": {
          "items": {
            "type": "string"
          },
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "type": "array"
        },
        "accountCountErrors": {
          "description": "Error occurred when querying these accounts.",
          "type": "array",
          "items": {
            "$ref": "AccountCountError"
          }
        },
        "matchingAccountsCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of accounts that can be queried and have more than zero messages."
        }
      },
      "description": "Mail specific count metrics."
    },
    "CorpusQuery": {
      "id": "CorpusQuery",
      "properties": {
        "mailQuery": {
          "$ref": "HeldMailQuery",
          "description": "Details pertaining to mail holds. If set, corpus must be mail."
        },
        "groupsQuery": {
          "description": "Details pertaining to Groups holds. If set, corpus must be Groups.",
          "$ref": "HeldGroupsQuery"
        },
        "hangoutsChatQuery": {
          "$ref": "HeldHangoutsChatQuery",
          "description": "Details pertaining to Hangouts Chat holds. If set, corpus must be Hangouts Chat."
        },
        "driveQuery": {
          "$ref": "HeldDriveQuery",
          "description": "Details pertaining to Drive holds. If set, corpus must be Drive."
        }
      },
      "type": "object",
      "description": "Corpus specific queries."
    },
    "ListExportsResponse": {
      "description": "The holds for a matter.",
      "id": "ListExportsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list."
        },
        "exports": {
          "items": {
            "$ref": "Export"
          },
          "type": "array",
          "description": "The list of exports."
        }
      },
      "type": "object"
    },
    "MailOptions": {
      "properties": {
        "excludeDrafts": {
          "description": "Set to true to exclude drafts.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "MailOptions",
      "description": "Mail search advanced options"
    },
    "RemoveHeldAccountsResponse": {
      "properties": {
        "statuses": {
          "description": "A list of statuses for deleted accounts. Results have the same order as the request.",
          "type": "array",
          "items": {
            "$ref": "Status"
          }
        }
      },
      "type": "object",
      "description": "Response for batch delete held accounts.",
      "id": "RemoveHeldAccountsResponse"
    },
    "GroupsExportOptions": {
      "id": "GroupsExportOptions",
      "type": "object",
      "properties": {
        "exportFormat": {
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string",
          "description": "The export format for groups export."
        }
      },
      "description": "The options for groups export."
    },
    "UndeleteMatterRequest": {
      "description": "Undelete a matter by ID.",
      "type": "object",
      "id": "UndeleteMatterRequest",
      "properties": {}
    },
    "DriveExportOptions": {
      "type": "object",
      "description": "The options for Drive export.",
      "id": "DriveExportOptions",
      "properties": {
        "includeAccessInfo": {
          "type": "boolean",
          "description": "Set to true to include access level information for users with indirect access to files."
        }
      }
    }
  },
  "ownerName": "Google",
  "servicePath": "",
  "revision": "20201001",
  "name": "vault",
  "mtlsRootUrl": "https://vault.mtls.googleapis.com/",
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://vault.googleapis.com/",
  "discoveryVersion": "v1",
  "title": "G Suite Vault API",
  "protocol": "rest",
  "description": "Archiving and eDiscovery for G Suite.",
  "batchPath": "batch"
}
