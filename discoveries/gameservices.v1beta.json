{
  "parameters": {
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "location": "query",
      "description": "Returns response with indentations and line breaks."
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    }
  },
  "servicePath": "",
  "baseUrl": "https://gameservices.googleapis.com/",
  "title": "Game Services API",
  "discoveryVersion": "v1",
  "revision": "20201008",
  "basePath": "",
  "id": "gameservices:v1beta",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "ownerDomain": "google.com",
  "description": "Deploy and manage infrastructure for global multiplayer gaming experiences.",
  "canonicalName": "Game Services",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "The standard list page token.",
                      "location": "query"
                    },
                    "name": {
                      "location": "path",
                      "description": "The name of the operation's parent resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "gameservices.projects.locations.operations.list",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "httpMethod": "GET",
                  "path": "v1beta/{+name}/operations"
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "id": "gameservices.projects.locations.operations.delete",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "path": "v1beta/{+name}"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gameservices.projects.locations.operations.get",
                  "path": "v1beta/{+name}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "response": {
                    "$ref": "Operation"
                  }
                },
                "cancel": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "httpMethod": "POST",
                  "path": "v1beta/{+name}:cancel",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gameservices.projects.locations.operations.cancel"
                }
              }
            },
            "gameServerDeployments": {
              "resources": {
                "configs": {
                  "methods": {
                    "get": {
                      "response": {
                        "$ref": "GameServerConfig"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs/{configsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta/{+name}",
                      "description": "Gets details of a single game server config.",
                      "id": "gameservices.projects.locations.gameServerDeployments.configs.get",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the game server config to retrieve, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/configs/{config}`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+/configs/[^/]+$",
                          "required": true,
                          "location": "path"
                        }
                      },
                      "httpMethod": "GET"
                    },
                    "create": {
                      "description": "Creates a new game server config in a given project, location, and game server deployment. Game server configs are immutable, and are not applied until referenced in the game server deployment rollout resource.",
                      "id": "gameservices.projects.locations.gameServerDeployments.configs.create",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1beta/{+parent}/configs",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/`."
                        },
                        "configId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The ID of the game server config resource to be created."
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "GameServerConfig"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1beta/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+/configs/[^/]+$",
                          "required": true,
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the game server config to delete, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/configs/{config}`."
                        }
                      },
                      "id": "gameservices.projects.locations.gameServerDeployments.configs.delete",
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes a single game server config. The deletion will fail if the game server config is referenced in a game server deployment rollout.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs/{configsId}"
                    },
                    "list": {
                      "httpMethod": "GET",
                      "description": "Lists game server configs in a given project, location, and game server deployment.",
                      "parameters": {
                        "orderBy": {
                          "type": "string",
                          "location": "query",
                          "description": "Optional. Specifies the ordering of results following syntax at https://cloud.google.com/apis/design/design_patterns#sorting_order."
                        },
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$",
                          "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/configs/*`.",
                          "required": true,
                          "location": "path"
                        },
                        "filter": {
                          "location": "query",
                          "description": "Optional. The filter to apply to list results.",
                          "type": "string"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. The next_page_token value returned from a previous list request, if any.",
                          "location": "query"
                        },
                        "pageSize": {
                          "format": "int32",
                          "type": "integer",
                          "location": "query",
                          "description": "Optional. The maximum number of items to return. If unspecified, server will pick an appropriate default. Server may return fewer items than requested. A caller should only rely on response's next_page_token to determine if there are more GameServerConfigs left to be queried."
                        }
                      },
                      "path": "v1beta/{+parent}/configs",
                      "response": {
                        "$ref": "ListGameServerConfigsResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gameservices.projects.locations.gameServerDeployments.configs.list",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/configs"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "httpMethod": "DELETE",
                  "id": "gameservices.projects.locations.gameServerDeployments.delete",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the game server delpoyment to delete, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a single game server deployment.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}",
                  "path": "v1beta/{+name}"
                },
                "patch": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gameservices.projects.locations.gameServerDeployments.patch",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}",
                  "path": "v1beta/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. For the `FieldMask` definition, see https: //developers.google.com/protocol-buffers // /docs/reference/google.protobuf#fieldmask",
                      "format": "google-fieldmask",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "description": "The resource name of the game server deployment, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment`.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$"
                    }
                  },
                  "description": "Patches a game server deployment.",
                  "request": {
                    "$ref": "GameServerDeployment"
                  }
                },
                "previewRollout": {
                  "request": {
                    "$ref": "GameServerDeploymentRollout"
                  },
                  "httpMethod": "PATCH",
                  "id": "gameservices.projects.locations.gameServerDeployments.previewRollout",
                  "parameters": {
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "description": "Optional. Mask of fields to update. At least one path must be supplied in this field. For the `FieldMask` definition, see https: //developers.google.com/protocol-buffers // /docs/reference/google.protobuf#fieldmask",
                      "type": "string"
                    },
                    "name": {
                      "description": "The resource name of the game server deployment rollout, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/rollout`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$",
                      "required": true
                    },
                    "previewTime": {
                      "format": "google-datetime",
                      "description": "Optional. The target timestamp to compute the preview. Defaults to the immediately after the proposed rollout completes.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "PreviewGameServerDeploymentRolloutResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Previews the game server deployment rollout. This API does not mutate the rollout resource.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout:preview",
                  "path": "v1beta/{+name}/rollout:preview"
                },
                "setIamPolicy": {
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "httpMethod": "POST",
                  "id": "gameservices.projects.locations.gameServerDeployments.setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$"
                    }
                  },
                  "path": "v1beta/{+resource}:setIamPolicy"
                },
                "updateRollout": {
                  "id": "gameservices.projects.locations.gameServerDeployments.updateRollout",
                  "httpMethod": "PATCH",
                  "path": "v1beta/{+name}/rollout",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one path must be supplied in this field. For the `FieldMask` definition, see https: //developers.google.com/protocol-buffers // /docs/reference/google.protobuf#fieldmask",
                      "format": "google-fieldmask",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$",
                      "description": "The resource name of the game server deployment rollout, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/rollout`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Patches a single game server deployment rollout. The method will not return an error if the update does not affect any existing realms. For example - if the default_game_server_config is changed but all existing realms use the override, that is valid. Similarly, if a non existing realm is explicitly called out in game_server_config_overrides field, that will also not result in an error.",
                  "request": {
                    "$ref": "GameServerDeploymentRollout"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout"
                },
                "getIamPolicy": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:getIamPolicy",
                  "parameters": {
                    "resource": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."
                    },
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1beta/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "id": "gameservices.projects.locations.gameServerDeployments.getIamPolicy"
                },
                "fetchDeploymentState": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:fetchDeploymentState",
                  "response": {
                    "$ref": "FetchDeploymentStateResponse"
                  },
                  "request": {
                    "$ref": "FetchDeploymentStateRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gameservices.projects.locations.gameServerDeployments.fetchDeploymentState",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the game server delpoyment, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}`."
                    }
                  },
                  "path": "v1beta/{+name}:fetchDeploymentState",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Retrieves information about the current state of the game server deployment. Gathers all the Agones fleets and Agones autoscalers, including fleets running an older version of the game server deployment."
                },
                "getRollout": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the game server delpoyment to retrieve, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/rollout`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$"
                    }
                  },
                  "id": "gameservices.projects.locations.gameServerDeployments.getRollout",
                  "response": {
                    "$ref": "GameServerDeploymentRollout"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}/rollout",
                  "description": "Gets details a single game server deployment rollout.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}/rollout"
                },
                "get": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}",
                  "description": "Gets details of a single game server deployment.",
                  "response": {
                    "$ref": "GameServerDeployment"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the game server delpoyment to retrieve, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}",
                  "id": "gameservices.projects.locations.gameServerDeployments.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "parameters": {
                    "resource": {
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/gameServerDeployments/[^/]+$"
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "path": "v1beta/{+resource}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "id": "gameservices.projects.locations.gameServerDeployments.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments/{gameServerDeploymentsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Creates a new game server deployment in a given project and location.",
                  "httpMethod": "POST",
                  "id": "gameservices.projects.locations.gameServerDeployments.create",
                  "path": "v1beta/{+parent}/gameServerDeployments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GameServerDeployment"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{location}`.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "deploymentId": {
                      "description": "Required. The ID of the game server delpoyment resource to be created.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists game server deployments in a given project and location.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta/{+parent}/gameServerDeployments",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListGameServerDeploymentsResponse"
                  },
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/gameServerDeployments",
                  "id": "gameservices.projects.locations.gameServerDeployments.list",
                  "parameters": {
                    "orderBy": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Specifies the ordering of results following syntax at https://cloud.google.com/apis/design/design_patterns#sorting_order."
                    },
                    "pageSize": {
                      "description": "Optional. The maximum number of items to return. If unspecified, the server will pick an appropriate default. The server may return fewer items than requested. A caller should only rely on response's next_page_token to determine if there are more GameServerDeployments left to be queried.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "filter": {
                      "description": "Optional. The filter to apply to list results.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{location}`.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. The next_page_token value returned from a previous List request, if any."
                    }
                  }
                }
              }
            },
            "realms": {
              "resources": {
                "gameServerClusters": {
                  "methods": {
                    "previewUpdate": {
                      "request": {
                        "$ref": "GameServerCluster"
                      },
                      "id": "gameservices.projects.locations.realms.gameServerClusters.previewUpdate",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "previewTime": {
                          "description": "Optional. The target timestamp to compute the preview.",
                          "format": "google-datetime",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "description": "Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{location}/realms/{realm}/gameServerClusters/{cluster}`. For example, `projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster`.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path"
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Required. Mask of fields to update. At least one path must be supplied in this field. For the `FieldMask` definition, see https: //developers.google.com/protocol-buffers // /docs/reference/google.protobuf#fieldmask"
                        }
                      },
                      "path": "v1beta/{+name}:previewUpdate",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "PreviewUpdateGameServerClusterResponse"
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:previewUpdate",
                      "description": "Previews updating a GameServerCluster.",
                      "httpMethod": "PATCH"
                    },
                    "create": {
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters",
                      "response": {
                        "$ref": "Operation"
                      },
                      "path": "v1beta/{+parent}/gameServerClusters",
                      "httpMethod": "POST",
                      "description": "Creates a new game server cluster in a given project and location.",
                      "id": "gameservices.projects.locations.realms.gameServerClusters.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GameServerCluster"
                      },
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$",
                          "type": "string",
                          "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{location}/realms/{realm-id}`.",
                          "location": "path"
                        },
                        "gameServerClusterId": {
                          "description": "Required. The ID of the game server cluster resource to be created.",
                          "type": "string",
                          "location": "query"
                        }
                      }
                    },
                    "list": {
                      "path": "v1beta/{+parent}/gameServerClusters",
                      "parameters": {
                        "pageSize": {
                          "description": "Optional. The maximum number of items to return. If unspecified, the server will pick an appropriate default. The server may return fewer items than requested. A caller should only rely on response's next_page_token to determine if there are more GameServerClusters left to be queried.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "filter": {
                          "description": "Optional. The filter to apply to list results.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "description": "Required. The parent resource name, in the following form: \"projects/{project}/locations/{location}/realms/{realm}\".",
                          "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                          "type": "string",
                          "location": "query"
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Specifies the ordering of results following syntax at https://cloud.google.com/apis/design/design_patterns#sorting_order."
                        }
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters",
                      "description": "Lists game server clusters in a given project and location.",
                      "id": "gameservices.projects.locations.realms.gameServerClusters.list",
                      "response": {
                        "$ref": "ListGameServerClustersResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "delete": {
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the game server cluster to delete, in the following form: `projects/{project}/locations/{location}/gameServerClusters/{cluster}`.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$",
                          "location": "path"
                        }
                      },
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}",
                      "path": "v1beta/{+name}",
                      "description": "Deletes a single game server cluster.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Operation"
                      },
                      "id": "gameservices.projects.locations.realms.gameServerClusters.delete",
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "patch": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{location}/realms/{realm}/gameServerClusters/{cluster}`. For example, `projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$",
                          "location": "path"
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Required. Mask of fields to update. At least one path must be supplied in this field. For the `FieldMask` definition, see https: //developers.google.com/protocol-buffers // /docs/reference/google.protobuf#fieldmask"
                        }
                      },
                      "request": {
                        "$ref": "GameServerCluster"
                      },
                      "id": "gameservices.projects.locations.realms.gameServerClusters.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "PATCH",
                      "description": "Patches a single game server cluster.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}",
                      "path": "v1beta/{+name}"
                    },
                    "previewCreate": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "GameServerCluster"
                      },
                      "description": "Previews creation of a new game server cluster in a given project and location.",
                      "response": {
                        "$ref": "PreviewCreateGameServerClusterResponse"
                      },
                      "path": "v1beta/{+parent}/gameServerClusters:previewCreate",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters:previewCreate",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$",
                          "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{location}/realms/{realm}`.",
                          "type": "string"
                        },
                        "previewTime": {
                          "type": "string",
                          "format": "google-datetime",
                          "location": "query",
                          "description": "Optional. The target timestamp to compute the preview."
                        },
                        "gameServerClusterId": {
                          "location": "query",
                          "type": "string",
                          "description": "Required. The ID of the game server cluster resource to be created."
                        }
                      },
                      "id": "gameservices.projects.locations.realms.gameServerClusters.previewCreate",
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "previewDelete": {
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$",
                          "description": "Required. The name of the game server cluster to delete, in the following form: `projects/{project}/locations/{location}/gameServerClusters/{cluster}`.",
                          "location": "path"
                        },
                        "previewTime": {
                          "format": "google-datetime",
                          "description": "Optional. The target timestamp to compute the preview.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "PreviewDeleteGameServerClusterResponse"
                      },
                      "path": "v1beta/{+name}:previewDelete",
                      "httpMethod": "DELETE",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "gameservices.projects.locations.realms.gameServerClusters.previewDelete",
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}:previewDelete",
                      "description": "Previews deletion of a single game server cluster."
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta/{+name}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+/gameServerClusters/[^/]+$",
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The name of the game server cluster to retrieve, in the following form: `projects/{project}/locations/{location}/realms/{realm-id}/gameServerClusters/{cluster}`."
                        }
                      },
                      "response": {
                        "$ref": "GameServerCluster"
                      },
                      "id": "gameservices.projects.locations.realms.gameServerClusters.get",
                      "description": "Gets details of a single game server cluster.",
                      "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}/gameServerClusters/{gameServerClustersId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "path": "v1beta/{+parent}/realms",
                  "description": "Lists realms in a given project and location.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms",
                  "id": "gameservices.projects.locations.realms.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Specifies the ordering of results following syntax at https://cloud.google.com/apis/design/design_patterns#sorting_order."
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous List request, if any.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{location}`.",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return. If unspecified, server will pick an appropriate default. Server may return fewer items than requested. A caller should only rely on response's next_page_token to determine if there are more realms left to be queried."
                    },
                    "filter": {
                      "type": "string",
                      "description": "Optional. The filter to apply to list results.",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListRealmsResponse"
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the realm to delete, in the following form: `projects/{project}/locations/{location}/realms/{realm}`."
                    }
                  },
                  "path": "v1beta/{+name}",
                  "description": "Deletes a single realm.",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gameservices.projects.locations.realms.delete",
                  "httpMethod": "DELETE"
                },
                "get": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single realm.",
                  "httpMethod": "GET",
                  "id": "gameservices.projects.locations.realms.get",
                  "path": "v1beta/{+name}",
                  "response": {
                    "$ref": "Realm"
                  },
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the realm to retrieve, in the following form: `projects/{project}/locations/{location}/realms/{realm}`."
                    }
                  }
                },
                "previewUpdate": {
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}:previewUpdate",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta/{+name}:previewUpdate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "gameservices.projects.locations.realms.previewUpdate",
                  "description": "Previews patches to a single realm.",
                  "response": {
                    "$ref": "PreviewRealmUpdateResponse"
                  },
                  "parameters": {
                    "previewTime": {
                      "location": "query",
                      "description": "Optional. The target timestamp to compute the preview.",
                      "format": "google-datetime",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The resource name of the realm, in the following form: `projects/{project}/locations/{location}/realms/{realm}`. For example, `projects/my-project/locations/{location}/realms/my-realm`."
                    },
                    "updateMask": {
                      "location": "query",
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https: //developers.google.com/protocol-buffers // /docs/reference/google.protobuf#fieldmask"
                    }
                  },
                  "request": {
                    "$ref": "Realm"
                  },
                  "httpMethod": "PATCH"
                },
                "create": {
                  "id": "gameservices.projects.locations.realms.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta/{+parent}/realms",
                  "request": {
                    "$ref": "Realm"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new realm in a given project and location.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms",
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The parent resource name, in the following form: `projects/{project}/locations/{location}`."
                    },
                    "realmId": {
                      "location": "query",
                      "description": "Required. The ID of the realm resource to be created.",
                      "type": "string"
                    }
                  }
                },
                "patch": {
                  "path": "v1beta/{+name}",
                  "httpMethod": "PATCH",
                  "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}/realms/{realmsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "updateMask": {
                      "description": "Required. The update mask applies to the resource. For the `FieldMask` definition, see https: //developers.google.com/protocol-buffers // /docs/reference/google.protobuf#fieldmask",
                      "type": "string",
                      "format": "google-fieldmask",
                      "location": "query"
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/realms/[^/]+$",
                      "description": "The resource name of the realm, in the following form: `projects/{project}/locations/{location}/realms/{realm}`. For example, `projects/my-project/locations/{location}/realms/my-realm`.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "gameservices.projects.locations.realms.patch",
                  "request": {
                    "$ref": "Realm"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Patches a single realm."
                }
              }
            }
          },
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta/{+name}/locations",
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "type": "string",
                  "required": true
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "The standard list filter."
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The standard list page token."
                },
                "includeUnrevealedLocations": {
                  "type": "boolean",
                  "location": "query",
                  "description": "If true, the returned list will include locations which are not yet revealed."
                }
              },
              "id": "gameservices.projects.locations.list",
              "flatPath": "v1beta/projects/{projectsId}/locations",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              }
            },
            "get": {
              "flatPath": "v1beta/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Resource name for the location.",
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location.",
              "path": "v1beta/{+name}",
              "id": "gameservices.projects.locations.get"
            }
          }
        }
      }
    }
  },
  "rootUrl": "https://gameservices.googleapis.com/",
  "version": "v1beta",
  "mtlsRootUrl": "https://gameservices.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "ownerName": "Google",
  "protocol": "rest",
  "name": "gameservices",
  "schemas": {
    "TargetFleetAutoscaler": {
      "id": "TargetFleetAutoscaler",
      "description": "Target Agones autoscaler policy reference.",
      "type": "object",
      "properties": {
        "specSource": {
          "$ref": "SpecSource",
          "description": "Encapsulates the source of the Agones fleet spec. Details about the Agones autoscaler spec."
        },
        "name": {
          "type": "string",
          "description": "The name of the Agones autoscaler."
        }
      }
    },
    "ListOperationsResponse": {
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        }
      }
    },
    "PreviewDeleteGameServerClusterResponse": {
      "description": "Response message for GameServerClustersService.PreviewDeleteGameServerCluster.",
      "properties": {
        "etag": {
          "type": "string",
          "description": "The ETag of the game server cluster."
        },
        "targetState": {
          "$ref": "TargetState",
          "description": "The target state."
        }
      },
      "type": "object",
      "id": "PreviewDeleteGameServerClusterResponse"
    },
    "Rule": {
      "description": "A rule to be applied in a Policy.",
      "id": "Rule",
      "type": "object",
      "properties": {
        "notIn": {
          "type": "array",
          "description": "If one or more 'not_in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in none of the entries. The format for in and not_in entries can be found at in the Local IAM documentation (see go/local-iam#features).",
          "items": {
            "type": "string"
          }
        },
        "logConfig": {
          "type": "array",
          "description": "The config returned to callers of tech.iam.IAM.CheckPolicy for any entries that match the LOG action.",
          "items": {
            "$ref": "LogConfig"
          }
        },
        "action": {
          "type": "string",
          "enumDescriptions": [
            "Default no action.",
            "Matching 'Entries' grant access.",
            "Matching 'Entries' grant access and the caller promises to log the request per the returned log_configs.",
            "Matching 'Entries' deny access.",
            "Matching 'Entries' deny access and the caller promises to log the request per the returned log_configs.",
            "Matching 'Entries' tell IAM.Check callers to generate logs."
          ],
          "description": "Required",
          "enum": [
            "NO_ACTION",
            "ALLOW",
            "ALLOW_WITH_LOG",
            "DENY",
            "DENY_WITH_LOG",
            "LOG"
          ]
        },
        "in": {
          "description": "If one or more 'in' clauses are specified, the rule matches if the PRINCIPAL/AUTHORITY_SELECTOR is in at least one of these entries.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A permission is a string of form '..' (e.g., 'storage.buckets.list'). A value of '*' matches all permissions, and a verb part of '*' (e.g., 'storage.buckets.*') matches all verbs.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of the rule."
        },
        "conditions": {
          "items": {
            "$ref": "Condition"
          },
          "type": "array",
          "description": "Additional restrictions that must be met. All conditions must pass for the rule to match."
        }
      }
    },
    "PreviewCreateGameServerClusterResponse": {
      "id": "PreviewCreateGameServerClusterResponse",
      "type": "object",
      "description": "Response message for GameServerClustersService.PreviewCreateGameServerCluster.",
      "properties": {
        "targetState": {
          "$ref": "TargetState",
          "description": "The target state."
        },
        "etag": {
          "description": "The ETag of the game server cluster.",
          "type": "string"
        }
      }
    },
    "DeployedFleetAutoscaler": {
      "description": "Details about the Agones autoscaler.",
      "type": "object",
      "properties": {
        "specSource": {
          "$ref": "SpecSource",
          "description": "The source spec that is used to create the autoscaler. The GameServerConfig resource may no longer exist in the system."
        },
        "fleetAutoscalerSpec": {
          "description": "The autoscaler spec retrieved from Agones.",
          "type": "string"
        },
        "autoscaler": {
          "type": "string",
          "description": "The name of the Agones autoscaler."
        }
      },
      "id": "DeployedFleetAutoscaler"
    },
    "ListGameServerConfigsResponse": {
      "id": "ListGameServerConfigsResponse",
      "properties": {
        "gameServerConfigs": {
          "items": {
            "$ref": "GameServerConfig"
          },
          "type": "array",
          "description": "The list of game server configs."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of locations that could not be reached."
        }
      },
      "description": "Response message for GameServerConfigsService.ListGameServerConfigs.",
      "type": "object"
    },
    "CancelOperationRequest": {
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "id": "CancelOperationRequest"
    },
    "GameServerConfig": {
      "description": "A game server config resource.",
      "properties": {
        "scalingConfigs": {
          "type": "array",
          "description": "The autoscaling settings.",
          "items": {
            "$ref": "ScalingConfig"
          }
        },
        "description": {
          "description": "The description of the game server config.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the game server config, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/configs/{config}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The last-modified time."
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "fleetConfigs": {
          "items": {
            "$ref": "FleetConfig"
          },
          "type": "array",
          "description": "FleetConfig contains a list of Agones fleet specs. Only one FleetConfig is allowed."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels associated with this game server config. Each label is a key-value pair."
        }
      },
      "id": "GameServerConfig",
      "type": "object"
    },
    "GameServerConfigOverride": {
      "description": "A game server config override.",
      "properties": {
        "realmsSelector": {
          "$ref": "RealmSelector",
          "description": "Selector for choosing applicable realms."
        },
        "configVersion": {
          "description": "The game server config for this override.",
          "type": "string"
        }
      },
      "id": "GameServerConfigOverride",
      "type": "object"
    },
    "AuthorizationLoggingOptions": {
      "type": "object",
      "id": "AuthorizationLoggingOptions",
      "properties": {
        "permissionType": {
          "enumDescriptions": [
            "Default. Should not be used.",
            "A read of admin (meta) data.",
            "A write of admin (meta) data.",
            "A read of standard data.",
            "A write of standard data."
          ],
          "enum": [
            "PERMISSION_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "ADMIN_WRITE",
            "DATA_READ",
            "DATA_WRITE"
          ],
          "description": "The type of the permission that was checked.",
          "type": "string"
        }
      },
      "description": "Authorization-related information used by Cloud Audit Logging."
    },
    "FetchDeploymentStateResponse": {
      "properties": {
        "unavailable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of locations that could not be reached."
        },
        "clusterState": {
          "description": "The state of the game server deployment in each game server cluster.",
          "type": "array",
          "items": {
            "$ref": "DeployedClusterState"
          }
        }
      },
      "id": "FetchDeploymentStateResponse",
      "type": "object",
      "description": "Response message for GameServerDeploymentsService.FetchDeploymentState."
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        }
      }
    },
    "DeployedFleet": {
      "id": "DeployedFleet",
      "type": "object",
      "description": "Agones fleet specification and details.",
      "properties": {
        "fleet": {
          "type": "string",
          "description": "The name of the Agones fleet."
        },
        "specSource": {
          "$ref": "SpecSource",
          "description": "The source spec that is used to create the Agones fleet. The GameServerConfig resource may no longer exist in the system."
        },
        "status": {
          "$ref": "DeployedFleetStatus",
          "description": "The current status of the Agones fleet. Includes count of game servers in various states."
        },
        "fleetSpec": {
          "description": "The fleet spec retrieved from the Agones fleet.",
          "type": "string"
        }
      }
    },
    "OperationStatus": {
      "properties": {
        "errorCode": {
          "enumDescriptions": [
            "",
            "",
            "",
            ""
          ],
          "description": "The error code in case of failures.",
          "type": "string",
          "enum": [
            "ERROR_CODE_UNSPECIFIED",
            "INTERNAL_ERROR",
            "PERMISSION_DENIED",
            "CLUSTER_CONNECTION"
          ]
        },
        "errorMessage": {
          "type": "string",
          "description": "The human-readable error message."
        },
        "done": {
          "description": "Output only. Whether the operation is done or still in progress.",
          "type": "boolean",
          "readOnly": true
        }
      },
      "id": "OperationStatus",
      "type": "object"
    },
    "Binding": {
      "type": "object",
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "properties": {
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "bindingId": {
          "description": "A client-specified ID for this binding. Expected to be globally unique to support the internal bindings-by-ID API.",
          "type": "string"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {}
    },
    "TargetDetails": {
      "properties": {
        "gameServerDeploymentName": {
          "description": "The game server deployment name. Uses the form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment_id}`.",
          "type": "string"
        },
        "fleetDetails": {
          "items": {
            "$ref": "TargetFleetDetails"
          },
          "type": "array",
          "description": "Agones fleet details for game server clusters and game server deployments."
        },
        "gameServerClusterName": {
          "type": "string",
          "description": "The game server cluster name. Uses the form: `projects/{project}/locations/{location}/realms/{realm}/gameServerClusters/{cluster}`."
        }
      },
      "id": "TargetDetails",
      "description": "Details about the Agones resources.",
      "type": "object"
    },
    "CounterOptions": {
      "id": "CounterOptions",
      "type": "object",
      "description": "Increment a streamz counter with the specified metric and field names. Metric names should start with a '/', generally be lowercase-only, and end in \"_count\". Field names should not contain an initial slash. The actual exported metric names will have \"/iam/policy\" prepended. Field names correspond to IAM request parameters and field values are their respective values. Supported field names: - \"authority\", which is \"[token]\" if IAMContext.token is present, otherwise the value of IAMContext.authority_selector if present, and otherwise a representation of IAMContext.principal; or - \"iam_principal\", a representation of IAMContext.principal even if a token or authority selector is present; or - \"\" (empty string), resulting in a counter with no fields. Examples: counter { metric: \"/debug_access_count\" field: \"iam_principal\" } ==\u003e increment counter /iam/policy/debug_access_count {iam_principal=[value of IAMContext.principal]}",
      "properties": {
        "field": {
          "type": "string",
          "description": "The field value to attribute."
        },
        "metric": {
          "type": "string",
          "description": "The metric to update."
        },
        "customFields": {
          "items": {
            "$ref": "CustomField"
          },
          "description": "Custom fields.",
          "type": "array"
        }
      }
    },
    "GameServerDeploymentRollout": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "gameServerConfigOverrides": {
          "type": "array",
          "description": "Contains the game server config rollout overrides. Overrides are processed in the order they are listed. Once a match is found for a realm, the rest of the list is not processed.",
          "items": {
            "$ref": "GameServerConfigOverride"
          }
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "defaultGameServerConfig": {
          "type": "string",
          "description": "The default game server config is applied to all realms unless overridden in the rollout. For example, `projects/my-project/locations/global/gameServerDeployments/my-game/configs/my-config`."
        },
        "name": {
          "type": "string",
          "description": "The resource name of the game server deployment rollout, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}/rollout`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment/rollout`."
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The creation time.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "The game server deployment rollout which represents the desired rollout state.",
      "id": "GameServerDeploymentRollout",
      "type": "object"
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "unreachable": {
          "readOnly": true,
          "description": "Output only. List of Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time the operation finished running."
        },
        "requestedCancellation": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "type": "boolean",
          "readOnly": true
        },
        "operationStatus": {
          "description": "Output only. Operation status for Game Services API operations. Operation status is in the form of key-value pairs where keys are resource IDs and the values show the status of the operation. In case of failures, the value includes an error code and error message.",
          "type": "object",
          "additionalProperties": {
            "$ref": "OperationStatus"
          },
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "type": "string",
          "readOnly": true
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "type": "string",
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true
        }
      }
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        }
      },
      "id": "ListLocationsResponse"
    },
    "ListRealmsResponse": {
      "type": "object",
      "id": "ListRealmsResponse",
      "description": "Response message for RealmsService.ListRealms.",
      "properties": {
        "realms": {
          "items": {
            "$ref": "Realm"
          },
          "description": "The list of realms.",
          "type": "array"
        },
        "unreachable": {
          "description": "List of locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "ListGameServerClustersResponse": {
      "type": "object",
      "description": "Response message for GameServerClustersService.ListGameServerClusters.",
      "id": "ListGameServerClustersResponse",
      "properties": {
        "gameServerClusters": {
          "description": "The list of game server clusters.",
          "items": {
            "$ref": "GameServerCluster"
          },
          "type": "array"
        },
        "unreachable": {
          "description": "List of locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list."
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "PreviewGameServerDeploymentRolloutResponse": {
      "type": "object",
      "description": "Response message for PreviewGameServerDeploymentRollout. This has details about the Agones fleet and autoscaler to be actuated.",
      "id": "PreviewGameServerDeploymentRolloutResponse",
      "properties": {
        "etag": {
          "type": "string",
          "description": "ETag of the game server deployment."
        },
        "unavailable": {
          "description": "Locations that could not be reached on this request.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetState": {
          "$ref": "TargetState",
          "description": "The target state."
        }
      }
    },
    "GameServerClusterConnectionInfo": {
      "properties": {
        "namespace": {
          "description": "Namespace designated on the game server cluster where the Agones game server instances will be created. Existence of the namespace will be validated during creation.",
          "type": "string"
        },
        "gkeClusterReference": {
          "description": "Reference to the GKE cluster where the game servers are installed.",
          "$ref": "GkeClusterReference"
        }
      },
      "type": "object",
      "id": "GameServerClusterConnectionInfo",
      "description": "The game server cluster connection information."
    },
    "GameServerCluster": {
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "The labels associated with this game server cluster. Each label is a key-value pair."
        },
        "name": {
          "type": "string",
          "description": "Required. The resource name of the game server cluster, in the following form: `projects/{project}/locations/{location}/realms/{realm}/gameServerClusters/{cluster}`. For example, `projects/my-project/locations/{location}/realms/zanzibar/gameServerClusters/my-onprem-cluster`."
        },
        "connectionInfo": {
          "$ref": "GameServerClusterConnectionInfo",
          "description": "The game server cluster connection information. This information is used to manage game server clusters."
        },
        "description": {
          "description": "Human readable description of the cluster.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "readOnly": true,
          "description": "Output only. The creation time."
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "A game server cluster resource.",
      "id": "GameServerCluster"
    },
    "CloudAuditOptions": {
      "properties": {
        "logName": {
          "enum": [
            "UNSPECIFIED_LOG_NAME",
            "ADMIN_ACTIVITY",
            "DATA_ACCESS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default. Should not be used.",
            "Corresponds to \"cloudaudit.googleapis.com/activity\"",
            "Corresponds to \"cloudaudit.googleapis.com/data_access\""
          ],
          "description": "The log_name to populate in the Cloud Audit Record."
        },
        "authorizationLoggingOptions": {
          "$ref": "AuthorizationLoggingOptions",
          "description": "Information used by the Cloud Audit Logging pipeline."
        }
      },
      "type": "object",
      "description": "Write a Cloud Audit log",
      "id": "CloudAuditOptions"
    },
    "TargetState": {
      "properties": {
        "details": {
          "type": "array",
          "items": {
            "$ref": "TargetDetails"
          },
          "description": "Details about Agones fleets."
        }
      },
      "type": "object",
      "id": "TargetState",
      "description": "Encapsulates the Target state."
    },
    "DataAccessOptions": {
      "description": "Write a Data Access (Gin) log",
      "type": "object",
      "properties": {
        "logMode": {
          "type": "string",
          "enumDescriptions": [
            "Client is not required to write a partial Gin log immediately after the authorization check. If client chooses to write one and it fails, client may either fail open (allow the operation to continue) or fail closed (handle as a DENY outcome).",
            "The application's operation in the context of which this authorization check is being made may only be performed if it is successfully logged to Gin. For instance, the authorization library may satisfy this obligation by emitting a partial log entry at authorization check time and only returning ALLOW to the application if it succeeds. If a matching Rule has this directive, but the client has not indicated that it will honor such requirements, then the IAM check will result in authorization failure by setting CheckPolicyResponse.success=false."
          ],
          "enum": [
            "LOG_MODE_UNSPECIFIED",
            "LOG_FAIL_CLOSED"
          ]
        }
      },
      "id": "DataAccessOptions"
    },
    "FleetConfig": {
      "properties": {
        "name": {
          "description": "The name of the FleetConfig.",
          "type": "string"
        },
        "fleetSpec": {
          "type": "string",
          "description": "Agones fleet spec. Example spec: `https://agones.dev/site/docs/reference/fleet/`."
        }
      },
      "id": "FleetConfig",
      "type": "object",
      "description": "Fleet configs for Agones."
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."
        }
      },
      "description": "Response message for `TestIamPermissions` method."
    },
    "AuditLogConfig": {
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "type": "string"
        },
        "ignoreChildExemptions": {
          "type": "boolean"
        },
        "exemptedMembers": {
          "type": "array",
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AuditLogConfig"
    },
    "Operation": {
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "id": "Operation"
    },
    "SpecSource": {
      "id": "SpecSource",
      "properties": {
        "name": {
          "description": "The name of the Agones leet config or Agones scaling config used to derive the Agones fleet or Agones autoscaler spec.",
          "type": "string"
        },
        "gameServerConfigName": {
          "type": "string",
          "description": "The game server config resource. Uses the form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment_id}/configs/{config_id}`."
        }
      },
      "type": "object",
      "description": "Encapsulates Agones fleet spec and Agones autoscaler spec sources."
    },
    "DeployedFleetStatus": {
      "properties": {
        "readyReplicas": {
          "type": "string",
          "description": "The number of GameServer replicas in the READY state in this fleet.",
          "format": "int64"
        },
        "allocatedReplicas": {
          "type": "string",
          "format": "int64",
          "description": "The number of GameServer replicas in the ALLOCATED state in this fleet."
        },
        "replicas": {
          "format": "int64",
          "type": "string",
          "description": "The total number of current GameServer replicas in this fleet."
        },
        "reservedReplicas": {
          "type": "string",
          "format": "int64",
          "description": "The number of GameServer replicas in the RESERVED state in this fleet. Reserved instances won't be deleted on scale down, but won't cause an autoscaler to scale up."
        }
      },
      "type": "object",
      "id": "DeployedFleetStatus",
      "description": "DeployedFleetStatus has details about the Agones fleets such as how many are running, how many allocated, and so on."
    },
    "PreviewUpdateGameServerClusterResponse": {
      "id": "PreviewUpdateGameServerClusterResponse",
      "properties": {
        "etag": {
          "description": "The ETag of the game server cluster.",
          "type": "string"
        },
        "targetState": {
          "description": "The target state.",
          "$ref": "TargetState"
        }
      },
      "type": "object",
      "description": "Response message for GameServerClustersService.PreviewUpdateGameServerCluster"
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "ScalingConfig": {
      "description": "Autoscaling config for an Agones fleet.",
      "type": "object",
      "properties": {
        "selectors": {
          "items": {
            "$ref": "LabelSelector"
          },
          "description": "Labels used to identify the game server clusters to which this Agones scaling config applies. A game server cluster is subject to this Agones scaling config if its labels match any of the selector entries.",
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "Required. The name of the Scaling Config"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "Schedule"
          },
          "description": "The schedules to which this Scaling Config applies."
        },
        "fleetAutoscalerSpec": {
          "description": "Required. Agones fleet autoscaler spec. Example spec: https://agones.dev/site/docs/reference/fleetautoscaler/",
          "type": "string"
        }
      },
      "id": "ScalingConfig"
    },
    "ListGameServerDeploymentsResponse": {
      "type": "object",
      "properties": {
        "gameServerDeployments": {
          "type": "array",
          "items": {
            "$ref": "GameServerDeployment"
          },
          "description": "The list of game server deployments."
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of locations that could not be reached."
        }
      },
      "id": "ListGameServerDeploymentsResponse",
      "description": "Response message for GameServerDeploymentsService.ListGameServerDeployments."
    },
    "Schedule": {
      "id": "Schedule",
      "properties": {
        "cronJobDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "The duration for the cron job event. The duration of the event is effective after the cron job's start time."
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The start time of the event."
        },
        "endTime": {
          "type": "string",
          "description": "The end time of the event.",
          "format": "google-datetime"
        },
        "cronSpec": {
          "description": "The cron definition of the scheduled event. See https://en.wikipedia.org/wiki/Cron. Cron spec specifies the local time as defined by the realm.",
          "type": "string"
        }
      },
      "description": "The schedule of a recurring or one time event. The event's time span is specified by start_time and end_time. If the scheduled event's timespan is larger than the cron_spec + cron_job_duration, the event will be recurring. If only cron_spec + cron_job_duration are specified, the event is effective starting at the local time specified by cron_spec, and is recurring. start_time|-------[cron job]-------[cron job]-------[cron job]---|end_time cron job: cron spec start time + duration",
      "type": "object"
    },
    "AuditConfig": {
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "description": "The configuration for logging of each type of permission.",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "id": "AuditConfig",
      "type": "object"
    },
    "LogConfig": {
      "id": "LogConfig",
      "properties": {
        "cloudAudit": {
          "$ref": "CloudAuditOptions",
          "description": "Cloud audit options."
        },
        "counter": {
          "$ref": "CounterOptions",
          "description": "Counter options."
        },
        "dataAccess": {
          "description": "Data access options.",
          "$ref": "DataAccessOptions"
        }
      },
      "type": "object",
      "description": "Specifies what kind of log the caller must write"
    },
    "FetchDeploymentStateRequest": {
      "id": "FetchDeploymentStateRequest",
      "properties": {},
      "description": "Request message for GameServerDeploymentsService.FetchDeploymentState.",
      "type": "object"
    },
    "Realm": {
      "properties": {
        "timeZone": {
          "description": "Required. Time zone where all policies targeting this realm are evaluated. The value of this field must be from the IANA time zone database: https://www.iana.org/time-zones.",
          "type": "string"
        },
        "description": {
          "description": "Human readable description of the realm.",
          "type": "string"
        },
        "name": {
          "description": "The resource name of the realm, in the following form: `projects/{project}/locations/{location}/realms/{realm}`. For example, `projects/my-project/locations/{location}/realms/my-realm`.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "format": "google-datetime",
          "readOnly": true,
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The last-modified time."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "labels": {
          "type": "object",
          "description": "The labels associated with this realm. Each label is a key-value pair.",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "id": "Realm",
      "description": "A realm resource.",
      "type": "object"
    },
    "GameServerDeployment": {
      "properties": {
        "description": {
          "description": "Human readable description of the game server delpoyment.",
          "type": "string"
        },
        "updateTime": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. The last-modified time.",
          "format": "google-datetime"
        },
        "name": {
          "type": "string",
          "description": "The resource name of the game server deployment, in the following form: `projects/{project}/locations/{location}/gameServerDeployments/{deployment}`. For example, `projects/my-project/locations/global/gameServerDeployments/my-deployment`."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The creation time.",
          "readOnly": true
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "labels": {
          "description": "The labels associated with this game server deployment. Each label is a key-value pair.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object",
      "id": "GameServerDeployment",
      "description": "A game server deployment resource."
    },
    "TargetFleet": {
      "type": "object",
      "description": "Target Agones fleet specification.",
      "id": "TargetFleet",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the Agones fleet."
        },
        "specSource": {
          "$ref": "SpecSource",
          "description": "Encapsulates the source of the Agones fleet spec. The Agones fleet spec source."
        }
      }
    },
    "CustomField": {
      "description": "Custom fields. These can be used to create a counter with arbitrary field/value pairs. See: go/rpcsp-custom-fields.",
      "properties": {
        "value": {
          "description": "Value is the field value. It is important that in contrast to the CounterOptions.field, the value here is a constant that is not derived from the IAMContext.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name is the field name."
        }
      },
      "type": "object",
      "id": "CustomField"
    },
    "TargetFleetDetails": {
      "properties": {
        "autoscaler": {
          "description": "Reference to target Agones fleet autoscaling policy.",
          "$ref": "TargetFleetAutoscaler"
        },
        "fleet": {
          "$ref": "TargetFleet",
          "description": "Reference to target Agones fleet."
        }
      },
      "id": "TargetFleetDetails",
      "type": "object",
      "description": "Details of the target Agones fleet."
    },
    "DeployedFleetDetails": {
      "id": "DeployedFleetDetails",
      "properties": {
        "deployedFleet": {
          "description": "Information about the Agones fleet.",
          "$ref": "DeployedFleet"
        },
        "deployedAutoscaler": {
          "description": "Information about the Agones autoscaler for that fleet.",
          "$ref": "DeployedFleetAutoscaler"
        }
      },
      "description": "Details of the deployed Agones fleet.",
      "type": "object"
    },
    "DeployedClusterState": {
      "properties": {
        "cluster": {
          "type": "string",
          "description": "The name of the cluster."
        },
        "fleetDetails": {
          "items": {
            "$ref": "DeployedFleetDetails"
          },
          "description": "The details about the Agones fleets and autoscalers created in the game server cluster.",
          "type": "array"
        }
      },
      "description": "The game server cluster changes made by the game server deployment.",
      "type": "object",
      "id": "DeployedClusterState"
    },
    "PreviewRealmUpdateResponse": {
      "description": "Response message for RealmsService.PreviewRealmUpdate.",
      "properties": {
        "targetState": {
          "description": "The target state.",
          "$ref": "TargetState"
        },
        "etag": {
          "description": "ETag of the realm.",
          "type": "string"
        }
      },
      "id": "PreviewRealmUpdateResponse",
      "type": "object"
    },
    "RealmSelector": {
      "type": "object",
      "properties": {
        "realms": {
          "description": "List of realms to match.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "RealmSelector",
      "description": "The realm selector, used to match realm resources."
    },
    "Location": {
      "type": "object",
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        }
      }
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy",
      "properties": {
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array"
        },
        "version": {
          "type": "integer",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        },
        "iamOwned": {
          "type": "boolean"
        },
        "rules": {
          "description": "If more than one rule is specified, the rules are applied in the following manner: - All matching LOG rules are always applied. - If any DENY/DENY_WITH_LOG rule matches, permission is denied. Logging will be applied if one or more matching rule requires logging. - Otherwise, if any ALLOW/ALLOW_WITH_LOG rule matches, permission is granted. Logging will be applied if one or more matching rule requires logging. - Otherwise, if no rule applies, permission is denied.",
          "type": "array",
          "items": {
            "$ref": "Rule"
          }
        },
        "bindings": {
          "type": "array",
          "items": {
            "$ref": "Binding"
          },
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member."
        }
      }
    },
    "LabelSelector": {
      "id": "LabelSelector",
      "properties": {
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Resource labels for this selector.",
          "type": "object"
        }
      },
      "type": "object",
      "description": "The label selector, used to group labels on the resources."
    },
    "TestIamPermissionsRequest": {
      "type": "object",
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Condition": {
      "type": "object",
      "description": "A condition to be met.",
      "id": "Condition",
      "properties": {
        "svc": {
          "description": "Trusted attributes discharged by the service.",
          "type": "string"
        },
        "op": {
          "enumDescriptions": [
            "Default no-op.",
            "DEPRECATED. Use IN instead.",
            "DEPRECATED. Use NOT_IN instead.",
            "The condition is true if the subject (or any element of it if it is a set) matches any of the supplied values.",
            "The condition is true if the subject (or every element of it if it is a set) matches none of the supplied values.",
            "Subject is discharged"
          ],
          "type": "string",
          "description": "An operator to apply the subject with.",
          "enum": [
            "NO_OP",
            "EQUALS",
            "NOT_EQUALS",
            "IN",
            "NOT_IN",
            "DISCHARGED"
          ]
        },
        "sys": {
          "description": "Trusted attributes supplied by any service that owns resources and uses the IAM system for access control.",
          "enum": [
            "NO_ATTR",
            "REGION",
            "SERVICE",
            "NAME",
            "IP"
          ],
          "enumDescriptions": [
            "Default non-attribute type",
            "Region of the resource",
            "Service name",
            "Resource name",
            "IP address of the caller"
          ],
          "type": "string"
        },
        "values": {
          "type": "array",
          "description": "The objects of the condition.",
          "items": {
            "type": "string"
          }
        },
        "iam": {
          "enumDescriptions": [
            "Default non-attribute.",
            "Either principal or (if present) authority selector.",
            "The principal (even if an authority selector is present), which must only be used for attribution, not authorization.",
            "Any of the security realms in the IAMContext (go/security-realms). When used with IN, the condition indicates \"any of the request's realms match one of the given values; with NOT_IN, \"none of the realms match any of the given values\". Note that a value can be: - 'self' (i.e., allow connections from clients that are in the same security realm) - 'self:metro' (i.e., clients that are in the same metro) - 'self:cloud-region' (i.e., allow connections from clients that are in the same cloud region) - 'guardians' (i.e., allow connections from its guardian realms. See go/security-realms-glossary#guardian for more information.) - a realm (e.g., 'campus-abc') - a realm group (e.g., 'realms-for-borg-cell-xx', see: go/realm-groups) A match is determined by a realm group membership check performed by a RealmAclRep object (go/realm-acl-howto). It is not permitted to grant access based on the *absence* of a realm, so realm conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN).",
            "An approver (distinct from the requester) that has authorized this request. When used with IN, the condition indicates that one of the approvers associated with the request matches the specified principal, or is a member of the specified group. Approvers can only grant additional access, and are thus only used in a strictly positive context (e.g. ALLOW/IN or DENY/NOT_IN).",
            "What types of justifications have been supplied with this request. String values should match enum names from security.credentials.JustificationType, e.g. \"MANUAL_STRING\". It is not permitted to grant access based on the *absence* of a justification, so justification conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN). Multiple justifications, e.g., a Buganizer ID and a manually-entered reason, are normal and supported.",
            "What type of credentials have been supplied with this request. String values should match enum names from security_loas_l2.CredentialsType - currently, only CREDS_TYPE_EMERGENCY is supported. It is not permitted to grant access based on the *absence* of a credentials type, so the conditions can only be used in a \"positive\" context (e.g., ALLOW/IN or DENY/NOT_IN).",
            "EXPERIMENTAL -- DO NOT USE. "
          ],
          "enum": [
            "NO_ATTR",
            "AUTHORITY",
            "ATTRIBUTION",
            "SECURITY_REALM",
            "APPROVER",
            "JUSTIFICATION_TYPE",
            "CREDENTIALS_TYPE",
            "CREDS_ASSERTION"
          ],
          "type": "string",
          "description": "Trusted attributes supplied by the IAM system."
        }
      }
    },
    "GkeClusterReference": {
      "description": "A reference to a GKE cluster.",
      "type": "object",
      "id": "GkeClusterReference",
      "properties": {
        "cluster": {
          "type": "string",
          "description": "The full or partial name of a GKE cluster, using one of the following forms: * `projects/{project}/locations/{location}/clusters/{cluster}` * `locations/{location}/clusters/{cluster}` * `{cluster}` If project and location are not specified, the project and location of the GameServerCluster resource are used to generate the full name of the GKE cluster."
        }
      }
    }
  },
  "documentationLink": "https://cloud.google.com/solutions/gaming/",
  "version_module": true,
  "kind": "discovery#restDescription"
}
