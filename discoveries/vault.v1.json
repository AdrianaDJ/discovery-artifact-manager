{
  "batchPath": "batch",
  "baseUrl": "https://vault.googleapis.com/",
  "kind": "discovery#restDescription",
  "servicePath": "",
  "schemas": {
    "AccountInfo": {
      "description": "Accounts to search",
      "id": "AccountInfo",
      "type": "object",
      "properties": {
        "emails": {
          "items": {
            "type": "string"
          },
          "description": "A set of accounts to search.",
          "type": "array"
        }
      }
    },
    "ReopenMatterRequest": {
      "type": "object",
      "description": "Reopen a matter by ID.",
      "id": "ReopenMatterRequest",
      "properties": {}
    },
    "CloudStorageFile": {
      "description": "An export file on cloud storage",
      "type": "object",
      "properties": {
        "bucketName": {
          "description": "The cloud storage bucket name of this export file. Can be used in cloud storage JSON/XML API, but not to list the bucket contents. Instead, you can get individual export files by object name.",
          "type": "string"
        },
        "size": {
          "format": "int64",
          "type": "string",
          "description": "The size of the export file."
        },
        "md5Hash": {
          "type": "string",
          "description": "The md5 hash of the file."
        },
        "objectName": {
          "description": "The cloud storage object name of this export file. Can be used in cloud storage JSON/XML API.",
          "type": "string"
        }
      },
      "id": "CloudStorageFile"
    },
    "ListSavedQueriesResponse": {
      "type": "object",
      "id": "ListSavedQueriesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more saved queries to list."
        },
        "savedQueries": {
          "items": {
            "$ref": "SavedQuery"
          },
          "description": "List of output saved queries.",
          "type": "array"
        }
      },
      "description": "Definition of the response for method ListSaveQuery."
    },
    "MailExportOptions": {
      "id": "MailExportOptions",
      "type": "object",
      "properties": {
        "exportFormat": {
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ],
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "description": "The export file format."
        },
        "showConfidentialModeContent": {
          "description": "Set to true to export confidential mode content.",
          "type": "boolean"
        }
      },
      "description": "The options for mail export."
    },
    "RemoveHeldAccountsResponse": {
      "description": "Response for batch delete held accounts.",
      "properties": {
        "statuses": {
          "description": "A list of statuses for deleted accounts. Results have the same order as the request.",
          "items": {
            "$ref": "Status"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "RemoveHeldAccountsResponse"
    },
    "Query": {
      "id": "Query",
      "description": "A query definition relevant for search & export.",
      "properties": {
        "startTime": {
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string",
          "format": "google-datetime"
        },
        "accountInfo": {
          "$ref": "AccountInfo",
          "description": "When 'ACCOUNT' is chosen as search method, account_info needs to be specified."
        },
        "terms": {
          "description": "The corpus-specific search operators used to generate search results.",
          "type": "string"
        },
        "timeZone": {
          "description": "The time zone name. It should be an IANA TZ name, such as \"America/Los_Angeles\". For more information, see Time Zone.",
          "type": "string"
        },
        "searchMethod": {
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ],
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ],
          "description": "The search method to use.",
          "type": "string"
        },
        "hangoutsChatOptions": {
          "$ref": "HangoutsChatOptions",
          "description": "For hangouts chat search, specify more options in this field. (read-only)"
        },
        "orgUnitInfo": {
          "$ref": "OrgUnitInfo",
          "description": "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs to be specified."
        },
        "endTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date."
        },
        "sharedDriveInfo": {
          "$ref": "SharedDriveInfo",
          "description": "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs to be specified."
        },
        "teamDriveInfo": {
          "description": "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be specified.",
          "$ref": "TeamDriveInfo"
        },
        "driveOptions": {
          "description": "For Drive search, specify more options in this field.",
          "$ref": "DriveOptions"
        },
        "hangoutsChatInfo": {
          "$ref": "HangoutsChatInfo",
          "description": "When 'ROOM' is chosen as search method, hangout_chats_info needs to be specified. (read-only)"
        },
        "dataScope": {
          "description": "The data source to search from.",
          "type": "string",
          "enumDescriptions": [
            "No data scope specified.",
            "All available data.",
            "Data on hold.",
            "Data not processed."
          ],
          "enum": [
            "DATA_SCOPE_UNSPECIFIED",
            "ALL_DATA",
            "HELD_DATA",
            "UNPROCESSED_DATA"
          ]
        },
        "mailOptions": {
          "description": "For mail search, specify more options in this field.",
          "$ref": "MailOptions"
        },
        "corpus": {
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat."
          ],
          "type": "string",
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT"
          ],
          "description": "The corpus to search."
        },
        "method": {
          "enumDescriptions": [
            "A search method must be specified. If a request does not specify a search method, it will be rejected.",
            "Will search all accounts provided in account_info.",
            "Will search all accounts in the OU specified in org_unit_info.",
            "Will search for all accounts in the Team Drive specified in team_drive_info.",
            "Will search for all accounts in the organization. No need to set account_info or org_unit_info.",
            "Will search in the Room specified in hangout_chats_info. (read-only)",
            "Will search for all accounts in the shared drive specified in shared_drive_info."
          ],
          "type": "string",
          "description": "The search method to use. This field is similar to the search_method field but is introduced to support shared drives. It supports all search method types. In case the search_method is TEAM_DRIVE the response of this field will be SHARED_DRIVE only.",
          "enum": [
            "SEARCH_METHOD_UNSPECIFIED",
            "ACCOUNT",
            "ORG_UNIT",
            "TEAM_DRIVE",
            "ENTIRE_ORG",
            "ROOM",
            "SHARED_DRIVE"
          ]
        }
      },
      "type": "object"
    },
    "HeldDriveQuery": {
      "id": "HeldDriveQuery",
      "description": "Query options for Drive holds.",
      "properties": {
        "includeTeamDriveFiles": {
          "type": "boolean",
          "description": "If true, include files in Team Drives in the hold."
        },
        "includeSharedDriveFiles": {
          "type": "boolean",
          "description": "If true, include files in shared drives in the hold."
        }
      },
      "type": "object"
    },
    "ReopenMatterResponse": {
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state OPEN."
        }
      },
      "description": "Response to a ReopenMatterRequest.",
      "type": "object",
      "id": "ReopenMatterResponse"
    },
    "ExportOptions": {
      "properties": {
        "driveOptions": {
          "$ref": "DriveExportOptions",
          "description": "Option available for Drive export."
        },
        "mailOptions": {
          "description": "Option available for mail export.",
          "$ref": "MailExportOptions"
        },
        "groupsOptions": {
          "$ref": "GroupsExportOptions",
          "description": "Option available for groups export."
        },
        "region": {
          "enum": [
            "EXPORT_REGION_UNSPECIFIED",
            "ANY",
            "US",
            "EUROPE"
          ],
          "description": "The requested export location.",
          "type": "string",
          "enumDescriptions": [
            "The region is unspecified. Will be treated the same as ANY.",
            "Any region.",
            "US region.",
            "Europe region."
          ]
        },
        "hangoutsChatOptions": {
          "description": "Option available for hangouts chat export.",
          "$ref": "HangoutsChatExportOptions"
        }
      },
      "description": "Export advanced options",
      "type": "object",
      "id": "ExportOptions"
    },
    "AddHeldAccountsRequest": {
      "id": "AddHeldAccountsRequest",
      "description": "Add a list of accounts to a hold.",
      "type": "object",
      "properties": {
        "accountIds": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Account IDs to identify which accounts to add. Only account_ids or only emails should be specified, but not both."
        },
        "emails": {
          "description": "Emails to identify which accounts to add. Only emails or only account_ids should be specified, but not both.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccountCount": {
      "properties": {
        "account": {
          "description": "Account owner.",
          "$ref": "UserInfo"
        },
        "count": {
          "description": "The number of artifacts found for this account.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "AccountCount",
      "type": "object",
      "description": "Count number for each account."
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "ListHeldAccountsResponse": {
      "properties": {
        "accounts": {
          "type": "array",
          "description": "The held accounts on a hold.",
          "items": {
            "$ref": "HeldAccount"
          }
        }
      },
      "id": "ListHeldAccountsResponse",
      "description": "Returns a list of held accounts for a hold.",
      "type": "object"
    },
    "Export": {
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. The time when the export was created."
        },
        "cloudStorageSink": {
          "description": "Output only. Export sink for cloud storage files.",
          "$ref": "CloudStorageSink"
        },
        "name": {
          "description": "The export name.",
          "type": "string"
        },
        "requester": {
          "description": "Output only. The requester of the export.",
          "$ref": "UserInfo"
        },
        "exportOptions": {
          "description": "Advanced options of the export.",
          "$ref": "ExportOptions"
        },
        "status": {
          "type": "string",
          "description": "Output only. The export status.",
          "enumDescriptions": [
            "The status is unspecified.",
            "The export completed.",
            "The export failed.",
            "The export is still being executed."
          ],
          "enum": [
            "EXPORT_STATUS_UNSPECIFIED",
            "COMPLETED",
            "FAILED",
            "IN_PROGRESS"
          ]
        },
        "stats": {
          "description": "Output only. Export statistics.",
          "$ref": "ExportStats"
        },
        "id": {
          "description": "Output only. The generated export ID.",
          "type": "string"
        },
        "matterId": {
          "type": "string",
          "description": "Output only. The matter ID."
        },
        "query": {
          "description": "The search query being exported.",
          "$ref": "Query"
        }
      },
      "description": "An export",
      "id": "Export",
      "type": "object"
    },
    "MailCountResult": {
      "description": "Mail specific count metrics.",
      "properties": {
        "matchingAccountsCount": {
          "type": "string",
          "description": "Total number of accounts that can be queried and have more than zero messages.",
          "format": "int64"
        },
        "accountCounts": {
          "items": {
            "$ref": "AccountCount"
          },
          "description": "Subtotal count per matching account that have more than zero messages.",
          "type": "array"
        },
        "accountCountErrors": {
          "type": "array",
          "description": "Error occurred when querying these accounts.",
          "items": {
            "$ref": "AccountCountError"
          }
        },
        "nonQueryableAccounts": {
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "queriedAccountsCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of accounts involved in this count operation."
        }
      },
      "id": "MailCountResult",
      "type": "object"
    },
    "OrgUnitInfo": {
      "properties": {
        "orgUnitId": {
          "description": "Org unit to search, as provided by the Admin SDK Directory API.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "OrgUnitInfo",
      "description": "Org Unit to search"
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "properties": {
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        }
      }
    },
    "Hold": {
      "id": "Hold",
      "type": "object",
      "properties": {
        "accounts": {
          "items": {
            "$ref": "HeldAccount"
          },
          "description": "If set, the hold applies to the enumerated accounts and org_unit must be empty.",
          "type": "array"
        },
        "name": {
          "description": "The name of the hold.",
          "type": "string"
        },
        "query": {
          "description": "The corpus-specific query. If set, the corpusQuery must match corpus type.",
          "$ref": "CorpusQuery"
        },
        "orgUnit": {
          "description": "If set, the hold applies to all members of the organizational unit and accounts must be empty. This property is mutable. For groups holds, set the accounts field.",
          "$ref": "HeldOrgUnit"
        },
        "updateTime": {
          "description": "The last time this hold was modified.",
          "format": "google-datetime",
          "type": "string"
        },
        "holdId": {
          "description": "The unique immutable ID of the hold. Assigned during creation.",
          "type": "string"
        },
        "corpus": {
          "type": "string",
          "description": "The corpus to be searched.",
          "enumDescriptions": [
            "No corpus specified.",
            "Drive.",
            "Mail.",
            "Groups.",
            "Hangouts Chat."
          ],
          "enum": [
            "CORPUS_TYPE_UNSPECIFIED",
            "DRIVE",
            "MAIL",
            "GROUPS",
            "HANGOUTS_CHAT"
          ]
        }
      },
      "description": "Represents a hold within Vault. A hold restricts purging of artifacts based on the combination of the query and accounts restrictions. A hold can be configured to either apply to an explicitly configured set of accounts, or can be applied to all members of an organizational unit."
    },
    "HeldGroupsQuery": {
      "type": "object",
      "id": "HeldGroupsQuery",
      "description": "Query options for group holds.",
      "properties": {
        "startTime": {
          "format": "google-datetime",
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string"
        },
        "endTime": {
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string",
          "format": "google-datetime"
        },
        "terms": {
          "type": "string",
          "description": "The search terms for the hold."
        }
      }
    },
    "CloseMatterResponse": {
      "properties": {
        "matter": {
          "$ref": "Matter",
          "description": "The updated matter, with state CLOSED."
        }
      },
      "id": "CloseMatterResponse",
      "description": "Response to a CloseMatterRequest.",
      "type": "object"
    },
    "HangoutsChatExportOptions": {
      "id": "HangoutsChatExportOptions",
      "description": "The options for hangouts chat export.",
      "properties": {
        "exportFormat": {
          "description": "The export format for hangouts chat export.",
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ]
        }
      },
      "type": "object"
    },
    "HeldAccount": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "description": "The account's ID as provided by the Admin SDK."
        },
        "firstName": {
          "type": "string",
          "description": "Output only. The first name of the account holder."
        },
        "lastName": {
          "type": "string",
          "description": "Output only. The last name of the account holder."
        },
        "holdTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. When the account was put on hold."
        },
        "email": {
          "description": "The primary email address of the account. If used as an input, this takes precedence over account ID.",
          "type": "string"
        }
      },
      "id": "HeldAccount",
      "description": "An account being held in a particular hold. This structure is immutable. This can be either a single user or a google group, depending on the corpus."
    },
    "TeamDriveInfo": {
      "id": "TeamDriveInfo",
      "description": "Team Drives to search",
      "properties": {
        "teamDriveIds": {
          "description": "List of Team Drive IDs, as provided by Drive API.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DriveOptions": {
      "type": "object",
      "description": "Drive search advanced options",
      "id": "DriveOptions",
      "properties": {
        "includeTeamDrives": {
          "description": "Set to true to include Team Drive.",
          "type": "boolean"
        },
        "versionDate": {
          "format": "google-datetime",
          "description": "Search the versions of the Drive file as of the reference date. These timestamps are in GMT and rounded down to the given date.",
          "type": "string"
        },
        "includeSharedDrives": {
          "type": "boolean",
          "description": "Set to true to include shared drive."
        }
      }
    },
    "RemoveMatterPermissionsRequest": {
      "id": "RemoveMatterPermissionsRequest",
      "properties": {
        "accountId": {
          "description": "The account ID.",
          "type": "string"
        }
      },
      "description": "Remove an account as a matter collaborator.",
      "type": "object"
    },
    "HeldMailQuery": {
      "properties": {
        "endTime": {
          "description": "The end time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "The start time range for the search query. These timestamps are in GMT and rounded down to the start of the given date.",
          "format": "google-datetime",
          "type": "string"
        },
        "terms": {
          "description": "The search terms for the hold.",
          "type": "string"
        }
      },
      "id": "HeldMailQuery",
      "type": "object",
      "description": "Query options for mail holds."
    },
    "CountArtifactsMetadata": {
      "properties": {
        "matterId": {
          "description": "The matter ID of the associated matter.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "description": "Creation time of count operation.",
          "format": "google-datetime"
        },
        "query": {
          "description": "The search query from the request.",
          "$ref": "Query"
        },
        "endTime": {
          "description": "End time of count operation. Available when operation is done.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "description": "Long running operation metadata for CountArtifacts.",
      "id": "CountArtifactsMetadata"
    },
    "AccountCountError": {
      "id": "AccountCountError",
      "properties": {
        "errorType": {
          "type": "string",
          "description": "Account query error.",
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "WILDCARD_TOO_BROAD",
            "TOO_MANY_TERMS",
            "LOCATION_UNAVAILABLE",
            "UNKNOWN",
            "DEADLINE_EXCEEDED"
          ],
          "enumDescriptions": [
            "Default.",
            "Permanent - prefix terms expanded to too many query terms.",
            "Permanent - query contains too many terms.",
            "Transient - data in transit between storage replicas, temporarily unavailable.",
            "Unrecognized error.",
            "Deadline exceeded when querying the account."
          ]
        },
        "account": {
          "$ref": "UserInfo",
          "description": "Account owner."
        }
      },
      "description": "An error that occurred when querying a specific account",
      "type": "object"
    },
    "CorpusQuery": {
      "id": "CorpusQuery",
      "properties": {
        "groupsQuery": {
          "description": "Details pertaining to Groups holds. If set, corpus must be Groups.",
          "$ref": "HeldGroupsQuery"
        },
        "driveQuery": {
          "$ref": "HeldDriveQuery",
          "description": "Details pertaining to Drive holds. If set, corpus must be Drive."
        },
        "mailQuery": {
          "description": "Details pertaining to mail holds. If set, corpus must be mail.",
          "$ref": "HeldMailQuery"
        },
        "hangoutsChatQuery": {
          "$ref": "HeldHangoutsChatQuery",
          "description": "Details pertaining to Hangouts Chat holds. If set, corpus must be Hangouts Chat."
        }
      },
      "description": "Corpus specific queries.",
      "type": "object"
    },
    "UndeleteMatterRequest": {
      "type": "object",
      "description": "Undelete a matter by ID.",
      "properties": {},
      "id": "UndeleteMatterRequest"
    },
    "RemoveHeldAccountsRequest": {
      "properties": {
        "accountIds": {
          "items": {
            "type": "string"
          },
          "description": "Account IDs to identify HeldAccounts to remove.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Remove a list of accounts from a hold.",
      "id": "RemoveHeldAccountsRequest"
    },
    "SharedDriveInfo": {
      "description": "Shared drives to search",
      "properties": {
        "sharedDriveIds": {
          "description": "List of Shared drive IDs, as provided by Drive API.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SharedDriveInfo",
      "type": "object"
    },
    "HangoutsChatOptions": {
      "properties": {
        "includeRooms": {
          "description": "Set to true to include rooms.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Hangouts chat search advanced options",
      "id": "HangoutsChatOptions"
    },
    "AddHeldAccountsResponse": {
      "type": "object",
      "properties": {
        "responses": {
          "type": "array",
          "description": "The list of responses, in the same order as the batch request.",
          "items": {
            "$ref": "AddHeldAccountResult"
          }
        }
      },
      "description": "Response for batch create held accounts.",
      "id": "AddHeldAccountsResponse"
    },
    "ListHoldsResponse": {
      "type": "object",
      "id": "ListHoldsResponse",
      "properties": {
        "holds": {
          "items": {
            "$ref": "Hold"
          },
          "type": "array",
          "description": "The list of holds."
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list. If this is empty, then there are no more holds to list.",
          "type": "string"
        }
      },
      "description": "The holds for a matter."
    },
    "SavedQuery": {
      "description": "Definition of the saved query.",
      "properties": {
        "query": {
          "description": "The underlying Query object which contains all the information of the saved query.",
          "$ref": "Query"
        },
        "savedQueryId": {
          "description": "A unique identifier for the saved query.",
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "Name of the saved query."
        },
        "matterId": {
          "description": "Output only. The matter ID of the associated matter. The server does not look at this field during create and always uses matter id in the URL.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The server generated timestamp at which saved query was created."
        }
      },
      "id": "SavedQuery",
      "type": "object"
    },
    "GroupsCountResult": {
      "properties": {
        "queriedAccountsCount": {
          "type": "string",
          "description": "Total number of accounts involved in this count operation.",
          "format": "int64"
        },
        "matchingAccountsCount": {
          "format": "int64",
          "type": "string",
          "description": "Total number of accounts that can be queried and have more than zero messages."
        },
        "accountCountErrors": {
          "items": {
            "$ref": "AccountCountError"
          },
          "description": "Error occurred when querying these accounts.",
          "type": "array"
        },
        "nonQueryableAccounts": {
          "items": {
            "type": "string"
          },
          "description": "When data scope is HELD_DATA in the request Query, these accounts in the request are not queried because they are not on hold. For other data scope, this field is not set.",
          "type": "array"
        },
        "accountCounts": {
          "items": {
            "$ref": "AccountCount"
          },
          "type": "array",
          "description": "Subtotal count per matching account that have more than zero messages."
        }
      },
      "type": "object",
      "id": "GroupsCountResult",
      "description": "Groups specific count metrics."
    },
    "ListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object"
    },
    "ListExportsResponse": {
      "properties": {
        "exports": {
          "items": {
            "$ref": "Export"
          },
          "description": "The list of exports.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Page token to retrieve the next page of results in the list.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ListExportsResponse",
      "description": "The holds for a matter."
    },
    "HangoutsChatInfo": {
      "description": "Accounts to search",
      "id": "HangoutsChatInfo",
      "properties": {
        "roomId": {
          "type": "array",
          "description": "A set of rooms to search.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "HeldOrgUnit": {
      "properties": {
        "holdTime": {
          "description": "When the org unit was put on hold. This property is immutable.",
          "type": "string",
          "format": "google-datetime"
        },
        "orgUnitId": {
          "type": "string",
          "description": "The org unit's immutable ID as provided by the Admin SDK."
        }
      },
      "type": "object",
      "id": "HeldOrgUnit",
      "description": "A organizational unit being held in a particular hold. This structure is immutable."
    },
    "Matter": {
      "description": "Represents a matter.",
      "id": "Matter",
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of the matter.",
          "enum": [
            "STATE_UNSPECIFIED",
            "OPEN",
            "CLOSED",
            "DELETED"
          ],
          "enumDescriptions": [
            "The matter has no specified state.",
            "This matter is open.",
            "This matter is closed.",
            "This matter is deleted."
          ]
        },
        "matterId": {
          "type": "string",
          "description": "The matter ID which is generated by the server. Should be blank when creating a new matter."
        },
        "description": {
          "description": "The description of the matter.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the matter."
        },
        "matterPermissions": {
          "description": "List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have.",
          "items": {
            "$ref": "MatterPermission"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "CountArtifactsResponse": {
      "properties": {
        "mailCountResult": {
          "description": "Count metrics of Mail.",
          "$ref": "MailCountResult"
        },
        "groupsCountResult": {
          "$ref": "GroupsCountResult",
          "description": "Count metrics of Groups."
        },
        "totalCount": {
          "description": "Total count of artifacts. For mail and groups, artifacts refers to messages.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Definition of the response for method CountArtifacts.",
      "id": "CountArtifactsResponse"
    },
    "GroupsExportOptions": {
      "description": "The options for groups export.",
      "type": "object",
      "id": "GroupsExportOptions",
      "properties": {
        "exportFormat": {
          "enum": [
            "EXPORT_FORMAT_UNSPECIFIED",
            "MBOX",
            "PST"
          ],
          "type": "string",
          "description": "The export format for groups export.",
          "enumDescriptions": [
            "No export format specified.",
            "MBOX as export format.",
            "PST as export format"
          ]
        }
      }
    },
    "CloudStorageSink": {
      "type": "object",
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "$ref": "CloudStorageFile"
          },
          "description": "Output only. The exported files on cloud storage."
        }
      },
      "id": "CloudStorageSink",
      "description": "Export sink for cloud storage files."
    },
    "DriveExportOptions": {
      "type": "object",
      "description": "The options for Drive export.",
      "id": "DriveExportOptions",
      "properties": {
        "includeAccessInfo": {
          "type": "boolean",
          "description": "Set to true to include access level information for users with indirect access to files."
        }
      }
    },
    "MatterPermission": {
      "id": "MatterPermission",
      "properties": {
        "role": {
          "type": "string",
          "description": "The user's role in this matter.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "COLLABORATOR",
            "OWNER"
          ],
          "enumDescriptions": [
            "No role assigned.",
            "A collaborator to the matter.",
            "The owner of the matter."
          ]
        },
        "accountId": {
          "type": "string",
          "description": "The account ID, as provided by Admin SDK."
        }
      },
      "description": "Currently each matter only has one owner, and all others are collaborators. When an account is purged, its corresponding MatterPermission resources cease to exist.",
      "type": "object"
    },
    "CountArtifactsRequest": {
      "type": "object",
      "description": "Count artifacts request.",
      "properties": {
        "query": {
          "$ref": "Query",
          "description": "The search query."
        },
        "view": {
          "type": "string",
          "description": "Specifies the granularity of the count result returned in response.",
          "enumDescriptions": [
            "Default. It works the same as TOTAL_COUNT.",
            "Response includes: total count, queried accounts count, matching accounts count, non-queryable accounts, queried account errors.",
            "Response includes additional breakdown of account count."
          ],
          "enum": [
            "COUNT_RESULT_VIEW_UNSPECIFIED",
            "TOTAL_COUNT",
            "ALL"
          ]
        }
      },
      "id": "CountArtifactsRequest"
    },
    "AddHeldAccountResult": {
      "id": "AddHeldAccountResult",
      "description": "A status detailing the status of each account creation, and the HeldAccount, if successful.",
      "type": "object",
      "properties": {
        "account": {
          "description": "If present, this account was successfully created.",
          "$ref": "HeldAccount"
        },
        "status": {
          "description": "This represents the success status. If failed, check message.",
          "$ref": "Status"
        }
      }
    },
    "CancelOperationRequest": {
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {},
      "id": "CancelOperationRequest"
    },
    "UserInfo": {
      "description": "User's information.",
      "id": "UserInfo",
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email address of the user."
        },
        "displayName": {
          "type": "string",
          "description": "The displayed name of the user."
        }
      }
    },
    "AddMatterPermissionsRequest": {
      "properties": {
        "sendEmails": {
          "type": "boolean",
          "description": "True to send notification email to the added account. False to not send notification email."
        },
        "matterPermission": {
          "description": "The MatterPermission to add.",
          "$ref": "MatterPermission"
        },
        "ccMe": {
          "type": "boolean",
          "description": "Only relevant if send_emails is true. True to CC requestor in the email message. False to not CC requestor."
        }
      },
      "type": "object",
      "description": "Add an account with the permission specified. The role cannot be owner. If an account already has a role in the matter, it will be overwritten.",
      "id": "AddMatterPermissionsRequest"
    },
    "ListMattersResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Page token to retrieve the next page of results in the list."
        },
        "matters": {
          "type": "array",
          "items": {
            "$ref": "Matter"
          },
          "description": "List of matters."
        }
      },
      "id": "ListMattersResponse",
      "description": "Provides the list of matters.",
      "type": "object"
    },
    "CloseMatterRequest": {
      "properties": {},
      "id": "CloseMatterRequest",
      "type": "object",
      "description": "Close a matter by ID."
    },
    "ExportStats": {
      "properties": {
        "sizeInBytes": {
          "format": "int64",
          "description": "The size of export in bytes.",
          "type": "string"
        },
        "totalArtifactCount": {
          "description": "The number of documents to be exported.",
          "type": "string",
          "format": "int64"
        },
        "exportedArtifactCount": {
          "description": "The number of documents already processed by the export.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Stats of an export.",
      "id": "ExportStats",
      "type": "object"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "Empty"
    },
    "HeldHangoutsChatQuery": {
      "properties": {
        "includeRooms": {
          "description": "If true, include rooms the user has participated in.",
          "type": "boolean"
        }
      },
      "description": "Query options for hangouts chat holds.",
      "type": "object",
      "id": "HeldHangoutsChatQuery"
    },
    "MailOptions": {
      "properties": {
        "excludeDrafts": {
          "type": "boolean",
          "description": "Set to true to exclude drafts."
        }
      },
      "type": "object",
      "description": "Mail search advanced options",
      "id": "MailOptions"
    }
  },
  "description": "Archiving and eDiscovery for G Suite.",
  "title": "G Suite Vault API",
  "discoveryVersion": "v1",
  "name": "vault",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "basePath": "",
  "ownerName": "Google",
  "ownerDomain": "google.com",
  "resources": {
    "operations": {
      "methods": {
        "cancel": {
          "parameters": {
            "name": {
              "location": "path",
              "required": true,
              "description": "The name of the operation resource to be cancelled.",
              "type": "string",
              "pattern": "^operations/.*$"
            }
          },
          "httpMethod": "POST",
          "id": "vault.operations.cancel",
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "v1/operations/{operationsId}:cancel",
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "path": "v1/{+name}:cancel",
          "parameterOrder": [
            "name"
          ],
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "get": {
          "id": "vault.operations.get",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "path": "v1/{+name}",
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "required": true,
              "type": "string",
              "description": "The name of the operation resource.",
              "location": "path"
            }
          },
          "flatPath": "v1/operations/{operationsId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "name"
          ],
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
        },
        "list": {
          "parameterOrder": [
            "name"
          ],
          "path": "v1/{+name}",
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
          "id": "vault.operations.list",
          "parameters": {
            "filter": {
              "type": "string",
              "description": "The standard list filter.",
              "location": "query"
            },
            "pageSize": {
              "format": "int32",
              "location": "query",
              "type": "integer",
              "description": "The standard list page size."
            },
            "pageToken": {
              "location": "query",
              "description": "The standard list page token.",
              "type": "string"
            },
            "name": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The name of the operation's parent resource.",
              "pattern": "^operations$"
            }
          },
          "flatPath": "v1/operations",
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "httpMethod": "GET"
        },
        "delete": {
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Empty"
          },
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
          "id": "vault.operations.delete",
          "flatPath": "v1/operations/{operationsId}",
          "parameters": {
            "name": {
              "pattern": "^operations/.*$",
              "description": "The name of the operation resource to be deleted.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "httpMethod": "DELETE",
          "path": "v1/{+name}"
        }
      }
    },
    "matters": {
      "methods": {
        "delete": {
          "path": "v1/matters/{matterId}",
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "DELETE",
          "description": "Deletes the specified matter. Returns matter with updated state.",
          "parameters": {
            "matterId": {
              "type": "string",
              "description": "The matter ID",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "matterId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "response": {
            "$ref": "Matter"
          },
          "id": "vault.matters.delete"
        },
        "create": {
          "id": "vault.matters.create",
          "parameterOrder": [],
          "request": {
            "$ref": "Matter"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "description": "Creates a new matter with the given name and description. The initial state is open, and the owner is the method caller. Returns the created matter with default view.",
          "parameters": {},
          "path": "v1/matters",
          "flatPath": "v1/matters",
          "response": {
            "$ref": "Matter"
          }
        },
        "count": {
          "request": {
            "$ref": "CountArtifactsRequest"
          },
          "flatPath": "v1/matters/{matterId}:count",
          "response": {
            "$ref": "Operation"
          },
          "path": "v1/matters/{matterId}:count",
          "parameterOrder": [
            "matterId"
          ],
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The matter ID."
            }
          },
          "httpMethod": "POST",
          "id": "vault.matters.count",
          "description": "Counts the artifacts within the context of a matter and returns a detailed breakdown of metrics.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "reopen": {
          "parameters": {
            "matterId": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "The matter ID."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "request": {
            "$ref": "ReopenMatterRequest"
          },
          "httpMethod": "POST",
          "description": "Reopens the specified matter. Returns matter with updated state.",
          "response": {
            "$ref": "ReopenMatterResponse"
          },
          "flatPath": "v1/matters/{matterId}:reopen",
          "parameterOrder": [
            "matterId"
          ],
          "id": "vault.matters.reopen",
          "path": "v1/matters/{matterId}:reopen"
        },
        "removePermissions": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "request": {
            "$ref": "RemoveMatterPermissionsRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [
            "matterId"
          ],
          "description": "Removes an account as a matter collaborator.",
          "flatPath": "v1/matters/{matterId}:removePermissions",
          "id": "vault.matters.removePermissions",
          "path": "v1/matters/{matterId}:removePermissions"
        },
        "close": {
          "id": "vault.matters.close",
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "parameterOrder": [
            "matterId"
          ],
          "description": "Closes the specified matter. Returns matter with updated state.",
          "flatPath": "v1/matters/{matterId}:close",
          "request": {
            "$ref": "CloseMatterRequest"
          },
          "path": "v1/matters/{matterId}:close",
          "httpMethod": "POST",
          "response": {
            "$ref": "CloseMatterResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ]
        },
        "list": {
          "parameterOrder": [],
          "response": {
            "$ref": "ListMattersResponse"
          },
          "httpMethod": "GET",
          "description": "Lists matters the user has access to.",
          "path": "v1/matters",
          "parameters": {
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "The pagination token as returned in the response."
            },
            "view": {
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "type": "string",
              "location": "query",
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ],
              "description": "Specifies which parts of the matter to return in response."
            },
            "state": {
              "location": "query",
              "enumDescriptions": [
                "The matter has no specified state.",
                "This matter is open.",
                "This matter is closed.",
                "This matter is deleted."
              ],
              "type": "string",
              "enum": [
                "STATE_UNSPECIFIED",
                "OPEN",
                "CLOSED",
                "DELETED"
              ],
              "description": "If set, list only matters with that specific state. The default is listing matters of all states."
            },
            "pageSize": {
              "format": "int32",
              "description": "The number of matters to return in the response. Default and maximum are 100.",
              "type": "integer",
              "location": "query"
            }
          },
          "id": "vault.matters.list",
          "flatPath": "v1/matters",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ]
        },
        "undelete": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "flatPath": "v1/matters/{matterId}:undelete",
          "path": "v1/matters/{matterId}:undelete",
          "response": {
            "$ref": "Matter"
          },
          "parameters": {
            "matterId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "The matter ID."
            }
          },
          "httpMethod": "POST",
          "description": "Undeletes the specified matter. Returns matter with updated state.",
          "id": "vault.matters.undelete",
          "parameterOrder": [
            "matterId"
          ],
          "request": {
            "$ref": "UndeleteMatterRequest"
          }
        },
        "addPermissions": {
          "parameters": {
            "matterId": {
              "description": "The matter ID.",
              "required": true,
              "location": "path",
              "type": "string"
            }
          },
          "description": "Adds an account as a matter collaborator.",
          "request": {
            "$ref": "AddMatterPermissionsRequest"
          },
          "parameterOrder": [
            "matterId"
          ],
          "path": "v1/matters/{matterId}:addPermissions",
          "id": "vault.matters.addPermissions",
          "response": {
            "$ref": "MatterPermission"
          },
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "httpMethod": "POST",
          "flatPath": "v1/matters/{matterId}:addPermissions"
        },
        "update": {
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery"
          ],
          "flatPath": "v1/matters/{matterId}",
          "request": {
            "$ref": "Matter"
          },
          "description": "Updates the specified matter. This updates only the name and description of the matter, identified by matter ID. Changes to any other fields are ignored. Returns the default view of the matter.",
          "id": "vault.matters.update",
          "parameters": {
            "matterId": {
              "required": true,
              "location": "path",
              "description": "The matter ID.",
              "type": "string"
            }
          },
          "path": "v1/matters/{matterId}",
          "response": {
            "$ref": "Matter"
          },
          "httpMethod": "PUT",
          "parameterOrder": [
            "matterId"
          ]
        },
        "get": {
          "response": {
            "$ref": "Matter"
          },
          "flatPath": "v1/matters/{matterId}",
          "httpMethod": "GET",
          "description": "Gets the specified matter.",
          "scopes": [
            "https://www.googleapis.com/auth/ediscovery",
            "https://www.googleapis.com/auth/ediscovery.readonly"
          ],
          "id": "vault.matters.get",
          "path": "v1/matters/{matterId}",
          "parameters": {
            "view": {
              "enumDescriptions": [
                "There is no specified view.",
                "Response includes the matter_id, name, description, and state. Default choice.",
                "Full representation of matter is returned. Everything above and including MatterPermissions list."
              ],
              "location": "query",
              "enum": [
                "VIEW_UNSPECIFIED",
                "BASIC",
                "FULL"
              ],
              "type": "string",
              "description": "Specifies which parts of the Matter to return in the response."
            },
            "matterId": {
              "type": "string",
              "description": "The matter ID.",
              "location": "path",
              "required": true
            }
          },
          "parameterOrder": [
            "matterId"
          ]
        }
      },
      "resources": {
        "holds": {
          "resources": {
            "accounts": {
              "methods": {
                "create": {
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ],
                  "request": {
                    "$ref": "HeldAccount"
                  },
                  "id": "vault.matters.holds.accounts.create",
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "parameters": {
                    "holdId": {
                      "description": "The hold ID.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    },
                    "matterId": {
                      "location": "path",
                      "type": "string",
                      "description": "The matter ID.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Adds a HeldAccount to a hold. Accounts can only be added to a hold that has no held_org_unit set. Attempting to add an account to an OU-based hold will result in an error.",
                  "response": {
                    "$ref": "HeldAccount"
                  }
                },
                "list": {
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "response": {
                    "$ref": "ListHeldAccountsResponse"
                  },
                  "description": "Lists HeldAccounts for a hold. This will only list individually specified held accounts. If the hold is on an OU, then use Admin SDK to enumerate its members.",
                  "parameterOrder": [
                    "matterId",
                    "holdId"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts",
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery",
                    "https://www.googleapis.com/auth/ediscovery.readonly"
                  ],
                  "parameters": {
                    "holdId": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The hold ID."
                    },
                    "matterId": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The matter ID."
                    }
                  },
                  "id": "vault.matters.holds.accounts.list"
                },
                "delete": {
                  "path": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "parameters": {
                    "holdId": {
                      "type": "string",
                      "description": "The hold ID.",
                      "required": true,
                      "location": "path"
                    },
                    "matterId": {
                      "description": "The matter ID.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    },
                    "accountId": {
                      "required": true,
                      "type": "string",
                      "description": "The ID of the account to remove from the hold.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "matterId",
                    "holdId",
                    "accountId"
                  ],
                  "flatPath": "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}",
                  "id": "vault.matters.holds.accounts.delete",
                  "description": "Removes a HeldAccount from a hold. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "scopes": [
                    "https://www.googleapis.com/auth/ediscovery"
                  ]
                }
              }
            }
          },
          "methods": {
            "removeHeldAccounts": {
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "id": "vault.matters.holds.removeHeldAccounts",
              "request": {
                "$ref": "RemoveHeldAccountsRequest"
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "description": "Removes HeldAccounts from a hold. Returns a list of statuses in the same order as the request. If this request leaves the hold with no held accounts, the hold will not apply to any accounts.",
              "parameters": {
                "holdId": {
                  "location": "path",
                  "type": "string",
                  "description": "The hold ID.",
                  "required": true
                },
                "matterId": {
                  "description": "The matter ID.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts",
              "httpMethod": "POST",
              "response": {
                "$ref": "RemoveHeldAccountsResponse"
              }
            },
            "update": {
              "id": "vault.matters.holds.update",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "parameters": {
                "matterId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "The matter ID."
                },
                "holdId": {
                  "location": "path",
                  "type": "string",
                  "description": "The ID of the hold.",
                  "required": true
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "response": {
                "$ref": "Hold"
              },
              "description": "Updates the OU and/or query parameters of a hold. You cannot add accounts to a hold that covers an OU, nor can you add OUs to a hold that covers individual accounts. Accounts listed in the hold will be ignored.",
              "request": {
                "$ref": "Hold"
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "httpMethod": "PUT"
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "id": "vault.matters.holds.delete",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "description": "Removes a hold by ID. This will release any HeldAccounts on this Hold.",
              "parameters": {
                "holdId": {
                  "required": true,
                  "type": "string",
                  "description": "The hold ID.",
                  "location": "path"
                },
                "matterId": {
                  "location": "path",
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Empty"
              }
            },
            "create": {
              "parameters": {
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "description": "The matter ID.",
                  "required": true
                }
              },
              "description": "Creates a hold in the given matter.",
              "httpMethod": "POST",
              "request": {
                "$ref": "Hold"
              },
              "response": {
                "$ref": "Hold"
              },
              "id": "vault.matters.holds.create",
              "parameterOrder": [
                "matterId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/holds",
              "flatPath": "v1/matters/{matterId}/holds"
            },
            "addHeldAccounts": {
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameters": {
                "matterId": {
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "holdId": {
                  "description": "The hold ID.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                }
              },
              "path": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "description": "Adds HeldAccounts to a hold. Returns a list of accounts that have been successfully added. Accounts can only be added to an existing account-based hold.",
              "request": {
                "$ref": "AddHeldAccountsRequest"
              },
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "flatPath": "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts",
              "id": "vault.matters.holds.addHeldAccounts",
              "response": {
                "$ref": "AddHeldAccountsResponse"
              }
            },
            "list": {
              "response": {
                "$ref": "ListHoldsResponse"
              },
              "flatPath": "v1/matters/{matterId}/holds",
              "path": "v1/matters/{matterId}/holds",
              "id": "vault.matters.holds.list",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "description": "The matter ID.",
                  "required": true,
                  "type": "string"
                },
                "pageSize": {
                  "description": "The number of holds to return in the response, between 0 and 100 inclusive. Leaving this empty, or as 0, is the same as page_size = 100.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "view": {
                  "description": "Specifies which parts of the Hold to return.",
                  "location": "query",
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ],
                  "type": "string",
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ]
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The pagination token as returned in the response. An empty token means start from the beginning."
                }
              },
              "httpMethod": "GET",
              "description": "Lists holds within a matter. An empty page token in ListHoldsResponse denotes no more holds to list.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "parameterOrder": [
                "matterId"
              ]
            },
            "get": {
              "parameterOrder": [
                "matterId",
                "holdId"
              ],
              "httpMethod": "GET",
              "parameters": {
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "description": "The matter ID.",
                  "required": true
                },
                "holdId": {
                  "location": "path",
                  "description": "The hold ID.",
                  "type": "string",
                  "required": true
                },
                "view": {
                  "enum": [
                    "HOLD_VIEW_UNSPECIFIED",
                    "BASIC_HOLD",
                    "FULL_HOLD"
                  ],
                  "location": "query",
                  "type": "string",
                  "description": "Specifies which parts of the Hold to return.",
                  "enumDescriptions": [
                    "There is no specified view. Defaults to FULL_HOLD.",
                    "Response includes the id, name, update time, corpus, and query.",
                    "Full representation of a Hold. Response includes all fields of 'BASIC' and the entities the Hold applies to, such as accounts, or OU."
                  ]
                }
              },
              "response": {
                "$ref": "Hold"
              },
              "path": "v1/matters/{matterId}/holds/{holdId}",
              "description": "Gets a hold by ID.",
              "flatPath": "v1/matters/{matterId}/holds/{holdId}",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "id": "vault.matters.holds.get"
            }
          }
        },
        "savedQueries": {
          "methods": {
            "create": {
              "id": "vault.matters.savedQueries.create",
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "response": {
                "$ref": "SavedQuery"
              },
              "description": "Creates a saved query.",
              "parameters": {
                "matterId": {
                  "description": "The matter ID of the parent matter for which the saved query is to be created.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "path": "v1/matters/{matterId}/savedQueries",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "parameterOrder": [
                "matterId"
              ],
              "request": {
                "$ref": "SavedQuery"
              },
              "httpMethod": "POST"
            },
            "list": {
              "response": {
                "$ref": "ListSavedQueriesResponse"
              },
              "id": "vault.matters.savedQueries.list",
              "description": "Lists saved queries within a matter. An empty page token in ListSavedQueriesResponse denotes no more saved queries to list.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "flatPath": "v1/matters/{matterId}/savedQueries",
              "httpMethod": "GET",
              "parameterOrder": [
                "matterId"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The pagination token as returned in the previous response. An empty token means start from the beginning.",
                  "type": "string"
                },
                "matterId": {
                  "location": "path",
                  "type": "string",
                  "description": "The matter ID of the parent matter for which the saved queries are to be retrieved.",
                  "required": true
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of saved queries to return."
                }
              },
              "path": "v1/matters/{matterId}/savedQueries"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "description": "Retrieves a saved query by Id.",
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "parameters": {
                "savedQueryId": {
                  "type": "string",
                  "description": "ID of the saved query to be retrieved.",
                  "location": "path",
                  "required": true
                },
                "matterId": {
                  "type": "string",
                  "required": true,
                  "description": "The matter ID of the parent matter for which the saved query is to be retrieved.",
                  "location": "path"
                }
              },
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "response": {
                "$ref": "SavedQuery"
              },
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "id": "vault.matters.savedQueries.get",
              "httpMethod": "GET"
            },
            "delete": {
              "parameterOrder": [
                "matterId",
                "savedQueryId"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes a saved query by Id.",
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "id": "vault.matters.savedQueries.delete",
              "flatPath": "v1/matters/{matterId}/savedQueries/{savedQueryId}",
              "parameters": {
                "savedQueryId": {
                  "required": true,
                  "description": "ID of the saved query to be deleted.",
                  "type": "string",
                  "location": "path"
                },
                "matterId": {
                  "description": "The matter ID of the parent matter for which the saved query is to be deleted.",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            }
          }
        },
        "exports": {
          "methods": {
            "get": {
              "parameters": {
                "exportId": {
                  "description": "The export ID.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The matter ID."
                }
              },
              "description": "Gets an Export.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "id": "vault.matters.exports.get",
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "response": {
                "$ref": "Export"
              },
              "httpMethod": "GET",
              "path": "v1/matters/{matterId}/exports/{exportId}"
            },
            "create": {
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ],
              "path": "v1/matters/{matterId}/exports",
              "description": "Creates an Export.",
              "parameterOrder": [
                "matterId"
              ],
              "id": "vault.matters.exports.create",
              "response": {
                "$ref": "Export"
              },
              "httpMethod": "POST",
              "flatPath": "v1/matters/{matterId}/exports",
              "parameters": {
                "matterId": {
                  "location": "path",
                  "required": true,
                  "description": "The matter ID.",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "Export"
              }
            },
            "list": {
              "response": {
                "$ref": "ListExportsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery",
                "https://www.googleapis.com/auth/ediscovery.readonly"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "matterId"
              ],
              "description": "Lists Exports.",
              "flatPath": "v1/matters/{matterId}/exports",
              "path": "v1/matters/{matterId}/exports",
              "id": "vault.matters.exports.list",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "The pagination token as returned in the response.",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The number of exports to return in the response."
                },
                "matterId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The matter ID."
                }
              }
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "id": "vault.matters.exports.delete",
              "path": "v1/matters/{matterId}/exports/{exportId}",
              "flatPath": "v1/matters/{matterId}/exports/{exportId}",
              "httpMethod": "DELETE",
              "parameters": {
                "matterId": {
                  "type": "string",
                  "location": "path",
                  "description": "The matter ID.",
                  "required": true
                },
                "exportId": {
                  "required": true,
                  "location": "path",
                  "description": "The export ID.",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "matterId",
                "exportId"
              ],
              "description": "Deletes an Export.",
              "scopes": [
                "https://www.googleapis.com/auth/ediscovery"
              ]
            }
          }
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/ediscovery.readonly": {
          "description": "View your eDiscovery data"
        },
        "https://www.googleapis.com/auth/ediscovery": {
          "description": "Manage your eDiscovery data"
        }
      }
    }
  },
  "documentationLink": "https://developers.google.com/vault",
  "mtlsRootUrl": "https://vault.mtls.googleapis.com/",
  "rootUrl": "https://vault.googleapis.com/",
  "version": "v1",
  "id": "vault:v1",
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "default": "true",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "default": "json"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    }
  },
  "protocol": "rest",
  "canonicalName": "Vault",
  "revision": "20201001",
  "version_module": true,
  "fullyEncodeReservedExpansion": true
}
