{
  "ownerName": "Google",
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "path": "v1p1beta1/operations/{+name}",
          "id": "speech.operations.get",
          "description": "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.",
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "location": "path",
              "description": "The name of the operation resource.",
              "required": true,
              "type": "string",
              "pattern": "^[^/]+$"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1p1beta1/operations/{operationsId}"
        }
      }
    },
    "speech": {
      "methods": {
        "longrunningrecognize": {
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "parameters": {},
          "flatPath": "v1p1beta1/speech:longrunningrecognize",
          "path": "v1p1beta1/speech:longrunningrecognize",
          "id": "speech.speech.longrunningrecognize",
          "request": {
            "$ref": "LongRunningRecognizeRequest"
          },
          "description": "Performs asynchronous speech recognition: receive results via the\ngoogle.longrunning.Operations interface. Returns either an\n`Operation.error` or an `Operation.response` which contains\na `LongRunningRecognizeResponse` message."
        },
        "recognize": {
          "response": {
            "$ref": "RecognizeResponse"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "flatPath": "v1p1beta1/speech:recognize",
          "path": "v1p1beta1/speech:recognize",
          "id": "speech.speech.recognize",
          "description": "Performs synchronous speech recognition: receive results after all audio\nhas been sent and processed.",
          "request": {
            "$ref": "RecognizeRequest"
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "datasets": {
              "methods": {
                "create": {
                  "description": "Performs asynchronous data upload for AutoML: receive results via the\ngoogle.longrunning.Operations interface. Returns either an\n`Operation.error` or an `Operation.response` which contains\na `Dataset` message.",
                  "request": {
                    "$ref": "Dataset"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Resource name of the parent. Has the format :-\n\"projects/{project_id}/locations/{location_id}\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/datasets",
                  "id": "speech.projects.locations.datasets.create",
                  "path": "v1p1beta1/{+parent}/datasets"
                },
                "refreshData": {
                  "request": {
                    "$ref": "RefreshDataRequest"
                  },
                  "description": "Refresh data for a dataset.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The resource name of the destination dataset.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}:refreshData",
                  "path": "v1p1beta1/{+name}:refreshData",
                  "id": "speech.projects.locations.datasets.refreshData"
                },
                "list": {
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDatasetsResponse"
                  },
                  "parameters": {
                    "filter": {
                      "location": "query",
                      "description": "Filter the response based on display_name of the dataset. For e.g\ndisplay_name=Foo The filter string is case sensitive",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "includeModelInfo": {
                      "location": "query",
                      "description": "If true then also include information about the models built using the\ndatasets.",
                      "type": "boolean"
                    },
                    "parent": {
                      "location": "path",
                      "description": "Required. Resource name of the parent. Has the format :-\n\"projects/{project_id}/locations/{location_id}\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/datasets",
                  "id": "speech.projects.locations.datasets.list",
                  "path": "v1p1beta1/{+parent}/datasets",
                  "description": "Fetch the list of dataset associated with this project."
                },
                "get": {
                  "description": "Get the dataset associated with the dataset resource.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Dataset"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "includeModelInfo": {
                      "location": "query",
                      "description": "If true then also include information about the models built using this\ndataset.",
                      "type": "boolean"
                    },
                    "name": {
                      "location": "path",
                      "description": "The resource name of the dataset to retrieve. Form :-\n'/projects/{project_number}/locations/{location_id}/datasets/{dataset_id}'",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/datasets/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/datasets/{datasetsId}",
                  "id": "speech.projects.locations.datasets.get",
                  "path": "v1p1beta1/{+name}"
                }
              }
            },
            "log_data_stats": {
              "methods": {
                "list": {
                  "description": "List all log data stats associated with this project.",
                  "response": {
                    "$ref": "ListLogDataStatsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Resource name of the parent. Has the format :-\n\"projects/{project_id}/locations/{location_id}\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/log_data_stats",
                  "path": "v1p1beta1/{+parent}/log_data_stats",
                  "id": "speech.projects.locations.log_data_stats.list"
                }
              }
            },
            "models": {
              "methods": {
                "deploy": {
                  "path": "v1p1beta1/{+name}:deploy",
                  "id": "speech.projects.locations.models.deploy",
                  "description": "Performs asynchronous model deployment of the model: receive results\nvia the google.longrunning.Operations interface. After the operation is\ncompleted this returns either an `Operation.error` in case of error or\na `google.protobuf.Empty` if the deployment was successful.",
                  "request": {
                    "$ref": "DeployModelRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "Resource name of the model.\nFormat: \"projects/{project_id}/locations/{location_id}/models/{model_id}\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:deploy"
                },
                "list": {
                  "response": {
                    "$ref": "ListModelsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. Resource name of the parent. Has the format :-\n\"projects/{project_id}/locations/{location_id}\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "filter": {
                      "location": "query",
                      "description": "Filter the response based on display_name of the model. For e.g\ndisplay_name=Foo The filter string is case sensitive",
                      "type": "string"
                    },
                    "pageToken": {
                      "description": "The next_page_token value returned from a previous List request, if any.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of items to return.",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/models",
                  "path": "v1p1beta1/{+parent}/models",
                  "id": "speech.projects.locations.models.list",
                  "description": "Fetch the list of models associated with this project."
                },
                "evaluate": {
                  "description": "Performs asynchronous evaluation of the model: receive results\nvia the google.longrunning.Operations interface. After the operation is\ncompleted this returns either an `Operation.error` in case of error or\na `EvaluateModelResponse` with the evaluation results.",
                  "request": {
                    "$ref": "EvaluateModelRequest"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "description": "Resource name of the model.\nFormat: \"projects/{project_id}/locations/{location_id}/models/{model_id}\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/models/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/models/{modelsId}:evaluate",
                  "id": "speech.projects.locations.models.evaluate",
                  "path": "v1p1beta1/{+name}:evaluate"
                },
                "create": {
                  "description": "Performs asynchronous model training for AutoML: receive results via the\ngoogle.longrunning.Operations interface. Returns either an\n`Operation.error` or an `Operation.response` which contains a `Model`\nmessage.",
                  "request": {
                    "$ref": "Model"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "parameters": {
                    "name": {
                      "location": "query",
                      "description": "Required. Resource name of the dataset being used to create the model.\n'/projects/{project_id}/locations/{location_id}/datasets/{dataset_id}'",
                      "type": "string"
                    },
                    "parent": {
                      "description": "Required. Resource name of the parent. Has the format :-\n\"projects/{project_id}/locations/{location_id}\"",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1p1beta1/projects/{projectsId}/locations/{locationsId}/models",
                  "id": "speech.projects.locations.models.create",
                  "path": "v1p1beta1/{+parent}/models"
                }
              }
            }
          }
        }
      }
    }
  },
  "parameters": {
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    }
  },
  "version": "v1p1beta1",
  "baseUrl": "https://speech.googleapis.com/",
  "servicePath": "",
  "description": "Converts audio to text by applying powerful neural network models.",
  "kind": "discovery#restDescription",
  "basePath": "",
  "documentationLink": "https://cloud.google.com/speech-to-text/docs/quickstart-protocol",
  "id": "speech:v1p1beta1",
  "revision": "20181107",
  "discoveryVersion": "v1",
  "version_module": true,
  "schemas": {
    "RecognitionConfig": {
      "description": "Provides information to the recognizer that specifies how to process the\nrequest.",
      "type": "object",
      "properties": {
        "enableWordConfidence": {
          "description": "*Optional* If `true`, the top result includes a list of words and the\nconfidence for those words. If `false`, no word-level confidence\ninformation is returned. The default is `false`.",
          "type": "boolean"
        },
        "model": {
          "description": "*Optional* Which model to select for the given request. Select the model\nbest suited to your domain to get best results. If a model is not\nexplicitly specified, then we auto-select a model based on the parameters\nin the RecognitionConfig.\n\u003ctable\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e\u003cb\u003eModel\u003c/b\u003e\u003c/td\u003e\n    \u003ctd\u003e\u003cb\u003eDescription\u003c/b\u003e\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e\u003ccode\u003ecommand_and_search\u003c/code\u003e\u003c/td\u003e\n    \u003ctd\u003eBest for short queries such as voice commands or voice search.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e\u003ccode\u003ephone_call\u003c/code\u003e\u003c/td\u003e\n    \u003ctd\u003eBest for audio that originated from a phone call (typically\n    recorded at an 8khz sampling rate).\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e\u003ccode\u003evideo\u003c/code\u003e\u003c/td\u003e\n    \u003ctd\u003eBest for audio that originated from from video or includes multiple\n        speakers. Ideally the audio is recorded at a 16khz or greater\n        sampling rate. This is a premium model that costs more than the\n        standard rate.\u003c/td\u003e\n  \u003c/tr\u003e\n  \u003ctr\u003e\n    \u003ctd\u003e\u003ccode\u003edefault\u003c/code\u003e\u003c/td\u003e\n    \u003ctd\u003eBest for audio that is not one of the specific audio models.\n        For example, long-form audio. Ideally the audio is high-fidelity,\n        recorded at a 16khz or greater sampling rate.\u003c/td\u003e\n  \u003c/tr\u003e\n\u003c/table\u003e",
          "type": "string"
        },
        "audioChannelCount": {
          "description": "*Optional* The number of channels in the input audio data.\nONLY set this for MULTI-CHANNEL recognition.\nValid values for LINEAR16 and FLAC are `1`-`8`.\nValid values for OGG_OPUS are '1'-'254'.\nValid value for MULAW, AMR, AMR_WB and SPEEX_WITH_HEADER_BYTE is only `1`.\nIf `0` or omitted, defaults to one channel (mono).\nNote: We only recognize the first channel by default.\nTo perform independent recognition on each channel set\n`enable_separate_recognition_per_channel` to 'true'.",
          "format": "int32",
          "type": "integer"
        },
        "alternativeLanguageCodes": {
          "description": "*Optional* A list of up to 3 additional\n[BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags,\nlisting possible alternative languages of the supplied audio.\nSee [Language Support](/speech-to-text/docs/languages)\nfor a list of the currently supported language codes.\nIf alternative languages are listed, recognition result will contain\nrecognition in the most likely language detected including the main\nlanguage_code. The recognition result will include the language tag\nof the language detected in the audio.\nNote: This feature is only supported for Voice Command and Voice Search\nuse cases and performance may vary for other use cases (e.g., phone call\ntranscription).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enableWordTimeOffsets": {
          "description": "*Optional* If `true`, the top result includes a list of words and\nthe start and end time offsets (timestamps) for those words. If\n`false`, no word-level time offset information is returned. The default is\n`false`.",
          "type": "boolean"
        },
        "languageCode": {
          "description": "*Required* The language of the supplied audio as a\n[BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.\nExample: \"en-US\".\nSee [Language Support](/speech-to-text/docs/languages)\nfor a list of the currently supported language codes.",
          "type": "string"
        },
        "profanityFilter": {
          "description": "*Optional* If set to `true`, the server will attempt to filter out\nprofanities, replacing all but the initial character in each filtered word\nwith asterisks, e.g. \"f***\". If set to `false` or omitted, profanities\nwon't be filtered out.",
          "type": "boolean"
        },
        "enableSpeakerDiarization": {
          "description": "*Optional* If 'true', enables speaker detection for each recognized word in\nthe top alternative of the recognition result using a speaker_tag provided\nin the WordInfo.\nNote: When this is true, we send all the words from the beginning of the\naudio for the top alternative in every consecutive STREAMING responses.\nThis is done in order to improve our speaker tags as our models learn to\nidentify the speakers in the conversation over time.\nFor non-streaming requests, the diarization results will be provided only\nin the top alternative of the FINAL SpeechRecognitionResult.",
          "type": "boolean"
        },
        "useEnhanced": {
          "description": "*Optional* Set to true to use an enhanced model for speech recognition.\nIf `use_enhanced` is set to true and the `model` field is not set, then\nan appropriate enhanced model is chosen if:\n1. project is eligible for requesting enhanced models\n2. an enhanced model exists for the audio\n\nIf `use_enhanced` is true and an enhanced version of the specified model\ndoes not exist, then the speech is recognized using the standard version\nof the specified model.\n\nEnhanced speech models require that you opt-in to data logging using\ninstructions in the\n[documentation](/speech-to-text/docs/enable-data-logging). If you set\n`use_enhanced` to true and you have not enabled audio logging, then you\nwill receive an error.",
          "type": "boolean"
        },
        "metadata": {
          "$ref": "RecognitionMetadata",
          "description": "*Optional* Metadata regarding this request."
        },
        "sampleRateHertz": {
          "description": "Sample rate in Hertz of the audio data sent in all\n`RecognitionAudio` messages. Valid values are: 8000-48000.\n16000 is optimal. For best results, set the sampling rate of the audio\nsource to 16000 Hz. If that's not possible, use the native sample rate of\nthe audio source (instead of re-sampling).\nThis field is optional for `FLAC` and `WAV` audio files and required\nfor all other audio formats. For details, see AudioEncoding.",
          "format": "int32",
          "type": "integer"
        },
        "enableSeparateRecognitionPerChannel": {
          "description": "This needs to be set to ‘true’ explicitly and `audio_channel_count` \u003e 1\nto get each channel recognized separately. The recognition result will\ncontain a `channel_tag` field to state which channel that result belongs\nto. If this is not true, we will only recognize the first channel. The\nrequest is billed cumulatively for all channels recognized:\n`audio_channel_count` multiplied by the length of the audio.",
          "type": "boolean"
        },
        "enableAutomaticPunctuation": {
          "description": "*Optional* If 'true', adds punctuation to recognition result hypotheses.\nThis feature is only available in select languages. Setting this for\nrequests in other languages has no effect at all.\nThe default 'false' value does not add punctuation to result hypotheses.\nNote: This is currently offered as an experimental service, complimentary\nto all users. In the future this may be exclusively available as a\npremium feature.",
          "type": "boolean"
        },
        "maxAlternatives": {
          "description": "*Optional* Maximum number of recognition hypotheses to be returned.\nSpecifically, the maximum number of `SpeechRecognitionAlternative` messages\nwithin each `SpeechRecognitionResult`.\nThe server may return fewer than `max_alternatives`.\nValid values are `0`-`30`. A value of `0` or `1` will return a maximum of\none. If omitted, will return a maximum of one.",
          "format": "int32",
          "type": "integer"
        },
        "diarizationSpeakerCount": {
          "description": "*Optional*\nIf set, specifies the estimated number of speakers in the conversation.\nIf not set, defaults to '2'.\nIgnored unless enable_speaker_diarization is set to true.\"",
          "format": "int32",
          "type": "integer"
        },
        "encoding": {
          "description": "Encoding of audio data sent in all `RecognitionAudio` messages.\nThis field is optional for `FLAC` and `WAV` audio files and required\nfor all other audio formats. For details, see AudioEncoding.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "`FLAC` (Free Lossless Audio\nCodec) is the recommended encoding because it is\nlossless--therefore recognition is not compromised--and\nrequires only about half the bandwidth of `LINEAR16`. `FLAC` stream\nencoding supports 16-bit and 24-bit samples, however, not all fields in\n`STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container\n([OggOpus](https://wiki.xiph.org/OggOpus)).\n`sample_rate_hertz` must be one of 8000, 12000, 16000, 24000, or 48000.",
            "Although the use of lossy encodings is not recommended, if a very low\nbitrate encoding is required, `OGG_OPUS` is highly preferred over\nSpeex encoding. The [Speex](https://speex.org/)  encoding supported by\nCloud Speech API has a header byte in each block, as in MIME type\n`audio/x-speex-with-header-byte`.\nIt is a variant of the RTP Speex encoding defined in\n[RFC 5574](https://tools.ietf.org/html/rfc5574).\nThe stream is a sequence of blocks, one block per RTP packet. Each block\nstarts with a byte containing the length of the block, in bytes, followed\nby one or more frames of Speex data, padded to an integral number of\nbytes (octets) as specified in RFC 5574. In other words, each RTP header\nis replaced with a single byte containing the block length. Only Speex\nwideband is supported. `sample_rate_hertz` must be 16000."
          ],
          "enum": [
            "ENCODING_UNSPECIFIED",
            "LINEAR16",
            "FLAC",
            "MULAW",
            "AMR",
            "AMR_WB",
            "OGG_OPUS",
            "SPEEX_WITH_HEADER_BYTE"
          ]
        },
        "speechContexts": {
          "description": "*Optional* array of SpeechContext.\nA means to provide context to assist the speech recognition. For more\ninformation, see [Phrase Hints](/speech-to-text/docs/basics#phrase-hints).",
          "type": "array",
          "items": {
            "$ref": "SpeechContext"
          }
        }
      },
      "id": "RecognitionConfig"
    },
    "WordInfo": {
      "description": "Word-specific information for recognized words.",
      "type": "object",
      "properties": {
        "word": {
          "description": "Output only. The word corresponding to this set of information.",
          "type": "string"
        },
        "speakerTag": {
          "description": "Output only. A distinct integer value is assigned for every speaker within\nthe audio. This field specifies which one of those speakers was detected to\nhave spoken this word. Value ranges from '1' to diarization_speaker_count.\nspeaker_tag is set if enable_speaker_diarization = 'true' and only in the\ntop alternative.",
          "format": "int32",
          "type": "integer"
        },
        "endTime": {
          "description": "Output only. Time offset relative to the beginning of the audio,\nand corresponding to the end of the spoken word.\nThis field is only set if `enable_word_time_offsets=true` and only\nin the top hypothesis.\nThis is an experimental feature and the accuracy of the time offset can\nvary.",
          "format": "google-duration",
          "type": "string"
        },
        "confidence": {
          "description": "Output only. The confidence estimate between 0.0 and 1.0. A higher number\nindicates an estimated greater likelihood that the recognized words are\ncorrect. This field is set only for the top alternative of a non-streaming\nresult or, of a streaming result where `is_final=true`.\nThis field is not guaranteed to be accurate and users should not rely on it\nto be always provided.\nThe default of 0.0 is a sentinel value indicating `confidence` was not set.",
          "format": "float",
          "type": "number"
        },
        "startTime": {
          "description": "Output only. Time offset relative to the beginning of the audio,\nand corresponding to the start of the spoken word.\nThis field is only set if `enable_word_time_offsets=true` and only\nin the top hypothesis.\nThis is an experimental feature and the accuracy of the time offset can\nvary.",
          "format": "google-duration",
          "type": "string"
        }
      },
      "id": "WordInfo"
    },
    "RefreshDataRequest": {
      "description": "Message sent by the client to refresh data in a existing dataset.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "URI that points to a file in csv file where each row has following format.\n\u003cgs_path_to_audio\u003e,\u003cgs_path_to_transcript\u003e,\u003clabel\u003e\nlabel can be HUMAN_TRANSCRIBED or MACHINE_TRANSCRIBED. Few rules for a row\nto be considered valid are :-\n1. Each row must have at least a label and \u003cgs_path_to_transcript\u003e\n2. If a row is marked HUMAN_TRANSCRIBED, then both \u003cgs_path_to_audio\u003e\nand \u003cgs_path_to_transcript\u003e needs to be specified.\n3. There has to be minimum 500 number of rows labelled HUMAN_TRANSCRIBED if\nevaluation stats are required.\n4. If use_logged_data_for_training is set to true, then we ignore the rows\nlabelled as MACHINE_TRANSCRIBED.\n5. There has to be minimum 100,000 words in the transcripts in order to\nprovide sufficient textual training data for the language model.\nCurrently, only Google Cloud Storage URIs are\nsupported, which must be specified in the following format:\n`gs://bucket_name/object_name` (other URI formats will be ignored).\nFor more information, see\n[Request URIs](https://cloud.google.com/storage/docs/reference-uris).",
          "type": "string"
        }
      },
      "id": "RefreshDataRequest"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different\nprogramming environments, including REST APIs and RPC APIs. It is used by\n[gRPC](https://github.com/grpc). The error model is designed to be:\n\n- Simple to use and understand for most users\n- Flexible enough to meet unexpected needs\n\n# Overview\n\nThe `Status` message contains three pieces of data: error code, error message,\nand error details. The error code should be an enum value of\ngoogle.rpc.Code, but it may accept additional error codes if needed.  The\nerror message should be a developer-facing English message that helps\ndevelopers *understand* and *resolve* the error. If a localized user-facing\nerror message is needed, put the localized message in the error details or\nlocalize it in the client. The optional error details may contain arbitrary\ninformation about the error. There is a predefined set of error detail types\nin the package `google.rpc` that can be used for common error conditions.\n\n# Language mapping\n\nThe `Status` message is the logical representation of the error model, but it\nis not necessarily the actual wire format. When the `Status` message is\nexposed in different client libraries and different wire protocols, it can be\nmapped differently. For example, it will likely be mapped to some exceptions\nin Java, but more likely mapped to some error codes in C.\n\n# Other uses\n\nThe error model and the `Status` message can be used in a variety of\nenvironments, either with or without APIs, to provide a\nconsistent developer experience across different environments.\n\nExample uses of this error model include:\n\n- Partial errors. If a service needs to return partial errors to the client,\n    it may embed the `Status` in the normal response to indicate the partial\n    errors.\n\n- Workflow errors. A typical workflow has multiple steps. Each step may\n    have a `Status` message for error reporting.\n\n- Batch operations. If a client uses batch request and batch response, the\n    `Status` message should be used directly inside batch response, one for\n    each error sub-response.\n\n- Asynchronous operations. If an API call embeds asynchronous operation\n    results in its response, the status of those operations should be\n    represented directly using the `Status` message.\n\n- Logging. If some API errors are stored in logs, the message `Status` could\n    be used directly after any stripping needed for security/privacy reasons.",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "id": "Status"
    },
    "DataStats": {
      "description": "Contains stats about the data which was uploaded and preprocessed to be\nuse by downstream pipelines like training, evals pipelines.",
      "type": "object",
      "properties": {
        "testExampleCount": {
          "description": "The number of examples used for testing.",
          "format": "int32",
          "type": "integer"
        },
        "trainingExampleCount": {
          "description": "The number of examples used for training.",
          "format": "int32",
          "type": "integer"
        },
        "dataErrors": {
          "description": "Different types of data errors and the counts associated with them.",
          "type": "array",
          "items": {
            "$ref": "DataErrors"
          }
        }
      },
      "id": "DataStats"
    },
    "SpeechRecognitionAlternative": {
      "description": "Alternative hypotheses (a.k.a. n-best list).",
      "type": "object",
      "properties": {
        "confidence": {
          "description": "Output only. The confidence estimate between 0.0 and 1.0. A higher number\nindicates an estimated greater likelihood that the recognized words are\ncorrect. This field is set only for the top alternative of a non-streaming\nresult or, of a streaming result where `is_final=true`.\nThis field is not guaranteed to be accurate and users should not rely on it\nto be always provided.\nThe default of 0.0 is a sentinel value indicating `confidence` was not set.",
          "format": "float",
          "type": "number"
        },
        "transcript": {
          "description": "Output only. Transcript text representing the words that the user spoke.",
          "type": "string"
        },
        "words": {
          "description": "Output only. A list of word-specific information for each recognized word.\nNote: When `enable_speaker_diarization` is true, you will see all the words\nfrom the beginning of the audio.",
          "type": "array",
          "items": {
            "$ref": "WordInfo"
          }
        }
      },
      "id": "SpeechRecognitionAlternative"
    },
    "ListLogDataStatsResponse": {
      "description": "Message received by the client for the `ListLogDataStats` method.",
      "type": "object",
      "properties": {
        "logDataEnabled": {
          "description": "Output only. True if user has opted in for log data collection.",
          "type": "boolean"
        },
        "logDataStats": {
          "description": "The stats for each bucket.",
          "type": "array",
          "items": {
            "$ref": "LogBucketStats"
          }
        },
        "totalCount": {
          "description": "The overall count for log data (including all bucket data).",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "ListLogDataStatsResponse"
    },
    "LogBucketStats": {
      "description": "Stats for log data within a bucket.",
      "type": "object",
      "properties": {
        "bucketName": {
          "description": "The display name for the bucket in which logs are collected.",
          "type": "string"
        },
        "count": {
          "description": "Number of audio samples that have been collected in this bucket.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "LogBucketStats"
    },
    "RecognitionAudio": {
      "description": "Contains audio data in the encoding specified in the `RecognitionConfig`.\nEither `content` or `uri` must be supplied. Supplying both or neither\nreturns google.rpc.Code.INVALID_ARGUMENT. See\n[content limits](/speech-to-text/quotas#content).",
      "type": "object",
      "properties": {
        "content": {
          "description": "The audio data bytes encoded as specified in\n`RecognitionConfig`. Note: as with all bytes fields, protobuffers use a\npure binary representation, whereas JSON representations use base64.",
          "format": "byte",
          "type": "string"
        },
        "uri": {
          "description": "URI that points to a file that contains audio data bytes as specified in\n`RecognitionConfig`. The file must not be compressed (for example, gzip).\nCurrently, only Google Cloud Storage URIs are\nsupported, which must be specified in the following format:\n`gs://bucket_name/object_name` (other URI formats return\ngoogle.rpc.Code.INVALID_ARGUMENT). For more information, see\n[Request URIs](https://cloud.google.com/storage/docs/reference-uris).",
          "type": "string"
        }
      },
      "id": "RecognitionAudio"
    },
    "LongRunningRecognizeRequest": {
      "description": "The top-level message sent by the client for the `LongRunningRecognize`\nmethod.",
      "type": "object",
      "properties": {
        "config": {
          "description": "*Required* Provides information to the recognizer that specifies how to\nprocess the request.",
          "$ref": "RecognitionConfig"
        },
        "audio": {
          "$ref": "RecognitionAudio",
          "description": "*Required* The audio data to be recognized."
        }
      },
      "id": "LongRunningRecognizeRequest"
    },
    "Dataset": {
      "description": "Specifies the parameters needed for creating a dataset. In addition this\nis also the message returned to the client by the `CreateDataset` method.\nIt is included in the `result.response` field of the `Operation`\nreturned by the `GetOperation` call of the `google::longrunning::Operations`\nservice.",
      "type": "object",
      "properties": {
        "dataStats": {
          "$ref": "DataStats",
          "description": "Output only. Stats assoiated with the data."
        },
        "useLoggedData": {
          "description": "If this is true, then use the previously logged data (for the project)\nThe logs data for this project will be preprocessed and prepared for\ndownstream pipelines (like training)",
          "type": "boolean"
        },
        "hasSufficientData": {
          "description": "Output only. True if the data is sufficient to create custom models.",
          "type": "boolean"
        },
        "dataProcessingRegion": {
          "description": "Location where the data should be processed. If not specified then we will\npick a location on behalf of the user for storing and processing the data.\nCurrently only us-central is supported.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. Name of the data set for display.",
          "type": "string"
        },
        "bucketName": {
          "description": "If set, the log data to be used in this dataset is restricted to the\nbucket specified. This field is only applicable if use_logged_data is true.\nIf use_logged_data is true, but this field is not set, then all logs will\nbe used for training the models. See: RecognitionMetadata for information\non setting up data logs.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. The timestamp this dataset is created.",
          "format": "google-datetime",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The timestamp this dataset is last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "blockingOperationIds": {
          "description": "Output only. All the blocking operations associated with this dataset.\nLike (pre-processing, training-model, testing-model)",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "models": {
          "description": "All the models (including models pending training) built using the dataset.",
          "type": "array",
          "items": {
            "$ref": "Model"
          }
        },
        "languageCode": {
          "description": "Required. The language of the supplied audio as a\n[BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.\nExample: \"en-US\".\nSee [Language Support](/speech-to-text/docs/languages)\nfor a list of the currently supported language codes.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the dataset. Form :-\n'/projects/{project_number}/locations/{location_id}/datasets/{dataset_id}'",
          "type": "string"
        },
        "uri": {
          "description": "URI that points to a file in csv file where each row has following format.\n\u003cgs_path_to_audio\u003e,\u003cgs_path_to_transcript\u003e,\u003clabel\u003e\nlabel can be HUMAN_TRANSCRIBED or MACHINE_TRANSCRIBED. To be valid, rows\nmust do the following:\n1. Each row must have at least a label and \u003cgs_path_to_transcript\u003e\n2. If a row is marked HUMAN_TRANSCRIBED, then you must specify both\n\u003cgs_path_to_audio\u003e and \u003cgs_path_to_transcript\u003e. Only WAV file formats\nwhich encode linear 16-bit pulse-code modulation (PCM) audio format are\nsupported. The maximum audio file size is 50 MB. Also note that the audio\nhas to be single channel audio.\n3. There has to be at least 500 rows labelled HUMAN_TRANSCRIBED covering\nat least ~10K words in order to get reliable word error rate results.\n4. To create a language model, you should provide at least 100,000 words\nin your transcriptions as training data if you have conversational and\ncaptions type of data. You should provide at least 10,000 words if you\nhave short utterances like voice commands and search type of use cases.\nCurrently, only Google Cloud Storage URIs are\nsupported, which must be specified in the following format:\n`gs://bucket_name/object_name` (other URI formats will be ignored).\nFor more information, see\n[Request URIs](/storage/docs/reference-uris).",
          "type": "string"
        }
      },
      "id": "Dataset"
    },
    "ListModelsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        },
        "models": {
          "description": "Repeated list of models containing details about each model.",
          "type": "array",
          "items": {
            "$ref": "Model"
          }
        }
      },
      "id": "ListModelsResponse"
    },
    "RecognizeRequest": {
      "description": "The top-level message sent by the client for the `Recognize` method.",
      "type": "object",
      "properties": {
        "config": {
          "description": "*Required* Provides information to the recognizer that specifies how to\nprocess the request.",
          "$ref": "RecognitionConfig"
        },
        "audio": {
          "description": "*Required* The audio data to be recognized.",
          "$ref": "RecognitionAudio"
        }
      },
      "id": "RecognizeRequest"
    },
    "SpeechContext": {
      "description": "Provides \"hints\" to the speech recognizer to favor specific words and phrases\nin the results.",
      "type": "object",
      "properties": {
        "strength": {
          "enum": [
            "STRENGTH_UNSPECIFIED",
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "description": "Hint strength to use (high, medium or low). If you use a high strength then\nyou are more likely to see those phrases in the results. If strength is not\nspecified then by default medium strength will be used. If you'd like\ndifferent phrases to have different strengths, you can specify multiple\nspeech_contexts.",
          "type": "string",
          "enumDescriptions": [
            "",
            "Low strength",
            "Medium strength",
            "High strength"
          ]
        },
        "phrases": {
          "description": "*Optional* A list of strings containing words and phrases \"hints\" so that\nthe speech recognition is more likely to recognize them. This can be used\nto improve the accuracy for specific words and phrases, for example, if\nspecific commands are typically spoken by the user. This can also be used\nto add additional words to the vocabulary of the recognizer. See\n[usage limits](/speech-to-text/quotas#content).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SpeechContext"
    },
    "RecognitionMetadata": {
      "description": "Description of audio data to be recognized.",
      "type": "object",
      "properties": {
        "industryNaicsCodeOfAudio": {
          "description": "The industry vertical to which this speech recognition request most\nclosely applies. This is most indicative of the topics contained\nin the audio.  Use the 6-digit NAICS code to identify the industry\nvertical - see https://www.naics.com/search/.",
          "format": "uint32",
          "type": "integer"
        },
        "microphoneDistance": {
          "description": "The audio type that most closely describes the audio being recognized.",
          "type": "string",
          "enumDescriptions": [
            "Audio type is not known.",
            "The audio was captured from a closely placed microphone. Eg. phone,\ndictaphone, or handheld microphone. Generally if there speaker is within\n1 meter of the microphone.",
            "The speaker if within 3 meters of the microphone.",
            "The speaker is more than 3 meters away from the microphone."
          ],
          "enum": [
            "MICROPHONE_DISTANCE_UNSPECIFIED",
            "NEARFIELD",
            "MIDFIELD",
            "FARFIELD"
          ]
        },
        "originalMediaType": {
          "enumDescriptions": [
            "Unknown original media type.",
            "The speech data is an audio recording.",
            "The speech data originally recorded on a video."
          ],
          "enum": [
            "ORIGINAL_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO",
            "VIDEO"
          ],
          "description": "The original media the speech was recorded on.",
          "type": "string"
        },
        "obfuscatedId": {
          "description": "Obfuscated (privacy-protected) ID of the user, to identify number of\nunique users using the service.",
          "format": "int64",
          "type": "string"
        },
        "recordingDeviceType": {
          "enum": [
            "RECORDING_DEVICE_TYPE_UNSPECIFIED",
            "SMARTPHONE",
            "PC",
            "PHONE_LINE",
            "VEHICLE",
            "OTHER_OUTDOOR_DEVICE",
            "OTHER_INDOOR_DEVICE"
          ],
          "description": "The type of device the speech was recorded with.",
          "type": "string",
          "enumDescriptions": [
            "The recording device is unknown.",
            "Speech was recorded on a smartphone.",
            "Speech was recorded using a personal computer or tablet.",
            "Speech was recorded over a phone line.",
            "Speech was recorded in a vehicle.",
            "Speech was recorded outdoors.",
            "Speech was recorded indoors."
          ]
        },
        "tags": {
          "description": "A freeform field to tag this input sample with. This can be used for\ngrouping the logs into separate buckets. This enables selective purging of\ndata based on the tags, and also for training models in AutoML.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "interactionType": {
          "enum": [
            "INTERACTION_TYPE_UNSPECIFIED",
            "DISCUSSION",
            "PRESENTATION",
            "PHONE_CALL",
            "VOICEMAIL",
            "PROFESSIONALLY_PRODUCED",
            "VOICE_SEARCH",
            "VOICE_COMMAND",
            "DICTATION"
          ],
          "description": "The use case most closely describing the audio content to be recognized.",
          "type": "string",
          "enumDescriptions": [
            "Use case is either unknown or is something other than one of the other\nvalues below.",
            "Multiple people in a conversation or discussion. For example in a\nmeeting with two or more people actively participating. Typically\nall the primary people speaking would be in the same room (if not,\nsee PHONE_CALL)",
            "One or more persons lecturing or presenting to others, mostly\nuninterrupted.",
            "A phone-call or video-conference in which two or more people, who are\nnot in the same room, are actively participating.",
            "A recorded message intended for another person to listen to.",
            "Professionally produced audio (eg. TV Show, Podcast).",
            "Transcribe spoken questions and queries into text.",
            "Transcribe voice commands, such as for controlling a device.",
            "Transcribe speech to text to create a written document, such as a\ntext-message, email or report."
          ]
        },
        "recordingDeviceName": {
          "description": "The device used to make the recording.  Examples 'Nexus 5X' or\n'Polycom SoundStation IP 6000' or 'POTS' or 'VoIP' or\n'Cardioid Microphone'.",
          "type": "string"
        },
        "originalMimeType": {
          "description": "Mime type of the original audio file.  For example `audio/m4a`,\n`audio/x-alaw-basic`, `audio/mp3`, `audio/3gpp`.\nA list of possible audio mime types is maintained at\nhttp://www.iana.org/assignments/media-types/media-types.xhtml#audio",
          "type": "string"
        },
        "audioTopic": {
          "description": "Description of the content. Eg. \"Recordings of federal supreme court\nhearings from 2012\".",
          "type": "string"
        }
      },
      "id": "RecognitionMetadata"
    },
    "SpeechRecognitionResult": {
      "description": "A speech recognition result corresponding to a portion of the audio.",
      "type": "object",
      "properties": {
        "languageCode": {
          "description": "Output only. The\n[BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the\nlanguage in this result. This language code was detected to have the most\nlikelihood of being spoken in the audio.",
          "type": "string"
        },
        "alternatives": {
          "description": "Output only. May contain one or more recognition hypotheses (up to the\nmaximum specified in `max_alternatives`).\nThese alternatives are ordered in terms of accuracy, with the top (first)\nalternative being the most probable, as ranked by the recognizer.",
          "type": "array",
          "items": {
            "$ref": "SpeechRecognitionAlternative"
          }
        },
        "channelTag": {
          "description": "For multi-channel audio, this is the channel number corresponding to the\nrecognized result for the audio from that channel.\nFor audio_channel_count = N, its output values can range from '1' to 'N'.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "SpeechRecognitionResult"
    },
    "ListDatasetsResponse": {
      "properties": {
        "datasets": {
          "description": "Repeated list of data sets containing details about each data set.",
          "type": "array",
          "items": {
            "$ref": "Dataset"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.",
          "type": "string"
        }
      },
      "id": "ListDatasetsResponse",
      "type": "object"
    },
    "RecognizeResponse": {
      "description": "The only message returned to the client by the `Recognize` method. It\ncontains the result as zero or more sequential `SpeechRecognitionResult`\nmessages.",
      "type": "object",
      "properties": {
        "results": {
          "description": "Output only. Sequential list of transcription results corresponding to\nsequential portions of audio.",
          "type": "array",
          "items": {
            "$ref": "SpeechRecognitionResult"
          }
        }
      },
      "id": "RecognizeResponse"
    },
    "Model": {
      "description": "Specifies the model parameters needed for training a model. In addition this\nis also the message returned to the client by the `CreateModel` method.\nIt is included in the `result.response` field of the `Operation`\nreturned by the `GetOperation` call of the `google::longrunning::Operations`\nservice.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Required. Display name of the model to be trained.",
          "type": "string"
        },
        "evaluateModelResponses": {
          "description": "Output only. Evaluation results associated with this model. A model can\ncontain multiple sub-models in which case the evaluation results for\nall of those are available. If there are no sub models then there would\nbe just a single EvaluateModelResponse.",
          "type": "array",
          "items": {
            "$ref": "EvaluateModelResponse"
          }
        },
        "trainingType": {
          "enumDescriptions": [
            "",
            "Build adaptation language model based on the users data. These models are\nbuilt on top of the existing prebuilt models (like phone_call, video\netc.).",
            "Output only. This is set to indicate that the model we are talking about\nis a prebuilt model (for e.g in the context of evaluations)."
          ],
          "enum": [
            "TRAINING_TYPE_UNSPECIFIED",
            "CUSTOM_ADAPTATION_LANGUAGE_MODEL",
            "PREBUILT_MODEL"
          ],
          "description": "Required. Type of the training to perform.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Timestamp when this model was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the model.\nFormat: \"projects/{project_id}/locations/{location_id}/models/{model_id}\"",
          "type": "string"
        }
      },
      "id": "Model"
    },
    "EvaluateModelRequest": {
      "description": "Message sent by the client for the `EvaluateModel` method.",
      "type": "object",
      "properties": {},
      "id": "EvaluateModelRequest"
    },
    "DataErrors": {
      "properties": {
        "count": {
          "description": "Number of records having errors associated with the enum.",
          "format": "int32",
          "type": "integer"
        },
        "errorType": {
          "enumDescriptions": [
            "Not specified.",
            "Audio format not in the formats supported by the cloud speech API",
            "File format different from what is specified in the file name extension",
            "File too large. Maximum allowed size is 50 MB."
          ],
          "enum": [
            "ERROR_TYPE_UNSPECIFIED",
            "UNSUPPORTED_AUDIO_FORMAT",
            "FILE_EXTENSION_MISMATCH_WITH_AUDIO_FORMAT",
            "FILE_TOO_LARGE"
          ],
          "description": "Type of the error.",
          "type": "string"
        }
      },
      "id": "DataErrors",
      "description": "Different types of dataset errors and the stats associated with each error.",
      "type": "object"
    },
    "Operation": {
      "description": "This resource represents a long-running operation that is the result of a\nnetwork API call.",
      "type": "object",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should have the format of `operations/some/unique/name`.",
          "type": "string"
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.",
          "type": "boolean"
        }
      },
      "id": "Operation"
    },
    "EvaluateModelResponse": {
      "description": "The only message returned to the client by the `EvaluateModel` method. This\nis also returned as part of the Dataset message returned to the client by\nthe CreateDataset method. It is included in the `result.response` field of\nthe `Operation` returned by the `GetOperation` call of the\n`google::longrunning::Operations` service.",
      "type": "object",
      "properties": {
        "isEnhancedModel": {
          "description": "If true then it means we are referring to the results of an enhanced\nversion of the model_type. Currently only PHONE_CALL model_type has an\nenhanced version.",
          "type": "boolean"
        },
        "modelType": {
          "enumDescriptions": [
            "",
            "Model for audio that is not one of the specific models below. This is\na generic model and can be used in various scenarios but is not\nnecessarily the best in any particular scenario.",
            "Model for audio from short queries like voice commands or voice search",
            "Model for phone call conversation type op audio.",
            "Model for audio that originated from from video or includes multiple\nspeakers."
          ],
          "enum": [
            "MODEL_TYPE_UNSPECIFIED",
            "DEFAULT",
            "COMMAND_AND_SEARCH",
            "PHONE_CALL",
            "VIDEO"
          ],
          "description": "Required. The type of model used in this evaluation.",
          "type": "string"
        },
        "wordCount": {
          "description": "Number of words used in the word_error_rate computation.",
          "format": "int32",
          "type": "integer"
        },
        "wordErrorRate": {
          "description": "Word error rate metric computed on the test set using the AutoML model.",
          "format": "float",
          "type": "number"
        }
      },
      "id": "EvaluateModelResponse"
    },
    "DeployModelRequest": {
      "description": "Message sent by the client for the `DeployModel` method.",
      "type": "object",
      "properties": {},
      "id": "DeployModelRequest"
    }
  },
  "protocol": "rest",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Speech",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "rootUrl": "https://speech.googleapis.com/",
  "ownerDomain": "google.com",
  "name": "speech",
  "batchPath": "batch",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Speech API"
}
